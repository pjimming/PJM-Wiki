{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PJM Wiki \u6b22\u8fce\u6765\u5230 PJM Wiki ! \u524d\u8a00 PJM Wiki \u81f4\u529b\u4e8e\u6253\u9020\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u548c\u6301\u7eed\u66f4\u65b0\u7684 \u8ba1\u7b97\u673a\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u3002 \u4e2d\u56fd\u5927\u5b66\u6559\u79d1\u4e66\u4e4b\u70c2\u662f\u51fa\u4e86\u540d\u7684\uff0c\u8001\u65e7\u3001\u5355\u8584\u3001\u8131\u79bb\u5b9e\u9645\u3001\u7248\u672c\u4f17\u591a\u3001\u7528\u6700 \u6666\u6da9\u96be\u61c2 \u7684\u8a00\u8bed\u53bb\u89e3\u91ca\u4e00\u4e2a \u6d45\u663e\u6613\u61c2 \u7684\u9053\u7406\u3002 \u5e76\u4e14\u4e2d\u56fd\u7684\u5927\u5b66\u4e0a\u8bfe\u5927\u90fd\u5728\u7cca\u5f04\u4eba\uff0c\u8ba9\u4eba\u81ea\u4ee5\u4e3a\u5b66\u4e86\u70b9\u4e1c\u897f\u3002 \u4e0d\u77e5\u9053\u4e2d\u56fd\u5b66\u751f\u6709\u6ca1\u6709\u8fd9\u79cd\u4f53\u4f1a\uff0c\u6bcf\u6b21\u4e0a\u8bfe\u53ea\u5750\u524d\u4e24\u6392\uff0c\u8bfe\u4e0a\u8ba4\u771f\u542c\u8bb2\u548c\u8001\u5e08\u4e92\u52a8\u751f\u6015\u9519\u8fc7\u4efb\u4f55\u77e5\u8bc6\u7684\u5b66\u751f\uff0c\u4f46\u540e\u6765\u53d1\u73b0\u81ea\u5df1\u82b1\u4e86\u90a3\u4e48\u591a\u7cbe\u529b\u3001\u90a3\u4e48\u8ba4\u771f\u60f3\u5b66\u597d\u7684\u4e1c\u897f\uff0c\u5728\u6574\u4e2a\u5b66\u671f\u7ed3\u675f\uff0c\u5373\u4f7f\u8003\u8bd5\u5dee2\u5206\u6ee1\u5206\uff0c\u4ecd\u7136\u89c9\u5f97\u81ea\u5df1\u4ec0\u4e48\u90fd\u6ca1\u6709\u5b66\u660e\u767d\u3002 \u5728\u4e2d\u56fd\u7684\u5927\u90e8\u5206\u9ad8\u6821\u91cc\u8bfb\u4e66\u662f\u75db\u82e6\u7684\uff0c\u8fd9\u79cd\u75db\u82e6\u4e0d\u5728\u4e8e\u5b66\u4e60\u7684\u96be\u5ea6\uff0c\u800c\u5728\u4e8e\u6709\u52b2\u65e0\u5904\u4f7f\u3002 \u5373\u4f7f\u5145\u6ee1\u70ed\u60c5\u3001\u613f\u610f\u4e0b\u82e6\u529f\uff0c\u4f46\u65e0\u4eba\u6307\u70b9\u5230\u5904\u78b0\u58c1\u3001\u5f97\u4e0d\u5230\u673a\u4f1a\uff0c\u8ba4\u771f\u5bf9\u5f85\u8bfe\u7a0b\u6362\u6765\u7684\u662f\u5bf9\u8bfe\u7a0b\u65e0\u5c3d\u7684\u8352\u8bde\u611f\uff1a \u8001\u5e08\u4eec\u4f60\u4eec\u5728\u505a\u4ec0\u4e48\uff1f\u540c\u5b66\u4eec\u6211\u4eec\u5750\u5728\u8fd9\u6559\u5ba4\u91cc\u5728\u5e72\u4ec0\u4e48\uff1f \u6211\u4eec\u5e0c\u671b\u6253\u9020\u4e00\u4e2a\u964d\u4f4e\u6559\u80b2\u95e8\u69db\uff0c\u80fd\u628a\u4f18\u79c0\u6559\u5b66\u8d44\u6e90\u96c6\u4e2d\u8d77\u6765\u7684\u5e73\u53f0\u7cfb\u7edf\u3002 \u672c\u79d1\u6559\u80b2\u81f3\u5c11\u5f97\u5c55\u73b0\u5b83\u5e94\u6709\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u5206\u4eab\u77e5\u8bc6\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u4ee5\u4eba\u4e3a\u672c\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u6ce8\u91cd\u5b66\u751f\u4f53\u9a8c\u7684\u8bda\u610f\u3002 \u5b83\u81f3\u5c11\u4e0d\u5e94\u8be5\u662f\u4e00\u79cd\u6076\u610f\uff0c\u4e00\u79cd\u62fc\u6bd4\u77e5\u8bc6\u7684\u6076\u610f\uff0c\u4e00\u79cd\u80dc\u8005\u4e3a\u738b\u7684\u6076\u610f\uff0c\u4e00\u79cd\u8ba9\u4eba\u5b66\u65e0\u6240\u5f97\u7684\u6076\u610f\u3002 \u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u6709\u4e2a\u5149\u660e\u7684\u672a\u6765\uff0c\u613f\u90fd\u80fd\u4e0d\u5fd8\u521d\u5fc3\uff0c\u4e0d\u8d1f\u521d\u5fc3\uff0c\u5982\u679c\u4e2d\u56fd\u80fd\u56e0\u6211\u4eec\u53d8\u5f97\u66f4\u597d\u4e00\u70b9\u70b9, \u54ea\u6015\u662f\u4e00\u70b9\u70b9\uff0c\u5c31\u66f4\u68d2\u4e86\u3002 \u6211\u7684\u5176\u4ed6\u7ad9\u70b9\uff1a Welcome to PJM's Website Welcome to Warlock War \u5176\u4ed6\u5f88\u597d\u73a9\u7684\u7f51\u7ad9\uff1a OI-Wiki CTF-Wiki CS\u81ea\u5b66\u7f51\u7ad9 GitHub \u58f0\u660e\uff1a PJM Wiki \u6c38\u8fdc\u5f00\u6e90\uff0c\u63d0\u5021 \u77e5\u8bc6\u81ea\u7531 \uff0c\u5728\u672a\u6765\u4e5f\u7edd\u4e0d\u4f1a\u5546\u4e1a\u5316\uff0c\u5c06\u59cb\u7ec8\u4fdd\u6301 \u72ec\u7acb\u81ea\u7531 \u7684\u6027\u8d28\u3002","title":"Welcome"},{"location":"#welcome-to-pjm-wiki","text":"\u6b22\u8fce\u6765\u5230 PJM Wiki !","title":"Welcome to PJM Wiki"},{"location":"#_1","text":"PJM Wiki \u81f4\u529b\u4e8e\u6253\u9020\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u548c\u6301\u7eed\u66f4\u65b0\u7684 \u8ba1\u7b97\u673a\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u3002 \u4e2d\u56fd\u5927\u5b66\u6559\u79d1\u4e66\u4e4b\u70c2\u662f\u51fa\u4e86\u540d\u7684\uff0c\u8001\u65e7\u3001\u5355\u8584\u3001\u8131\u79bb\u5b9e\u9645\u3001\u7248\u672c\u4f17\u591a\u3001\u7528\u6700 \u6666\u6da9\u96be\u61c2 \u7684\u8a00\u8bed\u53bb\u89e3\u91ca\u4e00\u4e2a \u6d45\u663e\u6613\u61c2 \u7684\u9053\u7406\u3002 \u5e76\u4e14\u4e2d\u56fd\u7684\u5927\u5b66\u4e0a\u8bfe\u5927\u90fd\u5728\u7cca\u5f04\u4eba\uff0c\u8ba9\u4eba\u81ea\u4ee5\u4e3a\u5b66\u4e86\u70b9\u4e1c\u897f\u3002 \u4e0d\u77e5\u9053\u4e2d\u56fd\u5b66\u751f\u6709\u6ca1\u6709\u8fd9\u79cd\u4f53\u4f1a\uff0c\u6bcf\u6b21\u4e0a\u8bfe\u53ea\u5750\u524d\u4e24\u6392\uff0c\u8bfe\u4e0a\u8ba4\u771f\u542c\u8bb2\u548c\u8001\u5e08\u4e92\u52a8\u751f\u6015\u9519\u8fc7\u4efb\u4f55\u77e5\u8bc6\u7684\u5b66\u751f\uff0c\u4f46\u540e\u6765\u53d1\u73b0\u81ea\u5df1\u82b1\u4e86\u90a3\u4e48\u591a\u7cbe\u529b\u3001\u90a3\u4e48\u8ba4\u771f\u60f3\u5b66\u597d\u7684\u4e1c\u897f\uff0c\u5728\u6574\u4e2a\u5b66\u671f\u7ed3\u675f\uff0c\u5373\u4f7f\u8003\u8bd5\u5dee2\u5206\u6ee1\u5206\uff0c\u4ecd\u7136\u89c9\u5f97\u81ea\u5df1\u4ec0\u4e48\u90fd\u6ca1\u6709\u5b66\u660e\u767d\u3002 \u5728\u4e2d\u56fd\u7684\u5927\u90e8\u5206\u9ad8\u6821\u91cc\u8bfb\u4e66\u662f\u75db\u82e6\u7684\uff0c\u8fd9\u79cd\u75db\u82e6\u4e0d\u5728\u4e8e\u5b66\u4e60\u7684\u96be\u5ea6\uff0c\u800c\u5728\u4e8e\u6709\u52b2\u65e0\u5904\u4f7f\u3002 \u5373\u4f7f\u5145\u6ee1\u70ed\u60c5\u3001\u613f\u610f\u4e0b\u82e6\u529f\uff0c\u4f46\u65e0\u4eba\u6307\u70b9\u5230\u5904\u78b0\u58c1\u3001\u5f97\u4e0d\u5230\u673a\u4f1a\uff0c\u8ba4\u771f\u5bf9\u5f85\u8bfe\u7a0b\u6362\u6765\u7684\u662f\u5bf9\u8bfe\u7a0b\u65e0\u5c3d\u7684\u8352\u8bde\u611f\uff1a \u8001\u5e08\u4eec\u4f60\u4eec\u5728\u505a\u4ec0\u4e48\uff1f\u540c\u5b66\u4eec\u6211\u4eec\u5750\u5728\u8fd9\u6559\u5ba4\u91cc\u5728\u5e72\u4ec0\u4e48\uff1f \u6211\u4eec\u5e0c\u671b\u6253\u9020\u4e00\u4e2a\u964d\u4f4e\u6559\u80b2\u95e8\u69db\uff0c\u80fd\u628a\u4f18\u79c0\u6559\u5b66\u8d44\u6e90\u96c6\u4e2d\u8d77\u6765\u7684\u5e73\u53f0\u7cfb\u7edf\u3002 \u672c\u79d1\u6559\u80b2\u81f3\u5c11\u5f97\u5c55\u73b0\u5b83\u5e94\u6709\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u5206\u4eab\u77e5\u8bc6\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u4ee5\u4eba\u4e3a\u672c\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u6ce8\u91cd\u5b66\u751f\u4f53\u9a8c\u7684\u8bda\u610f\u3002 \u5b83\u81f3\u5c11\u4e0d\u5e94\u8be5\u662f\u4e00\u79cd\u6076\u610f\uff0c\u4e00\u79cd\u62fc\u6bd4\u77e5\u8bc6\u7684\u6076\u610f\uff0c\u4e00\u79cd\u80dc\u8005\u4e3a\u738b\u7684\u6076\u610f\uff0c\u4e00\u79cd\u8ba9\u4eba\u5b66\u65e0\u6240\u5f97\u7684\u6076\u610f\u3002 \u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u6709\u4e2a\u5149\u660e\u7684\u672a\u6765\uff0c\u613f\u90fd\u80fd\u4e0d\u5fd8\u521d\u5fc3\uff0c\u4e0d\u8d1f\u521d\u5fc3\uff0c\u5982\u679c\u4e2d\u56fd\u80fd\u56e0\u6211\u4eec\u53d8\u5f97\u66f4\u597d\u4e00\u70b9\u70b9, \u54ea\u6015\u662f\u4e00\u70b9\u70b9\uff0c\u5c31\u66f4\u68d2\u4e86\u3002","title":"\u524d\u8a00"},{"location":"#_2","text":"Welcome to PJM's Website Welcome to Warlock War","title":"\u6211\u7684\u5176\u4ed6\u7ad9\u70b9\uff1a"},{"location":"#_3","text":"OI-Wiki CTF-Wiki CS\u81ea\u5b66\u7f51\u7ad9 GitHub","title":"\u5176\u4ed6\u5f88\u597d\u73a9\u7684\u7f51\u7ad9\uff1a"},{"location":"#_4","text":"PJM Wiki \u6c38\u8fdc\u5f00\u6e90\uff0c\u63d0\u5021 \u77e5\u8bc6\u81ea\u7531 \uff0c\u5728\u672a\u6765\u4e5f\u7edd\u4e0d\u4f1a\u5546\u4e1a\u5316\uff0c\u5c06\u59cb\u7ec8\u4fdd\u6301 \u72ec\u7acb\u81ea\u7531 \u7684\u6027\u8d28\u3002","title":"\u58f0\u660e\uff1a"},{"location":"404/","text":"404 not found","title":"404 not found"},{"location":"404/#404-not-found","text":"","title":"404 not found"},{"location":"about/aboutme/","text":"\u6211\u662f\u6f58\u6c5f\u660e\u3002 \u4e00\u4e2a\u6709\u5947\u602a\u60f3\u6cd5\u3001\u6574\u5929\u903c\u903c\u53e8\u53e8\u7684\u4eba\u3002 \u6211\u5728\u6d59\u6c5f\u7701\u4e34\u5b89\u4e2d\u5b66\u5ea6\u8fc7\u4e86\u5feb\u4e50\u7684\u4e09\u5e74\u3002 \u73b0\u5c31\u8bfb\u4e8e\u67d0\u53cc\u975e\uff08\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\uff09\u3002 \u7231\u597d\uff1a\u519b\u6a21\u3001\u7f16\u7a0b\u3001\u6570\u5b66\u548c\u7f8e\u5973\u3002 \u6211\u7684\u767d\u65e5\u68a6\uff1a \u5e26\u4e0a\u5feb\u4e50\u4e0e\u76f8\u673a\uff0c\u548c\u559c\u6b22\u7684\u4eba\u8d70\u904d\u4e16\u754c\u7684\u89d2\u89d2\u843d\u843d\u3002","title":"\u5173\u4e8e\u4f5c\u8005"},{"location":"about/aboutwiki/","text":"PJM Wiki PJM Wiki \u81f4\u529b\u4e8e\u6253\u9020\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u548c\u6301\u7eed\u66f4\u65b0\u7684 \u8ba1\u7b97\u673a\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u3002 \u7531\u4e8e\u4e2d\u56fd\u5927\u5b66\u6559\u79d1\u4e66\u4e4b\u70c2\u662f\u51fa\u4e86\u540d\u7684\uff0c\u8001\u65e7\u3001\u5355\u8584\u3001\u8131\u79bb\u5b9e\u9645\u3001\u7248\u672c\u4f17\u591a\u3002\u5e76\u4e14\u4e2d\u56fd\u7684\u5927\u5b66\u4e0a\u8bfe\u5927\u90fd\u5728\u7cca\u5f04\u4eba\uff0c\u8ba9\u4eba\u81ea\u4ee5\u4e3a\u5b66\u4e86\u70b9\u4e1c\u897f\u3002 \u4e0d\u77e5\u9053\u4e2d\u56fd\u5b66\u751f\u6709\u6ca1\u6709\u8fd9\u79cd\u4f53\u4f1a\uff0c\u6bcf\u6b21\u4e0a\u8bfe\u53ea\u5750\u524d\u4e24\u6392\uff0c\u8bfe\u4e0a\u8ba4\u771f\u542c\u8bb2\u548c\u8001\u5e08\u4e92\u52a8\u751f\u6015\u9519\u8fc7\u4efb\u4f55\u77e5\u8bc6\u7684\u5b66\u751f\uff0c\u4f46\u540e\u6765\u53d1\u73b0\u81ea\u5df1\u82b1\u4e86\u90a3\u4e48\u591a\u7cbe\u529b\u3001\u90a3\u4e48\u8ba4\u771f\u60f3\u5b66\u597d\u7684\u4e1c\u897f\uff0c\u5728\u6574\u4e2a\u5b66\u671f\u7ed3\u675f\uff0c\u5373\u4f7f\u8003\u8bd5\u5dee2\u5206\u6ee1\u5206\uff0c\u4ecd\u7136\u89c9\u5f97\u81ea\u5df1\u4ec0\u4e48\u90fd\u6ca1\u6709\u5b66\u660e\u767d\u3002 \u5728\u4e2d\u56fd\u7684\u5927\u90e8\u5206\u91cc\u8bfb\u4e66\u662f\u75db\u82e6\u7684\uff0c\u8fd9\u79cd\u75db\u82e6\u4e0d\u5728\u4e8e\u5b66\u4e60\u7684\u96be\u5ea6\uff0c\u800c\u5728\u4e8e\u6709\u52b2\u65e0\u5904\u4f7f\u3002\u5373\u4f7f\u5145\u6ee1\u70ed\u60c5\u3001\u613f\u610f\u4e0b\u82e6\u529f\uff0c\u4f46\u65e0\u4eba\u6307\u70b9\u5230\u5904\u78b0\u58c1\u3001\u5f97\u4e0d\u5230\u673a\u4f1a\uff0c\u8ba4\u771f\u5bf9\u5f85\u8bfe\u7a0b\u6362\u6765\u7684\u662f\u5bf9\u8bfe\u7a0b\u65e0\u5c3d\u7684\u8352\u8bde\u611f\uff1a\u8001\u5e08\u4eec\u4f60\u4eec\u5728\u505a\u4ec0\u4e48\uff0c\u540c\u5b66\u4eec\u6211\u4eec\u5750\u5728\u8fd9\u6559\u5ba4\u91cc\u5728\u5e72\u4ec0\u4e48\uff1f \u6211\u4eec\u5e0c\u671b\u6253\u9020\u4e00\u4e2a\u964d\u4f4e\u6559\u80b2\u95e8\u69db\uff0c\u80fd\u628a\u4f18\u79c0\u6559\u5b66\u8d44\u6e90\u96c6\u4e2d\u8d77\u6765\u7684\u5e73\u53f0\u7cfb\u7edf\u3002 \u672c\u79d1\u6559\u80b2\u81f3\u5c11\u5f97\u5c55\u73b0\u5b83\u5e94\u6709\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u5206\u4eab\u77e5\u8bc6\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u4ee5\u4eba\u4e3a\u672c\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u6ce8\u91cd\u5b66\u751f\u4f53\u9a8c\u7684\u8bda\u610f\u3002 \u5b83\u81f3\u5c11\u4e0d\u5e94\u8be5\u662f\u4e00\u79cd\u6076\u610f\uff0c\u4e00\u79cd\u62fc\u6bd4\u77e5\u8bc6\u7684\u6076\u610f\uff0c\u4e00\u79cd\u80dc\u8005\u4e3a\u738b\u7684\u6076\u610f\uff0c\u4e00\u79cd\u8ba9\u4eba\u5b66\u65e0\u6240\u5f97\u7684\u6076\u610f\u3002 \u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u6709\u4e2a\u5149\u660e\u7684\u672a\u6765\uff0c\u613f\u90fd\u80fd\u4e0d\u5fd8\u521d\u5fc3\uff0c\u4e0d\u8d1f\u521d\u5fc3\uff0c\u5982\u679c\u4e2d\u56fd\u80fd\u56e0\u6211\u4eec\u53d8\u5f97\u66f4\u597d\u4e00\u70b9\u70b9, \u54ea\u6015\u662f\u4e00\u70b9\u70b9\uff0c\u5c31\u66f4\u68d2\u4e86\u3002 PJM Wiki \u6c38\u8fdc\u5f00\u6e90\uff0c\u63d0\u5021 \u77e5\u8bc6\u81ea\u7531 \uff0c\u5728\u672a\u6765\u4e5f\u7edd\u4e0d\u4f1a\u5546\u4e1a\u5316\uff0c\u5c06\u59cb\u7ec8\u4fdd\u6301 \u72ec\u7acb\u81ea\u7531 \u7684\u6027\u8d28\u3002","title":"\u5173\u4e8ePJM Wiki"},{"location":"about/aboutwiki/#pjm-wiki","text":"PJM Wiki \u81f4\u529b\u4e8e\u6253\u9020\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u548c\u6301\u7eed\u66f4\u65b0\u7684 \u8ba1\u7b97\u673a\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u3002 \u7531\u4e8e\u4e2d\u56fd\u5927\u5b66\u6559\u79d1\u4e66\u4e4b\u70c2\u662f\u51fa\u4e86\u540d\u7684\uff0c\u8001\u65e7\u3001\u5355\u8584\u3001\u8131\u79bb\u5b9e\u9645\u3001\u7248\u672c\u4f17\u591a\u3002\u5e76\u4e14\u4e2d\u56fd\u7684\u5927\u5b66\u4e0a\u8bfe\u5927\u90fd\u5728\u7cca\u5f04\u4eba\uff0c\u8ba9\u4eba\u81ea\u4ee5\u4e3a\u5b66\u4e86\u70b9\u4e1c\u897f\u3002 \u4e0d\u77e5\u9053\u4e2d\u56fd\u5b66\u751f\u6709\u6ca1\u6709\u8fd9\u79cd\u4f53\u4f1a\uff0c\u6bcf\u6b21\u4e0a\u8bfe\u53ea\u5750\u524d\u4e24\u6392\uff0c\u8bfe\u4e0a\u8ba4\u771f\u542c\u8bb2\u548c\u8001\u5e08\u4e92\u52a8\u751f\u6015\u9519\u8fc7\u4efb\u4f55\u77e5\u8bc6\u7684\u5b66\u751f\uff0c\u4f46\u540e\u6765\u53d1\u73b0\u81ea\u5df1\u82b1\u4e86\u90a3\u4e48\u591a\u7cbe\u529b\u3001\u90a3\u4e48\u8ba4\u771f\u60f3\u5b66\u597d\u7684\u4e1c\u897f\uff0c\u5728\u6574\u4e2a\u5b66\u671f\u7ed3\u675f\uff0c\u5373\u4f7f\u8003\u8bd5\u5dee2\u5206\u6ee1\u5206\uff0c\u4ecd\u7136\u89c9\u5f97\u81ea\u5df1\u4ec0\u4e48\u90fd\u6ca1\u6709\u5b66\u660e\u767d\u3002 \u5728\u4e2d\u56fd\u7684\u5927\u90e8\u5206\u91cc\u8bfb\u4e66\u662f\u75db\u82e6\u7684\uff0c\u8fd9\u79cd\u75db\u82e6\u4e0d\u5728\u4e8e\u5b66\u4e60\u7684\u96be\u5ea6\uff0c\u800c\u5728\u4e8e\u6709\u52b2\u65e0\u5904\u4f7f\u3002\u5373\u4f7f\u5145\u6ee1\u70ed\u60c5\u3001\u613f\u610f\u4e0b\u82e6\u529f\uff0c\u4f46\u65e0\u4eba\u6307\u70b9\u5230\u5904\u78b0\u58c1\u3001\u5f97\u4e0d\u5230\u673a\u4f1a\uff0c\u8ba4\u771f\u5bf9\u5f85\u8bfe\u7a0b\u6362\u6765\u7684\u662f\u5bf9\u8bfe\u7a0b\u65e0\u5c3d\u7684\u8352\u8bde\u611f\uff1a\u8001\u5e08\u4eec\u4f60\u4eec\u5728\u505a\u4ec0\u4e48\uff0c\u540c\u5b66\u4eec\u6211\u4eec\u5750\u5728\u8fd9\u6559\u5ba4\u91cc\u5728\u5e72\u4ec0\u4e48\uff1f \u6211\u4eec\u5e0c\u671b\u6253\u9020\u4e00\u4e2a\u964d\u4f4e\u6559\u80b2\u95e8\u69db\uff0c\u80fd\u628a\u4f18\u79c0\u6559\u5b66\u8d44\u6e90\u96c6\u4e2d\u8d77\u6765\u7684\u5e73\u53f0\u7cfb\u7edf\u3002 \u672c\u79d1\u6559\u80b2\u81f3\u5c11\u5f97\u5c55\u73b0\u5b83\u5e94\u6709\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u5206\u4eab\u77e5\u8bc6\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u4ee5\u4eba\u4e3a\u672c\u7684\u8bda\u610f\uff0c\u4e00\u79cd\u6ce8\u91cd\u5b66\u751f\u4f53\u9a8c\u7684\u8bda\u610f\u3002 \u5b83\u81f3\u5c11\u4e0d\u5e94\u8be5\u662f\u4e00\u79cd\u6076\u610f\uff0c\u4e00\u79cd\u62fc\u6bd4\u77e5\u8bc6\u7684\u6076\u610f\uff0c\u4e00\u79cd\u80dc\u8005\u4e3a\u738b\u7684\u6076\u610f\uff0c\u4e00\u79cd\u8ba9\u4eba\u5b66\u65e0\u6240\u5f97\u7684\u6076\u610f\u3002 \u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u6709\u4e2a\u5149\u660e\u7684\u672a\u6765\uff0c\u613f\u90fd\u80fd\u4e0d\u5fd8\u521d\u5fc3\uff0c\u4e0d\u8d1f\u521d\u5fc3\uff0c\u5982\u679c\u4e2d\u56fd\u80fd\u56e0\u6211\u4eec\u53d8\u5f97\u66f4\u597d\u4e00\u70b9\u70b9, \u54ea\u6015\u662f\u4e00\u70b9\u70b9\uff0c\u5c31\u66f4\u68d2\u4e86\u3002 PJM Wiki \u6c38\u8fdc\u5f00\u6e90\uff0c\u63d0\u5021 \u77e5\u8bc6\u81ea\u7531 \uff0c\u5728\u672a\u6765\u4e5f\u7edd\u4e0d\u4f1a\u5546\u4e1a\u5316\uff0c\u5c06\u59cb\u7ec8\u4fdd\u6301 \u72ec\u7acb\u81ea\u7531 \u7684\u6027\u8d28\u3002","title":"PJM Wiki"},{"location":"algorithm/leetcode/1/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u5728\u7b54\u6848\u91cc\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u3002 \u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1anums = [2,7,11,15], target = 9 \u8f93\u51fa\uff1a[0,1] \u89e3\u91ca\uff1a\u56e0\u4e3a nums[0] + nums[1] == 9 \uff0c\u8fd4\u56de [0, 1] \u3002 \u793a\u4f8b 2\uff1a 1 2 \u8f93\u5165\uff1anums = [3,2,4], target = 6 \u8f93\u51fa\uff1a[1,2] \u793a\u4f8b 3\uff1a 1 2 \u8f93\u5165\uff1anums = [3,3], target = 6 \u8f93\u51fa\uff1a[0,1] \u63d0\u793a\uff1a \\(2\\) \\(\u2264\\) \\(nums.length\\) \\(\u2264\\) \\(10^4\\) \\(-10^9\\) \\(\u2264\\) \\(nums[i]\\) \\(\u2264\\) \\(10^9\\) \\(-10^9\\) \\(\u2264\\) \\(target\\) \\(\u2264\\) \\(10^9\\) \u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u6709\u6548\u7b54\u6848 \u8fdb\u9636 \uff1a\u4f60\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e \\(O(n^2)\\) \u7684\u7b97\u6cd5\u5417\uff1f \u601d\u8def \u9996\u5148\u8bf4\u4e00\u4e2a \\(O(n^2)\\) \u7684\u505a\u6cd5\u3002\u5728\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u518d\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u627e\u5230\u76f8\u52a0\u7b49\u4e8e target \u7684\u65f6\u5019\uff0c\u8fd4\u56de\u4e24\u6570\u5750\u6807\u3002\u6ce8\u610f\uff0c\u4e24\u4e0b\u6807\u4e0d\u80fd \u76f8\u7b49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // C++ class Solution { public : vector < int > twoSum ( vector < int >& nums , int target ) { vector < int > ans ( 2 ); for ( int i = 0 ; i < nums . size (); i ++ ) for ( int j = 0 ; j < nums . size (); j ++ ) { if ( i == j ) continue ; if ( nums [ i ] + nums [ j ] == target ) { ans [ 0 ] = i ; ans [ 1 ] = j ; } } return ans ; } }; \u4ed4\u7ec6\u89c2\u5bdf\uff0c\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u79cd\u5728 \\(O(1)\\) \u7684\u590d\u6742\u5ea6\u5185\u627e\u5230 \u5f53\u524d\u6570 \u5728\u6574\u4e2a\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u6570\uff0c\u4f7f\u5b83\u4eec\u7684\u548c\u4e3a target \uff1f \u7b54\u6848\u662f\u53ef\u4ee5\u3002\u5feb\u901f\u67e5\u627e\u53ef\u4ee5\u8054\u60f3\u5230\u5efa\u7acb\u54c8\u5e0c\u8868\u3002 \u901a\u8fc7\u904d\u5386\u6570\u7ec4\uff0c\u67e5\u627e\u54c8\u5e0c\u8868\u5185\u662f\u5426\u5b58\u5728\u4e0e\u4e4b\u5bf9\u5e94\u7684\u548c\u4e3a target \u7684\u6570\u3002 \u82e5\u5b58\u5728\uff0c break \uff1b \u82e5\u4e0d\u5b58\u5728\uff0c\u5c06\u5f53\u524d\u6570\u63d2\u5165\u5230\u54c8\u5e0c\u8868\u5185\u3002 \u7531\u4e8e\u4e0d\u7528\u5bf9\u54c8\u5e0c\u8868\u6392\u5e8f\uff0c\u6240\u4ee5\u4f7f\u7528\u65e0\u5e8f\u54c8\u5e0c \uff08\u67e5\u627e\u4e3a \\(O(1)\\) \uff09 \uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : vector < int > twoSum ( vector < int >& nums , int target ) { unordered_map < int , int > mp ; // key\u5b58\u6570\u7684\u503c\uff0cvalue\u5b58\u6570\u7684\u4e0b\u6807 vector < int > res ( 2 ); for ( int i = 0 ; i < nums . size (); i ++ ) { if ( mp . count ( target - nums [ i ])) { res [ 0 ] = mp [ target - nums [ i ]]; res [ 1 ] = i ; break ; } mp [ nums [ i ]] = i ; } return res ; } };","title":"1. \u4e24\u6570\u4e4b\u548c"},{"location":"algorithm/leetcode/1/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u5728\u7b54\u6848\u91cc\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u3002 \u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/1/#1","text":"1 2 3 \u8f93\u5165\uff1anums = [2,7,11,15], target = 9 \u8f93\u51fa\uff1a[0,1] \u89e3\u91ca\uff1a\u56e0\u4e3a nums[0] + nums[1] == 9 \uff0c\u8fd4\u56de [0, 1] \u3002","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/1/#2","text":"1 2 \u8f93\u5165\uff1anums = [3,2,4], target = 6 \u8f93\u51fa\uff1a[1,2]","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/1/#3","text":"1 2 \u8f93\u5165\uff1anums = [3,3], target = 6 \u8f93\u51fa\uff1a[0,1]","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/1/#_2","text":"\\(2\\) \\(\u2264\\) \\(nums.length\\) \\(\u2264\\) \\(10^4\\) \\(-10^9\\) \\(\u2264\\) \\(nums[i]\\) \\(\u2264\\) \\(10^9\\) \\(-10^9\\) \\(\u2264\\) \\(target\\) \\(\u2264\\) \\(10^9\\) \u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u6709\u6548\u7b54\u6848 \u8fdb\u9636 \uff1a\u4f60\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e \\(O(n^2)\\) \u7684\u7b97\u6cd5\u5417\uff1f","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/1/#_3","text":"\u9996\u5148\u8bf4\u4e00\u4e2a \\(O(n^2)\\) \u7684\u505a\u6cd5\u3002\u5728\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u518d\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u627e\u5230\u76f8\u52a0\u7b49\u4e8e target \u7684\u65f6\u5019\uff0c\u8fd4\u56de\u4e24\u6570\u5750\u6807\u3002\u6ce8\u610f\uff0c\u4e24\u4e0b\u6807\u4e0d\u80fd \u76f8\u7b49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // C++ class Solution { public : vector < int > twoSum ( vector < int >& nums , int target ) { vector < int > ans ( 2 ); for ( int i = 0 ; i < nums . size (); i ++ ) for ( int j = 0 ; j < nums . size (); j ++ ) { if ( i == j ) continue ; if ( nums [ i ] + nums [ j ] == target ) { ans [ 0 ] = i ; ans [ 1 ] = j ; } } return ans ; } }; \u4ed4\u7ec6\u89c2\u5bdf\uff0c\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u79cd\u5728 \\(O(1)\\) \u7684\u590d\u6742\u5ea6\u5185\u627e\u5230 \u5f53\u524d\u6570 \u5728\u6574\u4e2a\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u6570\uff0c\u4f7f\u5b83\u4eec\u7684\u548c\u4e3a target \uff1f \u7b54\u6848\u662f\u53ef\u4ee5\u3002\u5feb\u901f\u67e5\u627e\u53ef\u4ee5\u8054\u60f3\u5230\u5efa\u7acb\u54c8\u5e0c\u8868\u3002 \u901a\u8fc7\u904d\u5386\u6570\u7ec4\uff0c\u67e5\u627e\u54c8\u5e0c\u8868\u5185\u662f\u5426\u5b58\u5728\u4e0e\u4e4b\u5bf9\u5e94\u7684\u548c\u4e3a target \u7684\u6570\u3002 \u82e5\u5b58\u5728\uff0c break \uff1b \u82e5\u4e0d\u5b58\u5728\uff0c\u5c06\u5f53\u524d\u6570\u63d2\u5165\u5230\u54c8\u5e0c\u8868\u5185\u3002 \u7531\u4e8e\u4e0d\u7528\u5bf9\u54c8\u5e0c\u8868\u6392\u5e8f\uff0c\u6240\u4ee5\u4f7f\u7528\u65e0\u5e8f\u54c8\u5e0c \uff08\u67e5\u627e\u4e3a \\(O(1)\\) \uff09 \uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)","title":"\u601d\u8def"},{"location":"algorithm/leetcode/1/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : vector < int > twoSum ( vector < int >& nums , int target ) { unordered_map < int , int > mp ; // key\u5b58\u6570\u7684\u503c\uff0cvalue\u5b58\u6570\u7684\u4e0b\u6807 vector < int > res ( 2 ); for ( int i = 0 ; i < nums . size (); i ++ ) { if ( mp . count ( target - nums [ i ])) { res [ 0 ] = mp [ target - nums [ i ]]; res [ 1 ] = i ; break ; } mp [ nums [ i ]] = i ; } return res ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/1011/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u4f20\u9001\u5e26\u4e0a\u7684\u5305\u88f9\u5fc5\u987b\u5728 \\(days\\) \u5929\u5185\u4ece\u4e00\u4e2a\u6e2f\u53e3\u8fd0\u9001\u5230\u53e6\u4e00\u4e2a\u6e2f\u53e3\u3002 \u4f20\u9001\u5e26\u4e0a\u7684\u7b2c \\(i\\) \u4e2a\u5305\u88f9\u7684\u91cd\u91cf\u4e3a \\(weights[i]\\) \u3002\u6bcf\u4e00\u5929\uff0c\u6211\u4eec\u90fd\u4f1a\u6309\u7ed9\u51fa\u91cd\u91cf\uff08 \\(weights\\) \uff09\u7684\u987a\u5e8f\u5f80\u4f20\u9001\u5e26\u4e0a\u88c5\u8f7d\u5305\u88f9\u3002\u6211\u4eec\u88c5\u8f7d\u7684\u91cd\u91cf\u4e0d\u4f1a\u8d85\u8fc7\u8239\u7684\u6700\u5927\u8fd0\u8f7d\u91cd\u91cf\u3002 \u8fd4\u56de\u80fd\u5728 \\(days\\) \u5929\u5185\u5c06\u4f20\u9001\u5e26\u4e0a\u7684\u6240\u6709\u5305\u88f9\u9001\u8fbe\u7684\u8239\u7684\u6700\u4f4e\u8fd0\u8f7d\u80fd\u529b\u3002 \u793a\u4f8b 1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 \u8f93\u5165\uff1aweights = [1,2,3,4,5,6,7,8,9,10], days = 5 \u8f93\u51fa\uff1a15 \u89e3\u91ca\uff1a \u8239\u8236\u6700\u4f4e\u8f7d\u91cd 15 \u5c31\u80fd\u591f\u5728 5 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u7b2c 1 \u5929\uff1a1, 2, 3, 4, 5 \u7b2c 2 \u5929\uff1a6, 7 \u7b2c 3 \u5929\uff1a8 \u7b2c 4 \u5929\uff1a9 \u7b2c 5 \u5929\uff1a10 \u8bf7\u6ce8\u610f\uff0c\u8d27\u7269\u5fc5\u987b\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u88c5\u8fd0\uff0c\u56e0\u6b64\u4f7f\u7528\u8f7d\u91cd\u80fd\u529b\u4e3a 14 \u7684\u8239\u8236\u5e76\u5c06\u5305\u88c5\u5206\u6210 (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) \u662f\u4e0d\u5141\u8bb8\u7684\u3002 \u793a\u4f8b 2\uff1a 1 2 3 4 5 6 7 \u8f93\u5165\uff1aweights = [3,2,2,4,1,4], days = 3 \u8f93\u51fa\uff1a6 \u89e3\u91ca\uff1a \u8239\u8236\u6700\u4f4e\u8f7d\u91cd 6 \u5c31\u80fd\u591f\u5728 3 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u7b2c 1 \u5929\uff1a3, 2 \u7b2c 2 \u5929\uff1a2, 4 \u7b2c 3 \u5929\uff1a1, 4 \u793a\u4f8b 3\uff1a 1 2 3 4 5 6 7 \u8f93\u5165\uff1aweights = [1,2,3,1,1], days = 4 \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a \u7b2c 1 \u5929\uff1a1 \u7b2c 2 \u5929\uff1a2 \u7b2c 3 \u5929\uff1a3 \u7b2c 4 \u5929\uff1a1, 1 \u63d0\u793a\uff1a \\(1 \\le days \\le weights.length \\le 5 * 10^4\\) \\(1 \\le weights[i] \\le 500\\) \u7b97\u6cd5\u4e0e\u601d\u8def \u6211\u4eec\u8003\u8651\u5047\u8bbe\u8239\u7684\u8d27\u8fd0\u80fd\u529b\u4e3a \\(x\\) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \\(days\\) \u5929\u5185\u8fd0\u9001\u5b8c\u6240\u6709\u7684\u5305\u88f9\uff0c\u90a3\u4e48\u53ea\u8981\u8d27\u8fd0\u80fd\u529b\u5927\u4e8e \\(x\\) \uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u5728 \\(days\\) \u5929\u5185\u8fd0\u9001\u5b8c\u6240\u6709\u7684\u5305\u88f9\uff1a\u53ea\u9700\u8981\u6309\u7167\u8d27\u8fd0\u80fd\u529b\u4e3a \\(x\\) \u65f6\u7684\u8fd0\u9001\u65b9\u6cd5\u5373\u53ef\u3002 \u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7ed3\u8bba\uff1a \u5b58\u5728\u4e00\u4e2a\u8fd0\u8f7d\u80fd\u529b\u4e0b\u9650\uff0c\u8bb0\u4e3a \\(x_{ans}\\) \uff0c\u4f7f\u5f97\u5f53 \\(x \\ge x_{ans}\\) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \\(days\\) \u5929\u5185\u8fd0\u9001\u5b8c\u6240\u6709\u5305\u88f9\uff1b\u5f53 \\(x < x_{ans}\\) \u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u5728 \\(days\\) \u5929\u8fd0\u9001\u5b8c\u6240\u6709\u5305\u88f9\u3002 \u8fd9\u662f\u4e00\u4e2a\u4e8c\u6bb5\u6027\u7684\u7ed3\u8bba\uff0c\u5373\u5b58\u5728\u4e00\u4e2a\u503c\uff0c\u5176\u5de6\u53f3\u4e24\u8fb9\uff0c\u7ed3\u679c\u4e0d\u540c\u3002 \u5bf9\u4e8e\u5177\u6709\u4e8c\u6bb5\u6027\u6027\u8d28\u7684\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5 \uff0c\u6765\u627e\u51fa\u76ee\u6807\u503c\u3002 \u5982\u4f55\u5224\u65ad\u5f53\u524d\u4e8c\u5206\u67e5\u627e\u5230\u7684\u503c\u662f\u5426\u6ee1\u8db3\u6211\u4eec\u6240\u9700\u8981\u7684\u6761\u4ef6\uff1f \u5982\u679c\u5f53\u524d\u503c \\(target\\) \u5c0f\u4e8e\u5355\u4e2a\u5305\u88f9\u7684\u91cd\u91cf\u65f6\uff0c\u8fd4\u56de \\(false\\) \uff1b \u8bbe\u7f6e\u4e24\u4e2a\u7d2f\u52a0\u5668 \\(cnt\uff0ct\\) \uff0c\u5206\u522b\u4ee3\u8868\u5f53\u524d\u503c\u6240\u9700\u5929\u6570\u548c\u67d0\u5929\u7684\u8d27\u8fd0\u91cd\u91cf\uff0c\u5f53\u67d0\u5929\u8d27\u8fd0\u603b\u91cf \\(t + weights[i] > target\\) \u65f6\uff0c\u6e05\u7a7a \\(t\\) \uff0c \\(cnt+=1\\) \uff1b \u6700\u540e\u8fd4\u56de \\(cnt \\le days\\) \u7684\u7ed3\u679c \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public : bool check ( vector < int >& weights , int weight , int days ) { int cnt = 1 , t = 0 ; for ( int i = 0 ; i < weights . size (); i ++ ) { if ( weight < weights [ i ]) return false ; if ( t + weights [ i ] > weight ) { t = 0 ; cnt ++ ; } t += weights [ i ]; } return cnt <= days ; } int shipWithinDays ( vector < int >& weights , int days ) { int l = 1 , r = 25000000 ; while ( l < r ) { int mid = l + r >> 1 ; if ( check ( weights , mid , days )) r = mid ; else l = mid + 1 ; } return l ; } };","title":"1011. \u5728 D \u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b"},{"location":"algorithm/leetcode/1011/#_1","text":"\u4f20\u9001\u5e26\u4e0a\u7684\u5305\u88f9\u5fc5\u987b\u5728 \\(days\\) \u5929\u5185\u4ece\u4e00\u4e2a\u6e2f\u53e3\u8fd0\u9001\u5230\u53e6\u4e00\u4e2a\u6e2f\u53e3\u3002 \u4f20\u9001\u5e26\u4e0a\u7684\u7b2c \\(i\\) \u4e2a\u5305\u88f9\u7684\u91cd\u91cf\u4e3a \\(weights[i]\\) \u3002\u6bcf\u4e00\u5929\uff0c\u6211\u4eec\u90fd\u4f1a\u6309\u7ed9\u51fa\u91cd\u91cf\uff08 \\(weights\\) \uff09\u7684\u987a\u5e8f\u5f80\u4f20\u9001\u5e26\u4e0a\u88c5\u8f7d\u5305\u88f9\u3002\u6211\u4eec\u88c5\u8f7d\u7684\u91cd\u91cf\u4e0d\u4f1a\u8d85\u8fc7\u8239\u7684\u6700\u5927\u8fd0\u8f7d\u91cd\u91cf\u3002 \u8fd4\u56de\u80fd\u5728 \\(days\\) \u5929\u5185\u5c06\u4f20\u9001\u5e26\u4e0a\u7684\u6240\u6709\u5305\u88f9\u9001\u8fbe\u7684\u8239\u7684\u6700\u4f4e\u8fd0\u8f7d\u80fd\u529b\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/1011/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 \u8f93\u5165\uff1aweights = [1,2,3,4,5,6,7,8,9,10], days = 5 \u8f93\u51fa\uff1a15 \u89e3\u91ca\uff1a \u8239\u8236\u6700\u4f4e\u8f7d\u91cd 15 \u5c31\u80fd\u591f\u5728 5 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u7b2c 1 \u5929\uff1a1, 2, 3, 4, 5 \u7b2c 2 \u5929\uff1a6, 7 \u7b2c 3 \u5929\uff1a8 \u7b2c 4 \u5929\uff1a9 \u7b2c 5 \u5929\uff1a10 \u8bf7\u6ce8\u610f\uff0c\u8d27\u7269\u5fc5\u987b\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u88c5\u8fd0\uff0c\u56e0\u6b64\u4f7f\u7528\u8f7d\u91cd\u80fd\u529b\u4e3a 14 \u7684\u8239\u8236\u5e76\u5c06\u5305\u88c5\u5206\u6210 (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) \u662f\u4e0d\u5141\u8bb8\u7684\u3002","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/1011/#2","text":"1 2 3 4 5 6 7 \u8f93\u5165\uff1aweights = [3,2,2,4,1,4], days = 3 \u8f93\u51fa\uff1a6 \u89e3\u91ca\uff1a \u8239\u8236\u6700\u4f4e\u8f7d\u91cd 6 \u5c31\u80fd\u591f\u5728 3 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u7b2c 1 \u5929\uff1a3, 2 \u7b2c 2 \u5929\uff1a2, 4 \u7b2c 3 \u5929\uff1a1, 4","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/1011/#3","text":"1 2 3 4 5 6 7 \u8f93\u5165\uff1aweights = [1,2,3,1,1], days = 4 \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a \u7b2c 1 \u5929\uff1a1 \u7b2c 2 \u5929\uff1a2 \u7b2c 3 \u5929\uff1a3 \u7b2c 4 \u5929\uff1a1, 1","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/1011/#_2","text":"\\(1 \\le days \\le weights.length \\le 5 * 10^4\\) \\(1 \\le weights[i] \\le 500\\)","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/1011/#_3","text":"\u6211\u4eec\u8003\u8651\u5047\u8bbe\u8239\u7684\u8d27\u8fd0\u80fd\u529b\u4e3a \\(x\\) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \\(days\\) \u5929\u5185\u8fd0\u9001\u5b8c\u6240\u6709\u7684\u5305\u88f9\uff0c\u90a3\u4e48\u53ea\u8981\u8d27\u8fd0\u80fd\u529b\u5927\u4e8e \\(x\\) \uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u5728 \\(days\\) \u5929\u5185\u8fd0\u9001\u5b8c\u6240\u6709\u7684\u5305\u88f9\uff1a\u53ea\u9700\u8981\u6309\u7167\u8d27\u8fd0\u80fd\u529b\u4e3a \\(x\\) \u65f6\u7684\u8fd0\u9001\u65b9\u6cd5\u5373\u53ef\u3002 \u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7ed3\u8bba\uff1a \u5b58\u5728\u4e00\u4e2a\u8fd0\u8f7d\u80fd\u529b\u4e0b\u9650\uff0c\u8bb0\u4e3a \\(x_{ans}\\) \uff0c\u4f7f\u5f97\u5f53 \\(x \\ge x_{ans}\\) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \\(days\\) \u5929\u5185\u8fd0\u9001\u5b8c\u6240\u6709\u5305\u88f9\uff1b\u5f53 \\(x < x_{ans}\\) \u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u5728 \\(days\\) \u5929\u8fd0\u9001\u5b8c\u6240\u6709\u5305\u88f9\u3002 \u8fd9\u662f\u4e00\u4e2a\u4e8c\u6bb5\u6027\u7684\u7ed3\u8bba\uff0c\u5373\u5b58\u5728\u4e00\u4e2a\u503c\uff0c\u5176\u5de6\u53f3\u4e24\u8fb9\uff0c\u7ed3\u679c\u4e0d\u540c\u3002 \u5bf9\u4e8e\u5177\u6709\u4e8c\u6bb5\u6027\u6027\u8d28\u7684\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5 \uff0c\u6765\u627e\u51fa\u76ee\u6807\u503c\u3002 \u5982\u4f55\u5224\u65ad\u5f53\u524d\u4e8c\u5206\u67e5\u627e\u5230\u7684\u503c\u662f\u5426\u6ee1\u8db3\u6211\u4eec\u6240\u9700\u8981\u7684\u6761\u4ef6\uff1f \u5982\u679c\u5f53\u524d\u503c \\(target\\) \u5c0f\u4e8e\u5355\u4e2a\u5305\u88f9\u7684\u91cd\u91cf\u65f6\uff0c\u8fd4\u56de \\(false\\) \uff1b \u8bbe\u7f6e\u4e24\u4e2a\u7d2f\u52a0\u5668 \\(cnt\uff0ct\\) \uff0c\u5206\u522b\u4ee3\u8868\u5f53\u524d\u503c\u6240\u9700\u5929\u6570\u548c\u67d0\u5929\u7684\u8d27\u8fd0\u91cd\u91cf\uff0c\u5f53\u67d0\u5929\u8d27\u8fd0\u603b\u91cf \\(t + weights[i] > target\\) \u65f6\uff0c\u6e05\u7a7a \\(t\\) \uff0c \\(cnt+=1\\) \uff1b \u6700\u540e\u8fd4\u56de \\(cnt \\le days\\) \u7684\u7ed3\u679c","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/leetcode/1011/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public : bool check ( vector < int >& weights , int weight , int days ) { int cnt = 1 , t = 0 ; for ( int i = 0 ; i < weights . size (); i ++ ) { if ( weight < weights [ i ]) return false ; if ( t + weights [ i ] > weight ) { t = 0 ; cnt ++ ; } t += weights [ i ]; } return cnt <= days ; } int shipWithinDays ( vector < int >& weights , int days ) { int l = 1 , r = 25000000 ; while ( l < r ) { int mid = l + r >> 1 ; if ( check ( weights , mid , days )) r = mid ; else l = mid + 1 ; } return l ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/1143/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(text1\\) \u548c \\(text2\\) \uff0c\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f \u516c\u5171\u5b50\u5e8f\u5217 \u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728 \u516c\u5171\u5b50\u5e8f\u5217 \uff0c\u8fd4\u56de \\(0\\) \u3002 \u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 \u5b50\u5e8f\u5217 \u662f\u6307\u8fd9\u6837\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff1a\u5b83\u662f\u7531\u539f\u5b57\u7b26\u4e32\u5728\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u67d0\u4e9b\u5b57\u7b26\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\u4efb\u4f55\u5b57\u7b26\uff09\u540e\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c \"ace\" \u662f \"abcde\" \u7684\u5b50\u5e8f\u5217\uff0c\u4f46 \"aec\" \u4e0d\u662f \"abcde\" \u7684\u5b50\u5e8f\u5217\u3002 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684 \u516c\u5171\u5b50\u5e8f\u5217 \u662f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u6240\u5171\u540c\u62e5\u6709\u7684\u5b50\u5e8f\u5217\u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1atext1 = \"abcde\", text2 = \"ace\" \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u662f \"ace\" \uff0c\u5b83\u7684\u957f\u5ea6\u4e3a 3 \u3002 \u793a\u4f8b 2\uff1a 1 2 3 \u8f93\u5165\uff1atext1 = \"abc\", text2 = \"abc\" \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u662f \"abc\" \uff0c\u5b83\u7684\u957f\u5ea6\u4e3a 3 \u3002 \u793a\u4f8b 3\uff1a 1 2 3 \u8f93\u5165\uff1atext1 = \"abc\", text2 = \"def\" \u8f93\u51fa\uff1a0 \u89e3\u91ca\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u8fd4\u56de 0 \u3002 \u63d0\u793a\uff1a \\(1\\) \\(\u2264\\) \\(text1.length, text2.length\\) \\(\u2264\\) \\(1000\\) \\(text1\\) \u548c \\(text2\\) \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u7b26\u7ec4\u6210\u3002 \u7b97\u6cd5\u4e0e\u601d\u8def \u52a8\u6001\u89c4\u5212 \u2003 \\(O(n^2)\\) \u72b6\u6001 \\(dp[i][j]\\) \u5b9a\u4e49\uff1a \\(test1\\) \u7684\u524d \\(i\\) \u4e2a\u5b57\u6bcd \u548c \\(test2\\) \u7684\u524d \\(j\\) \u4e2a\u5b57\u6bcd \u7684\u7ec4\u6210\u7684 \u516c\u5171\u5b50\u5e8f\u5217 \u7684\u96c6\u5408\u3002 \u5c5e\u6027\uff1a\u5b50\u5e8f\u5217\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002 \u72b6\u6001\u8f6c\u79fb\uff1a \\(test1[i] \u2260 test2[j]\\) \u65f6 \\(test1[i]\\) \u4e0d\u5305\u542b\u5728\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff1b \\(test2[j]\\) \u4e0d\u5305\u542b\u5728\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\u3002 \u6839\u636e\u72b6\u6001\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u51fa \\(a\\) \u60c5\u51b5\u53ef\u4ee5\u7528 \\(dp[i - 1][j]\\) \u7684\u72b6\u6001\u8868\u793a\uff1b\u540c\u7406\uff0c \\(b\\) \u60c5\u51b5\u53ef\u4ee5\u7528 \\(dp[i][j - 1]\\) \u7684\u72b6\u6001\u8868\u793a\u3002 \\(test1[i] = test2[j]\\) \u65f6 \u53ef\u4ee5\u7531 \\(dp[i - 1][j - 1] + 1\\) \u6765\u8868\u793a\u3002 \u6700\u540e\u53ef\u4ee5\u6839\u636e\u72b6\u6001\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u77e5\uff0c \\(dp[n][m]\\) \u4e3a\u6700\u7ec8\u7b54\u6848\u3002 \u590d\u6742\u5ea6\u5206\u6790\uff1a \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(nm)\\) \u3002\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e2a \\(test1\\) \u7684\u5b57\u7b26\uff0c\u5c31\u8981\u904d\u5386\u4e00\u904d \\(test2\\) \u7684\u6240\u6709\u5b57\u7b26\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(nm)\\) \u3002\u9700\u8981 \\(n\\) \u884c \\(m\\) \u5217\u7684 \\(dp\\) \u6570\u7ec4\u6765\u5b58\u50a8\u72b6\u6001\u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public : int longestCommonSubsequence ( string text1 , string text2 ) { int dp [ 1010 ][ 1010 ]; memset ( dp , 0 , sizeof dp ); int n = text1 . size (), m = text2 . size (); for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= m ; j ++ ) { dp [ i ][ j ] = max ( dp [ i - 1 ][ j ], dp [ i ][ j - 1 ]); if ( text1 [ i - 1 ] == text2 [ j - 1 ]) dp [ i ][ j ] = max ( dp [ i ][ j ], dp [ i - 1 ][ j - 1 ] + 1 ); } return dp [ n ][ m ]; } };","title":"1143. \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"algorithm/leetcode/1143/#_1","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(text1\\) \u548c \\(text2\\) \uff0c\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f \u516c\u5171\u5b50\u5e8f\u5217 \u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728 \u516c\u5171\u5b50\u5e8f\u5217 \uff0c\u8fd4\u56de \\(0\\) \u3002 \u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 \u5b50\u5e8f\u5217 \u662f\u6307\u8fd9\u6837\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff1a\u5b83\u662f\u7531\u539f\u5b57\u7b26\u4e32\u5728\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u67d0\u4e9b\u5b57\u7b26\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\u4efb\u4f55\u5b57\u7b26\uff09\u540e\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c \"ace\" \u662f \"abcde\" \u7684\u5b50\u5e8f\u5217\uff0c\u4f46 \"aec\" \u4e0d\u662f \"abcde\" \u7684\u5b50\u5e8f\u5217\u3002 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684 \u516c\u5171\u5b50\u5e8f\u5217 \u662f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u6240\u5171\u540c\u62e5\u6709\u7684\u5b50\u5e8f\u5217\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/1143/#1","text":"1 2 3 \u8f93\u5165\uff1atext1 = \"abcde\", text2 = \"ace\" \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u662f \"ace\" \uff0c\u5b83\u7684\u957f\u5ea6\u4e3a 3 \u3002","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/1143/#2","text":"1 2 3 \u8f93\u5165\uff1atext1 = \"abc\", text2 = \"abc\" \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u662f \"abc\" \uff0c\u5b83\u7684\u957f\u5ea6\u4e3a 3 \u3002","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/1143/#3","text":"1 2 3 \u8f93\u5165\uff1atext1 = \"abc\", text2 = \"def\" \u8f93\u51fa\uff1a0 \u89e3\u91ca\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u8fd4\u56de 0 \u3002","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/1143/#_2","text":"\\(1\\) \\(\u2264\\) \\(text1.length, text2.length\\) \\(\u2264\\) \\(1000\\) \\(text1\\) \u548c \\(text2\\) \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u7b26\u7ec4\u6210\u3002","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/1143/#_3","text":"","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/leetcode/1143/#on2","text":"\u72b6\u6001 \\(dp[i][j]\\) \u5b9a\u4e49\uff1a \\(test1\\) \u7684\u524d \\(i\\) \u4e2a\u5b57\u6bcd \u548c \\(test2\\) \u7684\u524d \\(j\\) \u4e2a\u5b57\u6bcd \u7684\u7ec4\u6210\u7684 \u516c\u5171\u5b50\u5e8f\u5217 \u7684\u96c6\u5408\u3002 \u5c5e\u6027\uff1a\u5b50\u5e8f\u5217\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002 \u72b6\u6001\u8f6c\u79fb\uff1a \\(test1[i] \u2260 test2[j]\\) \u65f6 \\(test1[i]\\) \u4e0d\u5305\u542b\u5728\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff1b \\(test2[j]\\) \u4e0d\u5305\u542b\u5728\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\u3002 \u6839\u636e\u72b6\u6001\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u51fa \\(a\\) \u60c5\u51b5\u53ef\u4ee5\u7528 \\(dp[i - 1][j]\\) \u7684\u72b6\u6001\u8868\u793a\uff1b\u540c\u7406\uff0c \\(b\\) \u60c5\u51b5\u53ef\u4ee5\u7528 \\(dp[i][j - 1]\\) \u7684\u72b6\u6001\u8868\u793a\u3002 \\(test1[i] = test2[j]\\) \u65f6 \u53ef\u4ee5\u7531 \\(dp[i - 1][j - 1] + 1\\) \u6765\u8868\u793a\u3002 \u6700\u540e\u53ef\u4ee5\u6839\u636e\u72b6\u6001\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u77e5\uff0c \\(dp[n][m]\\) \u4e3a\u6700\u7ec8\u7b54\u6848\u3002 \u590d\u6742\u5ea6\u5206\u6790\uff1a \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(nm)\\) \u3002\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e2a \\(test1\\) \u7684\u5b57\u7b26\uff0c\u5c31\u8981\u904d\u5386\u4e00\u904d \\(test2\\) \u7684\u6240\u6709\u5b57\u7b26\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(nm)\\) \u3002\u9700\u8981 \\(n\\) \u884c \\(m\\) \u5217\u7684 \\(dp\\) \u6570\u7ec4\u6765\u5b58\u50a8\u72b6\u6001\u3002","title":"\u52a8\u6001\u89c4\u5212 &emsp; \\(O(n^2)\\)"},{"location":"algorithm/leetcode/1143/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public : int longestCommonSubsequence ( string text1 , string text2 ) { int dp [ 1010 ][ 1010 ]; memset ( dp , 0 , sizeof dp ); int n = text1 . size (), m = text2 . size (); for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= m ; j ++ ) { dp [ i ][ j ] = max ( dp [ i - 1 ][ j ], dp [ i ][ j - 1 ]); if ( text1 [ i - 1 ] == text2 [ j - 1 ]) dp [ i ][ j ] = max ( dp [ i ][ j ], dp [ i - 1 ][ j - 1 ] + 1 ); } return dp [ n ][ m ]; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/150/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u6839\u636e \u9006\u6ce2\u5170\u8868\u793a\u6cd5 \uff0c\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u3002 \u6709\u6548\u7684\u7b97\u7b26\u5305\u62ec + \u3001 - \u3001 * \u3001 / \u3002\u6bcf\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002 \u6ce8\u610f \u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7684\u9664\u6cd5\u53ea\u4fdd\u7559\u6574\u6570\u90e8\u5206\u3002 \u53ef\u4ee5\u4fdd\u8bc1\u7ed9\u5b9a\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u603b\u662f\u6709\u6548\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8868\u8fbe\u5f0f\u603b\u4f1a\u5f97\u51fa\u6709\u6548\u6570\u503c\u4e14\u4e0d\u5b58\u5728\u9664\u6570\u4e3a 0 \u7684\u60c5\u51b5\u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1atokens = [\"2\",\"1\",\"+\",\"3\",\"*\"] \u8f93\u51fa\uff1a9 \u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a((2 + 1) * 3) = 9 \u793a\u4f8b 2\uff1a 1 2 3 \u8f93\u5165\uff1atokens = [\"4\",\"13\",\"5\",\"/\",\"+\"] \u8f93\u51fa\uff1a6 \u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a(4 + (13 / 5)) = 6 \u793a\u4f8b 3\uff1a 1 2 3 4 5 6 7 8 9 10 \u8f93\u5165\uff1atokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] \u8f93\u51fa\uff1a22 \u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a ((10 * (6 / ((9 + 3) * -11))) + 17) + 5 = ((10 * (6 / (12 * -11))) + 17) + 5 = ((10 * (6 / -132)) + 17) + 5 = ((10 * 0) + 17) + 5 = (0 + 17) + 5 = 17 + 5 = 22 \u63d0\u793a\uff1a \\(1\\) \\(\u2264\\) \\(tokens.length\\) \\(\u2264\\) \\(10^4\\) \\(tokens[i]\\) \u662f\u4e00\u4e2a\u7b97\u7b26\uff08 \"+\" \u3001 \"-\" \u3001 \"*\" \u6216 \"/\" \uff09\uff0c\u6216\u662f\u5728\u8303\u56f4 \\([-200, 200]\\) \u5185\u7684\u4e00\u4e2a\u6574\u6570 \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\uff1a \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u6240\u8c13\u540e\u7f00\u5c31\u662f\u6307\u7b97\u7b26\u5199\u5728\u540e\u9762\u3002 \u5e73\u5e38\u4f7f\u7528\u7684\u7b97\u5f0f\u5219\u662f\u4e00\u79cd\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u5982 ( 1 + 2 ) * ( 3 + 4 ) \u3002 \u8be5\u7b97\u5f0f\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u5199\u6cd5\u4e3a ( ( 1 2 + ) ( 3 4 + ) * ) \u3002 \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4f18\u70b9\uff1a \u53bb\u6389\u62ec\u53f7\u540e\u8868\u8fbe\u5f0f\u65e0\u6b67\u4e49\uff0c\u4e0a\u5f0f\u5373\u4fbf\u5199\u6210 1 2 + 3 4 + * \u4e5f\u53ef\u4ee5\u4f9d\u636e\u6b21\u5e8f\u8ba1\u7b97\u51fa\u6b63\u786e\u7ed3\u679c\u3002 \u9002\u5408\u7528\u6808\u64cd\u4f5c\u8fd0\u7b97\uff1a\u9047\u5230\u6570\u5b57\u5219\u5165\u6808\uff1b\u9047\u5230\u7b97\u7b26\u5219\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u5165\u6808\u4e2d \u601d\u8def\u2003 \u6808\u64cd\u4f5c\u2003 \\(O(n)\\) \u901a\u8fc7\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u7279\u70b9\uff0c\u53ef\u77e5\uff1a\u904d\u5386\u6240\u6709\u5143\u7d20\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u662f\u6574\u6570\uff0c\u5219\u538b\u5165\u6808\u5185\uff1b \u5982\u679c\u662f\u8fd0\u7b97\u7b26\uff0c\u5c06\u6808\u9876\u4e24\u4e2a\u5143\u7d20\u53d6\u51fa\u5e76\u505a\u76f8\u5e94\u7684\u8fd0\u7b97\uff0c\u6700\u540e\u628a\u7ed3\u679c\u538b\u5165\u6808\u5185\u3002 \u626b\u63cf\u5b8c\u6210\u540e\uff0c\u6808\u5185\u7684\u6570\u5c31\u662f\u7ed3\u679c\uff0c \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\u6bcf\u4e2a\u5143\u7d20\u4ec5\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u4e14\u6bcf\u6b21\u904d\u5386\u65f6\u4ec5\u6d89\u53ca\u5e38\u6570\u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n)\\) \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { public : int evalRPN ( vector < string >& tokens ) { stack < int > num ; for ( int i = 0 ; i < tokens . size (); i ++ ) { string t = tokens [ i ]; if ( t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\" ) { int a = num . top (); num . pop (); int b = num . top (); num . pop (); int x = 0 ; if ( t == \"+\" ) x = a + b ; if ( t == \"-\" ) x = b - a ; if ( t == \"*\" ) x = a * b ; if ( t == \"/\" ) x = b / a ; num . push ( x ); } else { num . push ( atoi ( t . c_str ())); } } return num . top (); } };","title":"150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c"},{"location":"algorithm/leetcode/150/#_1","text":"\u6839\u636e \u9006\u6ce2\u5170\u8868\u793a\u6cd5 \uff0c\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u3002 \u6709\u6548\u7684\u7b97\u7b26\u5305\u62ec + \u3001 - \u3001 * \u3001 / \u3002\u6bcf\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002 \u6ce8\u610f \u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7684\u9664\u6cd5\u53ea\u4fdd\u7559\u6574\u6570\u90e8\u5206\u3002 \u53ef\u4ee5\u4fdd\u8bc1\u7ed9\u5b9a\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u603b\u662f\u6709\u6548\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8868\u8fbe\u5f0f\u603b\u4f1a\u5f97\u51fa\u6709\u6548\u6570\u503c\u4e14\u4e0d\u5b58\u5728\u9664\u6570\u4e3a 0 \u7684\u60c5\u51b5\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/150/#1","text":"1 2 3 \u8f93\u5165\uff1atokens = [\"2\",\"1\",\"+\",\"3\",\"*\"] \u8f93\u51fa\uff1a9 \u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a((2 + 1) * 3) = 9","title":"\u793a\u4f8b\u00a01\uff1a"},{"location":"algorithm/leetcode/150/#2","text":"1 2 3 \u8f93\u5165\uff1atokens = [\"4\",\"13\",\"5\",\"/\",\"+\"] \u8f93\u51fa\uff1a6 \u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a(4 + (13 / 5)) = 6","title":"\u793a\u4f8b\u00a02\uff1a"},{"location":"algorithm/leetcode/150/#3","text":"1 2 3 4 5 6 7 8 9 10 \u8f93\u5165\uff1atokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] \u8f93\u51fa\uff1a22 \u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a ((10 * (6 / ((9 + 3) * -11))) + 17) + 5 = ((10 * (6 / (12 * -11))) + 17) + 5 = ((10 * (6 / -132)) + 17) + 5 = ((10 * 0) + 17) + 5 = (0 + 17) + 5 = 17 + 5 = 22","title":"\u793a\u4f8b\u00a03\uff1a"},{"location":"algorithm/leetcode/150/#_2","text":"\\(1\\) \\(\u2264\\) \\(tokens.length\\) \\(\u2264\\) \\(10^4\\) \\(tokens[i]\\) \u662f\u4e00\u4e2a\u7b97\u7b26\uff08 \"+\" \u3001 \"-\" \u3001 \"*\" \u6216 \"/\" \uff09\uff0c\u6216\u662f\u5728\u8303\u56f4 \\([-200, 200]\\) \u5185\u7684\u4e00\u4e2a\u6574\u6570","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/150/#_3","text":"\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u6240\u8c13\u540e\u7f00\u5c31\u662f\u6307\u7b97\u7b26\u5199\u5728\u540e\u9762\u3002 \u5e73\u5e38\u4f7f\u7528\u7684\u7b97\u5f0f\u5219\u662f\u4e00\u79cd\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u5982 ( 1 + 2 ) * ( 3 + 4 ) \u3002 \u8be5\u7b97\u5f0f\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u5199\u6cd5\u4e3a ( ( 1 2 + ) ( 3 4 + ) * ) \u3002 \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4f18\u70b9\uff1a \u53bb\u6389\u62ec\u53f7\u540e\u8868\u8fbe\u5f0f\u65e0\u6b67\u4e49\uff0c\u4e0a\u5f0f\u5373\u4fbf\u5199\u6210 1 2 + 3 4 + * \u4e5f\u53ef\u4ee5\u4f9d\u636e\u6b21\u5e8f\u8ba1\u7b97\u51fa\u6b63\u786e\u7ed3\u679c\u3002 \u9002\u5408\u7528\u6808\u64cd\u4f5c\u8fd0\u7b97\uff1a\u9047\u5230\u6570\u5b57\u5219\u5165\u6808\uff1b\u9047\u5230\u7b97\u7b26\u5219\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u5165\u6808\u4e2d","title":"\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\uff1a"},{"location":"algorithm/leetcode/150/#_4","text":"","title":"\u601d\u8def&emsp;"},{"location":"algorithm/leetcode/150/#on","text":"\u901a\u8fc7\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u7684\u7279\u70b9\uff0c\u53ef\u77e5\uff1a\u904d\u5386\u6240\u6709\u5143\u7d20\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u662f\u6574\u6570\uff0c\u5219\u538b\u5165\u6808\u5185\uff1b \u5982\u679c\u662f\u8fd0\u7b97\u7b26\uff0c\u5c06\u6808\u9876\u4e24\u4e2a\u5143\u7d20\u53d6\u51fa\u5e76\u505a\u76f8\u5e94\u7684\u8fd0\u7b97\uff0c\u6700\u540e\u628a\u7ed3\u679c\u538b\u5165\u6808\u5185\u3002 \u626b\u63cf\u5b8c\u6210\u540e\uff0c\u6808\u5185\u7684\u6570\u5c31\u662f\u7ed3\u679c\uff0c \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\u6bcf\u4e2a\u5143\u7d20\u4ec5\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u4e14\u6bcf\u6b21\u904d\u5386\u65f6\u4ec5\u6d89\u53ca\u5e38\u6570\u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n)\\) \u3002","title":"\u6808\u64cd\u4f5c&emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/150/#_5","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { public : int evalRPN ( vector < string >& tokens ) { stack < int > num ; for ( int i = 0 ; i < tokens . size (); i ++ ) { string t = tokens [ i ]; if ( t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\" ) { int a = num . top (); num . pop (); int b = num . top (); num . pop (); int x = 0 ; if ( t == \"+\" ) x = a + b ; if ( t == \"-\" ) x = b - a ; if ( t == \"*\" ) x = a * b ; if ( t == \"/\" ) x = b / a ; num . push ( x ); } else { num . push ( atoi ( t . c_str ())); } } return num . top (); } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/1603/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u8bf7\u4f60\u7ed9\u4e00\u4e2a\u505c\u8f66\u573a\u8bbe\u8ba1\u4e00\u4e2a\u505c\u8f66\u7cfb\u7edf\u3002\u505c\u8f66\u573a\u603b\u5171\u6709\u4e09\u79cd\u4e0d\u540c\u5927\u5c0f\u7684\u8f66\u4f4d\uff1a\u5927\uff0c\u4e2d\u548c\u5c0f\uff0c\u6bcf\u79cd\u5c3a\u5bf8\u5206\u522b\u6709\u56fa\u5b9a\u6570\u76ee\u7684\u8f66\u4f4d\u3002 \u8bf7\u4f60\u5b9e\u73b0 ParkingSystem \u7c7b\uff1a ParkingSystem(int big, int medium, int small) \u521d\u59cb\u5316 ParkingSystem \u7c7b\uff0c\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u5bf9\u5e94\u6bcf\u79cd\u505c\u8f66\u4f4d\u7684\u6570\u76ee\u3002 bool addCar(int carType) \u68c0\u67e5\u662f\u5426\u6709 carType \u5bf9\u5e94\u7684\u505c\u8f66\u4f4d\u3002 carType \u6709\u4e09\u79cd\u7c7b\u578b\uff1a\u5927\uff0c\u4e2d\uff0c\u5c0f\uff0c\u5206\u522b\u7528\u6570\u5b57 1 \uff0c 2 \u548c 3 \u8868\u793a\u3002 \u4e00\u8f86\u8f66\u53ea\u80fd\u505c\u5728 carType \u5bf9\u5e94\u5c3a\u5bf8\u7684\u505c\u8f66\u4f4d\u4e2d\u3002\u5982\u679c\u6ca1\u6709\u7a7a\u8f66\u4f4d\uff0c\u8bf7\u8fd4\u56de false \uff0c\u5426\u5219\u5c06\u8be5\u8f66\u505c\u5165\u8f66\u4f4d\u5e76\u8fd4\u56de true \u3002 \u793a\u4f8b 1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 \u8f93\u5165\uff1a [\"ParkingSystem\", \"addCar\", \"addCar\", \"addCar\", \"addCar\"] [[1, 1, 0], [1], [2], [3], [1]] \u8f93\u51fa\uff1a [null, true, true, false, false] \u89e3\u91ca\uff1a ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0); parkingSystem.addCar(1); // \u8fd4\u56de true \uff0c\u56e0\u4e3a\u6709 1 \u4e2a\u7a7a\u7684\u5927\u8f66\u4f4d parkingSystem.addCar(2); // \u8fd4\u56de true \uff0c\u56e0\u4e3a\u6709 1 \u4e2a\u7a7a\u7684\u4e2d\u8f66\u4f4d parkingSystem.addCar(3); // \u8fd4\u56de false \uff0c\u56e0\u4e3a\u6ca1\u6709\u7a7a\u7684\u5c0f\u8f66\u4f4d parkingSystem.addCar(1); // \u8fd4\u56de false \uff0c\u56e0\u4e3a\u6ca1\u6709\u7a7a\u7684\u5927\u8f66\u4f4d\uff0c\u552f\u4e00\u4e00\u4e2a\u5927\u8f66\u4f4d\u5df2\u7ecf\u88ab\u5360\u636e\u4e86 \u63d0\u793a\uff1a \\(0\\) \\(\u2264\\) \\(big\\) , \\(medium\\) , \\(small\\) \\(\u2264\\) 1000 \\(carType\\) \u53d6\u503c\u4e3a \\(1\\) \uff0c \\(2\\) \u6216 \\(3\\) \u6700\u591a\u4f1a\u8c03\u7528 addCar \u51fd\u6570 \\(1000\\) \u6b21 \u601d\u8def \u6a21\u62df\u9898\uff0c\u6839\u636e\u9898\u610f\u5199\u51fa\u6a21\u62df\u4ee3\u7801\u3002 \u9996\u5148\u8981\u5b58\u50a8\u4e00\u5f00\u59cb\u6240\u6709\u7c7b\u578b\u7684\u8f66\u4f4d\u6570\u91cf\u3002\u6bcf\u6b21\u8c03\u7528 addCar \u51fd\u6570\u65f6\uff0c\u5148\u5224\u65ad\u662f\u5426\u80fd\u505c\u8f66\u8fdb\u53bb\uff0c\u5982\u679c\u53ef\u4ee5\u505c\u8f66\uff0c\u90a3\u4e48\u628a\u76f8\u5e94\u8f66\u4f4d\u51cf\u53bb 1 \uff0c\u8fd4\u56de true \uff1b\u53cd\u4e4b\uff0c\u4e0d\u505a\u4efb\u4f55\u4fee\u6539\uff0c\u8fd4\u56de false \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class ParkingSystem { public : vector < int > tot ; ParkingSystem ( int big , int medium , int small ) { tot = { big , medium , small }; } bool addCar ( int carType ) { int t = carType - 1 ; if ( tot [ t ] >= 1 ) { tot [ t ] -- ; return true ; } return false ; } }; /** * Your ParkingSystem object will be instantiated and called as such: * ParkingSystem* obj = new ParkingSystem(big, medium, small); * bool param_1 = obj->addCar(carType); */","title":"1603. \u8bbe\u8ba1\u505c\u8f66\u7cfb\u7edf"},{"location":"algorithm/leetcode/1603/#_1","text":"\u8bf7\u4f60\u7ed9\u4e00\u4e2a\u505c\u8f66\u573a\u8bbe\u8ba1\u4e00\u4e2a\u505c\u8f66\u7cfb\u7edf\u3002\u505c\u8f66\u573a\u603b\u5171\u6709\u4e09\u79cd\u4e0d\u540c\u5927\u5c0f\u7684\u8f66\u4f4d\uff1a\u5927\uff0c\u4e2d\u548c\u5c0f\uff0c\u6bcf\u79cd\u5c3a\u5bf8\u5206\u522b\u6709\u56fa\u5b9a\u6570\u76ee\u7684\u8f66\u4f4d\u3002 \u8bf7\u4f60\u5b9e\u73b0 ParkingSystem \u7c7b\uff1a ParkingSystem(int big, int medium, int small) \u521d\u59cb\u5316 ParkingSystem \u7c7b\uff0c\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u5bf9\u5e94\u6bcf\u79cd\u505c\u8f66\u4f4d\u7684\u6570\u76ee\u3002 bool addCar(int carType) \u68c0\u67e5\u662f\u5426\u6709 carType \u5bf9\u5e94\u7684\u505c\u8f66\u4f4d\u3002 carType \u6709\u4e09\u79cd\u7c7b\u578b\uff1a\u5927\uff0c\u4e2d\uff0c\u5c0f\uff0c\u5206\u522b\u7528\u6570\u5b57 1 \uff0c 2 \u548c 3 \u8868\u793a\u3002 \u4e00\u8f86\u8f66\u53ea\u80fd\u505c\u5728 carType \u5bf9\u5e94\u5c3a\u5bf8\u7684\u505c\u8f66\u4f4d\u4e2d\u3002\u5982\u679c\u6ca1\u6709\u7a7a\u8f66\u4f4d\uff0c\u8bf7\u8fd4\u56de false \uff0c\u5426\u5219\u5c06\u8be5\u8f66\u505c\u5165\u8f66\u4f4d\u5e76\u8fd4\u56de true \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/1603/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 \u8f93\u5165\uff1a [\"ParkingSystem\", \"addCar\", \"addCar\", \"addCar\", \"addCar\"] [[1, 1, 0], [1], [2], [3], [1]] \u8f93\u51fa\uff1a [null, true, true, false, false] \u89e3\u91ca\uff1a ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0); parkingSystem.addCar(1); // \u8fd4\u56de true \uff0c\u56e0\u4e3a\u6709 1 \u4e2a\u7a7a\u7684\u5927\u8f66\u4f4d parkingSystem.addCar(2); // \u8fd4\u56de true \uff0c\u56e0\u4e3a\u6709 1 \u4e2a\u7a7a\u7684\u4e2d\u8f66\u4f4d parkingSystem.addCar(3); // \u8fd4\u56de false \uff0c\u56e0\u4e3a\u6ca1\u6709\u7a7a\u7684\u5c0f\u8f66\u4f4d parkingSystem.addCar(1); // \u8fd4\u56de false \uff0c\u56e0\u4e3a\u6ca1\u6709\u7a7a\u7684\u5927\u8f66\u4f4d\uff0c\u552f\u4e00\u4e00\u4e2a\u5927\u8f66\u4f4d\u5df2\u7ecf\u88ab\u5360\u636e\u4e86","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/1603/#_2","text":"\\(0\\) \\(\u2264\\) \\(big\\) , \\(medium\\) , \\(small\\) \\(\u2264\\) 1000 \\(carType\\) \u53d6\u503c\u4e3a \\(1\\) \uff0c \\(2\\) \u6216 \\(3\\) \u6700\u591a\u4f1a\u8c03\u7528 addCar \u51fd\u6570 \\(1000\\) \u6b21","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/1603/#_3","text":"\u6a21\u62df\u9898\uff0c\u6839\u636e\u9898\u610f\u5199\u51fa\u6a21\u62df\u4ee3\u7801\u3002 \u9996\u5148\u8981\u5b58\u50a8\u4e00\u5f00\u59cb\u6240\u6709\u7c7b\u578b\u7684\u8f66\u4f4d\u6570\u91cf\u3002\u6bcf\u6b21\u8c03\u7528 addCar \u51fd\u6570\u65f6\uff0c\u5148\u5224\u65ad\u662f\u5426\u80fd\u505c\u8f66\u8fdb\u53bb\uff0c\u5982\u679c\u53ef\u4ee5\u505c\u8f66\uff0c\u90a3\u4e48\u628a\u76f8\u5e94\u8f66\u4f4d\u51cf\u53bb 1 \uff0c\u8fd4\u56de true \uff1b\u53cd\u4e4b\uff0c\u4e0d\u505a\u4efb\u4f55\u4fee\u6539\uff0c\u8fd4\u56de false \u3002","title":"\u601d\u8def"},{"location":"algorithm/leetcode/1603/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class ParkingSystem { public : vector < int > tot ; ParkingSystem ( int big , int medium , int small ) { tot = { big , medium , small }; } bool addCar ( int carType ) { int t = carType - 1 ; if ( tot [ t ] >= 1 ) { tot [ t ] -- ; return true ; } return false ; } }; /** * Your ParkingSystem object will be instantiated and called as such: * ParkingSystem* obj = new ParkingSystem(big, medium, small); * bool param_1 = obj->addCar(carType); */","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/191/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\uff08\u4ee5\u4e8c\u8fdb\u5236\u4e32\u7684\u5f62\u5f0f\uff09\uff0c\u8fd4\u56de\u5176\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u4e2d\u6570\u5b57\u4f4d\u6570\u4e3a 1 \u7684\u4e2a\u6570\uff08\u4e5f\u88ab\u79f0\u4e3a \u6c49\u660e\u91cd\u91cf \uff09\u3002 \u63d0\u793a\uff1a \u8bf7\u6ce8\u610f\uff0c\u5728\u67d0\u4e9b\u8bed\u8a00\uff08\u5982 Java\uff09\u4e2d\uff0c\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u5c06\u88ab\u6307\u5b9a\u4e3a\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u5e76\u4e14\u4e0d\u5e94\u5f71\u54cd\u60a8\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u65e0\u8bba\u6574\u6570\u662f\u6709\u7b26\u53f7\u7684\u8fd8\u662f\u65e0\u7b26\u53f7\u7684\uff0c\u5176\u5185\u90e8\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u90fd\u662f\u76f8\u540c\u7684\u3002 \u5728 Java \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f7f\u7528 \u4e8c\u8fdb\u5236\u8865\u7801 \u8bb0\u6cd5\u6765\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570\u3002\u56e0\u6b64\uff0c\u5728\u4e0a\u9762\u7684 \u793a\u4f8b 3 \u4e2d\uff0c\u8f93\u5165\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570 -3 \u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1a00000000000000000000000000001011 \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 00000000000000000000000000001011 \u4e2d\uff0c\u5171\u6709\u4e09\u4f4d\u4e3a '1'\u3002 \u793a\u4f8b 2\uff1a 1 2 3 \u8f93\u5165\uff1a00000000000000000000000010000000 \u8f93\u51fa\uff1a1 \u89e3\u91ca\uff1a\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 00000000000000000000000010000000 \u4e2d\uff0c\u5171\u6709\u4e00\u4f4d\u4e3a '1'\u3002 \u793a\u4f8b 3\uff1a 1 2 3 \u8f93\u5165\uff1a11111111111111111111111111111101 \u8f93\u51fa\uff1a31 \u89e3\u91ca\uff1a\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 11111111111111111111111111111101 \u4e2d\uff0c\u5171\u6709 31 \u4f4d\u4e3a '1'\u3002 \u63d0\u793a\uff1a \u8f93\u5165\u5fc5\u987b\u662f\u957f\u5ea6\u4e3a \\(32\\) \u7684 \u4e8c\u8fdb\u5236\u4e32 \u3002 \u8fdb\u9636\uff1a \u5982\u679c\u591a\u6b21\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f \u601d\u8def (\u4f4d\u8fd0\u7b97) \u2003 \\(O(1)\\) \u904d\u5386\u6574\u4e2a\u4e8c\u8fdb\u5236\u6570\u3002 \u5224\u65ad\u5f53\u524d \\(n\\) \u7684\u6700\u4f4e\u4f4d\u662f\u5426\u4e3a \\(1\\) \u3002 \u5c06 \\(n\\) \u5411\u53f3\u79fb\u4e00\u4f4d\u3002 \u603b\u5171\u64cd\u4f5c \\(32\\) \u6b21\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u603b\u5171\u8fdb\u884c32\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3a \\(O(1)\\) \uff0c\u6240\u4ee5\u603b\u7684\u590d\u6742\u5ea6\u4e3a \\(O(1)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(1)\\) \uff0c\u6211\u4eec\u53ea\u9700\u8981\u5e38\u6570\u7684\u7a7a\u95f4\u4fdd\u5b58\u82e5\u5e72\u53d8\u91cf\u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public : int hammingWeight ( uint32_t n ) { int i = 32 , res = 0 ; while ( i -- ) { res += n & 1 ; n >>= 1 ; } return res ; } };","title":"191. \u4f4d1\u7684\u4e2a\u6570"},{"location":"algorithm/leetcode/191/#_1","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\uff08\u4ee5\u4e8c\u8fdb\u5236\u4e32\u7684\u5f62\u5f0f\uff09\uff0c\u8fd4\u56de\u5176\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u4e2d\u6570\u5b57\u4f4d\u6570\u4e3a 1 \u7684\u4e2a\u6570\uff08\u4e5f\u88ab\u79f0\u4e3a \u6c49\u660e\u91cd\u91cf \uff09\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/191/#_2","text":"\u8bf7\u6ce8\u610f\uff0c\u5728\u67d0\u4e9b\u8bed\u8a00\uff08\u5982 Java\uff09\u4e2d\uff0c\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u5c06\u88ab\u6307\u5b9a\u4e3a\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u5e76\u4e14\u4e0d\u5e94\u5f71\u54cd\u60a8\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u65e0\u8bba\u6574\u6570\u662f\u6709\u7b26\u53f7\u7684\u8fd8\u662f\u65e0\u7b26\u53f7\u7684\uff0c\u5176\u5185\u90e8\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u90fd\u662f\u76f8\u540c\u7684\u3002 \u5728 Java \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f7f\u7528 \u4e8c\u8fdb\u5236\u8865\u7801 \u8bb0\u6cd5\u6765\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570\u3002\u56e0\u6b64\uff0c\u5728\u4e0a\u9762\u7684 \u793a\u4f8b 3 \u4e2d\uff0c\u8f93\u5165\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570 -3 \u3002","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/191/#1","text":"1 2 3 \u8f93\u5165\uff1a00000000000000000000000000001011 \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1a\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 00000000000000000000000000001011 \u4e2d\uff0c\u5171\u6709\u4e09\u4f4d\u4e3a '1'\u3002","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/191/#2","text":"1 2 3 \u8f93\u5165\uff1a00000000000000000000000010000000 \u8f93\u51fa\uff1a1 \u89e3\u91ca\uff1a\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 00000000000000000000000010000000 \u4e2d\uff0c\u5171\u6709\u4e00\u4f4d\u4e3a '1'\u3002","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/191/#3","text":"1 2 3 \u8f93\u5165\uff1a11111111111111111111111111111101 \u8f93\u51fa\uff1a31 \u89e3\u91ca\uff1a\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u4e32 11111111111111111111111111111101 \u4e2d\uff0c\u5171\u6709 31 \u4f4d\u4e3a '1'\u3002","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/191/#_3","text":"\u8f93\u5165\u5fc5\u987b\u662f\u957f\u5ea6\u4e3a \\(32\\) \u7684 \u4e8c\u8fdb\u5236\u4e32 \u3002","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/191/#_4","text":"\u5982\u679c\u591a\u6b21\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f","title":"\u8fdb\u9636\uff1a"},{"location":"algorithm/leetcode/191/#_5","text":"","title":"\u601d\u8def"},{"location":"algorithm/leetcode/191/#o1","text":"\u904d\u5386\u6574\u4e2a\u4e8c\u8fdb\u5236\u6570\u3002 \u5224\u65ad\u5f53\u524d \\(n\\) \u7684\u6700\u4f4e\u4f4d\u662f\u5426\u4e3a \\(1\\) \u3002 \u5c06 \\(n\\) \u5411\u53f3\u79fb\u4e00\u4f4d\u3002 \u603b\u5171\u64cd\u4f5c \\(32\\) \u6b21\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u603b\u5171\u8fdb\u884c32\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3a \\(O(1)\\) \uff0c\u6240\u4ee5\u603b\u7684\u590d\u6742\u5ea6\u4e3a \\(O(1)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(1)\\) \uff0c\u6211\u4eec\u53ea\u9700\u8981\u5e38\u6570\u7684\u7a7a\u95f4\u4fdd\u5b58\u82e5\u5e72\u53d8\u91cf\u3002","title":"(\u4f4d\u8fd0\u7b97) &emsp; \\(O(1)\\)"},{"location":"algorithm/leetcode/191/#_6","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public : int hammingWeight ( uint32_t n ) { int i = 32 , res = 0 ; while ( i -- ) { res += n & 1 ; n >>= 1 ; } return res ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/206/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9 head \uff0c\u8bf7\u4f60\u53cd\u8f6c\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u3002 \u793a\u4f8b 1\uff1a 1 2 \u8f93\u5165\uff1ahead = [1,2,3,4,5] \u8f93\u51fa\uff1a[5,4,3,2,1] \u793a\u4f8b 2\uff1a 1 2 \u8f93\u5165\uff1ahead = [1,2] \u8f93\u51fa\uff1a[2,1] \u793a\u4f8b 3\uff1a 1 2 \u8f93\u5165\uff1ahead = [] \u8f93\u51fa\uff1a[] \u63d0\u793a\uff1a \u94fe\u8868\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u8303\u56f4\u662f \\([0, 5000]\\) \\(-5000\\) \\(\u2264\\) \\(Node.val\\) \\(\u2264\\) \\(5000\\) \u8fdb\u9636\uff1a \u94fe\u8868\u53ef\u4ee5\u9009\u7528\u8fed\u4ee3\u6216\u9012\u5f52\u65b9\u5f0f\u5b8c\u6210\u53cd\u8f6c\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f \u904d\u5386 \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(1)\\) \u5b9a\u4e49\u524d\u9a71\u7ed3\u70b9\u4e3a pre \uff0c\u5f53\u524d\u7ed3\u70b9\u4e3a cur \uff0c\u7531\u4e8e\u6bcf\u6b21\u53cd\u8f6c\u9700\u8981\u628a\u5f53\u524d\u7ed3\u70b9\u7684 next\u6307\u9488 \u6307\u5411\u524d\u9a71\u7ed3\u70b9 pre \uff0c\u6240\u4ee5\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a next \u7528\u6765\u5b58\u50a8\u5f53\u524d\u7ed3\u70b9\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002 \u53cd\u8f6c\u64cd\u4f5c\uff1a \u628a\u5f53\u524d\u7ed3\u70b9\u7684 next \u6307\u9488\u6307\u5411 \u524d\u9a71\u7ed3\u70b9 \uff1b \u628a\u524d\u9a71\u7ed3\u70b9 pre \u79fb\u5230\u5f53\u524d\u7ed3\u70b9 cur \u4e0a\uff1b \u628a\u5f53\u524d\u7ed3\u70b9 cur \u79fb\u5230\u4e4b\u524d\u5b9a\u4e49\u7684 next \u7ed3\u70b9\u5904\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { ListNode * pre = nullptr ; ListNode * cur = head ; while ( cur ) { ListNode * next = cur -> next ; cur -> next = pre ; pre = cur ; cur = next ; } return pre ; } }; \u9012\u5f52 \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u5b9a\u4e49 tail \u7ed3\u70b9\u4e3a reverseList(head) \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5f53\u6ca1\u6709 next \u7ed3\u70b9\u65f6\uff0c\u8fd4\u56de head \u7ed3\u70b9\u3002 \u5426\u5219\uff0c\u5c06\u5f53\u524d\u7ed3\u70b9\u7684 next \u7ed3\u70b9\u7684 next \u6307\u5411\u5f53\u524d head \u7ed3\u70b9\uff0c head->next \u7f6e\u4e3a\u7a7a\u6307\u9488 nullptr \u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; ListNode * tail = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return tail ; } };","title":"206. \u53cd\u8f6c\u94fe\u8868"},{"location":"algorithm/leetcode/206/#_1","text":"\u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9 head \uff0c\u8bf7\u4f60\u53cd\u8f6c\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/206/#1","text":"1 2 \u8f93\u5165\uff1ahead = [1,2,3,4,5] \u8f93\u51fa\uff1a[5,4,3,2,1]","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/206/#2","text":"1 2 \u8f93\u5165\uff1ahead = [1,2] \u8f93\u51fa\uff1a[2,1]","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/206/#3","text":"1 2 \u8f93\u5165\uff1ahead = [] \u8f93\u51fa\uff1a[]","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/206/#_2","text":"\u94fe\u8868\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u8303\u56f4\u662f \\([0, 5000]\\) \\(-5000\\) \\(\u2264\\) \\(Node.val\\) \\(\u2264\\) \\(5000\\) \u8fdb\u9636\uff1a \u94fe\u8868\u53ef\u4ee5\u9009\u7528\u8fed\u4ee3\u6216\u9012\u5f52\u65b9\u5f0f\u5b8c\u6210\u53cd\u8f6c\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/206/#_3","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(1)\\) \u5b9a\u4e49\u524d\u9a71\u7ed3\u70b9\u4e3a pre \uff0c\u5f53\u524d\u7ed3\u70b9\u4e3a cur \uff0c\u7531\u4e8e\u6bcf\u6b21\u53cd\u8f6c\u9700\u8981\u628a\u5f53\u524d\u7ed3\u70b9\u7684 next\u6307\u9488 \u6307\u5411\u524d\u9a71\u7ed3\u70b9 pre \uff0c\u6240\u4ee5\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a next \u7528\u6765\u5b58\u50a8\u5f53\u524d\u7ed3\u70b9\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002 \u53cd\u8f6c\u64cd\u4f5c\uff1a \u628a\u5f53\u524d\u7ed3\u70b9\u7684 next \u6307\u9488\u6307\u5411 \u524d\u9a71\u7ed3\u70b9 \uff1b \u628a\u524d\u9a71\u7ed3\u70b9 pre \u79fb\u5230\u5f53\u524d\u7ed3\u70b9 cur \u4e0a\uff1b \u628a\u5f53\u524d\u7ed3\u70b9 cur \u79fb\u5230\u4e4b\u524d\u5b9a\u4e49\u7684 next \u7ed3\u70b9\u5904\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { ListNode * pre = nullptr ; ListNode * cur = head ; while ( cur ) { ListNode * next = cur -> next ; cur -> next = pre ; pre = cur ; cur = next ; } return pre ; } };","title":"\u904d\u5386"},{"location":"algorithm/leetcode/206/#_4","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u5b9a\u4e49 tail \u7ed3\u70b9\u4e3a reverseList(head) \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5f53\u6ca1\u6709 next \u7ed3\u70b9\u65f6\uff0c\u8fd4\u56de head \u7ed3\u70b9\u3002 \u5426\u5219\uff0c\u5c06\u5f53\u524d\u7ed3\u70b9\u7684 next \u7ed3\u70b9\u7684 next \u6307\u5411\u5f53\u524d head \u7ed3\u70b9\uff0c head->next \u7f6e\u4e3a\u7a7a\u6307\u9488 nullptr \u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; ListNode * tail = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return tail ; } };","title":"\u9012\u5f52"},{"location":"algorithm/leetcode/21/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002 \u793a\u4f8b 1\uff1a 1 2 \u8f93\u5165\uff1al1 = [1,2,4], l2 = [1,3,4] \u8f93\u51fa\uff1a[1,1,2,3,4,4] \u793a\u4f8b 2\uff1a 1 2 \u8f93\u5165\uff1al1 = [], l2 = [] \u8f93\u51fa\uff1a[] \u793a\u4f8b 3\uff1a 1 2 \u8f93\u5165\uff1al1 = [], l2 = [0] \u8f93\u51fa\uff1a[0] \u63d0\u793a\uff1a \u4e24\u4e2a\u94fe\u8868\u7684\u8282\u70b9\u6570\u76ee\u8303\u56f4\u662f \\([0, 50]\\) \\(-100\\) \\(\u2264\\) \\(Node.val\\) \\(\u2264\\) \\(100\\) \\(l1\\) \u548c \\(l2\\) \u5747\u6309 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5217 \u7b97\u6cd5\u548c\u601d\u8def \u4e8c\u8def\u5f52\u5e76 \u2003 \\(O(n)\\) \u65b0\u5efa\u5934\u90e8\u7684\u4fdd\u62a4\u7ed3\u70b9 \\(dummy\\) \uff0c\u8bbe\u7f6e \\(cur\\) \u6307\u9488\u6307\u5411 \\(dummy\\) \u3002 \u82e5\u5f53\u524d \\(l1\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u6bd4 \\(l2\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u5c0f\uff0c\u5219\u4ee4 \\(cur\\) \u7684 \\(next\\) \u6307\u9488\u6307\u5411 \\(l1\\) \uff0c\u4e14 \\(l1\\) \u540e\u79fb\uff1b\u5426\u5219\u6307\u5411 \\(l2\\) \uff0c\u4e14 \\(l2\\) \u540e\u79fb\u3002 \u7136\u540e \\(cur\\) \u6307\u9488\u6309\u7167\u4e0a\u4e00\u90e8\u8bbe\u7f6e\u597d\u7684\u4f4d\u7f6e\u540e\u79fb\u3002 \u5faa\u73af\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230 \\(l1\\) \u6216 \\(l2\\) \u4e3a\u7a7a\u3002 \u5c06\u5269\u4f59\u7684 \\(l1\\) \u6216 \\(l2\\) \u63a5\u5230 \\(cur\\) \u6307\u9488\u540e\u8fb9\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u4e24\u4e2a\u94fe\u8868\u5404\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * mergeTwoLists ( ListNode * list1 , ListNode * list2 ) { ListNode * dummy = new ListNode (); ListNode * cur = dummy ; while ( list1 != nullptr && list2 != nullptr ) { if ( list1 -> val < list2 -> val ) { cur -> next = list1 ; list1 = list1 -> next ; } else { cur -> next = list2 ; list2 = list2 -> next ; } cur = cur -> next ; } cur -> next = ( list1 != nullptr ? list1 : list2 ); return dummy -> next ; } };","title":"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868"},{"location":"algorithm/leetcode/21/#_1","text":"\u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/21/#1","text":"1 2 \u8f93\u5165\uff1al1 = [1,2,4], l2 = [1,3,4] \u8f93\u51fa\uff1a[1,1,2,3,4,4]","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/21/#2","text":"1 2 \u8f93\u5165\uff1al1 = [], l2 = [] \u8f93\u51fa\uff1a[]","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/21/#3","text":"1 2 \u8f93\u5165\uff1al1 = [], l2 = [0] \u8f93\u51fa\uff1a[0]","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/21/#_2","text":"\u4e24\u4e2a\u94fe\u8868\u7684\u8282\u70b9\u6570\u76ee\u8303\u56f4\u662f \\([0, 50]\\) \\(-100\\) \\(\u2264\\) \\(Node.val\\) \\(\u2264\\) \\(100\\) \\(l1\\) \u548c \\(l2\\) \u5747\u6309 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5217","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/21/#_3","text":"","title":"\u7b97\u6cd5\u548c\u601d\u8def"},{"location":"algorithm/leetcode/21/#on","text":"\u65b0\u5efa\u5934\u90e8\u7684\u4fdd\u62a4\u7ed3\u70b9 \\(dummy\\) \uff0c\u8bbe\u7f6e \\(cur\\) \u6307\u9488\u6307\u5411 \\(dummy\\) \u3002 \u82e5\u5f53\u524d \\(l1\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u6bd4 \\(l2\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u5c0f\uff0c\u5219\u4ee4 \\(cur\\) \u7684 \\(next\\) \u6307\u9488\u6307\u5411 \\(l1\\) \uff0c\u4e14 \\(l1\\) \u540e\u79fb\uff1b\u5426\u5219\u6307\u5411 \\(l2\\) \uff0c\u4e14 \\(l2\\) \u540e\u79fb\u3002 \u7136\u540e \\(cur\\) \u6307\u9488\u6309\u7167\u4e0a\u4e00\u90e8\u8bbe\u7f6e\u597d\u7684\u4f4d\u7f6e\u540e\u79fb\u3002 \u5faa\u73af\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230 \\(l1\\) \u6216 \\(l2\\) \u4e3a\u7a7a\u3002 \u5c06\u5269\u4f59\u7684 \\(l1\\) \u6216 \\(l2\\) \u63a5\u5230 \\(cur\\) \u6307\u9488\u540e\u8fb9\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u4e24\u4e2a\u94fe\u8868\u5404\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002","title":"\u4e8c\u8def\u5f52\u5e76 &emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/21/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * mergeTwoLists ( ListNode * list1 , ListNode * list2 ) { ListNode * dummy = new ListNode (); ListNode * cur = dummy ; while ( list1 != nullptr && list2 != nullptr ) { if ( list1 -> val < list2 -> val ) { cur -> next = list1 ; list1 = list1 -> next ; } else { cur -> next = list2 ; list2 = list2 -> next ; } cur = cur -> next ; } cur -> next = ( list1 != nullptr ? list1 : list2 ); return dummy -> next ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/223/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60 \u4e8c\u7ef4 \u5e73\u9762\u4e0a\u4e24\u4e2a \u7531\u76f4\u7ebf\u6784\u6210\u4e14\u8fb9\u4e0e\u5750\u6807\u8f74\u5e73\u884c/\u5782\u76f4 \u7684\u77e9\u5f62\uff0c\u8bf7\u4f60\u8ba1\u7b97\u5e76\u8fd4\u56de\u4e24\u4e2a\u77e9\u5f62\u8986\u76d6\u7684\u603b\u9762\u79ef\u3002 \u6bcf\u4e2a\u77e9\u5f62\u7531\u5176 \u5de6\u4e0b \u9876\u70b9\u548c \u53f3\u4e0a \u9876\u70b9\u5750\u6807\u8868\u793a\uff1a \u7b2c\u4e00\u4e2a\u77e9\u5f62\u7531\u5176\u5de6\u4e0b\u9876\u70b9 (ax1, ay1) \u548c\u53f3\u4e0a\u9876\u70b9 (ax2, ay2) \u5b9a\u4e49\u3002 \u7b2c\u4e8c\u4e2a\u77e9\u5f62\u7531\u5176\u5de6\u4e0b\u9876\u70b9 (bx1, by1) \u548c\u53f3\u4e0a\u9876\u70b9 (bx2, by2) \u5b9a\u4e49\u3002 \u793a\u4f8b 1\uff1a 1 2 \u8f93\u5165\uff1aax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2 \u8f93\u51fa\uff1a45 \u793a\u4f8b 2\uff1a 1 2 \u8f93\u5165\uff1aax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2 \u8f93\u51fa\uff1a16 \u63d0\u793a\uff1a \\(-10^4\\) \\(\u2264\\) \\(ax1\\) , \\(ay1\\) , \\(ax2\\) , \\(ay2\\) , \\(bx1\\) , \\(by1\\) , \\(bx2\\) , \\(by2\\) \\(\u2264\\) \\(10^4\\) \u601d\u8def \u89c2\u5bdf\u56fe\u50cf\uff0c\u4e0d\u96be\u53d1\u73b0\u4ee5\u4e0b\u7279\u5f81\uff1a \u77e9\u5f62a\u7684\u6c34\u5e73\u8fb9\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [ax1, ax2] \uff0c\u5782\u76f4\u8fb9\u5728y\u8f74\u6295\u5f71\u4e3a [ay1, ay2] ; \u77e9\u5f62b\u7684\u6c34\u5e73\u8fb9\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [bx1, bx2] \uff0c\u5782\u76f4\u8fb9\u5728y\u8f74\u6295\u5f71\u4e3a [by1, by2] ; \u82e5\u4e24\u77e9\u9635\u91cd\u5408\uff0c\u5219\u91cd\u5408\u77e9\u5f62\u7684\u6c34\u5e73\u8fb9\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [max(ax1, bx1), min(ax2, bx2)] , \u5782\u76f4\u8fb9\u5728y\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [max(ay1, by1), min(ay2, by2)] \u3002 \u82e5\u6709\u91cd\u5408\u77e9\u5f62\uff0c\u7b54\u6848\u5373\u4e3a \u4e24\u77e9\u5f62\u9762\u79ef\u548c - \u91cd\u5408\u77e9\u5f62\u9762\u79ef \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public : int computeArea ( int ax1 , int ay1 , int ax2 , int ay2 , int bx1 , int by1 , int bx2 , int by2 ) { // \u4e24\u77e9\u5f62\u9762\u79ef\u548c int tot = ( ax2 - ax1 ) * ( ay2 - ay1 ) + ( bx2 - bx1 ) * ( by2 - by1 ); // \u91cd\u5408\u77e9\u5f62 int x = min ( ax2 , bx2 ) - max ( ax1 , bx1 ); // x\u8f74\u5904\u6295\u5f71 int y = min ( ay2 , by2 ) - max ( ay1 , by1 ); // y\u8f74\u5904\u6295\u5f71 if ( x > 0 && y > 0 ) tot -= x * y ; // \u82e5\u5b58\u5728\u91cd\u5408\u77e9\u5f62\uff0ctot\u51cf\u53bb\u4e00\u4e2a\u91cd\u5408\u77e9\u5f62\u9762\u79ef return tot ; } };","title":"223. \u77e9\u5f62\u9762\u79ef"},{"location":"algorithm/leetcode/223/#_1","text":"\u7ed9\u4f60 \u4e8c\u7ef4 \u5e73\u9762\u4e0a\u4e24\u4e2a \u7531\u76f4\u7ebf\u6784\u6210\u4e14\u8fb9\u4e0e\u5750\u6807\u8f74\u5e73\u884c/\u5782\u76f4 \u7684\u77e9\u5f62\uff0c\u8bf7\u4f60\u8ba1\u7b97\u5e76\u8fd4\u56de\u4e24\u4e2a\u77e9\u5f62\u8986\u76d6\u7684\u603b\u9762\u79ef\u3002 \u6bcf\u4e2a\u77e9\u5f62\u7531\u5176 \u5de6\u4e0b \u9876\u70b9\u548c \u53f3\u4e0a \u9876\u70b9\u5750\u6807\u8868\u793a\uff1a \u7b2c\u4e00\u4e2a\u77e9\u5f62\u7531\u5176\u5de6\u4e0b\u9876\u70b9 (ax1, ay1) \u548c\u53f3\u4e0a\u9876\u70b9 (ax2, ay2) \u5b9a\u4e49\u3002 \u7b2c\u4e8c\u4e2a\u77e9\u5f62\u7531\u5176\u5de6\u4e0b\u9876\u70b9 (bx1, by1) \u548c\u53f3\u4e0a\u9876\u70b9 (bx2, by2) \u5b9a\u4e49\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/223/#1","text":"1 2 \u8f93\u5165\uff1aax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2 \u8f93\u51fa\uff1a45","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/223/#2","text":"1 2 \u8f93\u5165\uff1aax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2 \u8f93\u51fa\uff1a16","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/223/#_2","text":"\\(-10^4\\) \\(\u2264\\) \\(ax1\\) , \\(ay1\\) , \\(ax2\\) , \\(ay2\\) , \\(bx1\\) , \\(by1\\) , \\(bx2\\) , \\(by2\\) \\(\u2264\\) \\(10^4\\)","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/223/#_3","text":"\u89c2\u5bdf\u56fe\u50cf\uff0c\u4e0d\u96be\u53d1\u73b0\u4ee5\u4e0b\u7279\u5f81\uff1a \u77e9\u5f62a\u7684\u6c34\u5e73\u8fb9\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [ax1, ax2] \uff0c\u5782\u76f4\u8fb9\u5728y\u8f74\u6295\u5f71\u4e3a [ay1, ay2] ; \u77e9\u5f62b\u7684\u6c34\u5e73\u8fb9\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [bx1, bx2] \uff0c\u5782\u76f4\u8fb9\u5728y\u8f74\u6295\u5f71\u4e3a [by1, by2] ; \u82e5\u4e24\u77e9\u9635\u91cd\u5408\uff0c\u5219\u91cd\u5408\u77e9\u5f62\u7684\u6c34\u5e73\u8fb9\u5728x\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [max(ax1, bx1), min(ax2, bx2)] , \u5782\u76f4\u8fb9\u5728y\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a [max(ay1, by1), min(ay2, by2)] \u3002 \u82e5\u6709\u91cd\u5408\u77e9\u5f62\uff0c\u7b54\u6848\u5373\u4e3a \u4e24\u77e9\u5f62\u9762\u79ef\u548c - \u91cd\u5408\u77e9\u5f62\u9762\u79ef","title":"\u601d\u8def"},{"location":"algorithm/leetcode/223/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public : int computeArea ( int ax1 , int ay1 , int ax2 , int ay2 , int bx1 , int by1 , int bx2 , int by2 ) { // \u4e24\u77e9\u5f62\u9762\u79ef\u548c int tot = ( ax2 - ax1 ) * ( ay2 - ay1 ) + ( bx2 - bx1 ) * ( by2 - by1 ); // \u91cd\u5408\u77e9\u5f62 int x = min ( ax2 , bx2 ) - max ( ax1 , bx1 ); // x\u8f74\u5904\u6295\u5f71 int y = min ( ay2 , by2 ) - max ( ay1 , by1 ); // y\u8f74\u5904\u6295\u5f71 if ( x > 0 && y > 0 ) tot -= x * y ; // \u82e5\u5b58\u5728\u91cd\u5408\u77e9\u5f62\uff0ctot\u51cf\u53bb\u4e00\u4e2a\u91cd\u5408\u77e9\u5f62\u9762\u79ef return tot ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/341/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5d4c\u5957\u7684\u6574\u6570\u5217\u8868 nestedList \u3002 \u6bcf\u4e2a\u5143\u7d20\u8981\u4e48\u662f\u4e00\u4e2a \u6574\u6570 \uff0c\u8981\u4e48\u662f\u4e00\u4e2a \u5217\u8868 \uff1b \u8be5\u5217\u8868\u7684\u5143\u7d20\u4e5f\u53ef\u80fd\u662f \u6574\u6570 \u6216\u8005\u662f\u5176\u4ed6 \u5217\u8868 \u3002 \u8bf7\u4f60\u5b9e\u73b0\u4e00\u4e2a\u8fed\u4ee3\u5668\u5c06\u5176\u6241\u5e73\u5316\uff0c\u4f7f\u4e4b\u80fd\u591f\u904d\u5386\u8fd9\u4e2a\u5217\u8868\u4e2d\u7684\u6240\u6709\u6574\u6570\u3002 \u5b9e\u73b0\u6241\u5e73\u8fed\u4ee3\u5668\u7c7b NestedIterator \uff1a NestedIterator(List<NestedInteger> nestedList) \u7528\u5d4c\u5957\u5217\u8868 nestedList \u521d\u59cb\u5316\u8fed\u4ee3\u5668\u3002 int next() \u8fd4\u56de\u5d4c\u5957\u5217\u8868\u7684\u4e0b\u4e00\u4e2a\u6574\u6570\u3002 boolean hasNext() \u5982\u679c\u4ecd\u7136\u5b58\u5728\u5f85\u8fed\u4ee3\u7684\u6574\u6570\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u4f60\u7684\u4ee3\u7801\u5c06\u4f1a\u7528\u4e0b\u8ff0\u4f2a\u4ee3\u7801\u68c0\u6d4b\uff1a 1 2 3 4 5 initialize iterator with nestedList res = [] while iterator.hasNext() append iterator.next() to the end of res return res \u5982\u679c res \u4e0e\u9884\u671f\u7684\u6241\u5e73\u5316\u5217\u8868\u5339\u914d\uff0c\u90a3\u4e48\u4f60\u7684\u4ee3\u7801\u5c06\u4f1a\u88ab\u5224\u4e3a\u6b63\u786e\u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1anestedList = [[1,1],2,[1,1]] \u8f93\u51fa\uff1a[1,1,2,1,1] \u89e3\u91ca\uff1a\u901a\u8fc7\u91cd\u590d\u8c03\u7528 next \u76f4\u5230 hasNext \u8fd4\u56de false\uff0cnext \u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: [1,1,2,1,1]\u3002 \u793a\u4f8b 2\uff1a 1 2 3 \u8f93\u5165\uff1anestedList = [1,[4,[6]]] \u8f93\u51fa\uff1a[1,4,6] \u89e3\u91ca\uff1a\u901a\u8fc7\u91cd\u590d\u8c03\u7528 next \u76f4\u5230 hasNext \u8fd4\u56de false\uff0cnext \u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: [1,4,6]\u3002 \u63d0\u793a\uff1a \\(1\\) \\(\u2264\\) \\(nestedList.length\\) \\(\u2264\\) \\(500\\) \u5d4c\u5957\u5217\u8868\u4e2d\u7684\u6574\u6570\u503c\u5728\u8303\u56f4 \\([-10^6, 10^6]\\) \u5185 1. \u9012\u5f52 (\u6df1\u5ea6\u4f18\u5148\u641c\u7d22dfs) \u2003 \\(O(n)\\) \u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u662f\u4e00\u4e2a \u6811\u5f62\u7ed3\u6784 \uff0c\u6811\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u6574\u6570\uff0c\u975e\u53f6\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5217\u8868\u3002 \u5728\u8fd9\u68f5\u6811\u4e0a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u987a\u5e8f\u5c31\u662f\u8fed\u4ee3\u5668\u904d\u5386\u7684\u987a\u5e8f\u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u904d\u5386\u6574\u4e2a\u5d4c\u5957\u5217\u8868\uff0c\u5c06\u6240\u6709\u6574\u6570\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u904d\u5386\u8be5\u6570\u7ec4\u4ece\u800c\u5b9e\u73b0 next \u548c hasNext \u65b9\u6cd5\u3002 \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u521d\u59cb\u5316\u4e3a \\(O(n)\\) \uff0c next \u548c hasNext \u4e3a \\(O(1)\\) \u3002\u5176\u4e2d \\(n\\) \u662f\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\) \u3002\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 /** * // This is the interface that allows for creating nested lists. * // You should not implement it, or speculate about its implementation * class NestedInteger { * public: * // Return true if this NestedInteger holds a single integer, rather than a nested list. * bool isInteger() const; * * // Return the single integer that this NestedInteger holds, if it holds a single integer * // The result is undefined if this NestedInteger holds a nested list * int getInteger() const; * * // Return the nested list that this NestedInteger holds, if it holds a nested list * // The result is undefined if this NestedInteger holds a single integer * const vector<NestedInteger> &getList() const; * }; */ class NestedIterator { public : vector < int > res ; int k = 0 ; NestedIterator ( vector < NestedInteger > & nestedList ) { dfs ( nestedList ); } void dfs ( vector < NestedInteger > & nestedList ) { for ( auto & t : nestedList ) if ( t . isInteger ()) res . push_back ( t . getInteger ()); else dfs ( t . getList ()); } int next () { return res [ k ++ ]; } bool hasNext () { return k < res . size (); } }; /** * Your NestedIterator object will be instantiated and called as such: * NestedIterator i(nestedList); * while (i.hasNext()) cout << i.next(); */ 2. \u8fed\u4ee3 (\u6808) \u2003 \\(O(n)\\) \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u4ee3\u66ff\u65b9\u6cd5\u4e00\u4e2d\u7684\u9012\u5f52\u8fc7\u7a0b\u3002 \u5f53\u8c03\u7528 hasNext \u65f6\u6211\u4eec\u5c06\u6808\u9876\u5143\u7d20\u53d8\u4e3a\u4e0b\u4e00\u4e2a\u8981\u8bbf\u95ee\u7684\u6574\u6570\uff0c\u521d\u59cb\u5316\u65f6\u5c06\u8fed\u4ee3\u5668\u5012\u5e8f\u538b\u5165\u6808\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6808\u9876\u7684\u8fed\u4ee3\u5668\u4e3a\u8f93\u5165\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u521d\u59cb\u5316\u548c next \u4e3a \\(O(1)\\) \uff0c hasNext \u4e3a\u5747\u644a \\(O(1)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\) \u3002\u6700\u574f\u60c5\u51b5\u4e0b\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u662f\u4e00\u6761\u94fe\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a \\(O(n)\\) \u5927\u5c0f\u7684\u6808\u6765\u5b58\u50a8\u94fe\u4e0a\u7684\u6240\u6709\u5143\u7d20\u3002\u4f46\u5728 [1,[1,[1,[1,...,]]]] \u7684\u60c5\u51b5\u4e0b\uff0c\u6808\u4e2d\u7684\u8fed\u4ee3\u5668\u6570\u91cf\u6700\u591a\u4e3a2\uff0c\u5927\u5927\u51cf\u5c11\u6240\u7528\u7a7a\u95f4\u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 /** * // This is the interface that allows for creating nested lists. * // You should not implement it, or speculate about its implementation * class NestedInteger { * public: * // Return true if this NestedInteger holds a single integer, rather than a nested list. * bool isInteger() const; * * // Return the single integer that this NestedInteger holds, if it holds a single integer * // The result is undefined if this NestedInteger holds a nested list * int getInteger() const; * * // Return the nested list that this NestedInteger holds, if it holds a nested list * // The result is undefined if this NestedInteger holds a single integer * const vector<NestedInteger> &getList() const; * }; */ class NestedIterator { public : stack < NestedInteger > stk ; NestedIterator ( vector < NestedInteger > & nestedList ) { for ( int i = nestedList . size () - 1 ; i >= 0 ; i -- ) stk . push ( nestedList [ i ]); } int next () { int res = stk . top (). getInteger (); stk . pop (); return res ; } bool hasNext () { while ( ! stk . empty ()) { auto t = stk . top (); if ( t . isInteger ()) return true ; stk . pop (); for ( int i = t . getList (). size () - 1 ; i >= 0 ; i -- ) stk . push ( t . getList ()[ i ]); } return false ; } }; /** * Your NestedIterator object will be instantiated and called as such: * NestedIterator i(nestedList); * while (i.hasNext()) cout << i.next(); */","title":"341. \u6241\u5e73\u5316\u5d4c\u5957\u5217\u8868\u8fed\u4ee3\u5668"},{"location":"algorithm/leetcode/341/#_1","text":"\u7ed9\u4f60\u4e00\u4e2a\u5d4c\u5957\u7684\u6574\u6570\u5217\u8868 nestedList \u3002 \u6bcf\u4e2a\u5143\u7d20\u8981\u4e48\u662f\u4e00\u4e2a \u6574\u6570 \uff0c\u8981\u4e48\u662f\u4e00\u4e2a \u5217\u8868 \uff1b \u8be5\u5217\u8868\u7684\u5143\u7d20\u4e5f\u53ef\u80fd\u662f \u6574\u6570 \u6216\u8005\u662f\u5176\u4ed6 \u5217\u8868 \u3002 \u8bf7\u4f60\u5b9e\u73b0\u4e00\u4e2a\u8fed\u4ee3\u5668\u5c06\u5176\u6241\u5e73\u5316\uff0c\u4f7f\u4e4b\u80fd\u591f\u904d\u5386\u8fd9\u4e2a\u5217\u8868\u4e2d\u7684\u6240\u6709\u6574\u6570\u3002 \u5b9e\u73b0\u6241\u5e73\u8fed\u4ee3\u5668\u7c7b NestedIterator \uff1a NestedIterator(List<NestedInteger> nestedList) \u7528\u5d4c\u5957\u5217\u8868 nestedList \u521d\u59cb\u5316\u8fed\u4ee3\u5668\u3002 int next() \u8fd4\u56de\u5d4c\u5957\u5217\u8868\u7684\u4e0b\u4e00\u4e2a\u6574\u6570\u3002 boolean hasNext() \u5982\u679c\u4ecd\u7136\u5b58\u5728\u5f85\u8fed\u4ee3\u7684\u6574\u6570\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u4f60\u7684\u4ee3\u7801\u5c06\u4f1a\u7528\u4e0b\u8ff0\u4f2a\u4ee3\u7801\u68c0\u6d4b\uff1a 1 2 3 4 5 initialize iterator with nestedList res = [] while iterator.hasNext() append iterator.next() to the end of res return res \u5982\u679c res \u4e0e\u9884\u671f\u7684\u6241\u5e73\u5316\u5217\u8868\u5339\u914d\uff0c\u90a3\u4e48\u4f60\u7684\u4ee3\u7801\u5c06\u4f1a\u88ab\u5224\u4e3a\u6b63\u786e\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/341/#1","text":"1 2 3 \u8f93\u5165\uff1anestedList = [[1,1],2,[1,1]] \u8f93\u51fa\uff1a[1,1,2,1,1] \u89e3\u91ca\uff1a\u901a\u8fc7\u91cd\u590d\u8c03\u7528 next \u76f4\u5230 hasNext \u8fd4\u56de false\uff0cnext \u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: [1,1,2,1,1]\u3002","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/341/#2","text":"1 2 3 \u8f93\u5165\uff1anestedList = [1,[4,[6]]] \u8f93\u51fa\uff1a[1,4,6] \u89e3\u91ca\uff1a\u901a\u8fc7\u91cd\u590d\u8c03\u7528 next \u76f4\u5230 hasNext \u8fd4\u56de false\uff0cnext \u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: [1,4,6]\u3002","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/341/#_2","text":"\\(1\\) \\(\u2264\\) \\(nestedList.length\\) \\(\u2264\\) \\(500\\) \u5d4c\u5957\u5217\u8868\u4e2d\u7684\u6574\u6570\u503c\u5728\u8303\u56f4 \\([-10^6, 10^6]\\) \u5185","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/341/#1_1","text":"","title":"1. \u9012\u5f52"},{"location":"algorithm/leetcode/341/#dfs-on","text":"\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u662f\u4e00\u4e2a \u6811\u5f62\u7ed3\u6784 \uff0c\u6811\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u6574\u6570\uff0c\u975e\u53f6\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5217\u8868\u3002 \u5728\u8fd9\u68f5\u6811\u4e0a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u987a\u5e8f\u5c31\u662f\u8fed\u4ee3\u5668\u904d\u5386\u7684\u987a\u5e8f\u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u904d\u5386\u6574\u4e2a\u5d4c\u5957\u5217\u8868\uff0c\u5c06\u6240\u6709\u6574\u6570\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u904d\u5386\u8be5\u6570\u7ec4\u4ece\u800c\u5b9e\u73b0 next \u548c hasNext \u65b9\u6cd5\u3002","title":"(\u6df1\u5ea6\u4f18\u5148\u641c\u7d22dfs) &emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/341/#_3","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u521d\u59cb\u5316\u4e3a \\(O(n)\\) \uff0c next \u548c hasNext \u4e3a \\(O(1)\\) \u3002\u5176\u4e2d \\(n\\) \u662f\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\) \u3002\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"algorithm/leetcode/341/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 /** * // This is the interface that allows for creating nested lists. * // You should not implement it, or speculate about its implementation * class NestedInteger { * public: * // Return true if this NestedInteger holds a single integer, rather than a nested list. * bool isInteger() const; * * // Return the single integer that this NestedInteger holds, if it holds a single integer * // The result is undefined if this NestedInteger holds a nested list * int getInteger() const; * * // Return the nested list that this NestedInteger holds, if it holds a nested list * // The result is undefined if this NestedInteger holds a single integer * const vector<NestedInteger> &getList() const; * }; */ class NestedIterator { public : vector < int > res ; int k = 0 ; NestedIterator ( vector < NestedInteger > & nestedList ) { dfs ( nestedList ); } void dfs ( vector < NestedInteger > & nestedList ) { for ( auto & t : nestedList ) if ( t . isInteger ()) res . push_back ( t . getInteger ()); else dfs ( t . getList ()); } int next () { return res [ k ++ ]; } bool hasNext () { return k < res . size (); } }; /** * Your NestedIterator object will be instantiated and called as such: * NestedIterator i(nestedList); * while (i.hasNext()) cout << i.next(); */","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/341/#2_1","text":"","title":"2. \u8fed\u4ee3"},{"location":"algorithm/leetcode/341/#on","text":"\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u4ee3\u66ff\u65b9\u6cd5\u4e00\u4e2d\u7684\u9012\u5f52\u8fc7\u7a0b\u3002 \u5f53\u8c03\u7528 hasNext \u65f6\u6211\u4eec\u5c06\u6808\u9876\u5143\u7d20\u53d8\u4e3a\u4e0b\u4e00\u4e2a\u8981\u8bbf\u95ee\u7684\u6574\u6570\uff0c\u521d\u59cb\u5316\u65f6\u5c06\u8fed\u4ee3\u5668\u5012\u5e8f\u538b\u5165\u6808\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6808\u9876\u7684\u8fed\u4ee3\u5668\u4e3a\u8f93\u5165\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002","title":"(\u6808) &emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/341/#_5","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u521d\u59cb\u5316\u548c next \u4e3a \\(O(1)\\) \uff0c hasNext \u4e3a\u5747\u644a \\(O(1)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\) \u3002\u6700\u574f\u60c5\u51b5\u4e0b\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u662f\u4e00\u6761\u94fe\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a \\(O(n)\\) \u5927\u5c0f\u7684\u6808\u6765\u5b58\u50a8\u94fe\u4e0a\u7684\u6240\u6709\u5143\u7d20\u3002\u4f46\u5728 [1,[1,[1,[1,...,]]]] \u7684\u60c5\u51b5\u4e0b\uff0c\u6808\u4e2d\u7684\u8fed\u4ee3\u5668\u6570\u91cf\u6700\u591a\u4e3a2\uff0c\u5927\u5927\u51cf\u5c11\u6240\u7528\u7a7a\u95f4\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"algorithm/leetcode/341/#_6","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 /** * // This is the interface that allows for creating nested lists. * // You should not implement it, or speculate about its implementation * class NestedInteger { * public: * // Return true if this NestedInteger holds a single integer, rather than a nested list. * bool isInteger() const; * * // Return the single integer that this NestedInteger holds, if it holds a single integer * // The result is undefined if this NestedInteger holds a nested list * int getInteger() const; * * // Return the nested list that this NestedInteger holds, if it holds a nested list * // The result is undefined if this NestedInteger holds a single integer * const vector<NestedInteger> &getList() const; * }; */ class NestedIterator { public : stack < NestedInteger > stk ; NestedIterator ( vector < NestedInteger > & nestedList ) { for ( int i = nestedList . size () - 1 ; i >= 0 ; i -- ) stk . push ( nestedList [ i ]); } int next () { int res = stk . top (). getInteger (); stk . pop (); return res ; } bool hasNext () { while ( ! stk . empty ()) { auto t = stk . top (); if ( t . isInteger ()) return true ; stk . pop (); for ( int i = t . getList (). size () - 1 ; i >= 0 ; i -- ) stk . push ( t . getList ()[ i ]); } return false ; } }; /** * Your NestedIterator object will be instantiated and called as such: * NestedIterator i(nestedList); * while (i.hasNext()) cout << i.next(); */","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/456/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 \\(nums\\) \uff0c\u6570\u7ec4\u4e2d\u5171\u6709 \\(n\\) \u4e2a\u6574\u6570\u3002 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \u7531\u4e09\u4e2a\u6574\u6570 \\(nums[i]\\) \u3001 \\(nums[j]\\) \u548c \\(nums[k]\\) \u7ec4\u6210\uff0c\u5e76\u540c\u65f6\u6ee1\u8db3\uff1a \\(i < j < k\\) \u548c \\(nums[i] < nums[k] < nums[j]\\) \u3002 \u5982\u679c \\(nums\\) \u4e2d\u5b58\u5728 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \uff0c\u8fd4\u56de \\(true\\) \uff1b\u5426\u5219\uff0c\u8fd4\u56de \\(false\\) \u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1anums = [1,2,3,4] \u8f93\u51fa\uff1afalse \u89e3\u91ca\uff1a\u5e8f\u5217\u4e2d\u4e0d\u5b58\u5728 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\u3002 \u793a\u4f8b 2\uff1a 1 2 3 \u8f93\u5165\uff1anums = [3,1,4,2] \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1a\u5e8f\u5217\u4e2d\u6709 1 \u4e2a 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\uff1a [1, 4, 2] \u3002 \u793a\u4f8b 3\uff1a 1 2 3 \u8f93\u5165\uff1anums = [-1,3,2,0] \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1a\u5e8f\u5217\u4e2d\u6709 3 \u4e2a 132 \u6a21\u5f0f\u7684\u7684\u5b50\u5e8f\u5217\uff1a[-1, 3, 2]\u3001[-1, 3, 0] \u548c [-1, 2, 0] \u3002 \u63d0\u793a\uff1a \\(n\\) \\(=\\) \\(nums.length\\) \\(1\\) \\(\u2264\\) \\(n\\) \\(\u2264\\) \\(2 * 10^5\\) \\(-10^9\\) \\(\u2264\\) \\(nums[i]\\) \\(\u2264\\) \\(10^9\\) \u7b97\u6cd5\u4e0e\u601d\u8def (\u5355\u8c03\u6808) \u2003 \\(O(n)\\) \u6211\u4eec\u53ef\u4ee5\u6765\u8003\u8651\u628a\u6bcf\u4e2a\u6570\u5f53\u6210 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \u4e2d 1 \u7684\u60c5\u51b5\uff0c\u8bb0\u4e3a \\(a[i]\\) \uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e24\u4e2a\u6570 \\(a[j], a[k]\\) \uff0c\u6ee1\u8db3 \\(i < j < k\\) \uff0c \\(a[j] > a[k] > a[i]\\) \u65f6\uff0c 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \u5b58\u5728\u3002 \u5728\u6ee1\u8db3\u4ee5\u4e0a \u5145\u8981\u6761\u4ef6 \u4e2d\u5f97\u51fa \\(a[j]\\) \u4e0e \\(a[k]\\) \u662f \u5355\u8c03\u9012\u51cf \u7684\u3002 \u5728\u5355\u8c03\u6808\u4e2d\uff0c\u4ece\u6808\u5e95\u5230\u6808\u9876\u7684\u5143\u7d20\u662f\u4e25\u683c\u5355\u8c03\u9012\u51cf\u7684\u3002\u5f53\u7ed9\u5b9a\u9608\u503c \\(x\\) \u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e0d\u65ad\u5730\u5f39\u51fa\u6808\u9876\u7684\u5143\u7d20\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u6216\u8005 \\(x\\) \u4e25\u683c\u5c0f\u4e8e\u6808\u9876\u5143\u7d20\u3002\u6b64\u65f6\u6211\u4eec\u518d\u5c06 \\(x\\) \u5165\u6808\uff0c\u8fd9\u6837\u5c31\u7ef4\u62a4\u4e86\u6808\u7684\u5355\u8c03\u6027\u3002 \u56e0\u6b64\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u5224\u65ad\u5f53\u524d \\(a[i]\\) \u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002 \u7ef4\u62a4 \\(a[j], a[k]\\) \u7684\u5355\u8c03\u6808\u64cd\u4f5c\u53ef\u4ee5 \u4ece\u53f3\u5f80\u5de6 \u904d\u5386\u6570\u7ec4\uff0c\u6bcf\u6b21\u5224\u65ad\u5f53\u524d\u6570\u662f\u5426 \u5c0f\u4e8e \\(a[k]\\) \u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a \\(right\\) \u6765\u8bb0\u5f55\u5f53\u524d\u6570\u4e3a \\(a[i]\\) \u7684\u60c5\u51b5\u4e0b\uff0c \\(a[k]\\) \u7684 \u6700\u5927\u503c \u3002 \u82e5\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de \\(true\\) \uff1b \u82e5\u4e0d\u6ee1\u8db3\uff0c\u7ee7\u7eed\u8fdb\u884c\u4e0b\u5217\u64cd\u4f5c\u3002 \u5982\u679c\u6808\u9876\u5143\u7d20 \u5c0f\u4e8e \u5f53\u524d\u6570 \\(a[i]\\) \uff0c\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u76f4\u5230\u6808\u9876\u5143\u7d20 \u5927\u4e8e \u5f53\u524d\u6570 \\(a[i]\\) \u3002 \u5c06\u5f53\u524d\u6570 \\(a[i]\\) \u63d2\u5165\u6808\u5185\uff0c\u7ee7\u7eed\u904d\u5386\u4e0b\u4e00\u4e2a\u6570\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u8fd9\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de \\(false\\) \u3002 \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(n)\u3002\u679a\u4e3e \\(i\\) \u7684\u6b21\u6570\u4e3a \\(O(n)\\) \uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u52a0\u5165\u548c\u5f39\u51fa\u5355\u8c03\u6808\u5404\u4e00\u6b21\uff0c\u56e0\u6b64\u64cd\u4f5c\u5355\u8c03\u6808\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u5171\u4e3a \\(O(n)\\) \uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\) \uff0c\u5373\u4e3a\u5355\u8c03\u6808\u9700\u8981\u4f7f\u7528\u7684\u7a7a\u95f4\u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : bool find132pattern ( vector < int >& nums ) { int right = INT_MIN ; // \u8d77\u521d\u5b9a\u4e49\u4e3a\u6700\u5c0f\u503c\uff0c\u4fdd\u8bc1\u5355\u8c03\u6027 stack < int > s ; for ( int i = nums . size () - 1 ; i >= 0 ; i -- ) { if ( nums [ i ] < right ) return true ; while ( ! s . empty () && s . top () < nums [ i ]) { right = max ( right , s . top ()); s . pop (); } s . push ( nums [ i ]); } return false ; } };","title":"456. 132 \u6a21\u5f0f"},{"location":"algorithm/leetcode/456/#_1","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 \\(nums\\) \uff0c\u6570\u7ec4\u4e2d\u5171\u6709 \\(n\\) \u4e2a\u6574\u6570\u3002 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \u7531\u4e09\u4e2a\u6574\u6570 \\(nums[i]\\) \u3001 \\(nums[j]\\) \u548c \\(nums[k]\\) \u7ec4\u6210\uff0c\u5e76\u540c\u65f6\u6ee1\u8db3\uff1a \\(i < j < k\\) \u548c \\(nums[i] < nums[k] < nums[j]\\) \u3002 \u5982\u679c \\(nums\\) \u4e2d\u5b58\u5728 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \uff0c\u8fd4\u56de \\(true\\) \uff1b\u5426\u5219\uff0c\u8fd4\u56de \\(false\\) \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/456/#1","text":"1 2 3 \u8f93\u5165\uff1anums = [1,2,3,4] \u8f93\u51fa\uff1afalse \u89e3\u91ca\uff1a\u5e8f\u5217\u4e2d\u4e0d\u5b58\u5728 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\u3002","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/456/#2","text":"1 2 3 \u8f93\u5165\uff1anums = [3,1,4,2] \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1a\u5e8f\u5217\u4e2d\u6709 1 \u4e2a 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\uff1a [1, 4, 2] \u3002","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/456/#3","text":"1 2 3 \u8f93\u5165\uff1anums = [-1,3,2,0] \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1a\u5e8f\u5217\u4e2d\u6709 3 \u4e2a 132 \u6a21\u5f0f\u7684\u7684\u5b50\u5e8f\u5217\uff1a[-1, 3, 2]\u3001[-1, 3, 0] \u548c [-1, 2, 0] \u3002","title":"\u793a\u4f8b 3\uff1a"},{"location":"algorithm/leetcode/456/#_2","text":"\\(n\\) \\(=\\) \\(nums.length\\) \\(1\\) \\(\u2264\\) \\(n\\) \\(\u2264\\) \\(2 * 10^5\\) \\(-10^9\\) \\(\u2264\\) \\(nums[i]\\) \\(\u2264\\) \\(10^9\\)","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/456/#_3","text":"","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/leetcode/456/#on","text":"\u6211\u4eec\u53ef\u4ee5\u6765\u8003\u8651\u628a\u6bcf\u4e2a\u6570\u5f53\u6210 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \u4e2d 1 \u7684\u60c5\u51b5\uff0c\u8bb0\u4e3a \\(a[i]\\) \uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e24\u4e2a\u6570 \\(a[j], a[k]\\) \uff0c\u6ee1\u8db3 \\(i < j < k\\) \uff0c \\(a[j] > a[k] > a[i]\\) \u65f6\uff0c 132 \u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 \u5b58\u5728\u3002 \u5728\u6ee1\u8db3\u4ee5\u4e0a \u5145\u8981\u6761\u4ef6 \u4e2d\u5f97\u51fa \\(a[j]\\) \u4e0e \\(a[k]\\) \u662f \u5355\u8c03\u9012\u51cf \u7684\u3002 \u5728\u5355\u8c03\u6808\u4e2d\uff0c\u4ece\u6808\u5e95\u5230\u6808\u9876\u7684\u5143\u7d20\u662f\u4e25\u683c\u5355\u8c03\u9012\u51cf\u7684\u3002\u5f53\u7ed9\u5b9a\u9608\u503c \\(x\\) \u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e0d\u65ad\u5730\u5f39\u51fa\u6808\u9876\u7684\u5143\u7d20\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u6216\u8005 \\(x\\) \u4e25\u683c\u5c0f\u4e8e\u6808\u9876\u5143\u7d20\u3002\u6b64\u65f6\u6211\u4eec\u518d\u5c06 \\(x\\) \u5165\u6808\uff0c\u8fd9\u6837\u5c31\u7ef4\u62a4\u4e86\u6808\u7684\u5355\u8c03\u6027\u3002 \u56e0\u6b64\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u5224\u65ad\u5f53\u524d \\(a[i]\\) \u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002 \u7ef4\u62a4 \\(a[j], a[k]\\) \u7684\u5355\u8c03\u6808\u64cd\u4f5c\u53ef\u4ee5 \u4ece\u53f3\u5f80\u5de6 \u904d\u5386\u6570\u7ec4\uff0c\u6bcf\u6b21\u5224\u65ad\u5f53\u524d\u6570\u662f\u5426 \u5c0f\u4e8e \\(a[k]\\) \u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a \\(right\\) \u6765\u8bb0\u5f55\u5f53\u524d\u6570\u4e3a \\(a[i]\\) \u7684\u60c5\u51b5\u4e0b\uff0c \\(a[k]\\) \u7684 \u6700\u5927\u503c \u3002 \u82e5\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de \\(true\\) \uff1b \u82e5\u4e0d\u6ee1\u8db3\uff0c\u7ee7\u7eed\u8fdb\u884c\u4e0b\u5217\u64cd\u4f5c\u3002 \u5982\u679c\u6808\u9876\u5143\u7d20 \u5c0f\u4e8e \u5f53\u524d\u6570 \\(a[i]\\) \uff0c\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u76f4\u5230\u6808\u9876\u5143\u7d20 \u5927\u4e8e \u5f53\u524d\u6570 \\(a[i]\\) \u3002 \u5c06\u5f53\u524d\u6570 \\(a[i]\\) \u63d2\u5165\u6808\u5185\uff0c\u7ee7\u7eed\u904d\u5386\u4e0b\u4e00\u4e2a\u6570\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u8fd9\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de \\(false\\) \u3002","title":"(\u5355\u8c03\u6808) &emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/456/#_4","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(n)\u3002\u679a\u4e3e \\(i\\) \u7684\u6b21\u6570\u4e3a \\(O(n)\\) \uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u52a0\u5165\u548c\u5f39\u51fa\u5355\u8c03\u6808\u5404\u4e00\u6b21\uff0c\u56e0\u6b64\u64cd\u4f5c\u5355\u8c03\u6808\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u5171\u4e3a \\(O(n)\\) \uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\) \uff0c\u5373\u4e3a\u5355\u8c03\u6808\u9700\u8981\u4f7f\u7528\u7684\u7a7a\u95f4\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"algorithm/leetcode/456/#_5","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : bool find132pattern ( vector < int >& nums ) { int right = INT_MIN ; // \u8d77\u521d\u5b9a\u4e49\u4e3a\u6700\u5c0f\u503c\uff0c\u4fdd\u8bc1\u5355\u8c03\u6027 stack < int > s ; for ( int i = nums . size () - 1 ; i >= 0 ; i -- ) { if ( nums [ i ] < right ) return true ; while ( ! s . empty () && s . top () < nums [ i ]) { right = max ( right , s . top ()); s . pop (); } s . push ( nums [ i ]); } return false ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/713/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 nums \u548c\u6574\u6570 k \u3002 \u8bf7\u627e\u51fa\u8be5\u6570\u7ec4\u5185 \u4e58\u79ef\u5c0f\u4e8e \\(k\\) \u7684 \u8fde\u7eed\u7684\u5b50\u6570\u7ec4 \u7684\u4e2a\u6570\u3002 \u793a\u4f8b 1: 1 2 3 4 \u8f93\u5165: nums = [10,5,2,6], k = 100 \u8f93\u51fa: 8 \u89e3\u91ca: 8\u4e2a\u4e58\u79ef\u5c0f\u4e8e100\u7684\u5b50\u6570\u7ec4\u5206\u522b\u4e3a: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f [10,5,2] \u5e76\u4e0d\u662f\u4e58\u79ef\u5c0f\u4e8e100\u7684\u5b50\u6570\u7ec4\u3002 \u793a\u4f8b 2: 1 2 \u8f93\u5165: nums = [1,2,3], k = 0 \u8f93\u51fa: 0 \u63d0\u793a: \\(1 \\le nums.length \\le 3 * 10^4\\) \\(1 \\le nums[i] \\le 1000\\) \\(0 \\le k \\le 10^6\\) \u7b97\u6cd5\u4e0e\u601d\u8def \u53cc\u6307\u9488 \u2003 \\(O(n)\\) \u6211\u4eec\u53ef\u4ee5\u5728\u6570\u7ec4\u5185\u8bbe\u7f6e\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(right\\) \uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 \\(left\\) \uff0c\u6ee1\u8db3 \\[\\prod_{i=left}^{right} nums[i] < k\\] \u7531\u4e8e\u5f53 \\(left\\) \u589e\u52a0\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u4e58\u79ef\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u7b97\u6cd5\uff0c\u5355\u8c03\u79fb\u52a8 \\(left\\) \u3002 \u6211\u4eec\u4e00\u91cd\u5faa\u73af\u679a\u4e3e\u6bcf\u4e2a \\(right\\) \uff0c\u540c\u65f6 \\(left\\) \u5355\u8c03\u589e\u52a0\u3002 \u5728\u5faa\u73af\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u5148\u5c06\u4e58\u79ef\u4e58\u4ee5 \\(nums[right]\\) \u3002 \u6b64\u65f6\u9700\u8981\u5411\u53f3\u79fb\u52a8 \\(left\\) \uff0c\u76f4\u5230\u6ee1\u8db3\u4e58\u79ef\u5c0f\u4e8e \\(k\\) \u7684\u6761\u4ef6\u3002 \u5728\u6bcf\u6b21\u79fb\u52a8 \\(left\\) \u7684\u64cd\u4f5c\u4e2d\uff0c\u9700\u8981\u5c06\u4e58\u79ef\u9664\u4ee5 \\(nums[left]\\) \u3002 \u5f53 \\(left\\) \u79fb\u52a8\u5b8c\u6210\u540e\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684 \\(right\\) \uff0c\u5c31\u5305\u542b\u4e86 \\(right-left+1\\) \u4e2a\u4e58\u79ef\u5c0f\u4e8e \\(k\\) \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u3002 \u4e3a\u4ec0\u4e48\u662f \\(right-left+1\\) \uff1f\u8bbe \\(length=right-left+1\\) \u3002 \u5bf9\u4e8e\u6bcf\u4e2a \\(right\\) \uff0c\u8fde\u7eed\u6570\u7ec4\u533a\u95f4\u9700\u8981\u5305\u542b \\(nums[right]\\) \uff0c\u5373\uff1a \u533a\u95f4\u957f\u5ea6\u4e3a \\(1\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b \u533a\u95f4\u957f\u5ea6\u4e3a \\(2\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b \u533a\u95f4\u957f\u5ea6\u4e3a \\(3\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b ... \u533a\u95f4\u957f\u5ea6\u4e3a \\(length-1\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b \u533a\u95f4\u957f\u5ea6\u4e3a \\(length\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\u3002 \u53ef\u4ee5\u5f97\u51fa\uff0c\u6709 \\(length\\) \u4e2a \\(1\\) \uff0c\u6700\u7ec8\u4e2a\u6570\u4e3a \\(length\\) \uff0c\u5373 \\(right-left+1\\) \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u4e00\u91cd\u679a\u4e3e\u6240\u6709\u7684right\u7aef\u70b9\uff0c\u800cleft\u53ea\u9700\u8981\u79fb\u52a8n\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \u53ea\u4f1a\u7528\u5230\u5e38\u6570\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u4e3a \\(O(1)\\) \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : int numSubarrayProductLessThanK ( vector < int >& nums , int k ) { if ( k <= 1 ) return 0 ; int res = 0 , t = 1 ; for ( int l = 0 , r = 0 ; r < nums . size (); r ++ ) { t *= nums [ r ]; while ( t >= k ) { t /= nums [ l ]; l ++ ; } res += r - l + 1 ; } return res ; } };","title":"713. \u4e58\u79ef\u5c0f\u4e8eK\u7684\u5b50\u6570\u7ec4"},{"location":"algorithm/leetcode/713/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 nums \u548c\u6574\u6570 k \u3002 \u8bf7\u627e\u51fa\u8be5\u6570\u7ec4\u5185 \u4e58\u79ef\u5c0f\u4e8e \\(k\\) \u7684 \u8fde\u7eed\u7684\u5b50\u6570\u7ec4 \u7684\u4e2a\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/713/#1","text":"1 2 3 4 \u8f93\u5165: nums = [10,5,2,6], k = 100 \u8f93\u51fa: 8 \u89e3\u91ca: 8\u4e2a\u4e58\u79ef\u5c0f\u4e8e100\u7684\u5b50\u6570\u7ec4\u5206\u522b\u4e3a: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f [10,5,2] \u5e76\u4e0d\u662f\u4e58\u79ef\u5c0f\u4e8e100\u7684\u5b50\u6570\u7ec4\u3002","title":"\u793a\u4f8b 1:"},{"location":"algorithm/leetcode/713/#2","text":"1 2 \u8f93\u5165: nums = [1,2,3], k = 0 \u8f93\u51fa: 0","title":"\u793a\u4f8b 2:"},{"location":"algorithm/leetcode/713/#_2","text":"\\(1 \\le nums.length \\le 3 * 10^4\\) \\(1 \\le nums[i] \\le 1000\\) \\(0 \\le k \\le 10^6\\)","title":"\u63d0\u793a:"},{"location":"algorithm/leetcode/713/#_3","text":"","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/leetcode/713/#on","text":"\u6211\u4eec\u53ef\u4ee5\u5728\u6570\u7ec4\u5185\u8bbe\u7f6e\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(right\\) \uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 \\(left\\) \uff0c\u6ee1\u8db3 \\[\\prod_{i=left}^{right} nums[i] < k\\] \u7531\u4e8e\u5f53 \\(left\\) \u589e\u52a0\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u4e58\u79ef\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u7b97\u6cd5\uff0c\u5355\u8c03\u79fb\u52a8 \\(left\\) \u3002 \u6211\u4eec\u4e00\u91cd\u5faa\u73af\u679a\u4e3e\u6bcf\u4e2a \\(right\\) \uff0c\u540c\u65f6 \\(left\\) \u5355\u8c03\u589e\u52a0\u3002 \u5728\u5faa\u73af\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u5148\u5c06\u4e58\u79ef\u4e58\u4ee5 \\(nums[right]\\) \u3002 \u6b64\u65f6\u9700\u8981\u5411\u53f3\u79fb\u52a8 \\(left\\) \uff0c\u76f4\u5230\u6ee1\u8db3\u4e58\u79ef\u5c0f\u4e8e \\(k\\) \u7684\u6761\u4ef6\u3002 \u5728\u6bcf\u6b21\u79fb\u52a8 \\(left\\) \u7684\u64cd\u4f5c\u4e2d\uff0c\u9700\u8981\u5c06\u4e58\u79ef\u9664\u4ee5 \\(nums[left]\\) \u3002 \u5f53 \\(left\\) \u79fb\u52a8\u5b8c\u6210\u540e\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684 \\(right\\) \uff0c\u5c31\u5305\u542b\u4e86 \\(right-left+1\\) \u4e2a\u4e58\u79ef\u5c0f\u4e8e \\(k\\) \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u3002 \u4e3a\u4ec0\u4e48\u662f \\(right-left+1\\) \uff1f\u8bbe \\(length=right-left+1\\) \u3002 \u5bf9\u4e8e\u6bcf\u4e2a \\(right\\) \uff0c\u8fde\u7eed\u6570\u7ec4\u533a\u95f4\u9700\u8981\u5305\u542b \\(nums[right]\\) \uff0c\u5373\uff1a \u533a\u95f4\u957f\u5ea6\u4e3a \\(1\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b \u533a\u95f4\u957f\u5ea6\u4e3a \\(2\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b \u533a\u95f4\u957f\u5ea6\u4e3a \\(3\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b ... \u533a\u95f4\u957f\u5ea6\u4e3a \\(length-1\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\uff1b \u533a\u95f4\u957f\u5ea6\u4e3a \\(length\\) \u7684\u8fde\u7eed\u6570\u7ec4\u4e2a\u6570\u4e3a \\(1\\) \u4e2a\u3002 \u53ef\u4ee5\u5f97\u51fa\uff0c\u6709 \\(length\\) \u4e2a \\(1\\) \uff0c\u6700\u7ec8\u4e2a\u6570\u4e3a \\(length\\) \uff0c\u5373 \\(right-left+1\\) \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u4e00\u91cd\u679a\u4e3e\u6240\u6709\u7684right\u7aef\u70b9\uff0c\u800cleft\u53ea\u9700\u8981\u79fb\u52a8n\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \u53ea\u4f1a\u7528\u5230\u5e38\u6570\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u4e3a \\(O(1)\\) \u3002","title":"\u53cc\u6307\u9488 &emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/713/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : int numSubarrayProductLessThanK ( vector < int >& nums , int k ) { if ( k <= 1 ) return 0 ; int res = 0 , t = 1 ; for ( int l = 0 , r = 0 ; r < nums . size (); r ++ ) { t *= nums [ r ]; while ( t >= k ) { t /= nums [ l ]; l ++ ; } res += r - l + 1 ; } return res ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/73/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a m x n \u7684\u77e9\u9635\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4e3a 0 \uff0c\u5219\u5c06\u5176\u6240\u5728\u884c\u548c\u5217\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a 0 \u3002\u8bf7\u4f7f\u7528 \u539f\u5730 \u7b97\u6cd5\u3002 \u793a\u4f8b 1\uff1a 1 2 \u8f93\u5165\uff1amatrix = [[1,1,1],[1,0,1],[1,1,1]] \u8f93\u51fa\uff1a[[1,0,1],[0,0,0],[1,0,1]] \u793a\u4f8b 2\uff1a 1 2 \u8f93\u5165\uff1amatrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] \u8f93\u51fa\uff1a[[0,0,0,0],[0,4,5,0],[0,3,1,0]] \u63d0\u793a\uff1a \\(m\\) \\(=\\) \\(matrix.length\\) \\(n\\) \\(=\\) \\(matrix[0].length\\) \\(1\\) \\(\u2264\\) \\(m, n\\) \\(\u2264\\) \\(200\\) \\(-2^{31}\\) \\(\u2264\\) \\(matrix[i][j]\\) \\(\u2264\\) \\(2^{31} - 1\\) \u8fdb\u9636\uff1a \u4e00\u4e2a\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 \\(O(mn)\\) \u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u6539\u8fdb\u65b9\u6848\u662f\u4f7f\u7528 \\(O(m + n)\\) \u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u4ec5\u4f7f\u7528\u5e38\u91cf\u7a7a\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f \u601d\u8def \u539f\u5730\u7b97\u6cd5 \\(O(nm)\\) \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u6807\u8bb0\u53d8\u91cf row0 , col0 \u5206\u522b\u8bb0\u5f55\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u662f\u5426\u5305\u542b0\u3002 \u9884\u5904\u7406\u51fa\u4e24\u4e2a\u53d8\u91cf\u8bb0\u5f55\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u662f\u5426\u67090\u3002 \u904d\u5386\u6574\u4e2a\u77e9\u9635\uff0c\u7528\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u8bb0\u5f55\u5bf9\u5e94\u7684\u884c\u548c\u5217\u662f\u5426\u67090\u3002 \u628a\u542b\u67090\u7684\u884c\u548c\u5217\u90fd\u7f6e\u62100\u3002 \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(mn)\\) \uff0c\u5176\u4e2d \\(m\\) \u662f\u77e9\u9635\u7684\u884c\u6570\uff0c \\(n\\) \u662f\u77e9\u9635\u7684\u5217\u6570\u3002\u6211\u4eec\u81f3\u591a\u53ea\u9700\u8981\u904d\u5386\u8be5\u77e9\u9635\u4e24\u6b21\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(1)\\) \u3002\u6211\u4eec\u53ea\u9700\u8981\u5e38\u6570\u7a7a\u95f4\u5b58\u50a8\u82e5\u5e72\u53d8\u91cf\u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 class Solution { public : void setZeroes ( vector < vector < int >>& matrix ) { int n = matrix . size (), m = matrix [ 0 ]. size (); bool col0 = false , row0 = false ; // find row-0 for ( int i = 0 ; i < m ; i ++ ) if ( ! matrix [ 0 ][ i ]) row0 = true ; // find col-0 for ( int i = 0 ; i < n ; i ++ ) if ( ! matrix [ i ][ 0 ]) col0 = true ; // find zero in matrix for ( int i = 1 ; i < n ; i ++ ) for ( int j = 1 ; j < m ; j ++ ) if ( ! matrix [ i ][ j ]) { matrix [ 0 ][ j ] = matrix [ i ][ 0 ] = 0 ; } // col -> 0 for ( int i = 1 ; i < m ; i ++ ) if ( ! matrix [ 0 ][ i ]) for ( int j = 1 ; j < n ; j ++ ) matrix [ j ][ i ] = 0 ; // row -> 0 for ( int i = 1 ; i < n ; i ++ ) if ( ! matrix [ i ][ 0 ]) for ( int j = 1 ; j < m ; j ++ ) matrix [ i ][ j ] = 0 ; // if row-0 has zero, transform all of row-0 to zero if ( row0 ) for ( int i = 0 ; i < m ; i ++ ) matrix [ 0 ][ i ] = 0 ; // if col-0 has zero, transform all of col-0 to zero if ( col0 ) for ( int i = 0 ; i < n ; i ++ ) matrix [ i ][ 0 ] = 0 ; } };","title":"73. \u77e9\u9635\u7f6e\u96f6"},{"location":"algorithm/leetcode/73/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a m x n \u7684\u77e9\u9635\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4e3a 0 \uff0c\u5219\u5c06\u5176\u6240\u5728\u884c\u548c\u5217\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a 0 \u3002\u8bf7\u4f7f\u7528 \u539f\u5730 \u7b97\u6cd5\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/73/#1","text":"1 2 \u8f93\u5165\uff1amatrix = [[1,1,1],[1,0,1],[1,1,1]] \u8f93\u51fa\uff1a[[1,0,1],[0,0,0],[1,0,1]]","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/73/#2","text":"1 2 \u8f93\u5165\uff1amatrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] \u8f93\u51fa\uff1a[[0,0,0,0],[0,4,5,0],[0,3,1,0]]","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/73/#_2","text":"\\(m\\) \\(=\\) \\(matrix.length\\) \\(n\\) \\(=\\) \\(matrix[0].length\\) \\(1\\) \\(\u2264\\) \\(m, n\\) \\(\u2264\\) \\(200\\) \\(-2^{31}\\) \\(\u2264\\) \\(matrix[i][j]\\) \\(\u2264\\) \\(2^{31} - 1\\)","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/73/#_3","text":"\u4e00\u4e2a\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 \\(O(mn)\\) \u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u6539\u8fdb\u65b9\u6848\u662f\u4f7f\u7528 \\(O(m + n)\\) \u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u4ec5\u4f7f\u7528\u5e38\u91cf\u7a7a\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f","title":"\u8fdb\u9636\uff1a"},{"location":"algorithm/leetcode/73/#_4","text":"","title":"\u601d\u8def"},{"location":"algorithm/leetcode/73/#onm","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u6807\u8bb0\u53d8\u91cf row0 , col0 \u5206\u522b\u8bb0\u5f55\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u662f\u5426\u5305\u542b0\u3002 \u9884\u5904\u7406\u51fa\u4e24\u4e2a\u53d8\u91cf\u8bb0\u5f55\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u662f\u5426\u67090\u3002 \u904d\u5386\u6574\u4e2a\u77e9\u9635\uff0c\u7528\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u8bb0\u5f55\u5bf9\u5e94\u7684\u884c\u548c\u5217\u662f\u5426\u67090\u3002 \u628a\u542b\u67090\u7684\u884c\u548c\u5217\u90fd\u7f6e\u62100\u3002","title":"\u539f\u5730\u7b97\u6cd5 \\(O(nm)\\)"},{"location":"algorithm/leetcode/73/#_5","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(mn)\\) \uff0c\u5176\u4e2d \\(m\\) \u662f\u77e9\u9635\u7684\u884c\u6570\uff0c \\(n\\) \u662f\u77e9\u9635\u7684\u5217\u6570\u3002\u6211\u4eec\u81f3\u591a\u53ea\u9700\u8981\u904d\u5386\u8be5\u77e9\u9635\u4e24\u6b21\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(1)\\) \u3002\u6211\u4eec\u53ea\u9700\u8981\u5e38\u6570\u7a7a\u95f4\u5b58\u50a8\u82e5\u5e72\u53d8\u91cf\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"algorithm/leetcode/73/#_6","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 class Solution { public : void setZeroes ( vector < vector < int >>& matrix ) { int n = matrix . size (), m = matrix [ 0 ]. size (); bool col0 = false , row0 = false ; // find row-0 for ( int i = 0 ; i < m ; i ++ ) if ( ! matrix [ 0 ][ i ]) row0 = true ; // find col-0 for ( int i = 0 ; i < n ; i ++ ) if ( ! matrix [ i ][ 0 ]) col0 = true ; // find zero in matrix for ( int i = 1 ; i < n ; i ++ ) for ( int j = 1 ; j < m ; j ++ ) if ( ! matrix [ i ][ j ]) { matrix [ 0 ][ j ] = matrix [ i ][ 0 ] = 0 ; } // col -> 0 for ( int i = 1 ; i < m ; i ++ ) if ( ! matrix [ 0 ][ i ]) for ( int j = 1 ; j < n ; j ++ ) matrix [ j ][ i ] = 0 ; // row -> 0 for ( int i = 1 ; i < n ; i ++ ) if ( ! matrix [ i ][ 0 ]) for ( int j = 1 ; j < m ; j ++ ) matrix [ i ][ j ] = 0 ; // if row-0 has zero, transform all of row-0 to zero if ( row0 ) for ( int i = 0 ; i < m ; i ++ ) matrix [ 0 ][ i ] = 0 ; // if col-0 has zero, transform all of col-0 to zero if ( col0 ) for ( int i = 0 ; i < n ; i ++ ) matrix [ i ][ 0 ] = 0 ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/leetcode/82/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868\u7684\u5934 \\(head\\) \uff0c \u5220\u9664\u539f\u59cb\u94fe\u8868\u4e2d\u6240\u6709\u91cd\u590d\u6570\u5b57\u7684\u8282\u70b9\uff0c\u53ea\u7559\u4e0b\u4e0d\u540c\u7684\u6570\u5b57 \u3002\u8fd4\u56de \u5df2\u6392\u5e8f\u7684\u94fe\u8868 \u3002 \u793a\u4f8b 1\uff1a 1 2 \u8f93\u5165\uff1ahead = [1,2,3,3,4,4,5] \u8f93\u51fa\uff1a[1,2,5] \u793a\u4f8b 2\uff1a 1 2 \u8f93\u5165\uff1ahead = [1,1,1,2,3] \u8f93\u51fa\uff1a[2,3] \u63d0\u793a\uff1a \u94fe\u8868\u4e2d\u8282\u70b9\u6570\u76ee\u5728\u8303\u56f4 \\([0, 300]\\) \u5185 \\(-100\\) \\(\u2264\\) \\(Node.val\\) \\(\u2264\\) \\(100\\) \u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u94fe\u8868\u5df2\u7ecf\u6309\u5347\u5e8f \u6392\u5217 \u7b97\u6cd5\u4e0e\u601d\u8def \u7ebf\u6027\u626b\u63cf \u2003 \\(O(n)\\) \u4e3a\u65b9\u4fbf\u5904\u7406\u8fb9\u754c\u95ee\u9898\uff0c\u5b9a\u4e49\u4e00\u4e2a\u865a\u62df\u5143\u7d20 \\(dummy\\) \u6307\u5411 \\(head\\) \u7ed3\u70b9\uff0c\u8d4b\u503c\u4e3a \\(0\\) \uff0c\u4fdd\u8bc1\u6574\u4e2a\u94fe\u8868\u4e3a\u5347\u5e8f\u3002 \u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\u63cf\u6574\u4e2a\u94fe\u8868\uff0c\u6bcf\u6b21\u626b\u63cf\u5143\u7d20\u76f8\u540c\u7684\u4e00\u6bb5\u3002\u82e5\u6b64\u6bb5\u5143\u7d20\u4e2a\u6570\u5927\u4e8e \\(1\\) \u4e2a\uff0c\u5c06\u6574\u6bb5\u5143\u7d20\u5220\u9664\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u6574\u4e2a\u94fe\u8868\u904d\u5386\u4e00\u904d\uff0c\u6574\u4e2a\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * deleteDuplicates ( ListNode * head ) { ListNode * dummy = new ListNode ( 0 ); dummy -> next = head ; ListNode * p = dummy ; while ( p -> next ) { ListNode * q = p -> next ; while ( q && q -> val == p -> next -> val ) q = q -> next ; if ( p -> next -> next == q ) p = p -> next ; else p -> next = q ; } return dummy -> next ; } };","title":"82. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II"},{"location":"algorithm/leetcode/82/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868\u7684\u5934 \\(head\\) \uff0c \u5220\u9664\u539f\u59cb\u94fe\u8868\u4e2d\u6240\u6709\u91cd\u590d\u6570\u5b57\u7684\u8282\u70b9\uff0c\u53ea\u7559\u4e0b\u4e0d\u540c\u7684\u6570\u5b57 \u3002\u8fd4\u56de \u5df2\u6392\u5e8f\u7684\u94fe\u8868 \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/leetcode/82/#1","text":"1 2 \u8f93\u5165\uff1ahead = [1,2,3,3,4,4,5] \u8f93\u51fa\uff1a[1,2,5]","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/leetcode/82/#2","text":"1 2 \u8f93\u5165\uff1ahead = [1,1,1,2,3] \u8f93\u51fa\uff1a[2,3]","title":"\u793a\u4f8b 2\uff1a"},{"location":"algorithm/leetcode/82/#_2","text":"\u94fe\u8868\u4e2d\u8282\u70b9\u6570\u76ee\u5728\u8303\u56f4 \\([0, 300]\\) \u5185 \\(-100\\) \\(\u2264\\) \\(Node.val\\) \\(\u2264\\) \\(100\\) \u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u94fe\u8868\u5df2\u7ecf\u6309\u5347\u5e8f \u6392\u5217","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/leetcode/82/#_3","text":"","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/leetcode/82/#on","text":"\u4e3a\u65b9\u4fbf\u5904\u7406\u8fb9\u754c\u95ee\u9898\uff0c\u5b9a\u4e49\u4e00\u4e2a\u865a\u62df\u5143\u7d20 \\(dummy\\) \u6307\u5411 \\(head\\) \u7ed3\u70b9\uff0c\u8d4b\u503c\u4e3a \\(0\\) \uff0c\u4fdd\u8bc1\u6574\u4e2a\u94fe\u8868\u4e3a\u5347\u5e8f\u3002 \u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\u63cf\u6574\u4e2a\u94fe\u8868\uff0c\u6bcf\u6b21\u626b\u63cf\u5143\u7d20\u76f8\u540c\u7684\u4e00\u6bb5\u3002\u82e5\u6b64\u6bb5\u5143\u7d20\u4e2a\u6570\u5927\u4e8e \\(1\\) \u4e2a\uff0c\u5c06\u6574\u6bb5\u5143\u7d20\u5220\u9664\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u6574\u4e2a\u94fe\u8868\u904d\u5386\u4e00\u904d\uff0c\u6574\u4e2a\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002","title":"\u7ebf\u6027\u626b\u63cf &emsp; \\(O(n)\\)"},{"location":"algorithm/leetcode/82/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * deleteDuplicates ( ListNode * head ) { ListNode * dummy = new ListNode ( 0 ); dummy -> next = head ; ListNode * p = dummy ; while ( p -> next ) { ListNode * q = p -> next ; while ( q && q -> val == p -> next -> val ) q = q -> next ; if ( p -> next -> next == q ) p = p -> next ; else p -> next = q ; } return dummy -> next ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/mst/17_21/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u76f4\u65b9\u56fe(\u4e5f\u79f0\u67f1\u72b6\u56fe)\uff0c\u5047\u8bbe\u6709\u4eba\u4ece\u4e0a\u9762\u6e90\u6e90\u4e0d\u65ad\u5730\u5012\u6c34\uff0c\u6700\u540e\u76f4\u65b9\u56fe\u80fd\u5b58\u591a\u5c11\u6c34\u91cf?\u76f4\u65b9\u56fe\u7684\u5bbd\u5ea6\u4e3a 1\u3002 \u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u76f4\u65b9\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u6c34\uff09\u3002 \u793a\u4f8b: 1 2 \u8f93\u5165: [0,1,0,2,1,0,1,3,2,1,2,1] \u8f93\u51fa: 6 \u7b97\u6cd5\u4e0e\u601d\u8def \u53cc\u6307\u9488 \u2003 \\(O(n)\\) \u5982\u679c\u53ef\u4ee5\u76db\u6c34\uff0c\u5219\u8981\u6c42\u5de6\u53f3\u4e24\u8fb9\u5747\u6709\u9ad8\u4e8e\u5f53\u524d\u67f1\u5b50\u7684\u67f1\u5b50\u3002 \u76db\u6c34\u91cf\u6839\u636e \u6728\u6876\u6548\u5e94 \u53d6\u51b3\u4e8e\u5de6\u53f3\u4e24\u8fb9\u8f83\u77ee\u7684\u90a3\u6839\u67f1\u5b50\u3002 \u5b9a\u4e49\u5f53\u524d\u67f1\u5b50\u9ad8\u5ea6\u4e3a \\(height[i]\\) \uff0c\u5de6\u8fb9\u6700\u9ad8\u7684\u67f1\u5b50\u4e3a \\(left[i]\\) \uff0c\u53f3\u8fb9\u6700\u9ad8\u67f1\u5b50\u4e3a \\(right[i]\\) \uff0c\u5219\u50a8\u6c34\u91cf\u4e3a \\(min(left[i], right[i]) - height[i]\\) \u3002 \u53ef\u4ee5\u4fdd\u8bc1\u7ed3\u679c\u4e0d\u4e3a\u8d1f\u6570\uff0c\u56e0\u4e3a \\(left[i]\\) \u4e0e \\(right[i]\\) \u59cb\u7ec8 \u5927\u4e8e\u6216\u7b49\u4e8e \u5f53\u524d\u67f1\u5b50 \\(height[i]\\) \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : int trap ( vector < int >& height ) { if ( height . empty ()) return 0 ; // \u82e5\u6ca1\u6709\u67f1\u5b50\uff0c\u8fd4\u56de0 int n = height . size (); vector < int > left ( n ), right ( n ); left [ 0 ] = height [ 0 ], right [ n - 1 ] = height [ n - 1 ]; for ( int i = 1 ; i < n ; i ++ ) left [ i ] = max ( left [ i - 1 ], height [ i ]); for ( int i = n - 2 ; i >= 0 ; i -- ) right [ i ] = max ( right [ i + 1 ], height [ i ]); int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) res += min ( left [ i ], right [ i ]) - height [ i ]; return res ; } };","title":"17.21. \u76f4\u65b9\u56fe\u7684\u6c34\u91cf"},{"location":"algorithm/mst/17_21/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u76f4\u65b9\u56fe(\u4e5f\u79f0\u67f1\u72b6\u56fe)\uff0c\u5047\u8bbe\u6709\u4eba\u4ece\u4e0a\u9762\u6e90\u6e90\u4e0d\u65ad\u5730\u5012\u6c34\uff0c\u6700\u540e\u76f4\u65b9\u56fe\u80fd\u5b58\u591a\u5c11\u6c34\u91cf?\u76f4\u65b9\u56fe\u7684\u5bbd\u5ea6\u4e3a 1\u3002 \u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u76f4\u65b9\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u6c34\uff09\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/mst/17_21/#_2","text":"1 2 \u8f93\u5165: [0,1,0,2,1,0,1,3,2,1,2,1] \u8f93\u51fa: 6","title":"\u793a\u4f8b:"},{"location":"algorithm/mst/17_21/#_3","text":"","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/mst/17_21/#on","text":"\u5982\u679c\u53ef\u4ee5\u76db\u6c34\uff0c\u5219\u8981\u6c42\u5de6\u53f3\u4e24\u8fb9\u5747\u6709\u9ad8\u4e8e\u5f53\u524d\u67f1\u5b50\u7684\u67f1\u5b50\u3002 \u76db\u6c34\u91cf\u6839\u636e \u6728\u6876\u6548\u5e94 \u53d6\u51b3\u4e8e\u5de6\u53f3\u4e24\u8fb9\u8f83\u77ee\u7684\u90a3\u6839\u67f1\u5b50\u3002 \u5b9a\u4e49\u5f53\u524d\u67f1\u5b50\u9ad8\u5ea6\u4e3a \\(height[i]\\) \uff0c\u5de6\u8fb9\u6700\u9ad8\u7684\u67f1\u5b50\u4e3a \\(left[i]\\) \uff0c\u53f3\u8fb9\u6700\u9ad8\u67f1\u5b50\u4e3a \\(right[i]\\) \uff0c\u5219\u50a8\u6c34\u91cf\u4e3a \\(min(left[i], right[i]) - height[i]\\) \u3002 \u53ef\u4ee5\u4fdd\u8bc1\u7ed3\u679c\u4e0d\u4e3a\u8d1f\u6570\uff0c\u56e0\u4e3a \\(left[i]\\) \u4e0e \\(right[i]\\) \u59cb\u7ec8 \u5927\u4e8e\u6216\u7b49\u4e8e \u5f53\u524d\u67f1\u5b50 \\(height[i]\\) \u3002","title":"\u53cc\u6307\u9488 &emsp; \\(O(n)\\)"},{"location":"algorithm/mst/17_21/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : int trap ( vector < int >& height ) { if ( height . empty ()) return 0 ; // \u82e5\u6ca1\u6709\u67f1\u5b50\uff0c\u8fd4\u56de0 int n = height . size (); vector < int > left ( n ), right ( n ); left [ 0 ] = height [ 0 ], right [ n - 1 ] = height [ n - 1 ]; for ( int i = 1 ; i < n ; i ++ ) left [ i ] = max ( left [ i - 1 ], height [ i ]); for ( int i = n - 2 ; i >= 0 ; i -- ) right [ i ] = max ( right [ i + 1 ], height [ i ]); int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) res += min ( left [ i ], right [ i ]) - height [ i ]; return res ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/offer/24/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u53cd\u8f6c\u8be5\u94fe\u8868\u5e76\u8f93\u51fa\u53cd\u8f6c\u540e\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002 \u793a\u4f8b: 1 2 \u8f93\u5165: 1->2->3->4->5->NULL \u8f93\u51fa: 5->4->3->2->1->NULL \u9650\u5236\uff1a \\(0\\) \\(\u2264\\) \u8282\u70b9\u4e2a\u6570 \\(\u2264\\) \\(5000\\) \u904d\u5386 \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(1)\\) \u5b9a\u4e49\u524d\u9a71\u7ed3\u70b9\u4e3a pre \uff0c\u5f53\u524d\u7ed3\u70b9\u4e3a cur \uff0c\u7531\u4e8e\u6bcf\u6b21\u53cd\u8f6c\u9700\u8981\u628a\u5f53\u524d\u7ed3\u70b9\u7684 next\u6307\u9488 \u6307\u5411\u524d\u9a71\u7ed3\u70b9 pre \uff0c\u6240\u4ee5\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a next \u7528\u6765\u5b58\u50a8\u5f53\u524d\u7ed3\u70b9\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002 \u53cd\u8f6c\u64cd\u4f5c\uff1a \u628a\u5f53\u524d\u7ed3\u70b9\u7684 next \u6307\u9488\u6307\u5411 \u524d\u9a71\u7ed3\u70b9 \uff1b \u628a\u524d\u9a71\u7ed3\u70b9 pre \u79fb\u5230\u5f53\u524d\u7ed3\u70b9 cur \u4e0a\uff1b \u628a\u5f53\u524d\u7ed3\u70b9 cur \u79fb\u5230\u4e4b\u524d\u5b9a\u4e49\u7684 next \u7ed3\u70b9\u5904\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { ListNode * pre = nullptr ; ListNode * cur = head ; while ( cur ) { ListNode * next = cur -> next ; cur -> next = pre ; pre = cur ; cur = next ; } return pre ; } }; \u9012\u5f52 \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u5b9a\u4e49 tail \u7ed3\u70b9\u4e3a reverseList(head) \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5f53\u6ca1\u6709 next \u7ed3\u70b9\u65f6\uff0c\u8fd4\u56de head \u7ed3\u70b9\u3002 \u5426\u5219\uff0c\u5c06\u5f53\u524d\u7ed3\u70b9\u7684 next \u7ed3\u70b9\u7684 next \u6307\u5411\u5f53\u524d head \u7ed3\u70b9\uff0c head->next \u7f6e\u4e3a\u7a7a\u6307\u9488 nullptr \u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; ListNode * tail = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return tail ; } };","title":"24. \u53cd\u8f6c\u94fe\u8868"},{"location":"algorithm/offer/24/#_1","text":"\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u53cd\u8f6c\u8be5\u94fe\u8868\u5e76\u8f93\u51fa\u53cd\u8f6c\u540e\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/offer/24/#_2","text":"1 2 \u8f93\u5165: 1->2->3->4->5->NULL \u8f93\u51fa: 5->4->3->2->1->NULL","title":"\u793a\u4f8b:"},{"location":"algorithm/offer/24/#_3","text":"\\(0\\) \\(\u2264\\) \u8282\u70b9\u4e2a\u6570 \\(\u2264\\) \\(5000\\)","title":"\u9650\u5236\uff1a"},{"location":"algorithm/offer/24/#_4","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(1)\\) \u5b9a\u4e49\u524d\u9a71\u7ed3\u70b9\u4e3a pre \uff0c\u5f53\u524d\u7ed3\u70b9\u4e3a cur \uff0c\u7531\u4e8e\u6bcf\u6b21\u53cd\u8f6c\u9700\u8981\u628a\u5f53\u524d\u7ed3\u70b9\u7684 next\u6307\u9488 \u6307\u5411\u524d\u9a71\u7ed3\u70b9 pre \uff0c\u6240\u4ee5\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a next \u7528\u6765\u5b58\u50a8\u5f53\u524d\u7ed3\u70b9\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002 \u53cd\u8f6c\u64cd\u4f5c\uff1a \u628a\u5f53\u524d\u7ed3\u70b9\u7684 next \u6307\u9488\u6307\u5411 \u524d\u9a71\u7ed3\u70b9 \uff1b \u628a\u524d\u9a71\u7ed3\u70b9 pre \u79fb\u5230\u5f53\u524d\u7ed3\u70b9 cur \u4e0a\uff1b \u628a\u5f53\u524d\u7ed3\u70b9 cur \u79fb\u5230\u4e4b\u524d\u5b9a\u4e49\u7684 next \u7ed3\u70b9\u5904\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { ListNode * pre = nullptr ; ListNode * cur = head ; while ( cur ) { ListNode * next = cur -> next ; cur -> next = pre ; pre = cur ; cur = next ; } return pre ; } };","title":"\u904d\u5386"},{"location":"algorithm/offer/24/#_5","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u2003\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u5b9a\u4e49 tail \u7ed3\u70b9\u4e3a reverseList(head) \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5f53\u6ca1\u6709 next \u7ed3\u70b9\u65f6\uff0c\u8fd4\u56de head \u7ed3\u70b9\u3002 \u5426\u5219\uff0c\u5c06\u5f53\u524d\u7ed3\u70b9\u7684 next \u7ed3\u70b9\u7684 next \u6307\u5411\u5f53\u524d head \u7ed3\u70b9\uff0c head->next \u7f6e\u4e3a\u7a7a\u6307\u9488 nullptr \u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; ListNode * tail = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return tail ; } };","title":"\u9012\u5f52"},{"location":"algorithm/offer/25/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u8f93\u5165\u4e24\u4e2a\u9012\u589e\u6392\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u8fd9\u4e24\u4e2a\u94fe\u8868\u5e76\u4f7f\u65b0\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u4ecd\u7136\u662f\u9012\u589e\u6392\u5e8f\u7684\u3002 \u793a\u4f8b1\uff1a 1 2 \u8f93\u5165\uff1a1->2->4, 1->3->4 \u8f93\u51fa\uff1a1->1->2->3->4->4 \u9650\u5236\uff1a \\(0\\) \\(\u2264\\) \u94fe\u8868\u957f\u5ea6 \\(\u2264\\) \\(1000\\) \u7b97\u6cd5\u548c\u601d\u8def \u4e8c\u8def\u5f52\u5e76 \u2003 \\(O(n)\\) \u65b0\u5efa\u5934\u90e8\u7684\u4fdd\u62a4\u7ed3\u70b9 \\(dummy\\) \uff0c\u8bbe\u7f6e \\(cur\\) \u6307\u9488\u6307\u5411 \\(dummy\\) \u3002 \u82e5\u5f53\u524d \\(l1\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u6bd4 \\(l2\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u5c0f\uff0c\u5219\u4ee4 \\(cur\\) \u7684 \\(next\\) \u6307\u9488\u6307\u5411 \\(l1\\) \uff0c\u4e14 \\(l1\\) \u540e\u79fb\uff1b\u5426\u5219\u6307\u5411 \\(l2\\) \uff0c\u4e14 \\(l2\\) \u540e\u79fb\u3002 \u7136\u540e \\(cur\\) \u6307\u9488\u6309\u7167\u4e0a\u4e00\u90e8\u8bbe\u7f6e\u597d\u7684\u4f4d\u7f6e\u540e\u79fb\u3002 \u5faa\u73af\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230 \\(l1\\) \u6216 \\(l2\\) \u4e3a\u7a7a\u3002 \u5c06\u5269\u4f59\u7684 \\(l1\\) \u6216 \\(l2\\) \u63a5\u5230 \\(cur\\) \u6307\u9488\u540e\u8fb9\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u4e24\u4e2a\u94fe\u8868\u5404\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002 \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * mergeTwoLists ( ListNode * l1 , ListNode * l2 ) { ListNode * dummy = new ListNode ( 0 ); ListNode * cur = dummy ; while ( l1 != NULL && l2 != NULL ) { if ( l1 -> val < l2 -> val ) { cur -> next = l1 ; l1 = l1 -> next ; } else { cur -> next = l2 ; l2 = l2 -> next ; } cur = cur -> next ; } cur -> next = ( l1 == NULL ? l2 : l1 ); return dummy -> next ; } };","title":"25. \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868"},{"location":"algorithm/offer/25/#_1","text":"\u8f93\u5165\u4e24\u4e2a\u9012\u589e\u6392\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u8fd9\u4e24\u4e2a\u94fe\u8868\u5e76\u4f7f\u65b0\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u4ecd\u7136\u662f\u9012\u589e\u6392\u5e8f\u7684\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/offer/25/#1","text":"1 2 \u8f93\u5165\uff1a1->2->4, 1->3->4 \u8f93\u51fa\uff1a1->1->2->3->4->4","title":"\u793a\u4f8b1\uff1a"},{"location":"algorithm/offer/25/#_2","text":"\\(0\\) \\(\u2264\\) \u94fe\u8868\u957f\u5ea6 \\(\u2264\\) \\(1000\\)","title":"\u9650\u5236\uff1a"},{"location":"algorithm/offer/25/#_3","text":"","title":"\u7b97\u6cd5\u548c\u601d\u8def"},{"location":"algorithm/offer/25/#on","text":"\u65b0\u5efa\u5934\u90e8\u7684\u4fdd\u62a4\u7ed3\u70b9 \\(dummy\\) \uff0c\u8bbe\u7f6e \\(cur\\) \u6307\u9488\u6307\u5411 \\(dummy\\) \u3002 \u82e5\u5f53\u524d \\(l1\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u6bd4 \\(l2\\) \u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u7684\u503c \\(val\\) \u5c0f\uff0c\u5219\u4ee4 \\(cur\\) \u7684 \\(next\\) \u6307\u9488\u6307\u5411 \\(l1\\) \uff0c\u4e14 \\(l1\\) \u540e\u79fb\uff1b\u5426\u5219\u6307\u5411 \\(l2\\) \uff0c\u4e14 \\(l2\\) \u540e\u79fb\u3002 \u7136\u540e \\(cur\\) \u6307\u9488\u6309\u7167\u4e0a\u4e00\u90e8\u8bbe\u7f6e\u597d\u7684\u4f4d\u7f6e\u540e\u79fb\u3002 \u5faa\u73af\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230 \\(l1\\) \u6216 \\(l2\\) \u4e3a\u7a7a\u3002 \u5c06\u5269\u4f59\u7684 \\(l1\\) \u6216 \\(l2\\) \u63a5\u5230 \\(cur\\) \u6307\u9488\u540e\u8fb9\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u4e24\u4e2a\u94fe\u8868\u5404\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002","title":"\u4e8c\u8def\u5f52\u5e76 &emsp; \\(O(n)\\)"},{"location":"algorithm/offer/25/#_4","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * mergeTwoLists ( ListNode * l1 , ListNode * l2 ) { ListNode * dummy = new ListNode ( 0 ); ListNode * cur = dummy ; while ( l1 != NULL && l2 != NULL ) { if ( l1 -> val < l2 -> val ) { cur -> next = l1 ; l1 = l1 -> next ; } else { cur -> next = l2 ; l2 = l2 -> next ; } cur = cur -> next ; } cur -> next = ( l1 == NULL ? l2 : l1 ); return dummy -> next ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/offer/3/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0\uff1a \u627e\u51fa\u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57\u3002 \u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 nums \u91cc\u7684\u6240\u6709\u6570\u5b57\u90fd\u5728 0\uff5en-1 \u7684\u8303\u56f4\u5185\u3002\u6570\u7ec4\u4e2d\u67d0\u4e9b\u6570\u5b57\u662f\u91cd\u590d\u7684\uff0c\u4f46\u4e0d\u77e5\u9053\u6709\u51e0\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u4e5f\u4e0d\u77e5\u9053\u6bcf\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\u51e0\u6b21\u3002\u8bf7\u627e\u51fa\u6570\u7ec4\u4e2d\u4efb\u610f\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u5b57\u3002 \u793a\u4f8b 1\uff1a 1 2 3 \u8f93\u5165\uff1a [2, 3, 1, 0, 2, 5, 3] \u8f93\u51fa\uff1a2 \u6216 3 \u9650\u5236\uff1a \\(2\\) \\(\u2264\\) \\(n\\) \\(\u2264\\) \\(100000\\) \u601d\u8def\uff1a \u65b0\u5f00\u4e00\u4e2a\u96c6\u5408\u7528\u4e8e\u5b58\u50a8\u51fa\u73b0\u8fc7\u7684\u6570\uff0c\u904d\u5386\u8be5\u6570\u7ec4\uff0c\u6bcf\u6b21\u8bb0\u5f55\u5f53\u524d\u7684\u6570\uff0c\u5982\u679c\u5728\u8be5\u96c6\u5408\u5185\uff0c\u5373\u4e3a\u7b54\u6848\u3002 code: C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public : int findRepeatNumber ( vector < int >& nums ) { int n = nums . size (); unordered_set < int > S ; int res = -1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( S . count ( nums [ i ])) { res = nums [ i ]; break ; } S . insert ( nums [ i ]); } return res ; } };","title":"03. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57"},{"location":"algorithm/offer/3/#_1","text":"\u627e\u51fa\u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57\u3002 \u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 nums \u91cc\u7684\u6240\u6709\u6570\u5b57\u90fd\u5728 0\uff5en-1 \u7684\u8303\u56f4\u5185\u3002\u6570\u7ec4\u4e2d\u67d0\u4e9b\u6570\u5b57\u662f\u91cd\u590d\u7684\uff0c\u4f46\u4e0d\u77e5\u9053\u6709\u51e0\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u4e5f\u4e0d\u77e5\u9053\u6bcf\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\u51e0\u6b21\u3002\u8bf7\u627e\u51fa\u6570\u7ec4\u4e2d\u4efb\u610f\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u5b57\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"algorithm/offer/3/#1","text":"1 2 3 \u8f93\u5165\uff1a [2, 3, 1, 0, 2, 5, 3] \u8f93\u51fa\uff1a2 \u6216 3","title":"\u793a\u4f8b 1\uff1a"},{"location":"algorithm/offer/3/#_2","text":"\\(2\\) \\(\u2264\\) \\(n\\) \\(\u2264\\) \\(100000\\)","title":"\u9650\u5236\uff1a"},{"location":"algorithm/offer/3/#_3","text":"\u65b0\u5f00\u4e00\u4e2a\u96c6\u5408\u7528\u4e8e\u5b58\u50a8\u51fa\u73b0\u8fc7\u7684\u6570\uff0c\u904d\u5386\u8be5\u6570\u7ec4\uff0c\u6bcf\u6b21\u8bb0\u5f55\u5f53\u524d\u7684\u6570\uff0c\u5982\u679c\u5728\u8be5\u96c6\u5408\u5185\uff0c\u5373\u4e3a\u7b54\u6848\u3002","title":"\u601d\u8def\uff1a"},{"location":"algorithm/offer/3/#code","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public : int findRepeatNumber ( vector < int >& nums ) { int n = nums . size (); unordered_set < int > S ; int res = -1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( S . count ( nums [ i ])) { res = nums [ i ]; break ; } S . insert ( nums [ i ]); } return res ; } };","title":"code:"},{"location":"algorithm/offer/65/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6c42\u4e24\u4e2a\u6574\u6570\u4e4b\u548c\uff0c\u8981\u6c42\u5728\u51fd\u6570\u4f53\u5185\u4e0d\u5f97\u4f7f\u7528 \u201c+\u201d\u3001\u201c-\u201d\u3001\u201c*\u201d\u3001\u201c/\u201d \u56db\u5219\u8fd0\u7b97\u7b26\u53f7\u3002 \u793a\u4f8b: 1 2 \u8f93\u5165: a = 1, b = 1 \u8f93\u51fa: 2 \u63d0\u793a\uff1a \\(a\\) , \\(b\\) \u5747\u53ef\u80fd\u662f \u8d1f\u6570 \u6216 \\(0\\) \u7ed3\u679c\u4e0d\u4f1a\u6ea2\u51fa \\(32\\) \u4f4d\u6574\u6570 \u601d\u60f3 (\u5168\u52a0\u5668\u3001\u4f4d\u8fd0\u7b97) \u2003 \\(O(\\log n)\\) \u53c2\u8003\u5341\u8fdb\u5236\u52a0\u6cd5\uff1a \u5404\u4f4d\u76f8\u52a0\u4e0d\u8fdb\u4f4d\u8fd0\u7b97\uff0c\u5f97\u5230 sum \uff1b \u505a\u8fdb\u4f4d\u8fd0\u7b97\uff0c\u5f97\u5230 carry \uff1b sum \u548c carry \u76f8\u52a0\u3002 \u540c\u6837\u4e8c\u8fdb\u5236\u52a0\u6cd5\u4e5f\u662f\u5982\u6b64\u3002 \u4e24\u6570\u505a \u5f02\u6216\u8fd0\u7b97 ^ \uff0c\u5f97\u5230\u4e0d\u8fdb\u4f4d\u7684\u4e8c\u8fdb\u5236\u548c\uff1b \u4e24\u6570\u505a \u4e0e\u8fd0\u7b97 & \uff0c\u7136\u540e\u5de6\u79fb\u4e00\u4f4d\uff0c\u5f97\u5230\u8fdb\u4f4d\u7684\u8fd0\u7b97\u7ed3\u679c\uff1b \u628a \u4e0d\u8fdb\u4f4d\u4e8c\u8fdb\u5236\u548c \u4e0e \u8fdb\u4f4d\u8fd0\u7b97\u7ed3\u679c \u76f8\u52a0\u3002\u5373\u91cd\u590d \\(1\\) \u3001 \\(2\\) \u64cd\u4f5c\uff0c\u76f4\u5230\u8fdb\u4f4d\u4e3a \\(0\\) \u9000\u51fa\u3002 \u4ee5\u4e0a\u4fbf\u662f \u5168\u52a0\u5668 \u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 \u5168\u52a0\u5668\u793a\u610f\u56fe\uff1a \u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution { public : int add ( int a , int b ) { while ( b != 0 ) { int sum = a ^ b ; int carry = ( unsigned int )( a & b ) << 1 ; // C++ \u4e0d\u652f\u6301\u8d1f\u6570\u79fb\u4f4d\uff0cunsigned int \u8f6c\u5316\u6210\u65e0\u7b26\u53f7\u6570\u3002 a = sum , b = carry ; } return a ; } };","title":"65. \u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5"},{"location":"algorithm/offer/65/#_1","text":"\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6c42\u4e24\u4e2a\u6574\u6570\u4e4b\u548c\uff0c\u8981\u6c42\u5728\u51fd\u6570\u4f53\u5185\u4e0d\u5f97\u4f7f\u7528 \u201c+\u201d\u3001\u201c-\u201d\u3001\u201c*\u201d\u3001\u201c/\u201d \u56db\u5219\u8fd0\u7b97\u7b26\u53f7\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/offer/65/#_2","text":"1 2 \u8f93\u5165: a = 1, b = 1 \u8f93\u51fa: 2","title":"\u793a\u4f8b:"},{"location":"algorithm/offer/65/#_3","text":"\\(a\\) , \\(b\\) \u5747\u53ef\u80fd\u662f \u8d1f\u6570 \u6216 \\(0\\) \u7ed3\u679c\u4e0d\u4f1a\u6ea2\u51fa \\(32\\) \u4f4d\u6574\u6570","title":"\u63d0\u793a\uff1a"},{"location":"algorithm/offer/65/#_4","text":"","title":"\u601d\u60f3"},{"location":"algorithm/offer/65/#olog-n","text":"\u53c2\u8003\u5341\u8fdb\u5236\u52a0\u6cd5\uff1a \u5404\u4f4d\u76f8\u52a0\u4e0d\u8fdb\u4f4d\u8fd0\u7b97\uff0c\u5f97\u5230 sum \uff1b \u505a\u8fdb\u4f4d\u8fd0\u7b97\uff0c\u5f97\u5230 carry \uff1b sum \u548c carry \u76f8\u52a0\u3002 \u540c\u6837\u4e8c\u8fdb\u5236\u52a0\u6cd5\u4e5f\u662f\u5982\u6b64\u3002 \u4e24\u6570\u505a \u5f02\u6216\u8fd0\u7b97 ^ \uff0c\u5f97\u5230\u4e0d\u8fdb\u4f4d\u7684\u4e8c\u8fdb\u5236\u548c\uff1b \u4e24\u6570\u505a \u4e0e\u8fd0\u7b97 & \uff0c\u7136\u540e\u5de6\u79fb\u4e00\u4f4d\uff0c\u5f97\u5230\u8fdb\u4f4d\u7684\u8fd0\u7b97\u7ed3\u679c\uff1b \u628a \u4e0d\u8fdb\u4f4d\u4e8c\u8fdb\u5236\u548c \u4e0e \u8fdb\u4f4d\u8fd0\u7b97\u7ed3\u679c \u76f8\u52a0\u3002\u5373\u91cd\u590d \\(1\\) \u3001 \\(2\\) \u64cd\u4f5c\uff0c\u76f4\u5230\u8fdb\u4f4d\u4e3a \\(0\\) \u9000\u51fa\u3002 \u4ee5\u4e0a\u4fbf\u662f \u5168\u52a0\u5668 \u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 \u5168\u52a0\u5668\u793a\u610f\u56fe\uff1a","title":"(\u5168\u52a0\u5668\u3001\u4f4d\u8fd0\u7b97) &emsp; \\(O(\\log n)\\)"},{"location":"algorithm/offer/65/#_5","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution { public : int add ( int a , int b ) { while ( b != 0 ) { int sum = a ^ b ; int carry = ( unsigned int )( a & b ) << 1 ; // C++ \u4e0d\u652f\u6301\u8d1f\u6570\u79fb\u4f4d\uff0cunsigned int \u8f6c\u5316\u6210\u65e0\u7b26\u53f7\u6570\u3002 a = sum , b = carry ; } return a ; } };","title":"\u4ee3\u7801"},{"location":"algorithm/segmentTree/1/","text":"\u7ebf\u6bb5\u6811 \u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e00\u4e2a \u533a\u95f4 \u3002 \u7ebf\u6bb5\u6811\u5177\u6709\u552f\u4e00\u7684\u6839\u7ed3\u70b9\uff0c\u4ee3\u8868\u7684\u533a\u95f4\u662f\u6574\u4e2a\u7edf\u8ba1\u8303\u56f4\uff0c\u5982 \\([1,N]\\) \u3002 \u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u90fd\u4ee3\u8868\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(1\\) \u7684\u5143\u533a\u95f4 \\([x,x]\\) \u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u5185\u90e8\u7ed3\u70b9 \\([l,r]\\) \uff0c\u4ed6\u7684\u5de6\u5b50\u7ed3\u70b9\u662f \\([l,mid]\\) \uff0c\u53f3\u5b50\u7ed3\u70b9\u662f \\([mid+1,r]\\) \uff0c\u5176\u4e2d \\(mid=\u230a\\frac{l + r}{2}\u230b\\) \u3002 \u7ebf\u6bb5\u6811Tip \u7ebf\u6bb5\u6811\u662f\u4e00\u68f5\u975e\u5e38\u6f02\u4eae\u4e8c\u53c9\u6811\uff0c\uff08\u9664\u4e86\u6700\u540e\u4e00\u5c42\u5916\uff0c\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u5806\u7684\u601d\u60f3\u6765\u5b58\u6574\u68f5\u6811 \u7f16\u53f7 x \u7684\u7236\u8282\u70b9\uff1a \\(\u230a\\frac{x}{2}\u230b\\) \uff0c\u5e38\u4e66\u5199\u7684\u4ee3\u7801\uff1a x >> 1 \u7f16\u53f7 x \u7684\u5de6\u513f\u5b50\uff1a \\(2x\\) \uff0c\u5e38\u4e66\u5199\u7684\u4ee3\u7801\uff1a x << 1 \u7f16\u53f7 x \u7684\u53f3\u513f\u5b50\uff1a \\(2x+1\\) \uff0c\u5e38\u4e66\u5199\u7684\u4ee3\u7801\uff1a x << 1 | 1 \u7ebf\u6bb5\u6811\u7684\u4e0b\u4e00\u5c42\u90fd\u662f\u628a\u5f53\u524d\u5c42\u8fdb\u884c\u5e73\u5206 \\(mid=\u230a\\frac{l + r}{2}\u230b\\) \u5de6\u533a\u95f4\u4e3a \\([l,mid]\\) \u53f3\u533a\u95f4\u4e3a \\([mid+1,r]\\) \u6ce8\u610f\uff0c\u7ebf\u6bb5\u6811\u7684\u4e24\u4e2a\u5b50\u533a\u95f4\u662f\u4e0d\u5141\u8bb8\u76f8\u4ea4\u7684 \u8fd9\u4e5f\u51b3\u5b9a\u4e86\u8bb8\u591a\u9898\u7684\u5206\u5757\u8981\u8fdb\u884c\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u4f7f\u4e4b\u533a\u95f4\u4e0d\u80fd\u76f8\u4ea4 \u7ebf\u6bb5\u6811\u4e00\u822c\u5f00\u957f\u5ea6\u4e3a \\(4N\\) \u7684\u7a7a\u95f4 \u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u533a\u95f4\uff0c\u6700\u7ec8\u7684\u53f6\u7ed3\u70b9\uff0c\u4e3a \\(N\\) \u4e2a \u5148\u8003\u8651 \u7406\u60f3\u72b6\u6001 \u4e0b\uff08\u5305\u542b\u6700\u540e\u4e00\u5c42\uff0c\u6574\u4e2a\u4e8c\u53c9\u6811\u90fd\u662f\u6ee1\u4e8c\u53c9\u6811\uff09\uff0c \\(N\\) \u4e2a\u53f6\u7ed3\u70b9\u7684\u6ee1\u4e8c\u53c9\u6811\u6709 \\(N+\\frac{N}{2}+\\frac{N}4+\u22c5\u22c5\u22c5+2+1=2N\u22121\\) \u4e2a\u7ed3\u70b9\u3002 \u4f46\u662f\u7ebf\u6bb5\u6811\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0b\uff0c\u6700\u540e\u4e00\u5c42\u8fd8\u4f1a\u6709\u76c8\u4f59\uff0c \u6700\u574f\u60c5\u51b5\u4e0b \uff0c\u6700\u540e\u4e00\u5c42\u662f\u5012\u6570\u7b2c\u4e8c\u5c42\uff08\u4e5f\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811\u7684\u5012\u6570\u7b2c\u4e00\u5c42\uff09\u4e24\u500d\u7684\u70b9\uff0c\u6240\u4ee5\u6240\u4ee5\u4fdd\u5b58\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\u957f\u5ea6\u8981\u4e0d\u5c0f\u4e8e \\(4N\\) \u624d\u80fd\u4fdd\u8bc1\u4e0d\u4f1a\u8d8a\u754c \u7ebf\u6bb5\u6811\u7684\u6a21\u7248 pushup() \uff1a\u7531\u5b50\u7ed3\u70b9\u7684\u4fe1\u606f\u6765\u8ba1\u7b97\u7236\u7ed3\u70b9\u7684\u4fe1\u606f build() \uff1a\u5c06\u4e00\u6bb5\u533a\u95f4\u521d\u59cb\u5316\u4e3a\u7ebf\u6bb5\u6811 modify() \uff1a\u4fee\u6539 \u5355\u70b9\u4fee\u6539\uff08easy\uff09 \u533a\u95f4\u4fee\u6539\uff08hard\uff09\uff1a\u7528\u5230 pushdown \u64cd\u4f5c\uff0c\u61d2\u6807\u8bb0\u601d\u60f3 query() \uff1a\u533a\u95f4\u8be2\u95ee\uff08\u4f8b\u5982\uff1a\u67e5\u8be2 \\([a,b]\\) \u533a\u95f4\uff09 \\(O(log\u2061n)\\) \u6700\u591a\u662f \\(4log\u2061n\\) \u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u6700\u574f\u6709\u4e24\u6761\u94fe \\([l,r]\u2283[T_l,T_r]\\) \uff0c\u76f4\u63a5\u8fd4\u56de \\([l,r]\u2229[T_l,T_r]\u2260\u2205\\) \uff0c\u9012\u5f52\u4e0b\u53bb \\(l\u2264T_l\u2264r\u2264T_r\\) \uff1a \\(r\u2264T_{mid}\\) \uff1a\u53ea\u9012\u5f52\u5de6\u534a\u8fb9 \\(T_{mid}<r\\) \uff1a\u9012\u5f52\u5de6\u534a\u8fb9 + \u9012\u5f52\u53f3\u534a\u8fb9\uff08\u4f46\u53f3\u5b50\u6811\u5b8c\u5168\u5305\u542b\uff0c\u53ea\u9012\u5f52\u4e00\u5c42\u5c31\u8fd4\u56de\u4e86\uff09 \\(T_l\u2264l\u2264T_r\u2264r\\) \uff1a \\(l\u2265T_{mid}\\) \uff1a\u53ea\u9012\u5f52\u53f3\u534a\u8fb9 \\(T_{mid}>l\\) \uff1a\u9012\u5f52\u53f3\u534a\u8fb9 + \u9012\u5f52\u5de6\u534a\u8fb9\uff08\u4f46\u5de6\u5b50\u6811\u5b8c\u5168\u5305\u542b\uff0c\u53ea\u9012\u5f52\u4e00\u5c42\u5c31\u8fd4\u56de\u4e86\uff09 \\(T_l\u2264l\u2264r\u2264T_r\\) \uff1a \\(r\u2264T_{mid}\\) \uff1a\u53ea\u9012\u5f52\u5de6\u534a\u8fb9 \\(T_{mid}<l\\) \uff1a\u53ea\u9012\u5f52\u53f3\u534a\u8fb9 \\(l\u2264T_{mid}<r\\) \uff1a\u9012\u5f52\u5de6\u534a\u8fb9 + \u9012\u5f52\u53f3\u534a\u8fb9 \\([l,r]\u2229[T_l,T_r]=\u2205\\) \uff0c\u4e0d\u5b58\u5728\u8fd9\u79cd\u53ef\u80fd\uff0c\u56e0\u4e3a\u521d\u59cb\u533a\u95f4\u5305\u542b\u4e86\u5408\u6cd5\u7684\u6240\u6709\u8303\u56f4\u3002","title":"\u7ebf\u6bb5\u6811\u7b80\u4ecb"},{"location":"algorithm/segmentTree/1/#_1","text":"\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e00\u4e2a \u533a\u95f4 \u3002 \u7ebf\u6bb5\u6811\u5177\u6709\u552f\u4e00\u7684\u6839\u7ed3\u70b9\uff0c\u4ee3\u8868\u7684\u533a\u95f4\u662f\u6574\u4e2a\u7edf\u8ba1\u8303\u56f4\uff0c\u5982 \\([1,N]\\) \u3002 \u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u90fd\u4ee3\u8868\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(1\\) \u7684\u5143\u533a\u95f4 \\([x,x]\\) \u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u5185\u90e8\u7ed3\u70b9 \\([l,r]\\) \uff0c\u4ed6\u7684\u5de6\u5b50\u7ed3\u70b9\u662f \\([l,mid]\\) \uff0c\u53f3\u5b50\u7ed3\u70b9\u662f \\([mid+1,r]\\) \uff0c\u5176\u4e2d \\(mid=\u230a\\frac{l + r}{2}\u230b\\) \u3002","title":"\u7ebf\u6bb5\u6811"},{"location":"algorithm/segmentTree/1/#tip","text":"\u7ebf\u6bb5\u6811\u662f\u4e00\u68f5\u975e\u5e38\u6f02\u4eae\u4e8c\u53c9\u6811\uff0c\uff08\u9664\u4e86\u6700\u540e\u4e00\u5c42\u5916\uff0c\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u5806\u7684\u601d\u60f3\u6765\u5b58\u6574\u68f5\u6811 \u7f16\u53f7 x \u7684\u7236\u8282\u70b9\uff1a \\(\u230a\\frac{x}{2}\u230b\\) \uff0c\u5e38\u4e66\u5199\u7684\u4ee3\u7801\uff1a x >> 1 \u7f16\u53f7 x \u7684\u5de6\u513f\u5b50\uff1a \\(2x\\) \uff0c\u5e38\u4e66\u5199\u7684\u4ee3\u7801\uff1a x << 1 \u7f16\u53f7 x \u7684\u53f3\u513f\u5b50\uff1a \\(2x+1\\) \uff0c\u5e38\u4e66\u5199\u7684\u4ee3\u7801\uff1a x << 1 | 1 \u7ebf\u6bb5\u6811\u7684\u4e0b\u4e00\u5c42\u90fd\u662f\u628a\u5f53\u524d\u5c42\u8fdb\u884c\u5e73\u5206 \\(mid=\u230a\\frac{l + r}{2}\u230b\\) \u5de6\u533a\u95f4\u4e3a \\([l,mid]\\) \u53f3\u533a\u95f4\u4e3a \\([mid+1,r]\\) \u6ce8\u610f\uff0c\u7ebf\u6bb5\u6811\u7684\u4e24\u4e2a\u5b50\u533a\u95f4\u662f\u4e0d\u5141\u8bb8\u76f8\u4ea4\u7684 \u8fd9\u4e5f\u51b3\u5b9a\u4e86\u8bb8\u591a\u9898\u7684\u5206\u5757\u8981\u8fdb\u884c\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u4f7f\u4e4b\u533a\u95f4\u4e0d\u80fd\u76f8\u4ea4 \u7ebf\u6bb5\u6811\u4e00\u822c\u5f00\u957f\u5ea6\u4e3a \\(4N\\) \u7684\u7a7a\u95f4 \u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u533a\u95f4\uff0c\u6700\u7ec8\u7684\u53f6\u7ed3\u70b9\uff0c\u4e3a \\(N\\) \u4e2a \u5148\u8003\u8651 \u7406\u60f3\u72b6\u6001 \u4e0b\uff08\u5305\u542b\u6700\u540e\u4e00\u5c42\uff0c\u6574\u4e2a\u4e8c\u53c9\u6811\u90fd\u662f\u6ee1\u4e8c\u53c9\u6811\uff09\uff0c \\(N\\) \u4e2a\u53f6\u7ed3\u70b9\u7684\u6ee1\u4e8c\u53c9\u6811\u6709 \\(N+\\frac{N}{2}+\\frac{N}4+\u22c5\u22c5\u22c5+2+1=2N\u22121\\) \u4e2a\u7ed3\u70b9\u3002 \u4f46\u662f\u7ebf\u6bb5\u6811\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0b\uff0c\u6700\u540e\u4e00\u5c42\u8fd8\u4f1a\u6709\u76c8\u4f59\uff0c \u6700\u574f\u60c5\u51b5\u4e0b \uff0c\u6700\u540e\u4e00\u5c42\u662f\u5012\u6570\u7b2c\u4e8c\u5c42\uff08\u4e5f\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811\u7684\u5012\u6570\u7b2c\u4e00\u5c42\uff09\u4e24\u500d\u7684\u70b9\uff0c\u6240\u4ee5\u6240\u4ee5\u4fdd\u5b58\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\u957f\u5ea6\u8981\u4e0d\u5c0f\u4e8e \\(4N\\) \u624d\u80fd\u4fdd\u8bc1\u4e0d\u4f1a\u8d8a\u754c","title":"\u7ebf\u6bb5\u6811Tip"},{"location":"algorithm/segmentTree/1/#_2","text":"pushup() \uff1a\u7531\u5b50\u7ed3\u70b9\u7684\u4fe1\u606f\u6765\u8ba1\u7b97\u7236\u7ed3\u70b9\u7684\u4fe1\u606f build() \uff1a\u5c06\u4e00\u6bb5\u533a\u95f4\u521d\u59cb\u5316\u4e3a\u7ebf\u6bb5\u6811 modify() \uff1a\u4fee\u6539 \u5355\u70b9\u4fee\u6539\uff08easy\uff09 \u533a\u95f4\u4fee\u6539\uff08hard\uff09\uff1a\u7528\u5230 pushdown \u64cd\u4f5c\uff0c\u61d2\u6807\u8bb0\u601d\u60f3 query() \uff1a\u533a\u95f4\u8be2\u95ee\uff08\u4f8b\u5982\uff1a\u67e5\u8be2 \\([a,b]\\) \u533a\u95f4\uff09 \\(O(log\u2061n)\\) \u6700\u591a\u662f \\(4log\u2061n\\) \u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u6700\u574f\u6709\u4e24\u6761\u94fe \\([l,r]\u2283[T_l,T_r]\\) \uff0c\u76f4\u63a5\u8fd4\u56de \\([l,r]\u2229[T_l,T_r]\u2260\u2205\\) \uff0c\u9012\u5f52\u4e0b\u53bb \\(l\u2264T_l\u2264r\u2264T_r\\) \uff1a \\(r\u2264T_{mid}\\) \uff1a\u53ea\u9012\u5f52\u5de6\u534a\u8fb9 \\(T_{mid}<r\\) \uff1a\u9012\u5f52\u5de6\u534a\u8fb9 + \u9012\u5f52\u53f3\u534a\u8fb9\uff08\u4f46\u53f3\u5b50\u6811\u5b8c\u5168\u5305\u542b\uff0c\u53ea\u9012\u5f52\u4e00\u5c42\u5c31\u8fd4\u56de\u4e86\uff09 \\(T_l\u2264l\u2264T_r\u2264r\\) \uff1a \\(l\u2265T_{mid}\\) \uff1a\u53ea\u9012\u5f52\u53f3\u534a\u8fb9 \\(T_{mid}>l\\) \uff1a\u9012\u5f52\u53f3\u534a\u8fb9 + \u9012\u5f52\u5de6\u534a\u8fb9\uff08\u4f46\u5de6\u5b50\u6811\u5b8c\u5168\u5305\u542b\uff0c\u53ea\u9012\u5f52\u4e00\u5c42\u5c31\u8fd4\u56de\u4e86\uff09 \\(T_l\u2264l\u2264r\u2264T_r\\) \uff1a \\(r\u2264T_{mid}\\) \uff1a\u53ea\u9012\u5f52\u5de6\u534a\u8fb9 \\(T_{mid}<l\\) \uff1a\u53ea\u9012\u5f52\u53f3\u534a\u8fb9 \\(l\u2264T_{mid}<r\\) \uff1a\u9012\u5f52\u5de6\u534a\u8fb9 + \u9012\u5f52\u53f3\u534a\u8fb9 \\([l,r]\u2229[T_l,T_r]=\u2205\\) \uff0c\u4e0d\u5b58\u5728\u8fd9\u79cd\u53ef\u80fd\uff0c\u56e0\u4e3a\u521d\u59cb\u533a\u95f4\u5305\u542b\u4e86\u5408\u6cd5\u7684\u6240\u6709\u8303\u56f4\u3002","title":"\u7ebf\u6bb5\u6811\u7684\u6a21\u7248"},{"location":"algorithm/segmentTree/2/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u7b80\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u5217 \\(a_1,a_2,\u2026,a_n\\) \uff0c\u6bcf\u4e00\u4e2a\u6570\u90fd\u5728 \\(0\u223cp\u22121\\) \u4e4b\u95f4\u3002 \u53ef\u4ee5\u5bf9\u8fd9\u5217\u6570\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a \u6dfb\u52a0\u64cd\u4f5c\uff1a\u5411\u5e8f\u5217\u540e\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u5e8f\u5217\u957f\u5ea6\u53d8\u6210 \\(n+1\\) \uff1b \u8be2\u95ee\u64cd\u4f5c\uff1a\u8be2\u95ee\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6700\u540e \\(L\\) \u4e2a\u6570\u4e2d\u6700\u5927\u7684\u6570\u662f\u591a\u5c11\u3002 \u7a0b\u5e8f\u8fd0\u884c\u7684\u6700\u5f00\u59cb\uff0c\u6574\u6570\u5e8f\u5217\u4e3a\u7a7a\u3002 \u4e00\u5171\u8981\u5bf9\u6574\u6570\u5e8f\u5217\u8fdb\u884c \\(m\\) \u6b21\u64cd\u4f5c\u3002 \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u64cd\u4f5c\u7684\u5e8f\u5217\uff0c\u5e76\u8f93\u51fa\u8be2\u95ee\u64cd\u4f5c\u7684\u7b54\u6848\u3002 \u5176\u4ed6\u8981\u6c42 \u8be6\u60c5\u8bf7\u89c1 \u539f\u9898 \u7b97\u6cd5\u4e0e\u601d\u8def \u2003 \u7ebf\u6bb5\u6811 \u9996\u5148\uff0c\u786e\u5b9a\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u5305\u542b\u7684\u4fe1\u606f\u3002\u9898\u76ee\u8981\u6c42\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u8282\u70b9\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u6570 \\(v\\) \u6765\u8868\u793a\u6700\u5927\u503c\u3002 1 2 3 4 struct node { int l , r ; int v ; // \u533a\u95f4[l, r]\u7684\u6700\u5927\u503c } tr [ N * 4 ]; \u73b0\u5728\u9700\u8981\u8003\u8651\uff0c\u5982\u679c\u8282\u70b9\u4ec5\u5305\u542b \\(v\\) \uff0c\u7236\u8282\u70b9\u662f\u5426\u80fd\u4ece\u5de6\u53f3\u5b50\u8282\u70b9\u4e2d\u5f97\u51fa\u7b54\u6848\uff1f\u5373\u5f97\u51fa\u5f53\u524d\u8282\u70b9\u7684\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002 \u7b54\u6848\u662f \u53ef\u4ee5 \u7684\u3002\u8bbe\u5f53\u524d\u7236\u8282\u70b9\u7684\u533a\u95f4\u4e3a \\([l, r]\\) \uff0c\u5219\u5de6\u513f\u5b50\u8282\u70b9\u7684\u533a\u95f4\u4e3a \\([l, mid]\\) \uff0c\u53f3\u513f\u5b50\u8282\u70b9\u533a\u95f4\u4e3a \\([mid + 1, r]\\) \uff0c\u5176\u4e2d \\(mid=\u230a\\frac{l + r}{2}\u230b\\) \u3002\u90a3\u4e48\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u5f97\u51fa\uff0c\u7236\u8282\u70b9\u7684\u6700\u5927\u503c \u5fc5\u7136\u4e00\u5b9a \u5b58\u5728\u4e8e\u533a\u95f4 \\([l, r]\\) \u4e2d\uff0c\u800c\u5de6\u53f3\u513f\u5b50\u8282\u70b9\u6240\u5728\u533a\u95f4 \\([l, mid]\\) \u548c \\([mid + 1, r]\\) \u6b63\u597d \u4e0d\u91cd\u4e0d\u6f0f \u7684\u8986\u76d6\u4f4f\u4e86\u7236\u8282\u70b9\u533a\u95f4\uff0c\u56e0\u6b64 \u7236\u8282\u70b9\u533a\u95f4\u5185\u6700\u5927\u503c= \\(max\\) (\u5de6\u513f\u5b50\u8282\u70b9\u533a\u95f4\u5185\u6700\u5927\u503c, \u53f3\u513f\u5b50\u533a\u95f4\u5185\u6700\u5927\u503c) \u53ef\u4ee5\u6839\u636e\u4ee5\u4e0a\u5206\u6790\u5199\u51fa\u5411\u4e0a\u8f6c\u79fb\u51fd\u6570 pushup(int u) : 1 2 3 void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } \u7531\u4e8e\u9898\u76ee\u63cf\u8ff0\uff1a \u5411\u5e8f\u5217\u540e\u9762\u52a0\u4e00\u4e2a\u6570\uff0c\u52a0\u5165\u7684\u6570\u662f \\((t+a)\\) \\(mod\\) \\(p\\) \u3002\u5176\u4e2d\uff0c \\(t\\) \u662f\u8f93\u5165\u7684\u53c2\u6570\uff0c \\(a\\) \u662f\u5728\u8fd9\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u4e4b\u524d\u6700\u540e\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u8be2\u95ee\u64cd\u4f5c\uff0c\u5219 \\(a=0\\) \uff09\u3002 \u5efa\u6811\u64cd\u4f5c\uff1a \u7ebf\u6bb5\u6811\u7684\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u975e\u5e38\u9ebb\u70e6\uff0c\u800c\u4fee\u6539\u64cd\u4f5c\u8f83\u4e3a\u7b80\u5355\uff0c\u56e0\u6b64\u5728\u5efa\u6811\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5148\u628a\u6574\u9897\u6811\u5efa\u7acb\u8d77\u6765\uff0c\u6700\u591a\u603b\u5171\u53ef\u80fd\u6709 \\(m\\) \u4e2a\u6570\uff0c\u56e0\u6b64\u5efa\u7acb\u4e00\u4e2a\u533a\u95f4\u4e3a \\([1, m]\\) \u7684\u7ebf\u6bb5\u6811\u3002 1 2 3 4 5 6 7 8 9 10 11 12 int main () { int n = 0 , last = 0 ; cin >> m >> p ; build ( 1 , 1 , m ); // \u4ece\u7236\u8282\u70b9u\uff0c\u533a\u95f4[1, m]\u7684\u8303\u56f4\u5f00\u59cb\u5efa\u6811 char op ; int x ; while ( m -- ) { cin >> op >> x ; ...... } } \u67e5\u8be2\u64cd\u4f5c\uff1a \u8fd9\u4e2a\u9898\u76ee\u662f\u4e00\u4e2a \u52a8\u6001\u63d2\u5165 \u7684\u8fc7\u7a0b\uff0c\u5373\u4e0d\u80fd\u4f7f\u7528 RMQ \u6b64\u7c7b\u9759\u6001\u7b97\u6cd5\u6765\u89e3\u51b3\u3002\u6211\u4eec\u9700\u8981\u989d\u5916\u5b9a\u4e49\u4e00\u4e2a \\(int\\) \u578b\u6574\u6570 \\(last\\) \u6765\u5b58\u50a8 \u4e0a\u4e00\u6b21\u8be2\u95ee \u5f97\u5230\u7684\u7b54\u6848\u3002\u4ece \\(1\\) \u53f7\u8282\u70b9\u5f00\u59cb\u67e5\u8be2\uff0c\u76ee\u6807\u533a\u95f4\u4e3a \\([n - t + 1, n]\\) \u3002 1 2 3 4 if ( op == 'Q' ) { // \u67e5\u8be2 last = query ( 1 , n - t + 1 , n ); cout << last << endl ; } \u63d2\u5165\u64cd\u4f5c\uff1a \u989d\u5916\u5b9a\u4e49\u4e00\u4e2a \\(int\\) \u578b\u6574\u6570 \\(n\\) \uff0c\u7528\u6765\u5b58\u50a8 \u5f53\u524d\u5df2\u63d2\u5165\u4e86\u51e0\u4e2a\u6570 \u3002\u7531\u4e8e \\(t\\) \u6700\u5927\u4e3a \\(2*10^9\\) \uff0c\u5e76\u4e14 \\(last\\) \u6700\u5927\u4e5f\u4e3a \\(2*10^9\\) \uff0c\u76f8\u52a0\u540e\u53ef\u4ee5\u5230\u8fbe \\(4*10^9\\) \uff0c\u8d85\u8fc7\u4e86 \\(int_{max}\\) \uff0c\u9700\u8981\u5f3a\u5236\u8f6c\u5316\u4e3a \\(long\\ long\\) \u3002\u6700\u540e\u518d\u628a\u8bb0\u5f55\u5df2\u63d2\u5165\u7684\u6570 \\(+1\\) \uff0c\u5373 n++ \u3002 1 2 3 4 if ( op == 'A' ) { // \u63d2\u5165(\u5176\u5b9e\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4fee\u6539) modify ( 1 , n + 1 , ( 1l l * t + last ) % p ); n ++ ; } \u5b8c\u5584\u51fd\u6570 build(int u, int l, int r) 1 2 3 4 5 6 7 void build ( int u , int l , int r ) { // \u4ee5u\u4e3a\u6839\u8282\u70b9\uff0c\u7ef4\u62a4\u533a\u95f4[l, r] tr [ u ] = { l , r }; // \u5f53\u524d\u8282\u70b9u\u7684\u533a\u95f4\u8bbe\u4e3a[l, r] if ( l == r ) return ; // \u5df2\u7ecf\u662f\u53f6\u5b50\u7ed3\u70b9\u4e86 int mid = l + r >> 1 ; build ( u << 1 , l , mid ); // \u5de6\u513f\u5b50 build ( u << 1 | 1 , mid + 1 , r ); // \u53f3\u513f\u5b50 } query(int u, int l, int r) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 int query ( int u , int l , int r ) { // \u4eceu\u7ed3\u70b9\u5f00\u59cb\uff0c\u67e5\u627e\u533a\u95f4[l, r]\u7684\u4fe1\u606f // 1. \u4e0d\u5fc5\u5206\u6cbb\uff0c\u76f4\u63a5\u8fd4\u56de // Tl-----Tr // L-------------R if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]. v ; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; int v = 0 ; // 2. \u9700\u8981\u5728tr\u7684\u5de6\u533a\u95f4[Tl, m]\u7ee7\u7eed\u5206\u6cbb // Tl----m----Tr // L-------------R if ( l <= mid ) v = query ( u << 1 , l , r ); // 3. \u9700\u8981\u5728tr\u7684\u53f3\u533a\u95f4(m, Tr]\u7ee7\u7eed\u5206\u6cbb // Tl----m----Tr // L---------R if ( r > mid ) v = max ( v , query ( u << 1 | 1 , l , r )); // (2)(3)\u6db5\u76d6\u4e86\u8fd9\u79cd\u60c5\u51b5 // Tl----m----Tr // L-----R return v ; } modify(int u, int x, int v) 1 2 3 4 5 6 7 8 9 void modify ( int u , int x , int v ) { // \u4eceu\u7ed3\u70b9\u5f00\u59cb\u67e5\u627e\uff0c\u627e\u5230\u7f16\u53f7\u4e3ax\u7684\u7ed3\u70b9\uff0c\u628a\u503c\u4fee\u6539\u4e3av if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ]. v = v ; // \u627e\u5230\u4e86 else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); // x\u5728\u5de6\u534a\u533a\u95f4\uff0c\u4fee\u6539\u5de6\u5b50\u6811 else modify ( u << 1 | 1 , x , v ); // x\u5728\u53f3\u534a\u533a\u95f4\uff0c\u4fee\u6539\u53f3\u5b50\u6811 pushup ( u ); // \u66f4\u65b0\u7236\u8282\u70b9\u7684\u4fe1\u606f } } \u5177\u4f53\u8f6c\u79fb\u6d41\u7a0b \u4ee3\u7801 (\u65e0\u6ce8\u91ca) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include <bits/stdc++.h> using namespace std ; const int N = 200010 ; int m , p ; struct node { int l , r ; int v ; } tr [ N * 4 ]; void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } void build ( int u , int l , int r ) { tr [ u ] = { l , r }; if ( l == r ) return ; int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); } void modify ( int u , int x , int v ) { if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ]. v = v ; else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); else modify ( u << 1 | 1 , x , v ); pushup ( u ); } } int query ( int u , int l , int r ) { if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]. v ; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; int v = 0 ; if ( l <= mid ) v = query ( u << 1 , l , r ); if ( r > mid ) v = max ( v , query ( u << 1 | 1 , l , r )); return v ; } int main () { int n = 0 , last = 0 ; cin >> m >> p ; build ( 1 , 1 , m ); char op ; int x ; while ( m -- ) { cin >> op >> x ; if ( op == 'A' ) { modify ( 1 , n + 1 , ( 1l l * x + last ) % p ); n ++ ; } else { last = query ( 1 , n - x + 1 , n ); cout << last << endl ; } } return 0 ; } \u8fd0\u884c\u7ed3\u679c","title":"\u6700\u5927\u6570(\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2)"},{"location":"algorithm/segmentTree/2/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u5217 \\(a_1,a_2,\u2026,a_n\\) \uff0c\u6bcf\u4e00\u4e2a\u6570\u90fd\u5728 \\(0\u223cp\u22121\\) \u4e4b\u95f4\u3002 \u53ef\u4ee5\u5bf9\u8fd9\u5217\u6570\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a \u6dfb\u52a0\u64cd\u4f5c\uff1a\u5411\u5e8f\u5217\u540e\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u5e8f\u5217\u957f\u5ea6\u53d8\u6210 \\(n+1\\) \uff1b \u8be2\u95ee\u64cd\u4f5c\uff1a\u8be2\u95ee\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6700\u540e \\(L\\) \u4e2a\u6570\u4e2d\u6700\u5927\u7684\u6570\u662f\u591a\u5c11\u3002 \u7a0b\u5e8f\u8fd0\u884c\u7684\u6700\u5f00\u59cb\uff0c\u6574\u6570\u5e8f\u5217\u4e3a\u7a7a\u3002 \u4e00\u5171\u8981\u5bf9\u6574\u6570\u5e8f\u5217\u8fdb\u884c \\(m\\) \u6b21\u64cd\u4f5c\u3002 \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u64cd\u4f5c\u7684\u5e8f\u5217\uff0c\u5e76\u8f93\u51fa\u8be2\u95ee\u64cd\u4f5c\u7684\u7b54\u6848\u3002","title":"\u9898\u76ee\u7b80\u8ff0"},{"location":"algorithm/segmentTree/2/#_2","text":"\u8be6\u60c5\u8bf7\u89c1 \u539f\u9898","title":"\u5176\u4ed6\u8981\u6c42"},{"location":"algorithm/segmentTree/2/#_3","text":"\u9996\u5148\uff0c\u786e\u5b9a\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u5305\u542b\u7684\u4fe1\u606f\u3002\u9898\u76ee\u8981\u6c42\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u8282\u70b9\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u6570 \\(v\\) \u6765\u8868\u793a\u6700\u5927\u503c\u3002 1 2 3 4 struct node { int l , r ; int v ; // \u533a\u95f4[l, r]\u7684\u6700\u5927\u503c } tr [ N * 4 ]; \u73b0\u5728\u9700\u8981\u8003\u8651\uff0c\u5982\u679c\u8282\u70b9\u4ec5\u5305\u542b \\(v\\) \uff0c\u7236\u8282\u70b9\u662f\u5426\u80fd\u4ece\u5de6\u53f3\u5b50\u8282\u70b9\u4e2d\u5f97\u51fa\u7b54\u6848\uff1f\u5373\u5f97\u51fa\u5f53\u524d\u8282\u70b9\u7684\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002 \u7b54\u6848\u662f \u53ef\u4ee5 \u7684\u3002\u8bbe\u5f53\u524d\u7236\u8282\u70b9\u7684\u533a\u95f4\u4e3a \\([l, r]\\) \uff0c\u5219\u5de6\u513f\u5b50\u8282\u70b9\u7684\u533a\u95f4\u4e3a \\([l, mid]\\) \uff0c\u53f3\u513f\u5b50\u8282\u70b9\u533a\u95f4\u4e3a \\([mid + 1, r]\\) \uff0c\u5176\u4e2d \\(mid=\u230a\\frac{l + r}{2}\u230b\\) \u3002\u90a3\u4e48\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u5f97\u51fa\uff0c\u7236\u8282\u70b9\u7684\u6700\u5927\u503c \u5fc5\u7136\u4e00\u5b9a \u5b58\u5728\u4e8e\u533a\u95f4 \\([l, r]\\) \u4e2d\uff0c\u800c\u5de6\u53f3\u513f\u5b50\u8282\u70b9\u6240\u5728\u533a\u95f4 \\([l, mid]\\) \u548c \\([mid + 1, r]\\) \u6b63\u597d \u4e0d\u91cd\u4e0d\u6f0f \u7684\u8986\u76d6\u4f4f\u4e86\u7236\u8282\u70b9\u533a\u95f4\uff0c\u56e0\u6b64 \u7236\u8282\u70b9\u533a\u95f4\u5185\u6700\u5927\u503c= \\(max\\) (\u5de6\u513f\u5b50\u8282\u70b9\u533a\u95f4\u5185\u6700\u5927\u503c, \u53f3\u513f\u5b50\u533a\u95f4\u5185\u6700\u5927\u503c) \u53ef\u4ee5\u6839\u636e\u4ee5\u4e0a\u5206\u6790\u5199\u51fa\u5411\u4e0a\u8f6c\u79fb\u51fd\u6570 pushup(int u) : 1 2 3 void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } \u7531\u4e8e\u9898\u76ee\u63cf\u8ff0\uff1a \u5411\u5e8f\u5217\u540e\u9762\u52a0\u4e00\u4e2a\u6570\uff0c\u52a0\u5165\u7684\u6570\u662f \\((t+a)\\) \\(mod\\) \\(p\\) \u3002\u5176\u4e2d\uff0c \\(t\\) \u662f\u8f93\u5165\u7684\u53c2\u6570\uff0c \\(a\\) \u662f\u5728\u8fd9\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u4e4b\u524d\u6700\u540e\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u8be2\u95ee\u64cd\u4f5c\uff0c\u5219 \\(a=0\\) \uff09\u3002","title":"\u7b97\u6cd5\u4e0e\u601d\u8def &emsp; \u7ebf\u6bb5\u6811"},{"location":"algorithm/segmentTree/2/#_4","text":"\u7ebf\u6bb5\u6811\u7684\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u975e\u5e38\u9ebb\u70e6\uff0c\u800c\u4fee\u6539\u64cd\u4f5c\u8f83\u4e3a\u7b80\u5355\uff0c\u56e0\u6b64\u5728\u5efa\u6811\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5148\u628a\u6574\u9897\u6811\u5efa\u7acb\u8d77\u6765\uff0c\u6700\u591a\u603b\u5171\u53ef\u80fd\u6709 \\(m\\) \u4e2a\u6570\uff0c\u56e0\u6b64\u5efa\u7acb\u4e00\u4e2a\u533a\u95f4\u4e3a \\([1, m]\\) \u7684\u7ebf\u6bb5\u6811\u3002 1 2 3 4 5 6 7 8 9 10 11 12 int main () { int n = 0 , last = 0 ; cin >> m >> p ; build ( 1 , 1 , m ); // \u4ece\u7236\u8282\u70b9u\uff0c\u533a\u95f4[1, m]\u7684\u8303\u56f4\u5f00\u59cb\u5efa\u6811 char op ; int x ; while ( m -- ) { cin >> op >> x ; ...... } }","title":"\u5efa\u6811\u64cd\u4f5c\uff1a"},{"location":"algorithm/segmentTree/2/#_5","text":"\u8fd9\u4e2a\u9898\u76ee\u662f\u4e00\u4e2a \u52a8\u6001\u63d2\u5165 \u7684\u8fc7\u7a0b\uff0c\u5373\u4e0d\u80fd\u4f7f\u7528 RMQ \u6b64\u7c7b\u9759\u6001\u7b97\u6cd5\u6765\u89e3\u51b3\u3002\u6211\u4eec\u9700\u8981\u989d\u5916\u5b9a\u4e49\u4e00\u4e2a \\(int\\) \u578b\u6574\u6570 \\(last\\) \u6765\u5b58\u50a8 \u4e0a\u4e00\u6b21\u8be2\u95ee \u5f97\u5230\u7684\u7b54\u6848\u3002\u4ece \\(1\\) \u53f7\u8282\u70b9\u5f00\u59cb\u67e5\u8be2\uff0c\u76ee\u6807\u533a\u95f4\u4e3a \\([n - t + 1, n]\\) \u3002 1 2 3 4 if ( op == 'Q' ) { // \u67e5\u8be2 last = query ( 1 , n - t + 1 , n ); cout << last << endl ; }","title":"\u67e5\u8be2\u64cd\u4f5c\uff1a"},{"location":"algorithm/segmentTree/2/#_6","text":"\u989d\u5916\u5b9a\u4e49\u4e00\u4e2a \\(int\\) \u578b\u6574\u6570 \\(n\\) \uff0c\u7528\u6765\u5b58\u50a8 \u5f53\u524d\u5df2\u63d2\u5165\u4e86\u51e0\u4e2a\u6570 \u3002\u7531\u4e8e \\(t\\) \u6700\u5927\u4e3a \\(2*10^9\\) \uff0c\u5e76\u4e14 \\(last\\) \u6700\u5927\u4e5f\u4e3a \\(2*10^9\\) \uff0c\u76f8\u52a0\u540e\u53ef\u4ee5\u5230\u8fbe \\(4*10^9\\) \uff0c\u8d85\u8fc7\u4e86 \\(int_{max}\\) \uff0c\u9700\u8981\u5f3a\u5236\u8f6c\u5316\u4e3a \\(long\\ long\\) \u3002\u6700\u540e\u518d\u628a\u8bb0\u5f55\u5df2\u63d2\u5165\u7684\u6570 \\(+1\\) \uff0c\u5373 n++ \u3002 1 2 3 4 if ( op == 'A' ) { // \u63d2\u5165(\u5176\u5b9e\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4fee\u6539) modify ( 1 , n + 1 , ( 1l l * t + last ) % p ); n ++ ; }","title":"\u63d2\u5165\u64cd\u4f5c\uff1a"},{"location":"algorithm/segmentTree/2/#_7","text":"","title":"\u5b8c\u5584\u51fd\u6570"},{"location":"algorithm/segmentTree/2/#buildint-u-int-l-int-r","text":"1 2 3 4 5 6 7 void build ( int u , int l , int r ) { // \u4ee5u\u4e3a\u6839\u8282\u70b9\uff0c\u7ef4\u62a4\u533a\u95f4[l, r] tr [ u ] = { l , r }; // \u5f53\u524d\u8282\u70b9u\u7684\u533a\u95f4\u8bbe\u4e3a[l, r] if ( l == r ) return ; // \u5df2\u7ecf\u662f\u53f6\u5b50\u7ed3\u70b9\u4e86 int mid = l + r >> 1 ; build ( u << 1 , l , mid ); // \u5de6\u513f\u5b50 build ( u << 1 | 1 , mid + 1 , r ); // \u53f3\u513f\u5b50 }","title":"build(int u, int l, int r)"},{"location":"algorithm/segmentTree/2/#queryint-u-int-l-int-r","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 int query ( int u , int l , int r ) { // \u4eceu\u7ed3\u70b9\u5f00\u59cb\uff0c\u67e5\u627e\u533a\u95f4[l, r]\u7684\u4fe1\u606f // 1. \u4e0d\u5fc5\u5206\u6cbb\uff0c\u76f4\u63a5\u8fd4\u56de // Tl-----Tr // L-------------R if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]. v ; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; int v = 0 ; // 2. \u9700\u8981\u5728tr\u7684\u5de6\u533a\u95f4[Tl, m]\u7ee7\u7eed\u5206\u6cbb // Tl----m----Tr // L-------------R if ( l <= mid ) v = query ( u << 1 , l , r ); // 3. \u9700\u8981\u5728tr\u7684\u53f3\u533a\u95f4(m, Tr]\u7ee7\u7eed\u5206\u6cbb // Tl----m----Tr // L---------R if ( r > mid ) v = max ( v , query ( u << 1 | 1 , l , r )); // (2)(3)\u6db5\u76d6\u4e86\u8fd9\u79cd\u60c5\u51b5 // Tl----m----Tr // L-----R return v ; }","title":"query(int u, int l, int r)"},{"location":"algorithm/segmentTree/2/#modifyint-u-int-x-int-v","text":"1 2 3 4 5 6 7 8 9 void modify ( int u , int x , int v ) { // \u4eceu\u7ed3\u70b9\u5f00\u59cb\u67e5\u627e\uff0c\u627e\u5230\u7f16\u53f7\u4e3ax\u7684\u7ed3\u70b9\uff0c\u628a\u503c\u4fee\u6539\u4e3av if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ]. v = v ; // \u627e\u5230\u4e86 else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); // x\u5728\u5de6\u534a\u533a\u95f4\uff0c\u4fee\u6539\u5de6\u5b50\u6811 else modify ( u << 1 | 1 , x , v ); // x\u5728\u53f3\u534a\u533a\u95f4\uff0c\u4fee\u6539\u53f3\u5b50\u6811 pushup ( u ); // \u66f4\u65b0\u7236\u8282\u70b9\u7684\u4fe1\u606f } }","title":"modify(int u, int x, int v)"},{"location":"algorithm/segmentTree/2/#_8","text":"","title":"\u5177\u4f53\u8f6c\u79fb\u6d41\u7a0b"},{"location":"algorithm/segmentTree/2/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include <bits/stdc++.h> using namespace std ; const int N = 200010 ; int m , p ; struct node { int l , r ; int v ; } tr [ N * 4 ]; void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } void build ( int u , int l , int r ) { tr [ u ] = { l , r }; if ( l == r ) return ; int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); } void modify ( int u , int x , int v ) { if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ]. v = v ; else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); else modify ( u << 1 | 1 , x , v ); pushup ( u ); } } int query ( int u , int l , int r ) { if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]. v ; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; int v = 0 ; if ( l <= mid ) v = query ( u << 1 , l , r ); if ( r > mid ) v = max ( v , query ( u << 1 | 1 , l , r )); return v ; } int main () { int n = 0 , last = 0 ; cin >> m >> p ; build ( 1 , 1 , m ); char op ; int x ; while ( m -- ) { cin >> op >> x ; if ( op == 'A' ) { modify ( 1 , n + 1 , ( 1l l * x + last ) % p ); n ++ ; } else { last = query ( 1 , n - x + 1 , n ); cout << last << endl ; } } return 0 ; }","title":"\u4ee3\u7801 (\u65e0\u6ce8\u91ca)"},{"location":"algorithm/segmentTree/2/#_10","text":"","title":"\u8fd0\u884c\u7ed3\u679c"},{"location":"algorithm/segmentTree/3/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u9898\u76ee\u7ffb\u8bd1 \u7ed9\u5b9a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u5217 \\(A\\) \uff0c\u4ee5\u53ca \\(M\\) \u6761\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u53ef\u80fd\u662f\u4ee5\u4e0b\u4e24\u79cd\u4e4b\u4e00\uff1a 0 x y \uff0c\u628a \\(A[x]\\) \u6539\u6210 \\(y\\) \u3002 1 x y \uff0c\u67e5\u8be2\u533a\u95f4 \\([x,y]\\) \u4e2d\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \uff0c\u5373 \\[\\max_{x \\le l \\le r \\le y}\\sum_{i = l}^r A[i]\\] \u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u6307\u4ee4\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002 \u6570\u636e\u8303\u56f4 \\(N\u2264500000,M\u2264500000\\) \\(\u221210000\u2264A[i],\\ y\u226410000\\) \u7b97\u6cd5\u4e0e\u601d\u8def \u9996\u5148\uff0c\u786e\u5b9a\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u5305\u542b\u7684\u4fe1\u606f\u3002\u8981\u6c42\u533a\u95f4\u5185 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u8282\u70b9\u4e2d\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u6570 \\(tmax\\) \u7528\u6765\u5b58\u50a8\u5f53\u524d\u533a\u95f4 \\([l, r]\\) \u7684 \u6700\u5927\u8fde\u7eed\u5b57\u6bb5\u548c \u3002 \u8003\u8651\u5b50\u8282\u70b9\u5411\u7236\u8282\u70b9\u8f6c\u79fb\uff0c\u5355\u72ec\u6709 \\(tmax\\) \u5e76\u4e0d\u591f\u3002\u5f53\u7236\u8282\u70b9\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \u662f\u8de8\u8d8a\u5de6\u53f3\u5b50\u8282\u70b9\u65f6\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u53ef\u4ee5\u76f4\u63a5\u7531 \\(tmax\\) \u8f6c\u79fb\u8fc7\u6765\u3002 \u6b64\u65f6\u6211\u4eec\u9700\u8981\u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c { \\(rmax\\) } \u4ee5\u53ca\u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c { \\(lmax\\) }\u3002 \u7531\u4e8e\u5de6\u53f3\u5b50\u8282\u70b9\u4e92\u76f8\u72ec\u7acb\uff0c\u56e0\u6b64\u5411\u7236\u8282\u70b9\u8f6c\u79fb\u7684 \\(tmax\\) \u65e0\u975e\u662f\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \\(l.tmax\\) \uff1b \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \\(r.tmax\\) \uff1b \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c { \\(l.rmax\\) } + \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c { \\(r.lmax\\) }\u3002 \u7236\u8282\u70b9 \\(u.tmax\\) \u5373\u4e3a\uff1a \\[u.tmax = max(l.rmax + r.lmax,\\ max(l.tmax,\\ r.tmax));\\] \u90a3\u4e48\u7236\u8282\u70b9\u7684 \\(lmax\\) \u548c \\(rmax\\) \u662f\u5426\u53ef\u4ee5\u901a\u8fc7 \u5f53\u524d\u5df2\u77e5\u4fe1\u606f \u76f4\u63a5\u8f6c\u79fb\u5462\uff1f\u7b54\u6848\u662f \u4e0d\u80fd \u3002 \u7236\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c \\(lmax\\) \u53ef\u80fd\u4f1a\u662f\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c \\(l.lmax\\) \uff1b \u5de6\u5b50\u8282\u70b9\u7684 \u5168\u90e8\u5143\u7d20\u548c \\(\\sum_{i=l}^{mid} A[i]\\) + \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c \\(r.lmax\\) \u3002 \u5373 \\[u.lmax=max(l.lmax,\\ l.sum+r.lmax);\\] \u540c\u7406\uff0c\u7236\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c \u7684\u4e24\u79cd\u60c5\u51b5\u4e3a\uff1a \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c \\(r.rmax\\) \uff1b \u53f3\u5b50\u8282\u70b9\u7684 \u5168\u90e8\u5143\u7d20\u548c \\(\\sum_{i=mid+1}^{r} A[i]\\) + \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c \\(l.rmax\\) \u3002 \u5373 \\[u.rmax=max(r.rmax,\\ r.sum+l.rmax);\\] \u7531\u4e0a\u8ff0\u53ef\u89c1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a \\(sum\\) \u6765\u5b58\u50a8\u5f53\u524d\u8282\u70b9 \u533a\u95f4\u5185\u6240\u6709\u5143\u7d20\u7684\u548c \u3002\u800c\u7236\u8282\u70b9\u7684 \\(sum\\) \u53ef\u4ee5\u76f4\u63a5\u7531\u5de6\u53f3\u5b50\u8282\u70b9\u7684 \\(sum\\) \u8ba1\u7b97\u5f97\u51fa\u3002 \u5373 \\[u.sum=l.sum+r.sum;\\] \u7ebf\u6bb5\u6811\u8282\u70b9 \\(node\\) 1 2 3 4 5 6 7 8 9 10 /************************************ * sum : sum of [l, r] * * lmax: \u6700\u5927\u524d\u7f00\u548c * * rmax: \u6700\u5927\u540e\u7f00\u548c * * tmax: \u533a\u95f4[l, r]\u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c * ************************************/ struct node { int l , r ; int sum , lmax , rmax , tmax ; } tr [ N * 4 ]; pushup\u64cd\u4f5c 1 2 3 4 5 6 7 8 9 10 void pushup ( node & u , node & l , node & r ) { u . sum = l . sum + r . sum ; u . lmax = max ( l . lmax , l . sum + r . lmax ); u . rmax = max ( r . rmax , r . sum + l . rmax ); u . tmax = max ( l . rmax + r . lmax , max ( l . tmax , r . tmax )); } void pushup ( int u ) { pushup ( tr [ u ], tr [ u << 1 ], tr [ u << 1 | 1 ]); } \u8fd9\u91cc\u4f7f\u7528\u4e86\u91cd\u8f7d\u51fd\u6570\u64cd\u4f5c\uff0c\u7b80\u6d01\u4ee3\u7801\u3002 \u5efa\u6811\u64cd\u4f5c \u56de\u5230\u6700\u521d\u9898\u76ee\u8981\u6c42\uff0c\u5efa\u7acb\u4e00\u9897\u533a\u95f4\u4e3a \\([1,n]\\) \u7684\u7ebf\u6bb5\u6811\u3002 \u5f53 \\(l=r\\) \u65f6\uff0c\u9898\u76ee\u8981\u6c42\u8be5\u533a\u95f4\u5185\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u6570( \\(l \\le r\\) )\uff0c\u56e0\u6b64\u5f53\u524d\u8282\u70b9\u7684 \\(tmax, lmax, rmax, sum\\) \u90fd\u4e3a \\(A[r]\\) \u3002 \\(tr[u].l = l;\\) \\(tr[u].r = r;\\) \\(tr[u].lmax = tr[u].rmax = tr[u].tmax = tr[u].sum = w[r]\\) \u540c\u65f6\uff0c\u4e5f\u8981\u6ce8\u610f\uff0c\u6bcf\u6b21\u9012\u5f52\u5b8c\u5de6\u53f3\u5b50\u8282\u70b9\u540e\uff0c\u8981\u5c06\u5f53\u524d\u7236\u8282\u70b9\u7684\u4fe1\u606f\u4fee\u6539\uff0c\u5373 \u6267\u884c pushup(u) \u64cd\u4f5c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 void build ( int u , int l , int r ) { if ( l == r ) tr [ u ] = { l , r , w [ r ], w [ r ], w [ r ], w [ r ]}; // \u627e\u5230\u53f6\u5b50\u8282\u70b9 else { tr [ u ] = { l , r }; // \u8bbe\u5f53\u524d\u8282\u70b9\u533a\u95f4\u4e3a[l, r] int mid = l + r >> 1 ; build ( u << 1 , l , mid ); // \u5efa\u7acb\u5de6\u5b50\u6811 build ( u << 1 | 1 , mid + 1 , r ); // \u5efa\u7acb\u53f3\u5b50\u6811 pushup ( u ); // \u4fee\u6539\u7236\u8282\u70b9 } } int main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> w [ i ]; build ( 1 , 1 , n ); cin >> m ; int op , x , y ; while ( m -- ) { cin >> op >> x >> y ; if ( op == 0 ) { // \u4fee\u6539 } else { // \u67e5\u8be2 } } return 0 ; } \u4fee\u6539\u64cd\u4f5c \u6bcf\u6b21\u4ece \\(1\\) \u53f7\u8282\u70b9\u5f00\u59cb\u627e\uff0c\u627e\u5230\u4f4d\u7f6e\u4f4d\u4e8e \\(x\\) \u7684\u6570\uff0c\u628a\u5b83\u4fee\u6539\u4e3a \\(v\\) \u3002 \u8bbe\u5df2\u627e\u5230\u4f4d\u4e8e \\(x\\) \u5904\u7684\u8282\u70b9\uff0c\u8bb0\u4e3a \\(tr[u]\\) \u3002 \u6613\u5f97\u77e5\u5f53\u524d\u533a\u95f4\u5373\u4e3a \\([x,x]\\) \uff0c\u9898\u76ee\u8981\u6c42\u8be5\u533a\u95f4\u5185\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u6570( \\(l \\le r\\) )\uff0c\u4fee\u6539 \\(A[x]=y\\) \uff0c\u56e0\u6b64\u5f53\u524d\u8282\u70b9\u7684 \\(tmax, lmax, rmax, sum\\) \u90fd\u4e3a \\(v=y=A[x]\\) \u3002 \\(tr[u].l = tr[u].r = x;\\) \\(tr[u].lmax = tr[u].rmax = tr[u].tmax = tr[u].sum = v\\) 1 2 3 4 5 6 7 8 9 void modify ( int u , int x , int v ) { if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ] = { x , x , v , v , v , v }; // \u627e\u5230\u4e86 else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); // x\u4f4d\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u5de6\u534a\u5b50\u533a\u95f4 else modify ( u << 1 | 1 , x , v ); // x\u4f4d\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u53f3\u534a\u5b50\u533a\u95f4 pushup ( u ); // \u4fee\u6539\u7236\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f } } \u67e5\u8be2\u64cd\u4f5c \u67e5\u8be2\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u56db\u79cd\u60c5\u51b5\u3002 \u5f53\u524d\u8282\u70b9\u533a\u95f4\u88ab \\([l,r]\\) \u6240\u5305\u542b\uff0c\u5373\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u4fe1\u606f return tr[u]; \u67e5\u8be2\u7684\u533a\u95f4\u5728\u5f53\u524d\u8282\u70b9\u7684 \u5de6\u534a\u533a\u95f4 ( \\(r \\le mid\\) )\uff0c \u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\uff0c\u5373 query(u << 1, l, r); \u67e5\u8be2\u7684\u533a\u95f4\u5728\u5f53\u524d\u8282\u70b9\u7684 \u53f3\u534a\u533a\u95f4 ( \\(l > mid\\) )\uff0c \u9012\u5f52\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u5373 query(u << 1 | 1, l, r); \u67e5\u8be2\u7684\u533a\u95f4 \u6a2a\u8de8\u5de6\u53f3\u533a\u95f4 \uff0c\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u6700\u540e\u5c06\u641c\u7d22\u5f97\u5230\u7684 \\(left\\) \u548c \\(right\\) \u5b50\u6811\u7684\u4fe1\u606f\u5408\u5e76\uff0c\u5f97\u5230\u5f53\u524d\u8282\u70b9 \\(res\\) \u7684\u4fe1\u606f\uff0c\u5373 pushup(res, left, right); \uff0c\u6700\u540e\u8fd4\u56de \\(res\\) \u5373\u53ef\u3002 \u7531\u4e0a\u8ff0\u53ef\u77e5\uff0c query \u51fd\u6570\u4e0d\u80fd\u5355\u5355\u53ea\u8fd4\u56de\u4e00\u4e2a \\(int\\) \u578b\u53d8\u91cf\uff0c\u5e94\u8be5\u8fd4\u56de\u6574\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u5b9a\u4e49 query \u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a \\(node\\) \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 node query ( int u , int l , int r ) { // \u4ece\u8282\u70b9u\u5f00\u59cb\uff0c\u67e5\u627e\u533a\u95f4[l, r]\u7684\u4fe1\u606f // 1. \u5305\u542b\u5728\u533a\u95f4\u5185 // Tl-----Tr // L-------------R if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; // 2. \u5728\u5f53\u524d\u7684\u5de6\u534a\u533a\u95f4 // Tl-----m-----Tr // L---R if ( r <= mid ) return query ( u << 1 , l , r ); // 3. \u5728\u5f53\u524d\u7684\u53f3\u534a\u533a\u95f4 // Tl-----m-----Tr // L-----R else if ( l > mid ) return query ( u << 1 | 1 , l , r ); // 4. \u4e24\u8fb9\u90fd\u6709\uff0c\u90fd\u67e5\u8be2 // Tl----m----Tr // L-----R else { auto left = query ( u << 1 , l , r ); auto right = query ( u << 1 | 1 , l , r ); node res ; // \u5408\u5e76\u7b54\u6848 pushup ( res , left , right ); return res ; } } \u5177\u4f53\u8f6c\u79fb\u6d41\u7a0b \u4ee3\u7801(\u65e0\u6ce8\u91ca) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 #include <bits/stdc++.h> using namespace std ; const int N = 500010 ; int n , m ; int w [ N ]; struct node { int l , r ; int tmax , lmax , rmax , sum ; } tr [ N * 4 ]; void pushup ( node & u , node & l , node & r ) { u . sum = l . sum + r . sum ; u . lmax = max ( l . lmax , l . sum + r . lmax ); u . rmax = max ( r . rmax , r . sum + l . rmax ); u . tmax = max ( l . rmax + r . lmax , max ( l . tmax , r . tmax )); } void pushup ( int u ) { pushup ( tr [ u ], tr [ u << 1 ], tr [ u << 1 | 1 ]); } void build ( int u , int l , int r ) { if ( l == r ) tr [ u ] = { l , r , w [ r ], w [ r ], w [ r ], w [ r ]}; else { tr [ u ] = { l , r }; int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); pushup ( u ); } } void modify ( int u , int x , int v ) { if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ] = { x , x , v , v , v , v }; else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); else modify ( u << 1 | 1 , x , v ); pushup ( u ); } } node query ( int u , int l , int r ) { if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( r <= mid ) return query ( u << 1 , l , r ); else if ( l > mid ) return query ( u << 1 | 1 , l , r ); else { auto left = query ( u << 1 , l , r ); auto right = query ( u << 1 | 1 , l , r ); node res ; pushup ( res , left , right ); return res ; } } int main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> w [ i ]; build ( 1 , 1 , n ); cin >> m ; int op , x , y ; while ( m -- ) { cin >> op >> x >> y ; if ( op == 0 ) { modify ( 1 , x , y ); } else { cout << query ( 1 , x , y ). tmax << endl ; } } return 0 ; } \u8fd0\u884c\u7ed3\u679c","title":"Can you answer these queries III(\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2)"},{"location":"algorithm/segmentTree/3/#_1","text":"","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/segmentTree/3/#_2","text":"\u7ed9\u5b9a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u5217 \\(A\\) \uff0c\u4ee5\u53ca \\(M\\) \u6761\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u53ef\u80fd\u662f\u4ee5\u4e0b\u4e24\u79cd\u4e4b\u4e00\uff1a 0 x y \uff0c\u628a \\(A[x]\\) \u6539\u6210 \\(y\\) \u3002 1 x y \uff0c\u67e5\u8be2\u533a\u95f4 \\([x,y]\\) \u4e2d\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \uff0c\u5373 \\[\\max_{x \\le l \\le r \\le y}\\sum_{i = l}^r A[i]\\] \u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u6307\u4ee4\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002","title":"\u9898\u76ee\u7ffb\u8bd1"},{"location":"algorithm/segmentTree/3/#_3","text":"\\(N\u2264500000,M\u2264500000\\) \\(\u221210000\u2264A[i],\\ y\u226410000\\)","title":"\u6570\u636e\u8303\u56f4"},{"location":"algorithm/segmentTree/3/#_4","text":"\u9996\u5148\uff0c\u786e\u5b9a\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u5305\u542b\u7684\u4fe1\u606f\u3002\u8981\u6c42\u533a\u95f4\u5185 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u8282\u70b9\u4e2d\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u6570 \\(tmax\\) \u7528\u6765\u5b58\u50a8\u5f53\u524d\u533a\u95f4 \\([l, r]\\) \u7684 \u6700\u5927\u8fde\u7eed\u5b57\u6bb5\u548c \u3002 \u8003\u8651\u5b50\u8282\u70b9\u5411\u7236\u8282\u70b9\u8f6c\u79fb\uff0c\u5355\u72ec\u6709 \\(tmax\\) \u5e76\u4e0d\u591f\u3002\u5f53\u7236\u8282\u70b9\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \u662f\u8de8\u8d8a\u5de6\u53f3\u5b50\u8282\u70b9\u65f6\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u53ef\u4ee5\u76f4\u63a5\u7531 \\(tmax\\) \u8f6c\u79fb\u8fc7\u6765\u3002 \u6b64\u65f6\u6211\u4eec\u9700\u8981\u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c { \\(rmax\\) } \u4ee5\u53ca\u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c { \\(lmax\\) }\u3002 \u7531\u4e8e\u5de6\u53f3\u5b50\u8282\u70b9\u4e92\u76f8\u72ec\u7acb\uff0c\u56e0\u6b64\u5411\u7236\u8282\u70b9\u8f6c\u79fb\u7684 \\(tmax\\) \u65e0\u975e\u662f\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \\(l.tmax\\) \uff1b \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c \\(r.tmax\\) \uff1b \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c { \\(l.rmax\\) } + \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c { \\(r.lmax\\) }\u3002 \u7236\u8282\u70b9 \\(u.tmax\\) \u5373\u4e3a\uff1a \\[u.tmax = max(l.rmax + r.lmax,\\ max(l.tmax,\\ r.tmax));\\] \u90a3\u4e48\u7236\u8282\u70b9\u7684 \\(lmax\\) \u548c \\(rmax\\) \u662f\u5426\u53ef\u4ee5\u901a\u8fc7 \u5f53\u524d\u5df2\u77e5\u4fe1\u606f \u76f4\u63a5\u8f6c\u79fb\u5462\uff1f\u7b54\u6848\u662f \u4e0d\u80fd \u3002 \u7236\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c \\(lmax\\) \u53ef\u80fd\u4f1a\u662f\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c \\(l.lmax\\) \uff1b \u5de6\u5b50\u8282\u70b9\u7684 \u5168\u90e8\u5143\u7d20\u548c \\(\\sum_{i=l}^{mid} A[i]\\) + \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u524d\u7f00\u548c \\(r.lmax\\) \u3002 \u5373 \\[u.lmax=max(l.lmax,\\ l.sum+r.lmax);\\] \u540c\u7406\uff0c\u7236\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c \u7684\u4e24\u79cd\u60c5\u51b5\u4e3a\uff1a \u53f3\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c \\(r.rmax\\) \uff1b \u53f3\u5b50\u8282\u70b9\u7684 \u5168\u90e8\u5143\u7d20\u548c \\(\\sum_{i=mid+1}^{r} A[i]\\) + \u5de6\u5b50\u8282\u70b9\u7684 \u6700\u5927\u540e\u7f00\u548c \\(l.rmax\\) \u3002 \u5373 \\[u.rmax=max(r.rmax,\\ r.sum+l.rmax);\\] \u7531\u4e0a\u8ff0\u53ef\u89c1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a \\(sum\\) \u6765\u5b58\u50a8\u5f53\u524d\u8282\u70b9 \u533a\u95f4\u5185\u6240\u6709\u5143\u7d20\u7684\u548c \u3002\u800c\u7236\u8282\u70b9\u7684 \\(sum\\) \u53ef\u4ee5\u76f4\u63a5\u7531\u5de6\u53f3\u5b50\u8282\u70b9\u7684 \\(sum\\) \u8ba1\u7b97\u5f97\u51fa\u3002 \u5373 \\[u.sum=l.sum+r.sum;\\]","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/segmentTree/3/#node","text":"1 2 3 4 5 6 7 8 9 10 /************************************ * sum : sum of [l, r] * * lmax: \u6700\u5927\u524d\u7f00\u548c * * rmax: \u6700\u5927\u540e\u7f00\u548c * * tmax: \u533a\u95f4[l, r]\u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c * ************************************/ struct node { int l , r ; int sum , lmax , rmax , tmax ; } tr [ N * 4 ];","title":"\u7ebf\u6bb5\u6811\u8282\u70b9 \\(node\\)"},{"location":"algorithm/segmentTree/3/#pushup","text":"1 2 3 4 5 6 7 8 9 10 void pushup ( node & u , node & l , node & r ) { u . sum = l . sum + r . sum ; u . lmax = max ( l . lmax , l . sum + r . lmax ); u . rmax = max ( r . rmax , r . sum + l . rmax ); u . tmax = max ( l . rmax + r . lmax , max ( l . tmax , r . tmax )); } void pushup ( int u ) { pushup ( tr [ u ], tr [ u << 1 ], tr [ u << 1 | 1 ]); } \u8fd9\u91cc\u4f7f\u7528\u4e86\u91cd\u8f7d\u51fd\u6570\u64cd\u4f5c\uff0c\u7b80\u6d01\u4ee3\u7801\u3002","title":"pushup\u64cd\u4f5c"},{"location":"algorithm/segmentTree/3/#_5","text":"\u56de\u5230\u6700\u521d\u9898\u76ee\u8981\u6c42\uff0c\u5efa\u7acb\u4e00\u9897\u533a\u95f4\u4e3a \\([1,n]\\) \u7684\u7ebf\u6bb5\u6811\u3002 \u5f53 \\(l=r\\) \u65f6\uff0c\u9898\u76ee\u8981\u6c42\u8be5\u533a\u95f4\u5185\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u6570( \\(l \\le r\\) )\uff0c\u56e0\u6b64\u5f53\u524d\u8282\u70b9\u7684 \\(tmax, lmax, rmax, sum\\) \u90fd\u4e3a \\(A[r]\\) \u3002 \\(tr[u].l = l;\\) \\(tr[u].r = r;\\) \\(tr[u].lmax = tr[u].rmax = tr[u].tmax = tr[u].sum = w[r]\\) \u540c\u65f6\uff0c\u4e5f\u8981\u6ce8\u610f\uff0c\u6bcf\u6b21\u9012\u5f52\u5b8c\u5de6\u53f3\u5b50\u8282\u70b9\u540e\uff0c\u8981\u5c06\u5f53\u524d\u7236\u8282\u70b9\u7684\u4fe1\u606f\u4fee\u6539\uff0c\u5373 \u6267\u884c pushup(u) \u64cd\u4f5c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 void build ( int u , int l , int r ) { if ( l == r ) tr [ u ] = { l , r , w [ r ], w [ r ], w [ r ], w [ r ]}; // \u627e\u5230\u53f6\u5b50\u8282\u70b9 else { tr [ u ] = { l , r }; // \u8bbe\u5f53\u524d\u8282\u70b9\u533a\u95f4\u4e3a[l, r] int mid = l + r >> 1 ; build ( u << 1 , l , mid ); // \u5efa\u7acb\u5de6\u5b50\u6811 build ( u << 1 | 1 , mid + 1 , r ); // \u5efa\u7acb\u53f3\u5b50\u6811 pushup ( u ); // \u4fee\u6539\u7236\u8282\u70b9 } } int main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> w [ i ]; build ( 1 , 1 , n ); cin >> m ; int op , x , y ; while ( m -- ) { cin >> op >> x >> y ; if ( op == 0 ) { // \u4fee\u6539 } else { // \u67e5\u8be2 } } return 0 ; }","title":"\u5efa\u6811\u64cd\u4f5c"},{"location":"algorithm/segmentTree/3/#_6","text":"\u6bcf\u6b21\u4ece \\(1\\) \u53f7\u8282\u70b9\u5f00\u59cb\u627e\uff0c\u627e\u5230\u4f4d\u7f6e\u4f4d\u4e8e \\(x\\) \u7684\u6570\uff0c\u628a\u5b83\u4fee\u6539\u4e3a \\(v\\) \u3002 \u8bbe\u5df2\u627e\u5230\u4f4d\u4e8e \\(x\\) \u5904\u7684\u8282\u70b9\uff0c\u8bb0\u4e3a \\(tr[u]\\) \u3002 \u6613\u5f97\u77e5\u5f53\u524d\u533a\u95f4\u5373\u4e3a \\([x,x]\\) \uff0c\u9898\u76ee\u8981\u6c42\u8be5\u533a\u95f4\u5185\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u6570( \\(l \\le r\\) )\uff0c\u4fee\u6539 \\(A[x]=y\\) \uff0c\u56e0\u6b64\u5f53\u524d\u8282\u70b9\u7684 \\(tmax, lmax, rmax, sum\\) \u90fd\u4e3a \\(v=y=A[x]\\) \u3002 \\(tr[u].l = tr[u].r = x;\\) \\(tr[u].lmax = tr[u].rmax = tr[u].tmax = tr[u].sum = v\\) 1 2 3 4 5 6 7 8 9 void modify ( int u , int x , int v ) { if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ] = { x , x , v , v , v , v }; // \u627e\u5230\u4e86 else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); // x\u4f4d\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u5de6\u534a\u5b50\u533a\u95f4 else modify ( u << 1 | 1 , x , v ); // x\u4f4d\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u53f3\u534a\u5b50\u533a\u95f4 pushup ( u ); // \u4fee\u6539\u7236\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f } }","title":"\u4fee\u6539\u64cd\u4f5c"},{"location":"algorithm/segmentTree/3/#_7","text":"\u67e5\u8be2\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u56db\u79cd\u60c5\u51b5\u3002 \u5f53\u524d\u8282\u70b9\u533a\u95f4\u88ab \\([l,r]\\) \u6240\u5305\u542b\uff0c\u5373\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u4fe1\u606f return tr[u]; \u67e5\u8be2\u7684\u533a\u95f4\u5728\u5f53\u524d\u8282\u70b9\u7684 \u5de6\u534a\u533a\u95f4 ( \\(r \\le mid\\) )\uff0c \u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\uff0c\u5373 query(u << 1, l, r); \u67e5\u8be2\u7684\u533a\u95f4\u5728\u5f53\u524d\u8282\u70b9\u7684 \u53f3\u534a\u533a\u95f4 ( \\(l > mid\\) )\uff0c \u9012\u5f52\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u5373 query(u << 1 | 1, l, r); \u67e5\u8be2\u7684\u533a\u95f4 \u6a2a\u8de8\u5de6\u53f3\u533a\u95f4 \uff0c\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u6700\u540e\u5c06\u641c\u7d22\u5f97\u5230\u7684 \\(left\\) \u548c \\(right\\) \u5b50\u6811\u7684\u4fe1\u606f\u5408\u5e76\uff0c\u5f97\u5230\u5f53\u524d\u8282\u70b9 \\(res\\) \u7684\u4fe1\u606f\uff0c\u5373 pushup(res, left, right); \uff0c\u6700\u540e\u8fd4\u56de \\(res\\) \u5373\u53ef\u3002 \u7531\u4e0a\u8ff0\u53ef\u77e5\uff0c query \u51fd\u6570\u4e0d\u80fd\u5355\u5355\u53ea\u8fd4\u56de\u4e00\u4e2a \\(int\\) \u578b\u53d8\u91cf\uff0c\u5e94\u8be5\u8fd4\u56de\u6574\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u5b9a\u4e49 query \u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a \\(node\\) \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 node query ( int u , int l , int r ) { // \u4ece\u8282\u70b9u\u5f00\u59cb\uff0c\u67e5\u627e\u533a\u95f4[l, r]\u7684\u4fe1\u606f // 1. \u5305\u542b\u5728\u533a\u95f4\u5185 // Tl-----Tr // L-------------R if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; // 2. \u5728\u5f53\u524d\u7684\u5de6\u534a\u533a\u95f4 // Tl-----m-----Tr // L---R if ( r <= mid ) return query ( u << 1 , l , r ); // 3. \u5728\u5f53\u524d\u7684\u53f3\u534a\u533a\u95f4 // Tl-----m-----Tr // L-----R else if ( l > mid ) return query ( u << 1 | 1 , l , r ); // 4. \u4e24\u8fb9\u90fd\u6709\uff0c\u90fd\u67e5\u8be2 // Tl----m----Tr // L-----R else { auto left = query ( u << 1 , l , r ); auto right = query ( u << 1 | 1 , l , r ); node res ; // \u5408\u5e76\u7b54\u6848 pushup ( res , left , right ); return res ; } }","title":"\u67e5\u8be2\u64cd\u4f5c"},{"location":"algorithm/segmentTree/3/#_8","text":"","title":"\u5177\u4f53\u8f6c\u79fb\u6d41\u7a0b"},{"location":"algorithm/segmentTree/3/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 #include <bits/stdc++.h> using namespace std ; const int N = 500010 ; int n , m ; int w [ N ]; struct node { int l , r ; int tmax , lmax , rmax , sum ; } tr [ N * 4 ]; void pushup ( node & u , node & l , node & r ) { u . sum = l . sum + r . sum ; u . lmax = max ( l . lmax , l . sum + r . lmax ); u . rmax = max ( r . rmax , r . sum + l . rmax ); u . tmax = max ( l . rmax + r . lmax , max ( l . tmax , r . tmax )); } void pushup ( int u ) { pushup ( tr [ u ], tr [ u << 1 ], tr [ u << 1 | 1 ]); } void build ( int u , int l , int r ) { if ( l == r ) tr [ u ] = { l , r , w [ r ], w [ r ], w [ r ], w [ r ]}; else { tr [ u ] = { l , r }; int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); pushup ( u ); } } void modify ( int u , int x , int v ) { if ( tr [ u ]. l == x && tr [ u ]. r == x ) tr [ u ] = { x , x , v , v , v , v }; else { int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( x <= mid ) modify ( u << 1 , x , v ); else modify ( u << 1 | 1 , x , v ); pushup ( u ); } } node query ( int u , int l , int r ) { if ( tr [ u ]. l >= l && tr [ u ]. r <= r ) return tr [ u ]; int mid = tr [ u ]. l + tr [ u ]. r >> 1 ; if ( r <= mid ) return query ( u << 1 , l , r ); else if ( l > mid ) return query ( u << 1 | 1 , l , r ); else { auto left = query ( u << 1 , l , r ); auto right = query ( u << 1 | 1 , l , r ); node res ; pushup ( res , left , right ); return res ; } } int main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> w [ i ]; build ( 1 , 1 , n ); cin >> m ; int op , x , y ; while ( m -- ) { cin >> op >> x >> y ; if ( op == 0 ) { modify ( 1 , x , y ); } else { cout << query ( 1 , x , y ). tmax << endl ; } } return 0 ; }","title":"\u4ee3\u7801(\u65e0\u6ce8\u91ca)"},{"location":"algorithm/segmentTree/3/#_10","text":"","title":"\u8fd0\u884c\u7ed3\u679c"},{"location":"algorithm/segmentTree/4/","text":"\u539f\u9898\u94fe\u63a5 \u9898\u76ee\u63cf\u8ff0 \u9898\u76ee\u7ffb\u8bd1 \u6709 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u5bb9\u91cf\u4e3a \\(a[i]\\) \uff0c\u6709\u4e00\u79cd\u7bb1\u5b50\uff08\u65e0\u6570\u4e2a\uff09\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u7684\u5bb9\u91cf\u4e3a \\(C\\) \uff0c\u5c06\u7269\u54c1\u88c5\u5165\u7bb1\u4e2d\uff0c\u6309\u7167\u5982\u4e0b\u88c5\u6cd5\uff0c\u8bf7\u95ee\u6700\u5c11\u5404\u9700\u8981\u591a\u5c11\u4e2a\u7bb1\u5b50\uff1a \u7b2c\u4e00\u79cd \uff1a\u6bcf\u6b21\u9009\u62e9\u4ece\u524d\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u4f59\u4e0b\u7a7a\u95f4\u80fd\u591f\u88c5\u4e0b\u5f53\u524d\u7269\u54c1\u7684\u7bb1\u5b50\uff0c\u628a\u7269\u54c1\u88c5\u5165\u5176\u4e2d\uff0c\u82e5\u6ca1\u627e\u5230\uff0c\u5219\u589e\u52a0\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5c06\u7269\u54c1\u88c5\u5165\u589e\u52a0\u7684\u7bb1\u5b50\u4e2d\u3002 \u7b2c\u4e8c\u79cd \uff0c\u6bcf\u6b21\u9009\u62e9\u4f59\u4e0b\u7a7a\u95f4\u6700\u5c0f\u7684\u4e14\u80fd\u88c5\u4e0b\u5f53\u524d\u7269\u54c1\u7684\u7bb1\u5b50\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u589e\u52a0\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5c06\u7269\u54c1\u88c5\u5165\u589e\u52a0\u7684\u7bb1\u5b50\u4e2d\u3002 \u6570\u636e\u8303\u56f4 \\(1\u2264n\u226410^6, 1\u2264C\u226410^9\\) \\(1 \\le a_i \\le C\\) \u7b97\u6cd5\u4e0e\u601d\u8def \u95ee\u9898\u4e00 \u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u5269\u4f59\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8e \\(a[i]\\) \u7684\u76d2\u5b50\uff0c\u7136\u540e\u5c06\u7269\u54c1\u653e\u5165\u8be5\u76d2\u5b50\u5185\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u6bcf\u6b21\u67e5\u8be2\u5230\u533a\u95f4\u5185\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(a[i]\\) \u7684\u6570\uff0c\u5e76\u4e14\u4fee\u6539\u5b83\u3002 \u533a\u95f4\u5185\u5feb\u901f\u67e5\u8be2\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u5230\u7ebf\u6bb5\u6811\u6b64\u7c7b\u6570\u636e\u7ed3\u6784\u3002 \u9996\u5148\uff0c\u6784\u9020\u8282\u70b9\u3002\u6211\u4eec\u9700\u8981 \\(l,r\\) \u6765\u8868\u793a\u5f53\u524d\u533a\u95f4\uff0c\u9009\u53d6 \\(v\\) \u6765\u8868\u793a\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002 \u524d\u6587 \u5df2\u7ecf\u8bc1\u660e\uff0c\u8282\u70b9\u4ec5\u5305\u542b \\(v\\) \u65f6\uff0c\u7236\u8282\u70b9\u53ef\u4ee5\u4ece\u5de6\u53f3\u5b50\u8282\u70b9\u66f4\u65b0\u4fe1\u606f\uff0c\u6c42\u51fa\u5f53\u524d\u7236\u8282\u70b9\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002 \u5199\u51fa\u8282\u70b9 \\(node\\) 1 2 3 4 struct node { int l , r ; int v ; // \u533a\u95f4[l, r]\u5185\u7684\u6700\u5927\u503c } tr [ N << 2 ]; \u72b6\u6001\u8f6c\u79fb\u51fd\u6570 pushup(int u) 1 2 3 void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } \u5efa\u6811\u64cd\u4f5c \u6211\u4eec\u9700\u8981\u9009\u62e9\u591a\u5927\u7684\u533a\u95f4\u6765\u5efa\u6811\u5462\uff1f \u9996\u5148\u6700\u574f\u7684\u60c5\u51b5\u4f1a\u662f\u5982\u4f55\uff1f\u6700\u574f\u7684\u60c5\u51b5\u5e94\u8be5\u662f\uff0c\u6709 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u9700\u8981 \\(n\\) \u4e2a\u7bb1\u5b50\u6765\u5b58\u50a8\u3002\u5373\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\uff0c\u90fd\u4e3a\u7bb1\u5b50\u7684\u6700\u5927\u5bb9\u91cf\u3002 \u56e0\u6b64\uff0c\u5efa\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9009\u62e9 \\([1,n]\\) \u7684\u533a\u95f4\u3002\u9009\u62e9\u7bb1\u5b50\u5bb9\u91cf \\(C\\) \u4f5c\u4e3a\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 void build ( int u , int l , int r ) { tr [ u ] = { l , r }; if ( l == r ) { tr [ u ]. v = c ; return ; } int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); pushup ( u ); // \u6700\u540e\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u6700\u503c } \u8be2\u95ee & \u4fee\u6539 \u6211\u4eec\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u9700\u8981\u67e5\u8be2\u533a\u95f4\u5185 \u7b2c\u4e00\u4e2a \u5927\u4e8e\u7b49\u4e8e\u67e5\u8be2\u6570 \\(x\\) \u7684\u6570\u3002\u5982\u4f55\u4fdd\u8bc1\u67e5\u8be2\u5230\u7684\u6570\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u6570\u5462\uff1f \u6839\u636e\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u4e92\u76f8\u72ec\u7acb\uff0c\u4e92\u4e0d\u5e72\u6270\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u641c\u5de6\u5b50\u6811\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u5927\u4e8e\u7b49\u4e8e \\(x\\) \uff0c\u90a3\u4e48\u5c31\u641c\u5de6\u5b50\u6811\uff0c\u5426\u5219\uff0c\u641c\u53f3\u5b50\u6811\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u67e5\u8be2\u7ed3\u679c\u603b\u662f\u5728\u524d\u9762\u7684\u3002 \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5b58\u50a8\u7b54\u6848\u5462\uff1f\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf \\(ans\\) \uff0c\u5f53\u67e5\u8be2\u5230\u7684\u6570\u7b49\u4e8e\u7bb1\u5b50\u5bb9\u91cfC\u65f6\uff0c\u5373\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7bb1\u5b50\u6765\u653e\u5165\u7269\u54c1\uff0c ans++ \u3002 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u627e\u5230\u76ee\u6807\u6570\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5bf9 \u7bb1\u5b50\u5269\u4f59\u5bb9\u91cf \u8fdb\u884c\u4fee\u6539\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u4fee\u6539\u64cd\u4f5c\u76f4\u63a5\u5199\u5165\u8be2\u95ee\u51fd\u6570\u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 void query ( int u , int x ) { if ( tr [ u ]. l == tr [ u ]. r ) { if ( tr [ u ]. v == c ) ans ++ ; // \u9700\u8981\u4e00\u4e2a\u65b0\u7bb1\u5b50 tr [ u ]. v -= x ; // \u4fee\u6539\u5f53\u524d\u7bb1\u5b50\u5bb9\u91cf return ; } if ( tr [ u << 1 ]. v >= x ) query ( u << 1 , x ); // \u5de6\u5b50\u6811\u53ef\u4ee5\u67e5\u8be2 else query ( u << 1 | 1 , x ); // \u67e5\u8be2\u53f3\u5b50\u6811 pushup ( u ); // \u4fee\u6539\u5f53\u524d\u8282\u70b9\u6700\u503c } \u95ee\u9898\u4e8c \u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a \\(multiset\\) \u5b58\u50a8\u7bb1\u5b50\u7684\u5269\u4f59\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528 lower_bound \u6765\u67e5\u627e\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u3002 1 2 3 4 5 6 7 8 9 10 multiset < int > S ; for ( int i = 0 ; i < n ; i ++ ) { auto it = S . lower_bound ( a [ i ]); if ( it == S . end ()) S . insert ( c - a [ i ]); // \u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7bb1\u5b50\u5b58\u50a8 else { int x = ( * it ) - a [ i ]; // \u4fee\u6539\u5f53\u524d\u7bb1\u5b50\u5bb9\u91cf S . erase ( it ); S . insert ( x ); } } \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 #include <bits/stdc++.h> using namespace std ; const int N = 1000010 ; int n , c , ans ; int a [ N ]; struct node { int l , r ; int v ; } tr [ N << 2 ]; void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } void build ( int u , int l , int r ) { tr [ u ] = { l , r }; if ( l == r ) { tr [ u ]. v = c ; return ; } int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); pushup ( u ); } void query ( int u , int x ) { if ( tr [ u ]. l == tr [ u ]. r ) { if ( tr [ u ]. v == c ) { ans ++ ; } tr [ u ]. v -= x ; return ; } if ( tr [ u << 1 ]. v >= x ) query ( u << 1 , x ); else query ( u << 1 | 1 , x ); pushup ( u ); } void solve () { scanf ( \"%d%d\" , & n , & c ); for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & a [ i ]); ans = 0 ; // problem 1 build ( 1 , 1 , n ); for ( int i = 0 ; i < n ; i ++ ) query ( 1 , a [ i ]); // problem 2 multiset < int > S ; for ( int i = 0 ; i < n ; i ++ ) { auto it = S . lower_bound ( a [ i ]); if ( it == S . end ()) S . insert ( c - a [ i ]); else { int x = ( * it ) - a [ i ]; S . erase ( it ); S . insert ( x ); } } cout << ans << ' ' << S . size () << endl ; } int main () { int T = 1 ; cin >> T ; while ( T -- ) solve (); return 0 ; } \u8fd0\u884c\u7ed3\u679c","title":"Bin Packing Problem(\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2)"},{"location":"algorithm/segmentTree/4/#_1","text":"","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"algorithm/segmentTree/4/#_2","text":"\u6709 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u5bb9\u91cf\u4e3a \\(a[i]\\) \uff0c\u6709\u4e00\u79cd\u7bb1\u5b50\uff08\u65e0\u6570\u4e2a\uff09\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u7684\u5bb9\u91cf\u4e3a \\(C\\) \uff0c\u5c06\u7269\u54c1\u88c5\u5165\u7bb1\u4e2d\uff0c\u6309\u7167\u5982\u4e0b\u88c5\u6cd5\uff0c\u8bf7\u95ee\u6700\u5c11\u5404\u9700\u8981\u591a\u5c11\u4e2a\u7bb1\u5b50\uff1a \u7b2c\u4e00\u79cd \uff1a\u6bcf\u6b21\u9009\u62e9\u4ece\u524d\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u4f59\u4e0b\u7a7a\u95f4\u80fd\u591f\u88c5\u4e0b\u5f53\u524d\u7269\u54c1\u7684\u7bb1\u5b50\uff0c\u628a\u7269\u54c1\u88c5\u5165\u5176\u4e2d\uff0c\u82e5\u6ca1\u627e\u5230\uff0c\u5219\u589e\u52a0\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5c06\u7269\u54c1\u88c5\u5165\u589e\u52a0\u7684\u7bb1\u5b50\u4e2d\u3002 \u7b2c\u4e8c\u79cd \uff0c\u6bcf\u6b21\u9009\u62e9\u4f59\u4e0b\u7a7a\u95f4\u6700\u5c0f\u7684\u4e14\u80fd\u88c5\u4e0b\u5f53\u524d\u7269\u54c1\u7684\u7bb1\u5b50\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u589e\u52a0\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5c06\u7269\u54c1\u88c5\u5165\u589e\u52a0\u7684\u7bb1\u5b50\u4e2d\u3002","title":"\u9898\u76ee\u7ffb\u8bd1"},{"location":"algorithm/segmentTree/4/#_3","text":"\\(1\u2264n\u226410^6, 1\u2264C\u226410^9\\) \\(1 \\le a_i \\le C\\)","title":"\u6570\u636e\u8303\u56f4"},{"location":"algorithm/segmentTree/4/#_4","text":"","title":"\u7b97\u6cd5\u4e0e\u601d\u8def"},{"location":"algorithm/segmentTree/4/#_5","text":"\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u5269\u4f59\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8e \\(a[i]\\) \u7684\u76d2\u5b50\uff0c\u7136\u540e\u5c06\u7269\u54c1\u653e\u5165\u8be5\u76d2\u5b50\u5185\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u6bcf\u6b21\u67e5\u8be2\u5230\u533a\u95f4\u5185\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(a[i]\\) \u7684\u6570\uff0c\u5e76\u4e14\u4fee\u6539\u5b83\u3002 \u533a\u95f4\u5185\u5feb\u901f\u67e5\u8be2\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u5230\u7ebf\u6bb5\u6811\u6b64\u7c7b\u6570\u636e\u7ed3\u6784\u3002 \u9996\u5148\uff0c\u6784\u9020\u8282\u70b9\u3002\u6211\u4eec\u9700\u8981 \\(l,r\\) \u6765\u8868\u793a\u5f53\u524d\u533a\u95f4\uff0c\u9009\u53d6 \\(v\\) \u6765\u8868\u793a\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002 \u524d\u6587 \u5df2\u7ecf\u8bc1\u660e\uff0c\u8282\u70b9\u4ec5\u5305\u542b \\(v\\) \u65f6\uff0c\u7236\u8282\u70b9\u53ef\u4ee5\u4ece\u5de6\u53f3\u5b50\u8282\u70b9\u66f4\u65b0\u4fe1\u606f\uff0c\u6c42\u51fa\u5f53\u524d\u7236\u8282\u70b9\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002","title":"\u95ee\u9898\u4e00"},{"location":"algorithm/segmentTree/4/#node","text":"1 2 3 4 struct node { int l , r ; int v ; // \u533a\u95f4[l, r]\u5185\u7684\u6700\u5927\u503c } tr [ N << 2 ];","title":"\u5199\u51fa\u8282\u70b9 \\(node\\)"},{"location":"algorithm/segmentTree/4/#pushupint-u","text":"1 2 3 void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); }","title":"\u72b6\u6001\u8f6c\u79fb\u51fd\u6570 pushup(int u)"},{"location":"algorithm/segmentTree/4/#_6","text":"\u6211\u4eec\u9700\u8981\u9009\u62e9\u591a\u5927\u7684\u533a\u95f4\u6765\u5efa\u6811\u5462\uff1f \u9996\u5148\u6700\u574f\u7684\u60c5\u51b5\u4f1a\u662f\u5982\u4f55\uff1f\u6700\u574f\u7684\u60c5\u51b5\u5e94\u8be5\u662f\uff0c\u6709 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u9700\u8981 \\(n\\) \u4e2a\u7bb1\u5b50\u6765\u5b58\u50a8\u3002\u5373\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\uff0c\u90fd\u4e3a\u7bb1\u5b50\u7684\u6700\u5927\u5bb9\u91cf\u3002 \u56e0\u6b64\uff0c\u5efa\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9009\u62e9 \\([1,n]\\) \u7684\u533a\u95f4\u3002\u9009\u62e9\u7bb1\u5b50\u5bb9\u91cf \\(C\\) \u4f5c\u4e3a\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 void build ( int u , int l , int r ) { tr [ u ] = { l , r }; if ( l == r ) { tr [ u ]. v = c ; return ; } int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); pushup ( u ); // \u6700\u540e\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u6700\u503c }","title":"\u5efa\u6811\u64cd\u4f5c"},{"location":"algorithm/segmentTree/4/#_7","text":"\u6211\u4eec\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u9700\u8981\u67e5\u8be2\u533a\u95f4\u5185 \u7b2c\u4e00\u4e2a \u5927\u4e8e\u7b49\u4e8e\u67e5\u8be2\u6570 \\(x\\) \u7684\u6570\u3002\u5982\u4f55\u4fdd\u8bc1\u67e5\u8be2\u5230\u7684\u6570\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u6570\u5462\uff1f \u6839\u636e\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u4e92\u76f8\u72ec\u7acb\uff0c\u4e92\u4e0d\u5e72\u6270\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u641c\u5de6\u5b50\u6811\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u5927\u4e8e\u7b49\u4e8e \\(x\\) \uff0c\u90a3\u4e48\u5c31\u641c\u5de6\u5b50\u6811\uff0c\u5426\u5219\uff0c\u641c\u53f3\u5b50\u6811\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u67e5\u8be2\u7ed3\u679c\u603b\u662f\u5728\u524d\u9762\u7684\u3002 \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5b58\u50a8\u7b54\u6848\u5462\uff1f\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf \\(ans\\) \uff0c\u5f53\u67e5\u8be2\u5230\u7684\u6570\u7b49\u4e8e\u7bb1\u5b50\u5bb9\u91cfC\u65f6\uff0c\u5373\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7bb1\u5b50\u6765\u653e\u5165\u7269\u54c1\uff0c ans++ \u3002 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u627e\u5230\u76ee\u6807\u6570\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5bf9 \u7bb1\u5b50\u5269\u4f59\u5bb9\u91cf \u8fdb\u884c\u4fee\u6539\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u4fee\u6539\u64cd\u4f5c\u76f4\u63a5\u5199\u5165\u8be2\u95ee\u51fd\u6570\u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 void query ( int u , int x ) { if ( tr [ u ]. l == tr [ u ]. r ) { if ( tr [ u ]. v == c ) ans ++ ; // \u9700\u8981\u4e00\u4e2a\u65b0\u7bb1\u5b50 tr [ u ]. v -= x ; // \u4fee\u6539\u5f53\u524d\u7bb1\u5b50\u5bb9\u91cf return ; } if ( tr [ u << 1 ]. v >= x ) query ( u << 1 , x ); // \u5de6\u5b50\u6811\u53ef\u4ee5\u67e5\u8be2 else query ( u << 1 | 1 , x ); // \u67e5\u8be2\u53f3\u5b50\u6811 pushup ( u ); // \u4fee\u6539\u5f53\u524d\u8282\u70b9\u6700\u503c }","title":"\u8be2\u95ee &amp; \u4fee\u6539"},{"location":"algorithm/segmentTree/4/#_8","text":"\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a \\(multiset\\) \u5b58\u50a8\u7bb1\u5b50\u7684\u5269\u4f59\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528 lower_bound \u6765\u67e5\u627e\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u3002 1 2 3 4 5 6 7 8 9 10 multiset < int > S ; for ( int i = 0 ; i < n ; i ++ ) { auto it = S . lower_bound ( a [ i ]); if ( it == S . end ()) S . insert ( c - a [ i ]); // \u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7bb1\u5b50\u5b58\u50a8 else { int x = ( * it ) - a [ i ]; // \u4fee\u6539\u5f53\u524d\u7bb1\u5b50\u5bb9\u91cf S . erase ( it ); S . insert ( x ); } }","title":"\u95ee\u9898\u4e8c"},{"location":"algorithm/segmentTree/4/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 #include <bits/stdc++.h> using namespace std ; const int N = 1000010 ; int n , c , ans ; int a [ N ]; struct node { int l , r ; int v ; } tr [ N << 2 ]; void pushup ( int u ) { tr [ u ]. v = max ( tr [ u << 1 ]. v , tr [ u << 1 | 1 ]. v ); } void build ( int u , int l , int r ) { tr [ u ] = { l , r }; if ( l == r ) { tr [ u ]. v = c ; return ; } int mid = l + r >> 1 ; build ( u << 1 , l , mid ); build ( u << 1 | 1 , mid + 1 , r ); pushup ( u ); } void query ( int u , int x ) { if ( tr [ u ]. l == tr [ u ]. r ) { if ( tr [ u ]. v == c ) { ans ++ ; } tr [ u ]. v -= x ; return ; } if ( tr [ u << 1 ]. v >= x ) query ( u << 1 , x ); else query ( u << 1 | 1 , x ); pushup ( u ); } void solve () { scanf ( \"%d%d\" , & n , & c ); for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & a [ i ]); ans = 0 ; // problem 1 build ( 1 , 1 , n ); for ( int i = 0 ; i < n ; i ++ ) query ( 1 , a [ i ]); // problem 2 multiset < int > S ; for ( int i = 0 ; i < n ; i ++ ) { auto it = S . lower_bound ( a [ i ]); if ( it == S . end ()) S . insert ( c - a [ i ]); else { int x = ( * it ) - a [ i ]; S . erase ( it ); S . insert ( x ); } } cout << ans << ' ' << S . size () << endl ; } int main () { int T = 1 ; cin >> T ; while ( T -- ) solve (); return 0 ; }","title":"\u4ee3\u7801"},{"location":"algorithm/segmentTree/4/#_10","text":"","title":"\u8fd0\u884c\u7ed3\u679c"},{"location":"java/","text":"\u5728\u6b64\u9e23\u8c22 \u9752\u7a7a\u306e\u971e\u5149","title":"Java \u524d\u8a00"},{"location":"java/#_1","text":"","title":"\u5728\u6b64\u9e23\u8c22 \u9752\u7a7a\u306e\u971e\u5149"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/","text":"Java\u8bed\u6cd5\u89c4\u8303 \u6240\u6709\u7684Java\u8bed\u53e5\u5fc5\u987b\u4ee5 ; \u7ed3\u5c3e\uff01 \u65e0\u8bba\u662f () \u3001 [] \u8fd8\u662f {} \uff0c\u6240\u6709\u7684\u62ec\u53f7\u5fc5\u987b\u4e00\u4e00\u5339\u914d\uff01 \u4e3b\u65b9\u6cd5\u7684\u4ee3\u7801\u53ea\u80fd\u5199\u5728 {} \u4e2d\uff01 Java\u57fa\u7840\u8bed\u6cd5\uff08\u9762\u5411\u8fc7\u7a0b\uff09 \u5728\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u9762\u5411\u8fc7\u7a0b\u7684\u7f16\u7a0b\u601d\u7ef4\uff0c\u5982\u679c\u4f60\u5b66\u4e60\u8fc7C\u8bed\u8a00\u548cPython\u5c31\u4f1a\u5f88\u8f7b\u677e\uff01 \u53d8\u91cf\u548c\u5173\u952e\u5b57 \u53d8\u91cf \u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u53ef\u53d8\u7684\u91cf\uff0c\u4f8b\u5982\u5b9a\u4e49\u4e00\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\uff08int\u5c31\u662f\u6574\u6570\u7c7b\u578b\uff09\uff1a 1 2 3 int a = 10 ; a = 20 ; a = 30 ; \u6211\u4eec\u80fd\u591f\u968f\u610f\u66f4\u6539\u5b83\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u503c\u662f\u968f\u65f6\u53ef\u53d8\u7684\uff0c\u6211\u4eec\u79f0\u4e3a\u53d8\u91cf\u3002\u53d8\u91cf\u53ef\u4ee5\u662f\u7c7b\u7684\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u65b9\u6cd5\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u6211\u4eec\u73b0\u9636\u6bb5\u4e3b\u8981\u7528\u5c40\u90e8\u53d8\u91cf\uff0c\u7c7b\u53d8\u91cf\u5728\u9762\u5411\u5bf9\u8c61\u518d\u8bb2\u89e3\uff09 \u53d8\u91cf\u548cC\u8bed\u8a00\u4e2d\u7684\u53d8\u91cf\u4e0d\u540c\uff0cJava\u4e2d\u7684\u53d8\u91cf\u662f\u5b58\u653e\u5728JVM\u7ba1\u7406\u7684\u5185\u5b58\u4e2d\uff0cC\u8bed\u8a00\u7684\u53d8\u91cf\u5b58\u653e\u5728\u5185\u5b58\uff08\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u624b\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u800cJava\u4f1a\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u6e05\u7406\u53d8\u91cf\u5360\u636e\u7684\u5185\u5b58\uff09Java\u548cC++\u5f88\u7c7b\u4f3c\uff0c\u4f46\u662f\u6ca1\u6709\u6307\u9488\uff01Java\u4e5f\u53ebC++-- Java\u662f\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u53ea\u6709\u660e\u786e\u5b9a\u4e49\u4e86\u53d8\u91cf\u4e4b\u540e\uff0c\u4f60\u624d\u80fd\u4f7f\u7528\uff01\u4e00\u65e6\u88ab\u6307\u5b9a\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u5b83\u5c06\u59cb\u7ec8\u88ab\u8ba4\u4e3a\u662f\u5bf9\u5e94\u7684\u7c7b\u578b\uff08\u548cJS\u4e0d\u4e00\u6837\uff01\uff09 \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u7684\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 [ \u7c7b\u578b ] [ \u6807\u8bc6\u7b26 ( \u540d\u5b57 ) ] = [ \u521d\u59cb\u503c ( \u53ef\u9009 ) ] int a = 10 ; \u6ce8\u610f\uff1a\u6807\u8bc6\u7b26\u4e0d\u80fd\u4e3a\u4ee5\u4e0b\u5185\u5bb9\uff1a \u6807\u8bc6\u7b26\u4ee5\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf(_)\u548c\u7f8e\u5143\u7b26\u53f7($)\u7ec4\u6210\uff0c\u4f46\u662f\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u5927\u5c0f\u5199\u654f\u611f\uff01 \u4e0d\u80fd\u6709\u7a7a\u683c\u3001@\u3001#\u3001+\u3001-\u3001/ \u7b49\u7b26\u53f7 \u5e94\u8be5\u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u79f0\uff0c\u8fbe\u5230\u89c1\u540d\u77e5\u610f\u7684\u76ee\u7684\uff0c\u6700\u597d\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934 \u4e0d\u53ef\u4ee5\u662f true \u548c false \u4e0d\u80fd\u4e0eJava\u8bed\u8a00\u7684\u5173\u952e\u5b57\u91cd\u540d \u5173\u952e\u5b57 \u5305\u62ec\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\u7b49\uff0c\u4e86\u89e3\u5c31\u884c\uff0c\u4e0d\u7528\u53bb\u8bb0\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u4e00\u70b9\u4e00\u70b9\u5e26\u5927\u5bb6\u8ba4\u8bc6\uff01 \u5e38\u91cf \u5e38\u91cf\u5c31\u662f\u65e0\u6cd5\u4fee\u6539\u503c\u7684\u53d8\u91cf\uff0c\u5e38\u91cf\u7684\u503c\uff0c\u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21\uff1a 1 2 final int a = 10 ; a = 10 ; //\u62a5\u9519\uff01 \u5e38\u91cf\u524d\u9762\u5fc5\u987b\u6dfb\u52a0final\u5173\u952e\u5b57\uff08C\u8bed\u8a00\u91cc\u9762\u662fconst\uff0c\u867d\u7136Java\u4e5f\u6709\uff0c\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\uff01\uff09 \u8fd9\u53ea\u662ffinal\u5173\u952e\u5b57\u7684\u7b2c\u4e00\u4e2a\u7528\u6cd5\uff0c\u540e\u9762\u8fd8\u4f1a\u6709\u66f4\u591a\u7684\u7528\u6cd5\u3002 \u6ce8\u91ca \u517b\u6210\u6ce8\u91ca\u7684\u597d\u4e60\u60ef\uff0c\u4e0d\u7136\u4ee5\u540e\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\u81ea\u5df1\u7684\u4ee3\u7801\uff01\u6ce8\u91ca\u5305\u62ec\u5355\u884c\u6ce8\u91ca\u548c\u591a\u884c\u6ce8\u91ca\uff1a 1 2 3 4 5 6 7 8 //\u6211\u662f\u5355\u884c\u6ce8\u91ca /** * \u6211\u662f * \u591a\u884c\u6ce8\u91ca */ //TODO \u5f85\u505a\u6807\u8bb0 \u57fa\u672c\u6570\u636e\u7c7b\u578b Java\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u4e24\u5927\u7c7b\uff0c\u5f15\u7528\u7c7b\u578b\u6211\u4eec\u5728\u9762\u5411\u5bf9\u8c61\u65f6\u518d\u63d0\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u91cd\u70b9\u4e2d\u7684\u91cd\u70b9\uff01\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6709\u54ea\u4e9b\u7c7b\u578b\u3002\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\uff0c\u5e76\u4e0d\u662f\u4ed6\u4eec\u7684\u7cbe\u5ea6\u5982\u4f55\uff0c\u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u6709\u591a\u5927\uff0c\u800c\u662f\u4e3a\u4ec0\u4e48Java\u4f1a\u7ed9\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e9b\u7c7b\u578b\uff0c\u8ba1\u7b97\u673a\u662f\u600e\u4e48\u8868\u793a\u8fd9\u4e9b\u7c7b\u578b\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u591f\u66f4\u597d\u7684\u8bb0\u5fc6\u4ed6\u4eec\u7684\u7cbe\u5ea6\u3001\u8868\u793a\u7684\u8303\u56f4\u5927\u5c0f\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4ece\u8ba1\u7b97\u673a\u539f\u7406\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5e26\u9886\u5927\u5bb6\u8d70\u8fdbJava\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u8fd9\u4e00\u90e8\u5206\u7a0d\u5fae\u6709\u70b9\u70e7\u8111\uff0c\u4f46\u662f\u662f\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5982\u679c\u4f60\u638c\u63e1\u4e86\u8fd9\u4e9b\uff0c\u4efb\u4f55\u76f8\u5173\u7684\u9762\u8bd5\u9898\u90fd\u96be\u4e0d\u5012\u4f60\uff01\uff08\u5982\u679c\u4f60\u5b66\u4e60\u8fc7\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff09 \u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6240\u6709\u7684\u5185\u5bb9\u90fd\u662f\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8868\u793a\u3002\u5341\u8fdb\u5236\u662f\u4ee510\u4e3a\u8fdb\u4f4d\uff0c\u59829+1=10\uff1b\u4e8c\u8fdb\u5236\u5219\u662f\u6ee12\u8fdb\u4f4d\uff08\u56e0\u4e3a\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u662f\u7535\u5b50\u7684\uff0c\u7535\u5e73\u4fe1\u53f7\u53ea\u6709\u9ad8\u4f4d\u548c\u4f4e\u4f4d\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6682\u4e14\u7406\u89e3\u4e3a\u901a\u7535\u548c\u4e0d\u901a\u7535\uff0c\u9ad8\u7535\u5e73\u4ee3\u88681\uff0c\u4f4e\u7535\u5e73\u4ee3\u88680\uff0c\u7531\u4e8e\u53ea\u67090\u548c1\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u75282\u8fdb\u5236\u8868\u793a\u6211\u4eec\u7684\u6570\u5b57\uff01\uff09\u6bd4\u59821+1=10=2^1+0\uff0c\u4e00\u4e2a\u4f4d\u4e5f\u53eb\u4e00\u4e2abit\uff0c8\u4e2abit\u79f0\u4e3a1\u5b57\u8282\uff0c16\u4e2abit\u79f0\u4e3a\u4e00\u4e2a\u5b57\uff0c32\u4e2abit\u79f0\u4e3a\u4e00\u4e2a\u53cc\u5b57\uff0c64\u4e2abit\u79f0\u4e3a\u4e00\u4e2a\u56db\u5b57\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u5b57\u8282\u6765\u63cf\u8ff0\u6570\u636e\u5927\u5c0f\u3002 \u5341\u8fdb\u5236\u76847 -> \u5728\u4e8c\u8fdb\u5236\u4e2d\u4e3a 111 = 2^2 + 2^1 + 2^0 \u73b0\u5728\u67094\u4e2abit\u4f4d\uff0c\u6700\u5927\u80fd\u591f\u8868\u793a\u591a\u5927\u7684\u6570\u5b57\u5462\uff1f \u6700\u5c0f\uff1a0000 => 0 \u6700\u5927\uff1a1111 => 2^3+2^2+2^1+2^0 => 8 + 4 + 2 + 1 = 15 \u5728Java\u4e2d\uff0c\u65e0\u8bba\u662f\u5c0f\u6570\u8fd8\u662f\u6574\u6570\uff0c\u4ed6\u4eec\u90fd\u8981\u5e26\u6709\u7b26\u53f7\uff08\u548cC\u8bed\u8a00\u4e0d\u540c\uff0cC\u8bed\u8a00\u6709\u65e0\u7b26\u53f7\u6570\uff09\u6240\u4ee5\uff0c\u9996\u4f4d\u5c31\u4f5c\u4e3a\u6211\u4eec\u7684\u7b26\u53f7\u4f4d\uff0c\u8fd8\u662f\u4ee54\u4e2abit\u4e3a\u4f8b\uff0c\u9996\u4f4d\u73b0\u5728\u4f5c\u4e3a\u7b26\u53f7\u4f4d\uff081\u4ee3\u8868\u8d1f\u6570\uff0c0\u4ee3\u8868\u6b63\u6570\uff09\uff1a \u6700\u5c0f\uff1a1111 => -(2^2+2^1+2^0) => -7 \u6700\u5927\uff1a0111 => +(2^2+2^1+2^0) => +7 => 7 \u73b0\u5728\uff0c\u6211\u4eec4bit\u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u53d8\u4e3a\u4e86-7~+7\uff0c\u8fd9\u6837\u7684\u8868\u793a\u65b9\u5f0f\u79f0\u4e3a\u539f\u7801\u3002 \u8ba1\u7b97\u673a\u4e2d\u7684\u52a0\u51cf\u6cd5 \u539f\u7801 \u867d\u7136\u539f\u7801\u8868\u793a\u7b80\u5355\uff0c\u4f46\u662f\u539f\u7801\u5728\u505a\u52a0\u51cf\u6cd5\u7684\u65f6\u5019\uff0c\u5f88\u9ebb\u70e6\uff01\u4ee54bit\u4f4d\u4e3a\u4f8b\uff1a 1+(-1) = 0001 + 1001 = \u600e\u4e48\u8ba9\u8ba1\u7b97\u673a\u53bb\u8ba1\u7b97\uff1f\uff08\u867d\u7136\u6211\u4eec\u77e5\u9053\u8be5\u53bb\u600e\u4e48\u7b97\uff0c\u4f46\u662f\u8ba1\u7b97\u673a\u4e0d\u77e5\u9053\uff01\uff09 \u6211\u4eec\u5f97\u521b\u9020\u4e00\u79cd\u66f4\u597d\u7684\u8868\u793a\u65b9\u5f0f\uff01\u4e8e\u662f\u6211\u4eec\u5f15\u5165\u4e86\u53cd\u7801\uff1a \u53cd\u7801 \u6b63\u6570\u7684\u53cd\u7801\u662f\u5176\u672c\u8eab \u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a, \u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4e2a\u4f4d\u53d6\u53cd \u7ecf\u8fc7\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u518d\u6765\u8fdb\u884c\u52a0\u51cf\u6cd5\uff1a 1+(-1) = 0001 + 1110 = 1111 => -0 \uff08\u76f4\u63a5\u76f8\u52a0\uff0c\u8fd9\u6837\u5c31\u7b80\u5355\u591a\u4e86\uff01\uff09 \u601d\u8003\uff1a1111\u4ee3\u8868-0\uff0c0000\u4ee3\u8868+0\uff0c\u5728\u6211\u4eec\u5b9e\u6570\u7684\u8303\u56f4\u5185\uff0c0\u6709\u6b63\u8d1f\u4e4b\u5206\u5417\uff1f 0\u65e2\u4e0d\u662f\u6b63\u6570\u4e5f\u4e0d\u662f\u8d1f\u6570\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u6837\u7684\u8868\u793a\u4f9d\u7136\u4e0d\u591f\u5408\u7406\uff01 \u8865\u7801 \u6839\u636e\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u90a3\u5c31\u662f\u8865\u7801\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a \u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u5176\u672c\u8eab \uff08\u4e0d\u53d8\uff01\uff09 \u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a, \u7b26\u53f7\u4f4d\u4e0d\u53d8, \u5176\u4f59\u5404\u4f4d\u53d6\u53cd, \u6700\u540e+1. (\u5373\u5728\u53cd\u7801\u7684\u57fa\u7840\u4e0a+1) \u5176\u5b9e\u73b0\u5728\u5c31\u5df2\u7ecf\u80fd\u591f\u60f3\u901a\u4e86\uff0c-0\u5176\u5b9e\u5df2\u7ecf\u88ab\u6d88\u9664\u4e86\uff01\u6211\u4eec\u518d\u6765\u770b\u4e0a\u9762\u7684\u8fd0\u7b97\uff1a 1+(-1) = 0001 + 1111 = (1)0000 => +0 \uff08\u73b0\u5728\u65e0\u8bba\u4f60\u600e\u4e48\u7b97\uff0c\u4e5f\u4e0d\u4f1a\u6709-0\u4e86\uff01\uff09 \u6240\u4ee5\u73b0\u5728\uff0c4bit\u4f4d\u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u662f\uff1a-8~+7\uff08Java\u4f7f\u7528\u7684\u5c31\u662f\u8865\u7801\uff01\uff09 \u4ee5\u4e0a\u5185\u5bb9\u662f\u91cd\u70b9\uff0c \u662f\u4e00\u5b9a\u8981\u638c\u63e1\u7684\u77e5\u8bc6\uff0c\u8fd9\u4e9b\u77e5\u8bc6\u662f\u4f60\u5728\u9762\u8bd5\u4e2d\u7684\u6700\u7ec8\u9632\u7ebf\uff01\u6709\u4e86\u8fd9\u4e9b\u7406\u8bba\u57fa\u7840\uff0c\u65e0\u8bba\u9762\u8bd5\u9898\u5982\u4f55\u53d8\u6362\uff0c\u90fd\u80fd\u591f\u901a\u8fc7\u7406\u8bba\u77e5\u8bc6\u6765\u7834\u89e3 \u6574\u6570\u7c7b\u578b \u6574\u6570\u7c7b\u578b\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\u7c7b\u578b\uff01\u65e2\u7136\u6211\u4eec\u77e5\u9053\u4e86\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\u662f\u5982\u4f55\u8868\u793a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u6765\u8868\u8fbe\u6211\u4eec\u5341\u8fdb\u5236\u7684\u5185\u5bb9\u4e86\u3002 \u5728Java\u4e2d\uff0c\u6574\u6570\u7c7b\u578b\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\uff1a byte \u5b57\u8282\u578b \uff088\u4e2abit\uff0c\u4e5f\u5c31\u662f1\u4e2a\u5b57\u8282\uff09\u8303\u56f4\uff1a-128~+127 short \u77ed\u6574\u5f62\uff0816\u4e2abit\uff0c\u4e5f\u5c31\u662f2\u4e2a\u5b57\u8282\uff09\u8303\u56f4\uff1a-32768~+32767 int \u6574\u5f62\uff0832\u4e2abit\uff0c\u4e5f\u5c31\u662f4\u4e2a\u5b57\u8282\uff09\u6700\u5e38\u7528\u7684\u7c7b\u578b\uff01 long \u957f\u6574\u5f62\uff0864\u4e2abit\uff0c\u4e5f\u5c31\u662f8\u4e2a\u5b57\u8282\uff09\u6700\u540e\u9700\u8981\u6dfb\u52a0l\u6216L long\u90fd\u88c5\u4e0d\u4e0b\u600e\u4e48\u529e\uff1fBigInteger\uff01 \u6570\u5b57\u5df2\u7ecf\u8fbe\u5230byte\u7684\u6700\u5927\u503c\u4e86\uff0c\u8fd8\u80fd\u52a0\u5417\uff1f\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u4ee54bit\u4e3a\u4f8b\uff1a 0111 + 0001 = 1000 => -8\uff08\u4f60\u6ca1\u770b\u9519\uff0c\u5c31\u662f\u8fd9\u6837\uff01\uff09 \u6574\u6570\u8fd8\u80fd\u4f7f\u75288\u8fdb\u5236\u300116\u8fdb\u5236\u8868\u793a\uff1a \u5341\u8fdb\u5236\u4e3a15 = \u516b\u8fdb\u5236\u8868\u793a\u4e3a017 = \u5341\u516d\u8fdb\u5236\u8868\u793a\u4e3a 0xF = \u4e8c\u8fdb\u5236\u8868\u793a 1111 (\u4ee3\u7801\u91cc\u9762\u4e0d\u80fd\u4f7f\u7528\u4e8c\u8fdb\u5236\uff01) \u5b57\u7b26\u7c7b\u578b\u548c\u5b57\u7b26\u4e32 \u5728Java\u4e2d\uff0c\u5b58\u5728\u5b57\u7b26\u7c7b\u578b\uff0c\u5b83\u80fd\u591f\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff1a char \u5b57\u7b26\u578b\uff0816\u4e2abit\uff0c\u4e5f\u5c31\u662f2\u5b57\u8282\uff0c\u5b83\u4e0d\u5e26\u7b26\u53f7\uff01\uff09\u8303\u56f4\u662f0 ~ 65535 \u4f7f\u7528Unicode\u8868\u793a\u5c31\u662f\uff1a\\u0000 ~ \\uffff \u5b57\u7b26\u8981\u7528\u5355\u5f15\u53f7\u6269\u8d77\u6765\uff01\u6bd4\u5982 char c = '\u6de6'; \u5b57\u7b26\u5176\u5b9e\u672c\u8d28\u4e5f\u662f\u6570\u5b57\uff0c\u4f46\u662f\u8fd9\u4e9b\u6570\u5b57\u901a\u8fc7\u7f16\u7801\u8868\u8fdb\u884c\u6620\u5c04\uff0c\u4ee3\u8868\u4e86\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u6bd4\u5982\u5b57\u7b26 'A' \u7684ASCII\u7801\u5c31\u662f\u6570\u5b57 65 \uff0c\u6240\u4ee5\uff0cchar\u7c7b\u578b\u5176\u5b9e\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e0a\u9762\u7684\u6574\u6570\u7c7b\u578b\u3002 Java\u7684char\u91c7\u7528Unicode\u7f16\u7801\u8868\uff08\u4e0d\u662fASCII\u7f16\u7801\uff01\uff09\uff0cUnicode\u7f16\u7801\u8868\u5305\u542bASCII\u7684\u6240\u6709\u5185\u5bb9\uff0c\u540c\u65f6\u8fd8\u5305\u62ec\u4e86\u5168\u4e16\u754c\u7684\u8bed\u8a00\uff0cASCII\u53ea\u67091\u5b57\u8282\uff0c\u800cUnicode\u7f16\u7801\u662f2\u5b57\u8282\uff0c\u80fd\u591f\u4ee3\u886865536\u79cd\u6587\u5b57\uff0c\u8db3\u4ee5\u5305\u542b\u5168\u4e16\u754c\u7684\u6587\u5b57\u4e86\uff01\uff08\u6211\u4eec\u7f16\u8bd1\u51fa\u6765\u7684\u5b57\u8282\u7801\u6587\u4ef6\u4e5f\u662f\u4f7f\u7528Unicode\u7f16\u7801\u7684\uff0c\u6240\u4ee5\u5229\u7528\u8fd9\u79cd\u7279\u6027\uff0c\u5176\u5b9eJava\u652f\u6301\u4e2d\u6587\u53d8\u91cf\u540d\u79f0\u3001\u65b9\u6cd5\u540d\u79f0\u751a\u81f3\u662f\u7c7b\u540d\uff09 \u65e2\u7136char\u53ea\u80fd\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u90a3\u600e\u4e48\u624d\u80fd\u5305\u542b\u4e00\u53e5\u8bdd\u5462\uff1f\uff08\u5173\u4e8e\u6570\u7ec4\uff0c\u6211\u4eec\u8fd9\u91cc\u5148\u4e0d\u4e86\u89e3\uff0c\u6570\u7ec4\u6211\u4eec\u653e\u5728\u9762\u5411\u5bf9\u8c61\u7ae0\u8282\u8bb2\u89e3\uff09 String\u5c31\u662fJava\u4e2d\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\uff08\u6ce8\u610f\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u521b\u5efa\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u672c\u8d28\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e0d\u662f\u6211\u4eec\u7684\u57fa\u672c\u7c7b\u578b\uff09\u5b57\u7b26\u4e32\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4ee3\u8868\u4e00\u4e32\u5b57\u7b26\uff0c\u4e5f\u5c31\u662f\u4e00\u53e5\u5b8c\u6574\u7684\u8bdd\u3002 \u5b57\u7b26\u4e32\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\uff01\u6bd4\u5982\uff1aString str = \"\u4e00\u65e5\u4e09\u9910\u6ca1\u70e6\u607c\"; \u5c0f\u6570\u7c7b\u578b \u5c0f\u6570\u7c7b\u578b\u6bd4\u8f83\u96be\u7406\u89e3\uff08\u6bd4\u8f83\u96be\u7406\u89e3\u6307\u7684\u662f\u539f\u7406\uff0c\u4e0d\u662f\u4f7f\u7528\uff09\u9996\u5148\u6765\u770b\u770bJava\u4e2d\u7684\u5c0f\u6570\u7c7b\u578b\u5305\u542b\u54ea\u4e9b\uff1a float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b \uff0832bit\uff0c4\u5b57\u8282\uff09 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0864bit\uff0c8\u5b57\u8282\uff09 \u601d\u8003\uff1a\u5c0f\u6570\u7684\u8303\u56f4\u8be5\u600e\u4e48\u5b9a\u4e49\u5462\uff1f\u6211\u4eec\u9996\u5148\u8981\u4e86\u89e3\u7684\u662f\u5c0f\u6570\u5728\u8ba1\u7b97\u673a\u91cc\u9762\u662f\u5982\u4f55\u5b58\u653e\u7684\uff1a \u6839\u636e\u56fd\u9645\u6807\u51c6 IEEE 754\uff0c\u4efb\u610f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6d6e\u70b9\u6570 V \u53ef\u4ee5\u8868\u793a\u6210\u4e0b\u9762\u7684\u5f62\u5f0f\uff1a V = (-1)^S \u00d7 M \u00d7 2^E \uff081\uff09(-1)^S \u8868\u793a\u7b26\u53f7\u4f4d\uff0c\u5f53 S=0\uff0cV \u4e3a\u6b63\u6570\uff1b\u5f53 S=1\uff0cV \u4e3a\u8d1f\u6570\u3002 \uff082\uff09M \u8868\u793a\u6709\u6548\u6570\u5b57\uff0c\u5927\u4e8e\u7b49\u4e8e 1\uff0c\u5c0f\u4e8e 2\uff0c\u4f46\u6574\u6570\u90e8\u5206\u7684 1 \u4e0d\u53d8\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u7565\u3002\uff08\u4f8b\u5982\u5c3e\u6570\u4e3a1111010\uff0c\u90a3\u4e48M\u5b9e\u9645\u4e0a\u5c31\u662f1.111010\uff0c\u5c3e\u6570\u9996\u4f4d\u5fc5\u987b\u662f1\uff0c1\u540e\u9762\u7d27\u8ddf\u5c0f\u6570\u70b9\uff0c\u5982\u679c\u51fa\u73b00001111\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u53bb\u6389\u524d\u9762\u76840\uff0c\u79fb\u52a81\u5230\u9996\u4f4d\uff1b\u9898\u5916\u8bdd\uff1a\u968f\u7740\u65f6\u95f4\u7684\u53d1\u5c55\uff0cIEEE 754\u6807\u51c6\u9ed8\u8ba4\u7b2c\u4e00\u4f4d\u4e3a1\uff0c\u6545\u4e3a\u4e86\u80fd\u591f\u5b58\u653e\u66f4\u591a\u6570\u636e\uff0c\u5c31\u820d\u53bb\u4e86\u7b2c\u4e00\u4f4d\uff0c\u6bd4\u5982\u4fdd\u5b581.0101 \u7684\u65f6\u5019\uff0c \u53ea\u4fdd\u5b58 0101\uff0c\u8fd9\u6837\u80fd\u591f\u591a\u5b58\u50a8\u4e00\u4f4d\u6570\u636e\uff09 \uff083\uff092^E \u8868\u793a\u6307\u6570\u4f4d\u3002\uff08\u7528\u4e8e\u79fb\u52a8\u5c0f\u6570\u70b9\uff09 \u6bd4\u5982\uff1a \u5bf9\u4e8e\u5341\u8fdb\u5236\u7684 5.25 \u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u4e3a\uff1a101.01\uff0c\u76f8\u5f53\u4e8e\uff1a1.0101*2^2\u3002\u6240\u4ee5\uff0cS \u4e3a 0\uff0cM \u4e3a 1.0101\uff0cE \u4e3a 2\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6d6e\u70b9\u7c7b\u578b\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u7b26\u53f7\u548c\u5c3e\u6570\uff0c\u8fd8\u6709\u5b83\u7684\u9636\u7801\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5c31\u4e0d\u53bb\u8ba1\u7b97\u4e86\uff0c\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u53bb\u641c\u7d22\u76f8\u5173\u8d44\u6599\u3002 \u601d\u8003\uff1a\u5c31\u7b97double\u670964bit\u4f4d\u6570\uff0c\u4f46\u662f\u4f9d\u7136\u5b58\u5728\u7cbe\u5ea6\u9650\u5236\uff0c\u5982\u679c\u6211\u8981\u8fdb\u884c\u9ad8\u7cbe\u5ea6\u7684\u8ba1\u7b97\uff0c\u600e\u4e48\u529e\uff1fBigDecimal\uff01 \u5e03\u5c14\u7c7b\u578b \u5e03\u5c14\u7c7b\u578b\uff08boolean\uff09\u53ea\u6709 true \u548c false \u4e24\u79cd\u503c\uff0c\u4e5f\u5c31\u662f\u8981\u4e48\u4e3a\u771f\uff0c\u8981\u4e48\u4e3a\u5047\uff0c\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\u901a\u5e38\u7528\u4f5c\u6d41\u7a0b\u63a7\u5236\u5224\u65ad\u8bed\u53e5\u3002\uff08C\u8bed\u8a00\u4e00\u822c\u4f7f\u75280\u8868\u793afalse\uff0c\u96640\u4ee5\u5916\u7684\u6240\u6709\u6570\u90fd\u8868\u793atrue\uff09\u5e03\u5c14\u7c7b\u578b\u5360\u636e\u7684\u7a7a\u95f4\u5927\u5c0f\u5e76\u672a\u660e\u786e\u5b9a\u4e49\uff0c\u800c\u662f\u6839\u636e\u4e0d\u540c\u7684JVM\u4f1a\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 \u7c7b\u578b\u8f6c\u6362 \u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 \u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u652f\u6301\u5b57\u8282\u6570\u5c0f\u7684\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u8282\u6570\u5927\u7684\u7c7b\u578b\uff0c\u6574\u6570\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\u4e3a\u5c0f\u6570\u7c7b\u578b\uff0c\u8f6c\u6362\u89c4\u5219\u5982\u4e0b\uff1a byte\u2192short(char)\u2192int\u2192long\u2192float\u2192double \u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48long\u6bd4float\u5927\uff0c\u8fd8\u80fd\u8f6c\u6362\u4e3afloat\u5462\uff1f\u5c0f\u6570\u7684\u5b58\u50a8\u89c4\u5219\u8ba9float\u7684\u6700\u5927\u503c\u6bd4long\u8fd8\u5927\uff0c\u53ea\u662f\u53ef\u80fd\u4f1a\u4e22\u5931\u67d0\u4e9b\u4f4d\u4e0a\u7684\u7cbe\u5ea6\uff01 \u6240\u4ee5\uff0c\u5982\u4e0b\u7684\u4ee3\u7801\u5c31\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\uff1a 1 2 3 4 5 6 7 8 9 byte b = 9 ; short s = b ; int i = s ; long l = i ; float f = l ; double d = f ; System . out . println ( d ); //\u8f93\u51fa 9.0 \u663e\u793a\u7c7b\u578b\u8f6c\u6362 \u663e\u793a\u7c7b\u578b\u8f6c\u6362\u4e5f\u53eb\u505a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fdd\u53cd\u9690\u5f0f\u8f6c\u6362\u7684\u89c4\u5219\uff0c\u727a\u7272\u7cbe\u5ea6\u5f3a\u884c\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 1 2 3 4 5 int i = 128 ; byte b = ( byte ) i ; System . out . println ( b ); //\u8f93\u51fa -128 \u4e3a\u4ec0\u4e48\u7ed3\u679c\u662f-128\uff1f\u7cbe\u5ea6\u4e22\u5931\u4e86\uff01 int \u7c7b\u578b\u7684128\u8868\u793a\uff1a00000000 00000000 00000000 10000000 byte\u7c7b\u578b\u8f6c\u6362\u540e\u8868\u793a\uff1axxxxxxxx xxxxxxxx xxxxxxxx 10000000 => -128 \u6570\u636e\u7c7b\u578b\u81ea\u52a8\u63d0\u5347 \u5728\u53c2\u4e0e\u8fd0\u7b97\u65f6\uff08\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u8868\u8fbe\u5f0f\u4e2d\u65f6\uff0c\u81ea\u589e\u81ea\u51cf\u9664\u5916\uff09\uff0c\u6240\u6709\u7684byte\u578b\u3001short\u578b\u548cchar\u7684\u503c\u5c06\u88ab\u63d0\u5347\u5230int\u578b\uff1a 1 2 3 byte b = 105 ; b = b + 1 ; //\u62a5\u9519\uff01 System . out . println ( b ); \u8fd9\u4e2a\u7279\u6027\u662f\u7531 Java\u865a\u62df\u673a\u89c4\u8303 \u5b9a\u4e49\u7684\uff0c\u4e5f\u662f\u4e3a\u4e86\u63d0\u9ad8\u8fd0\u884c\u7684\u6548\u7387\u3002\u5176\u4ed6\u7684\u7279\u6027\u8fd8\u6709\uff1a \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662flong\u578b\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u662flong\u578b \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662ffloat\u578b\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u662ffloat\u578b \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662fdouble\u578b\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u662fdouble\u578b \u8fd0\u7b97\u7b26 \u8d4b\u503c\u548c\u7b97\u672f\u8fd0\u7b97\u7b26 \u8d4b\u503c\u8fd0\u7b97\u7b26 = \u662f\u6700\u5e38\u7528\u7684\u8fd0\u7b97\u7b26\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u6211\u4eec\u7b49\u53f7\u53f3\u8fb9\u7684\u7ed3\u679c\uff0c\u4f20\u9012\u7ed9\u7b49\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a 1 2 3 int a = 10 ; int b = 1 + 8 ; int c = 5 * 5 ; \u7b97\u672f\u8fd0\u7b97\u7b26\u4e5f\u5c31\u662f\u6211\u4eec\u5728\u5c0f\u5b66\u9636\u6bb5\u5b66\u4e60\u7684 + - * / % \uff0c\u5206\u522b\u4ee3\u8868\u52a0\u51cf\u4e58\u9664\u8fd8\u6709\u53d6\u4f59\uff0c\u4f8b\u5982\uff1a 1 2 3 4 int a = 2 ; int b = 3 ; int c = a * b ; //\u7ed3\u679c\u4e3a6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c + \u8fd8\u53ef\u4ee5\u7528\u4f5c\u5b57\u7b26\u4e32\u8fde\u63a5\u7b26\u4f7f\u7528\uff1a 1 System . out . println ( \"lbw\" + \"nb\" ); //lbwnb \u5f53\u7136\uff0c\u5b57\u7b26\u4e32\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5176\u4ed6\u7c7b\u578b\uff0c\u4f46\u662f\u4f1a\u5168\u90e8\u5f53\u505a\u5b57\u7b26\u4e32\u5904\u7406\uff1a 1 2 int a = 7 , b = 15 ; System . out . println ( \"lbw\" + a + b ); //lbw715 \u7b97\u672f\u8fd0\u7b97\u7b26\u8fd8\u5305\u62ec ++ \u548c -- \u4e5f\u5c31\u662f\u81ea\u589e\u548c\u81ea\u51cf\uff0c\u4ee5\u81ea\u589e\u4e3a\u4f8b\uff1a 1 2 3 int a = 10 ; a ++ ; System . out . println ( a ); //\u8f93\u51fa\u4e3a11 \u81ea\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26\u653e\u5728\u53d8\u91cf\u7684\u524d\u540e\u7684\u8fd4\u56de\u503c\u662f\u6709\u533a\u522b\u7684\uff1a 1 2 3 int a = 10 ; System . out . println ( a ++ ); //10 \uff08\u5148\u8fd4\u56de\u503c\uff0c\u518d\u81ea\u589e\uff09 System . out . println ( a ); //11 1 2 3 int a = 10 ; System . out . println ( ++ a ); //11 \uff08\u5148\u81ea\u589e\uff0c\u518d\u8fd4\u56de\u503c\uff09 System . out . println ( a ); //11 1 2 3 int a = 10 ; int b = 2 ; System . out . println ( b +++ a ++ ); //\u731c\u731c\u770b\u7ed3\u679c\u662f\u591a\u5c11 \u4e3a\u4e86\u4f7f\u5f97\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec += \u3001 -= \u3001 /= \u3001 *= \u3001 %= \uff0c\u548c\u81ea\u589e\u81ea\u51cf\u7c7b\u4f3c\uff0c\u5148\u6267\u884c\u8fd0\u7b97\uff0c\u518d\u8fd4\u56de\u7ed3\u679c\uff0c\u540c\u65f6\u81ea\u8eab\u6539\u53d8\uff1a 1 2 int a = 10 ; System . out . println ( a += 2 ); //\u7b49\u4ef7\u4e8e a = a + 2 \u5173\u7cfb\u8fd0\u7b97\u7b26 \u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c\u53ea\u80fd\u662f\u5e03\u5c14\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8981\u4e48\u4e3a\u771f\u8981\u4e48\u4e3a\u5047\uff0c\u5173\u7cfb\u8fd0\u7b97\u7b26\u5305\u62ec\uff1a 1 2 > < == //\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e >= <= != //\u5927\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e \u5173\u7cfb\u8fd0\u7b97\u7b26\u4e00\u822c\u53ea\u7528\u4e8e\u57fa\u672c\u7c7b\u578b\u7684\u6bd4\u8f83\uff0c\u8fd0\u7b97\u7ed3\u679c\u53ea\u80fd\u662fboolean\uff1a 1 2 3 4 5 int a = 10 ; int b = 2 ; boolean x = a > b ; System . out . println ( x ); //\u7ed3\u679c\u4e3a true \u903b\u8f91\u8fd0\u7b97\u7b26 \u903b\u8f91\u8fd0\u7b97\u7b26\u4e24\u8fb9\u53ea\u80fd\u662fboolean\u7c7b\u578b\u6216\u662f\u5173\u7cfb/\u903b\u8f91\u8fd0\u7b97\u8868\u8fbe\u5f0f\uff0c\u8fd4\u56de\u503c\u53ea\u80fd\u662fboolean\u7c7b\u578b\uff01\u903b\u8f91\u8fd0\u7b97\u7b26\u5305\u62ec\uff1a 1 2 3 && //\u4e0e\u8fd0\u7b97\uff0c\u8981\u6c42\u4e24\u8fb9\u540c\u65f6\u4e3atrue\u624d\u80fd\u8fd4\u56detrue || //\u6216\u8fd0\u7b97\uff0c\u8981\u6c42\u4e24\u8fb9\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u4e3atrue\u624d\u80fd\u8fd4\u56detrue ! //\u975e\u8fd0\u7b97\uff0c\u4e00\u822c\u653e\u5728\u8868\u8fbe\u5f0f\u6700\u524d\u9762\uff0c\u8868\u8fbe\u5f0f\u7528\u62ec\u53f7\u6269\u8d77\u6765\uff0c\u8868\u793a\u5bf9\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u8fdb\u884c\u53cd\u8f6c \u5b9e\u9645\u6848\u4f8b\u6765\u770b\u770b\uff1a 1 2 3 4 int a = 10 ; int b = 2 ; boolean x = a > b && a < b ; //\u600e\u4e48\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u5462 System . out . println ( x ); //false 1 2 3 4 int a = 10 ; int b = 2 ; boolean x = a > b || a <= b ; //\u4e00\u5b9a\u6709\u4e00\u4e2a\u6ee1\u8db3\uff01 System . out . println ( x ); //true 1 2 3 4 int a = 10 ; int b = 2 ; boolean x = ! ( a > b ); //\u5bf9\u7ed3\u679c\u8fdb\u884c\u53cd\u8f6c\uff0c\u672c\u6765\u5e94\u8be5\u662ftrue System . out . println ( x ); //false \u4f4d\u8fd0\u7b97\u7b26 1 2 3 4 & //\u6309\u4f4d\u4e0e\uff0c\u6ce8\u610f\uff0c\u8fd4\u56de\u7684\u662f\u8fd0\u7b97\u540e\u7684\u540c\u7c7b\u578b\u503c\uff0c\u4e0d\u662fboolean\uff01 | //\u6309\u4f4d\u6216 ^ //\u6309\u4f4d\u5f02\u6216 0 ^ 0 = 0 ~ //\u6309\u4f4d\u975e \u6309\u4f4d\u8fd0\u7b97\u5b9e\u9645\u4e0a\u662f\u6839\u636e\u503c\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u6765\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f8b\u5982\u6309\u4f4d\u4e0e\uff0c\u4ee54bit\u4e3a\u4f8b\uff1a 0101 & 0100 = 0100 \uff08\u53ea\u6709\u540c\u65f6\u4e3a1\u5bf9\u5e94\u4f4d\u624d\u5f971\uff09 1 2 int a = 7 , b = 15 ; System . out . println ( a & b ); //\u7ed3\u679c\u4e3a7 \u4e09\u76ee\u8fd0\u7b97\u7b26 \u4e09\u76ee\u8fd0\u7b97\u7b26\u5176\u5b9e\u662f\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\u800c\u751f\uff0c\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u6765\u51b3\u5b9a\u8fd4\u56de\u503c\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 3 int a = 7 , b = 15 ; String str = a > b ? \"\u884c\" : \"\u4e0d\u884c\" ; // \u5224\u65ad\u6761\u4ef6(\u53ea\u80fd\u662fboolean,\u6216\u8fd4\u56deboolean\u7684\u8868\u8fbe\u5f0f) ? \u6ee1\u8db3\u7684\u8fd4\u56de\u503c : \u4e0d\u6ee1\u8db3\u7684\u8fd4\u56de\u503c System . out . println ( \"\u6c49\u5821\u505a\u7684\u884c\u4e0d\u884c\uff1f\" + str ); //\u6c49\u5821\u505a\u7684\u884c\u4e0d\u884c\uff1f\u4e0d\u884c \u7406\u89e3\u4e09\u76ee\u8fd0\u7b97\u7b26\uff0c\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u540e\u9762\u7684if-else\u8bed\u53e5\u4e86\u3002 \u6d41\u7a0b\u63a7\u5236 \u6211\u4eec\u7684\u7a0b\u5e8f\u90fd\u662f\u4ece\u4e0a\u5f80\u4e0b\u4f9d\u6b21\u8fd0\u884c\u7684\uff0c\u4f46\u662f\uff0c\u4ec5\u4ec5\u662f\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u66f4\u52a0\u9ad8\u7ea7\u7684\u63a7\u5236\u8bed\u53e5\u6765\u5e2e\u6211\u8fdb\u884c\u66f4\u7075\u6d3b\u7684\u63a7\u5236\u3002\u6bd4\u5982\uff0c\u5224\u65ad\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\uff0c\u5927\u4e8e1\u5219\u8f93\u51faok\uff0c\u5c0f\u4e8e1\u5219\u8f93\u51fano\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u9009\u62e9\u7ed3\u6784\u6765\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u6761\u4ef6\u7684\u5224\u65ad\u548c\u7a0b\u5e8f\u7684\u5206\u652f\u8d70\u5411\u3002\u5b66\u4e60\u8fc7C\u8bed\u8a00\u5c31\u5f88\u8f7b\u677e\uff01 \u9009\u62e9\u7ed3\u6784 \u9009\u62e9\u7ed3\u6784\u5305\u542bif\u548cswitch\u7c7b\u578b\uff0c\u9009\u62e9\u7ed3\u6784\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u6839\u636e\u6761\u4ef6\u5224\u65ad\uff0c\u518d\u6267\u884c\u54ea\u4e00\u5757\u4ee3\u7801\u3002 if\u8bed\u53e5 \u5c31\u50cf\u4e0a\u9762\u6240\u8bf4\uff0c\u5224\u65ad\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\uff0c\u5927\u4e8e1\u5219\u8f93\u51faok\uff0c\u5c0f\u4e8e1\u5219\u8f93\u51fano\uff0c\u8981\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u91c7\u7528if\u8bed\u53e5\uff1a 1 2 3 4 5 6 if ( \u5224\u65ad\u6761\u4ef6 ){ //\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else { //\u5224\u65ad\u5931\u8d25\u6267\u884c\u7684\u5185\u5bb9 } //if\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u5185\u5bb9\u6b63\u5e38\u6267\u884c \u5176\u4e2d\uff0c else \u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u73b0\u5728\uff0c\u53c8\u6765\u4e86\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u7528\u6237\u8f93\u5165\u7684\u662f1\u6253\u5370ok\uff0c\u8f93\u51652\uff0c\u6253\u5370yes\uff0c\u5176\u4ed6\u6253\u5370no\uff0c\u90a3\u4e48\u8fd9\u6837\u5c31\u9700\u8981\u6211\u4eec\u8fdb\u884c\u591a\u79cd\u6761\u4ef6\u7684\u5224\u65ad\u4e86\uff0c\u5f53\u7136if\u80fd\u8fdb\u884c\u591a\u5206\u652f\u5224\u65ad\uff1a 1 2 3 4 5 6 7 if ( \u5224\u65ad\u6761\u4ef61 ){ //\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else if ( \u5224\u65ad\u6761\u4ef62 ){ //\u518d\u6b21\u5224\u65ad\uff0c\u5982\u679c\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else { //\u4e0a\u9762\u7684\u90fd\u6ca1\u6210\u529f\uff0c\u53ea\u80fd\u8d70\u8fd9\u91cc } \u540c\u6837\uff0c else \u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u73b0\u5728\uff0c\u53c8\u6765\u4e86\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u7528\u6237\u8f93\u51651\u4e4b\u540e\uff0c\u5728\u5224\u65ad\u7528\u6237\u4e0b\u4e00\u6b21\u8f93\u5165\u7684\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u662f1\uff0c\u6253\u5370yes\uff0c\u4e0d\u662f\u5c31\u6253\u5370no\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u5d4c\u5957if\u4e86\uff1a 1 2 3 4 5 6 7 8 if ( \u5224\u65ad\u6761\u4ef61 ){ //\u524d\u63d0\u662f\u5224\u65ad\u6761\u4ef61\u8981\u6210\u529f\u624d\u80fd\u8fdb\u6765\uff01 if ( \u5224\u65ad\u6761\u4ef62 ){ //\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else { //\u5224\u65ad\u5931\u8d25\u6267\u884c\u7684\u5185\u5bb9 } } switch\u8bed\u53e5 \u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u867d\u7136 else-if \u80fd\u89e3\u51b3\u591a\u5206\u652f\u5224\u65ad\u7684\u95ee\u9898\uff0c\u4f46\u662f\u6548\u7387\u5b9e\u5728\u662f\u592a\u4f4e\u4e86\uff0c\u591a\u5206\u652fif\u91c7\u7528\u7684\u662f\u9010\u7ea7\u5411\u4e0b\u5224\u65ad\uff0c\u663e\u7136\u8d39\u65f6\u8d39\u529b\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u76f4\u66f4\u4e13\u4e1a\u7684\u89e3\u51b3\u591a\u5206\u652f\u5224\u65ad\u95ee\u9898\u7684\u4e1c\u897f\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 switch ( \u5224\u65ad\u4e3b\u4f53 ){ case \u503c1 : //\u8fd0\u884cxxx break ; //break\u7528\u4e8e\u8df3\u51faswitch\u8bed\u53e5\uff0c\u4e0d\u6dfb\u52a0\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\uff01 case \u503c2 : //\u8fd0\u884cxxx break ; case \u503c3 : //\u8fd0\u884cxxx break ; } \u5728\u4e0a\u8ff0\u8bed\u53e5\u4e2d\uff0c\u53ea\u6709\u5224\u65ad\u4e3b\u4f53\u7b49\u4e8ecase\u540e\u9762\u7684\u503c\u65f6\uff0c\u624d\u4f1a\u6267\u884ccase\u4e2d\u7684\u8bed\u53e5\uff0c\u540c\u65f6\u9700\u8981\u4f7f\u7528break\u6765\u8df3\u51faswitch\u8bed\u53e5\uff0c\u5426\u5219\u4f1a\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\uff01 \u4e3a\u4ec0\u4e48switch\u6548\u7387\u66f4\u9ad8\u5462\uff0c\u56e0\u4e3aswitch\u91c7\u7528\u4e8c\u5206\u601d\u60f3\u8fdb\u884c\u67e5\u627e\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48switch\u53ea\u80fd\u5224\u65ad\u503c\u76f8\u7b49\u7684\u539f\u56e0\uff09\uff0c\u80fd\u591f\u66f4\u5feb\u5730\u627e\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff01 \u5faa\u73af\u7ed3\u6784 \u5c0f\u660e\u60f3\u5411\u5c0f\u7ea2\u8868\u767d\uff0c\u4e8e\u662f\u4ed6\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e86520\u4e2a \"\u6211\u7231\u4f60\"\uff0c\u6211\u4eec\u7528Java\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f for\u8bed\u53e5 for\u8bed\u53e5\u662f\u6bd4\u8f83\u7075\u6d3b\u7684\u5faa\u73af\u63a7\u5236\u8bed\u53e5\uff0c\u4e00\u4e2afor\u8bed\u53e5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a 1 2 3 4 for ( \u521d\u59cb\u6761\u4ef6 ; \u5faa\u73af\u6761\u4ef6 ; \u66f4\u65b0 ){ //\u5faa\u73af\u6267\u884c\u7684\u5185\u5bb9 } //\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u7ee7\u7eed\u6267\u884c \u521d\u59cb\u6761\u4ef6\uff1a\u5faa\u73af\u5f00\u59cb\u65f6\u7684\u6761\u4ef6\uff0c\u4e00\u822c\u7528\u4e8e\u5b9a\u4e49\u63a7\u5236\u5faa\u73af\u7684\u53d8\u91cf\u3002 \u5faa\u73af\u6761\u4ef6\uff1a\u6bcf\u8f6e\u5faa\u73af\u5f00\u59cb\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u6b21\u5224\u65ad\uff0c\u5982\u679c\u6ee1\u8db3\u5219\u7ee7\u7eed\uff0c\u4e0d\u6ee1\u8db3\u5219\u7ed3\u675f\uff0c\u8981\u6c42\u4e3aboolean\u53d8\u91cf\u6216\u662fboolean\u8868\u8fbe\u5f0f\u3002 \u66f4\u65b0\uff1a\u6bcf\u8f6e\u5faa\u73af\u7ed3\u675f\u540e\u90fd\u4f1a\u6267\u884c\u7684\u5185\u5bb9\uff0c\u4e00\u822c\u5199\u589e\u91cf\u8868\u8fbe\u5f0f\u3002 \u521d\u59cb\u6761\u4ef6\u3001\u5faa\u73af\u6761\u4ef6\u3001\u66f4\u65b0\u6761\u4ef6\u4e0d\u662f\u7f3a\u4e00\u4e0d\u53ef\uff0c\u751a\u81f3\u53ef\u4ee5\u90fd\u7f3a\uff01 1 2 3 for ( int i = 0 ; i < 520 ; i ++ ){ System . out . println ( \"\u6211\u7231\u4f60\" ); } 1 2 3 for (;;){ //\u8fd9\u91cc\u7684\u5185\u5bb9\u5c06\u4f1a\u6c38\u8fdc\u5730\u8fdb\u884c\u4e0b\u53bb\uff01 } \u589e\u5f3afor\u5faa\u73af\u5728\u6570\u7ec4\u65f6\u518d\u8bb2\u89e3\uff01 while\u5faa\u73af while\u5faa\u73af\u548cfor\u5faa\u73af\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u66f4\u52a0\u7684\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u7ef4\u6301\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u5373\u53ef\uff01 1 2 3 while ( \u5faa\u73af\u6761\u4ef6 ){ //\u5faa\u73af\u6267\u884c\u7684\u5185\u5bb9 } \u548cfor\u4e00\u6837\uff0c\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\uff0c\u5f53\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u81ea\u52a8\u9000\u51fa\uff01\u90a3\u4e48\u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u5148\u6267\u884c\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u518d\u53bb\u5224\u65ad\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528do-while\u8bed\u53e5\uff1a 1 2 3 do { //\u6267\u884c\u5185\u5bb9 } while ( \u5faa\u73af\u6761\u4ef6 ); \u4e00\u5b9a\u4f1a\u5148\u6267\u884cdo\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u518d\u505a\u5224\u65ad\uff01 \u601d\u8003\uff1a 1 2 3 4 5 6 7 8 9 for (;;){ } while ( true ){ } //\u5b83\u4eec\u7684\u6027\u80fd\u8c01\u66f4\u9ad8\uff1f \u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u5b9e\u6218\uff08\u57fa\u7840+\u7b97\u6cd5\uff09 \u6253\u5370\u4e5d\u4e5d\u4e58\u6cd5\u8868 \u7b80\u5355\uff1a\u5c06\u4e5d\u4e5d\u4e58\u6cd5\u8868\u6253\u5370\u5230\u63a7\u5236\u53f0\u3002 \u6c421000\u4ee5\u5185\u7684\u6c34\u4ed9\u82b1\u6570 \u4e2d\u7b49\uff1a\u6253\u53701000\u4ee5\u5185\u6240\u6709\u6ee1\u8db3\u6c34\u4ed9\u82b1\u7684\u6570\uff0c\u201c\u6c34\u4ed9\u82b1\u6570\u201d\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\u5176\u5404\u4f4d\u6570\u5b57\u7684\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u6570\u672c\u8eab\uff0c\u4f8b\u5982153\u662f\u201c\u6c34\u4ed9\u82b1\u6570\u201d\uff0c\u56e0\u4e3a\uff1a153 = 1^3 + 5^3 + 3^3 \u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898 \u56f0\u96be\uff1a\u4e00\u5171\u6709n\u4e2a\u53f0\u9636\uff0c\u4e00\u53ea\u9752\u86d9\u6bcf\u6b21\u53ea\u80fd\u8df3\u4e00\u9636\u6216\u662f\u4e24\u9636\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u591a\u5c11\u79cd\u8df3\u5230\u9876\u7aef\u7684\u65b9\u6848\uff1f\u4f8b\u5982n=2\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u6b21\u6027\u8df3\u4e24\u9636\u6216\u662f\u6bcf\u6b21\u8df3\u4e00\u9636\u3002 \u52a8\u6001\u89c4\u5212\uff1a\u5176\u5b9e\uff0c\u5c31\u662f\u5229\u7528\uff0c\u4e0a\u6b21\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u7ed9\u4e0b\u4e00\u6b21\u4f5c\u53c2\u8003\uff0c\u4e0b\u4e00\u6b21\u5c31\u80fd\u5229\u7528\u4e0a\u6b21\u7684\u7ed3\u679c\u5feb\u901f\u5f97\u5230\u7ed3\u679c\uff0c\u4f9d\u6b21\u7c7b\u63a8 \u4e0d\u5bf9\u554a\uff0c\u522b\u7684\u6559\u7a0b\u90fd\u8bb2\u4e86\u6570\u7ec4\u3001\u65b9\u6cd5\uff0c\u600e\u4e48\u6211\u4eec\u8fd8\u6ca1\u8bb2\u5c31\u8fdb\u5165\u9762\u5411\u5bf9\u8c61\u4e86\u5462\uff1f \u6570\u7ec4\u5728Java\u4e2d\uff0c\u5e76\u975e\u57fa\u672c\u7c7b\u578b\uff0c\u6570\u7ec4\u662f\u7f16\u7a0b\u4e0d\u53ef\u89c1\u7684\u5bf9\u8c61\u7c7b\u578b\uff0c\u5b66\u4e60\u4e86\u9762\u5411\u5bf9\u8c61\u518d\u6765\u7406\u89e3\uff0c\u4f1a\u66f4\u52a0\u5bb9\u6613\uff01 \u65b9\u6cd5\u5728Java\u4e2d\u662f\u7c7b\u5177\u6709\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\uff0c\u5728\u4e86\u89e3\u4e86\u5bf9\u8c61\u7c7b\u578b\u4e4b\u540e\uff0c\u518d\u6765\u4e86\u89e3\u65b9\u6cd5\uff0c\u5c31\u66f4\u52a0\u7b80\u5355\u4e86\uff01","title":"Java\u8bed\u6cd5\u89c4\u8303"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#java","text":"\u6240\u6709\u7684Java\u8bed\u53e5\u5fc5\u987b\u4ee5 ; \u7ed3\u5c3e\uff01 \u65e0\u8bba\u662f () \u3001 [] \u8fd8\u662f {} \uff0c\u6240\u6709\u7684\u62ec\u53f7\u5fc5\u987b\u4e00\u4e00\u5339\u914d\uff01 \u4e3b\u65b9\u6cd5\u7684\u4ee3\u7801\u53ea\u80fd\u5199\u5728 {} \u4e2d\uff01","title":"Java\u8bed\u6cd5\u89c4\u8303"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#java_1","text":"\u5728\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u9762\u5411\u8fc7\u7a0b\u7684\u7f16\u7a0b\u601d\u7ef4\uff0c\u5982\u679c\u4f60\u5b66\u4e60\u8fc7C\u8bed\u8a00\u548cPython\u5c31\u4f1a\u5f88\u8f7b\u677e\uff01","title":"Java\u57fa\u7840\u8bed\u6cd5\uff08\u9762\u5411\u8fc7\u7a0b\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_1","text":"","title":"\u53d8\u91cf\u548c\u5173\u952e\u5b57"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_2","text":"\u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u53ef\u53d8\u7684\u91cf\uff0c\u4f8b\u5982\u5b9a\u4e49\u4e00\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\uff08int\u5c31\u662f\u6574\u6570\u7c7b\u578b\uff09\uff1a 1 2 3 int a = 10 ; a = 20 ; a = 30 ; \u6211\u4eec\u80fd\u591f\u968f\u610f\u66f4\u6539\u5b83\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u503c\u662f\u968f\u65f6\u53ef\u53d8\u7684\uff0c\u6211\u4eec\u79f0\u4e3a\u53d8\u91cf\u3002\u53d8\u91cf\u53ef\u4ee5\u662f\u7c7b\u7684\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u65b9\u6cd5\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u6211\u4eec\u73b0\u9636\u6bb5\u4e3b\u8981\u7528\u5c40\u90e8\u53d8\u91cf\uff0c\u7c7b\u53d8\u91cf\u5728\u9762\u5411\u5bf9\u8c61\u518d\u8bb2\u89e3\uff09 \u53d8\u91cf\u548cC\u8bed\u8a00\u4e2d\u7684\u53d8\u91cf\u4e0d\u540c\uff0cJava\u4e2d\u7684\u53d8\u91cf\u662f\u5b58\u653e\u5728JVM\u7ba1\u7406\u7684\u5185\u5b58\u4e2d\uff0cC\u8bed\u8a00\u7684\u53d8\u91cf\u5b58\u653e\u5728\u5185\u5b58\uff08\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u624b\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u800cJava\u4f1a\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u6e05\u7406\u53d8\u91cf\u5360\u636e\u7684\u5185\u5b58\uff09Java\u548cC++\u5f88\u7c7b\u4f3c\uff0c\u4f46\u662f\u6ca1\u6709\u6307\u9488\uff01Java\u4e5f\u53ebC++-- Java\u662f\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u53ea\u6709\u660e\u786e\u5b9a\u4e49\u4e86\u53d8\u91cf\u4e4b\u540e\uff0c\u4f60\u624d\u80fd\u4f7f\u7528\uff01\u4e00\u65e6\u88ab\u6307\u5b9a\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u5b83\u5c06\u59cb\u7ec8\u88ab\u8ba4\u4e3a\u662f\u5bf9\u5e94\u7684\u7c7b\u578b\uff08\u548cJS\u4e0d\u4e00\u6837\uff01\uff09 \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u7684\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 [ \u7c7b\u578b ] [ \u6807\u8bc6\u7b26 ( \u540d\u5b57 ) ] = [ \u521d\u59cb\u503c ( \u53ef\u9009 ) ] int a = 10 ; \u6ce8\u610f\uff1a\u6807\u8bc6\u7b26\u4e0d\u80fd\u4e3a\u4ee5\u4e0b\u5185\u5bb9\uff1a \u6807\u8bc6\u7b26\u4ee5\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf(_)\u548c\u7f8e\u5143\u7b26\u53f7($)\u7ec4\u6210\uff0c\u4f46\u662f\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u5927\u5c0f\u5199\u654f\u611f\uff01 \u4e0d\u80fd\u6709\u7a7a\u683c\u3001@\u3001#\u3001+\u3001-\u3001/ \u7b49\u7b26\u53f7 \u5e94\u8be5\u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u79f0\uff0c\u8fbe\u5230\u89c1\u540d\u77e5\u610f\u7684\u76ee\u7684\uff0c\u6700\u597d\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934 \u4e0d\u53ef\u4ee5\u662f true \u548c false \u4e0d\u80fd\u4e0eJava\u8bed\u8a00\u7684\u5173\u952e\u5b57\u91cd\u540d","title":"\u53d8\u91cf"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_3","text":"\u5305\u62ec\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\u7b49\uff0c\u4e86\u89e3\u5c31\u884c\uff0c\u4e0d\u7528\u53bb\u8bb0\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u4e00\u70b9\u4e00\u70b9\u5e26\u5927\u5bb6\u8ba4\u8bc6\uff01","title":"\u5173\u952e\u5b57"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_4","text":"\u5e38\u91cf\u5c31\u662f\u65e0\u6cd5\u4fee\u6539\u503c\u7684\u53d8\u91cf\uff0c\u5e38\u91cf\u7684\u503c\uff0c\u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21\uff1a 1 2 final int a = 10 ; a = 10 ; //\u62a5\u9519\uff01 \u5e38\u91cf\u524d\u9762\u5fc5\u987b\u6dfb\u52a0final\u5173\u952e\u5b57\uff08C\u8bed\u8a00\u91cc\u9762\u662fconst\uff0c\u867d\u7136Java\u4e5f\u6709\uff0c\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\uff01\uff09 \u8fd9\u53ea\u662ffinal\u5173\u952e\u5b57\u7684\u7b2c\u4e00\u4e2a\u7528\u6cd5\uff0c\u540e\u9762\u8fd8\u4f1a\u6709\u66f4\u591a\u7684\u7528\u6cd5\u3002","title":"\u5e38\u91cf"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_5","text":"\u517b\u6210\u6ce8\u91ca\u7684\u597d\u4e60\u60ef\uff0c\u4e0d\u7136\u4ee5\u540e\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\u81ea\u5df1\u7684\u4ee3\u7801\uff01\u6ce8\u91ca\u5305\u62ec\u5355\u884c\u6ce8\u91ca\u548c\u591a\u884c\u6ce8\u91ca\uff1a 1 2 3 4 5 6 7 8 //\u6211\u662f\u5355\u884c\u6ce8\u91ca /** * \u6211\u662f * \u591a\u884c\u6ce8\u91ca */ //TODO \u5f85\u505a\u6807\u8bb0","title":"\u6ce8\u91ca"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_6","text":"Java\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u4e24\u5927\u7c7b\uff0c\u5f15\u7528\u7c7b\u578b\u6211\u4eec\u5728\u9762\u5411\u5bf9\u8c61\u65f6\u518d\u63d0\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u91cd\u70b9\u4e2d\u7684\u91cd\u70b9\uff01\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6709\u54ea\u4e9b\u7c7b\u578b\u3002\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\uff0c\u5e76\u4e0d\u662f\u4ed6\u4eec\u7684\u7cbe\u5ea6\u5982\u4f55\uff0c\u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u6709\u591a\u5927\uff0c\u800c\u662f\u4e3a\u4ec0\u4e48Java\u4f1a\u7ed9\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e9b\u7c7b\u578b\uff0c\u8ba1\u7b97\u673a\u662f\u600e\u4e48\u8868\u793a\u8fd9\u4e9b\u7c7b\u578b\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u591f\u66f4\u597d\u7684\u8bb0\u5fc6\u4ed6\u4eec\u7684\u7cbe\u5ea6\u3001\u8868\u793a\u7684\u8303\u56f4\u5927\u5c0f\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4ece\u8ba1\u7b97\u673a\u539f\u7406\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5e26\u9886\u5927\u5bb6\u8d70\u8fdbJava\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u8fd9\u4e00\u90e8\u5206\u7a0d\u5fae\u6709\u70b9\u70e7\u8111\uff0c\u4f46\u662f\u662f\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5982\u679c\u4f60\u638c\u63e1\u4e86\u8fd9\u4e9b\uff0c\u4efb\u4f55\u76f8\u5173\u7684\u9762\u8bd5\u9898\u90fd\u96be\u4e0d\u5012\u4f60\uff01\uff08\u5982\u679c\u4f60\u5b66\u4e60\u8fc7\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff09","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_7","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6240\u6709\u7684\u5185\u5bb9\u90fd\u662f\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8868\u793a\u3002\u5341\u8fdb\u5236\u662f\u4ee510\u4e3a\u8fdb\u4f4d\uff0c\u59829+1=10\uff1b\u4e8c\u8fdb\u5236\u5219\u662f\u6ee12\u8fdb\u4f4d\uff08\u56e0\u4e3a\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u662f\u7535\u5b50\u7684\uff0c\u7535\u5e73\u4fe1\u53f7\u53ea\u6709\u9ad8\u4f4d\u548c\u4f4e\u4f4d\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6682\u4e14\u7406\u89e3\u4e3a\u901a\u7535\u548c\u4e0d\u901a\u7535\uff0c\u9ad8\u7535\u5e73\u4ee3\u88681\uff0c\u4f4e\u7535\u5e73\u4ee3\u88680\uff0c\u7531\u4e8e\u53ea\u67090\u548c1\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u75282\u8fdb\u5236\u8868\u793a\u6211\u4eec\u7684\u6570\u5b57\uff01\uff09\u6bd4\u59821+1=10=2^1+0\uff0c\u4e00\u4e2a\u4f4d\u4e5f\u53eb\u4e00\u4e2abit\uff0c8\u4e2abit\u79f0\u4e3a1\u5b57\u8282\uff0c16\u4e2abit\u79f0\u4e3a\u4e00\u4e2a\u5b57\uff0c32\u4e2abit\u79f0\u4e3a\u4e00\u4e2a\u53cc\u5b57\uff0c64\u4e2abit\u79f0\u4e3a\u4e00\u4e2a\u56db\u5b57\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u5b57\u8282\u6765\u63cf\u8ff0\u6570\u636e\u5927\u5c0f\u3002 \u5341\u8fdb\u5236\u76847 -> \u5728\u4e8c\u8fdb\u5236\u4e2d\u4e3a 111 = 2^2 + 2^1 + 2^0 \u73b0\u5728\u67094\u4e2abit\u4f4d\uff0c\u6700\u5927\u80fd\u591f\u8868\u793a\u591a\u5927\u7684\u6570\u5b57\u5462\uff1f \u6700\u5c0f\uff1a0000 => 0 \u6700\u5927\uff1a1111 => 2^3+2^2+2^1+2^0 => 8 + 4 + 2 + 1 = 15 \u5728Java\u4e2d\uff0c\u65e0\u8bba\u662f\u5c0f\u6570\u8fd8\u662f\u6574\u6570\uff0c\u4ed6\u4eec\u90fd\u8981\u5e26\u6709\u7b26\u53f7\uff08\u548cC\u8bed\u8a00\u4e0d\u540c\uff0cC\u8bed\u8a00\u6709\u65e0\u7b26\u53f7\u6570\uff09\u6240\u4ee5\uff0c\u9996\u4f4d\u5c31\u4f5c\u4e3a\u6211\u4eec\u7684\u7b26\u53f7\u4f4d\uff0c\u8fd8\u662f\u4ee54\u4e2abit\u4e3a\u4f8b\uff0c\u9996\u4f4d\u73b0\u5728\u4f5c\u4e3a\u7b26\u53f7\u4f4d\uff081\u4ee3\u8868\u8d1f\u6570\uff0c0\u4ee3\u8868\u6b63\u6570\uff09\uff1a \u6700\u5c0f\uff1a1111 => -(2^2+2^1+2^0) => -7 \u6700\u5927\uff1a0111 => +(2^2+2^1+2^0) => +7 => 7 \u73b0\u5728\uff0c\u6211\u4eec4bit\u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u53d8\u4e3a\u4e86-7~+7\uff0c\u8fd9\u6837\u7684\u8868\u793a\u65b9\u5f0f\u79f0\u4e3a\u539f\u7801\u3002","title":"\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_8","text":"","title":"\u8ba1\u7b97\u673a\u4e2d\u7684\u52a0\u51cf\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_9","text":"\u867d\u7136\u539f\u7801\u8868\u793a\u7b80\u5355\uff0c\u4f46\u662f\u539f\u7801\u5728\u505a\u52a0\u51cf\u6cd5\u7684\u65f6\u5019\uff0c\u5f88\u9ebb\u70e6\uff01\u4ee54bit\u4f4d\u4e3a\u4f8b\uff1a 1+(-1) = 0001 + 1001 = \u600e\u4e48\u8ba9\u8ba1\u7b97\u673a\u53bb\u8ba1\u7b97\uff1f\uff08\u867d\u7136\u6211\u4eec\u77e5\u9053\u8be5\u53bb\u600e\u4e48\u7b97\uff0c\u4f46\u662f\u8ba1\u7b97\u673a\u4e0d\u77e5\u9053\uff01\uff09 \u6211\u4eec\u5f97\u521b\u9020\u4e00\u79cd\u66f4\u597d\u7684\u8868\u793a\u65b9\u5f0f\uff01\u4e8e\u662f\u6211\u4eec\u5f15\u5165\u4e86\u53cd\u7801\uff1a","title":"\u539f\u7801"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_10","text":"\u6b63\u6570\u7684\u53cd\u7801\u662f\u5176\u672c\u8eab \u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a, \u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4e2a\u4f4d\u53d6\u53cd \u7ecf\u8fc7\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u518d\u6765\u8fdb\u884c\u52a0\u51cf\u6cd5\uff1a 1+(-1) = 0001 + 1110 = 1111 => -0 \uff08\u76f4\u63a5\u76f8\u52a0\uff0c\u8fd9\u6837\u5c31\u7b80\u5355\u591a\u4e86\uff01\uff09 \u601d\u8003\uff1a1111\u4ee3\u8868-0\uff0c0000\u4ee3\u8868+0\uff0c\u5728\u6211\u4eec\u5b9e\u6570\u7684\u8303\u56f4\u5185\uff0c0\u6709\u6b63\u8d1f\u4e4b\u5206\u5417\uff1f 0\u65e2\u4e0d\u662f\u6b63\u6570\u4e5f\u4e0d\u662f\u8d1f\u6570\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u6837\u7684\u8868\u793a\u4f9d\u7136\u4e0d\u591f\u5408\u7406\uff01","title":"\u53cd\u7801"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_11","text":"\u6839\u636e\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u90a3\u5c31\u662f\u8865\u7801\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a \u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u5176\u672c\u8eab \uff08\u4e0d\u53d8\uff01\uff09 \u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a, \u7b26\u53f7\u4f4d\u4e0d\u53d8, \u5176\u4f59\u5404\u4f4d\u53d6\u53cd, \u6700\u540e+1. (\u5373\u5728\u53cd\u7801\u7684\u57fa\u7840\u4e0a+1) \u5176\u5b9e\u73b0\u5728\u5c31\u5df2\u7ecf\u80fd\u591f\u60f3\u901a\u4e86\uff0c-0\u5176\u5b9e\u5df2\u7ecf\u88ab\u6d88\u9664\u4e86\uff01\u6211\u4eec\u518d\u6765\u770b\u4e0a\u9762\u7684\u8fd0\u7b97\uff1a 1+(-1) = 0001 + 1111 = (1)0000 => +0 \uff08\u73b0\u5728\u65e0\u8bba\u4f60\u600e\u4e48\u7b97\uff0c\u4e5f\u4e0d\u4f1a\u6709-0\u4e86\uff01\uff09 \u6240\u4ee5\u73b0\u5728\uff0c4bit\u4f4d\u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u662f\uff1a-8~+7\uff08Java\u4f7f\u7528\u7684\u5c31\u662f\u8865\u7801\uff01\uff09 \u4ee5\u4e0a\u5185\u5bb9\u662f\u91cd\u70b9\uff0c \u662f\u4e00\u5b9a\u8981\u638c\u63e1\u7684\u77e5\u8bc6\uff0c\u8fd9\u4e9b\u77e5\u8bc6\u662f\u4f60\u5728\u9762\u8bd5\u4e2d\u7684\u6700\u7ec8\u9632\u7ebf\uff01\u6709\u4e86\u8fd9\u4e9b\u7406\u8bba\u57fa\u7840\uff0c\u65e0\u8bba\u9762\u8bd5\u9898\u5982\u4f55\u53d8\u6362\uff0c\u90fd\u80fd\u591f\u901a\u8fc7\u7406\u8bba\u77e5\u8bc6\u6765\u7834\u89e3","title":"\u8865\u7801"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_12","text":"\u6574\u6570\u7c7b\u578b\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\u7c7b\u578b\uff01\u65e2\u7136\u6211\u4eec\u77e5\u9053\u4e86\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\u662f\u5982\u4f55\u8868\u793a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u6765\u8868\u8fbe\u6211\u4eec\u5341\u8fdb\u5236\u7684\u5185\u5bb9\u4e86\u3002 \u5728Java\u4e2d\uff0c\u6574\u6570\u7c7b\u578b\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\uff1a byte \u5b57\u8282\u578b \uff088\u4e2abit\uff0c\u4e5f\u5c31\u662f1\u4e2a\u5b57\u8282\uff09\u8303\u56f4\uff1a-128~+127 short \u77ed\u6574\u5f62\uff0816\u4e2abit\uff0c\u4e5f\u5c31\u662f2\u4e2a\u5b57\u8282\uff09\u8303\u56f4\uff1a-32768~+32767 int \u6574\u5f62\uff0832\u4e2abit\uff0c\u4e5f\u5c31\u662f4\u4e2a\u5b57\u8282\uff09\u6700\u5e38\u7528\u7684\u7c7b\u578b\uff01 long \u957f\u6574\u5f62\uff0864\u4e2abit\uff0c\u4e5f\u5c31\u662f8\u4e2a\u5b57\u8282\uff09\u6700\u540e\u9700\u8981\u6dfb\u52a0l\u6216L long\u90fd\u88c5\u4e0d\u4e0b\u600e\u4e48\u529e\uff1fBigInteger\uff01 \u6570\u5b57\u5df2\u7ecf\u8fbe\u5230byte\u7684\u6700\u5927\u503c\u4e86\uff0c\u8fd8\u80fd\u52a0\u5417\uff1f\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u4ee54bit\u4e3a\u4f8b\uff1a 0111 + 0001 = 1000 => -8\uff08\u4f60\u6ca1\u770b\u9519\uff0c\u5c31\u662f\u8fd9\u6837\uff01\uff09 \u6574\u6570\u8fd8\u80fd\u4f7f\u75288\u8fdb\u5236\u300116\u8fdb\u5236\u8868\u793a\uff1a \u5341\u8fdb\u5236\u4e3a15 = \u516b\u8fdb\u5236\u8868\u793a\u4e3a017 = \u5341\u516d\u8fdb\u5236\u8868\u793a\u4e3a 0xF = \u4e8c\u8fdb\u5236\u8868\u793a 1111 (\u4ee3\u7801\u91cc\u9762\u4e0d\u80fd\u4f7f\u7528\u4e8c\u8fdb\u5236\uff01)","title":"\u6574\u6570\u7c7b\u578b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_13","text":"\u5728Java\u4e2d\uff0c\u5b58\u5728\u5b57\u7b26\u7c7b\u578b\uff0c\u5b83\u80fd\u591f\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff1a char \u5b57\u7b26\u578b\uff0816\u4e2abit\uff0c\u4e5f\u5c31\u662f2\u5b57\u8282\uff0c\u5b83\u4e0d\u5e26\u7b26\u53f7\uff01\uff09\u8303\u56f4\u662f0 ~ 65535 \u4f7f\u7528Unicode\u8868\u793a\u5c31\u662f\uff1a\\u0000 ~ \\uffff \u5b57\u7b26\u8981\u7528\u5355\u5f15\u53f7\u6269\u8d77\u6765\uff01\u6bd4\u5982 char c = '\u6de6'; \u5b57\u7b26\u5176\u5b9e\u672c\u8d28\u4e5f\u662f\u6570\u5b57\uff0c\u4f46\u662f\u8fd9\u4e9b\u6570\u5b57\u901a\u8fc7\u7f16\u7801\u8868\u8fdb\u884c\u6620\u5c04\uff0c\u4ee3\u8868\u4e86\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u6bd4\u5982\u5b57\u7b26 'A' \u7684ASCII\u7801\u5c31\u662f\u6570\u5b57 65 \uff0c\u6240\u4ee5\uff0cchar\u7c7b\u578b\u5176\u5b9e\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e0a\u9762\u7684\u6574\u6570\u7c7b\u578b\u3002 Java\u7684char\u91c7\u7528Unicode\u7f16\u7801\u8868\uff08\u4e0d\u662fASCII\u7f16\u7801\uff01\uff09\uff0cUnicode\u7f16\u7801\u8868\u5305\u542bASCII\u7684\u6240\u6709\u5185\u5bb9\uff0c\u540c\u65f6\u8fd8\u5305\u62ec\u4e86\u5168\u4e16\u754c\u7684\u8bed\u8a00\uff0cASCII\u53ea\u67091\u5b57\u8282\uff0c\u800cUnicode\u7f16\u7801\u662f2\u5b57\u8282\uff0c\u80fd\u591f\u4ee3\u886865536\u79cd\u6587\u5b57\uff0c\u8db3\u4ee5\u5305\u542b\u5168\u4e16\u754c\u7684\u6587\u5b57\u4e86\uff01\uff08\u6211\u4eec\u7f16\u8bd1\u51fa\u6765\u7684\u5b57\u8282\u7801\u6587\u4ef6\u4e5f\u662f\u4f7f\u7528Unicode\u7f16\u7801\u7684\uff0c\u6240\u4ee5\u5229\u7528\u8fd9\u79cd\u7279\u6027\uff0c\u5176\u5b9eJava\u652f\u6301\u4e2d\u6587\u53d8\u91cf\u540d\u79f0\u3001\u65b9\u6cd5\u540d\u79f0\u751a\u81f3\u662f\u7c7b\u540d\uff09 \u65e2\u7136char\u53ea\u80fd\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u90a3\u600e\u4e48\u624d\u80fd\u5305\u542b\u4e00\u53e5\u8bdd\u5462\uff1f\uff08\u5173\u4e8e\u6570\u7ec4\uff0c\u6211\u4eec\u8fd9\u91cc\u5148\u4e0d\u4e86\u89e3\uff0c\u6570\u7ec4\u6211\u4eec\u653e\u5728\u9762\u5411\u5bf9\u8c61\u7ae0\u8282\u8bb2\u89e3\uff09 String\u5c31\u662fJava\u4e2d\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\uff08\u6ce8\u610f\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u521b\u5efa\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u672c\u8d28\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e0d\u662f\u6211\u4eec\u7684\u57fa\u672c\u7c7b\u578b\uff09\u5b57\u7b26\u4e32\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4ee3\u8868\u4e00\u4e32\u5b57\u7b26\uff0c\u4e5f\u5c31\u662f\u4e00\u53e5\u5b8c\u6574\u7684\u8bdd\u3002 \u5b57\u7b26\u4e32\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\uff01\u6bd4\u5982\uff1aString str = \"\u4e00\u65e5\u4e09\u9910\u6ca1\u70e6\u607c\";","title":"\u5b57\u7b26\u7c7b\u578b\u548c\u5b57\u7b26\u4e32"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_14","text":"\u5c0f\u6570\u7c7b\u578b\u6bd4\u8f83\u96be\u7406\u89e3\uff08\u6bd4\u8f83\u96be\u7406\u89e3\u6307\u7684\u662f\u539f\u7406\uff0c\u4e0d\u662f\u4f7f\u7528\uff09\u9996\u5148\u6765\u770b\u770bJava\u4e2d\u7684\u5c0f\u6570\u7c7b\u578b\u5305\u542b\u54ea\u4e9b\uff1a float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b \uff0832bit\uff0c4\u5b57\u8282\uff09 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0864bit\uff0c8\u5b57\u8282\uff09 \u601d\u8003\uff1a\u5c0f\u6570\u7684\u8303\u56f4\u8be5\u600e\u4e48\u5b9a\u4e49\u5462\uff1f\u6211\u4eec\u9996\u5148\u8981\u4e86\u89e3\u7684\u662f\u5c0f\u6570\u5728\u8ba1\u7b97\u673a\u91cc\u9762\u662f\u5982\u4f55\u5b58\u653e\u7684\uff1a \u6839\u636e\u56fd\u9645\u6807\u51c6 IEEE 754\uff0c\u4efb\u610f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6d6e\u70b9\u6570 V \u53ef\u4ee5\u8868\u793a\u6210\u4e0b\u9762\u7684\u5f62\u5f0f\uff1a V = (-1)^S \u00d7 M \u00d7 2^E \uff081\uff09(-1)^S \u8868\u793a\u7b26\u53f7\u4f4d\uff0c\u5f53 S=0\uff0cV \u4e3a\u6b63\u6570\uff1b\u5f53 S=1\uff0cV \u4e3a\u8d1f\u6570\u3002 \uff082\uff09M \u8868\u793a\u6709\u6548\u6570\u5b57\uff0c\u5927\u4e8e\u7b49\u4e8e 1\uff0c\u5c0f\u4e8e 2\uff0c\u4f46\u6574\u6570\u90e8\u5206\u7684 1 \u4e0d\u53d8\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u7565\u3002\uff08\u4f8b\u5982\u5c3e\u6570\u4e3a1111010\uff0c\u90a3\u4e48M\u5b9e\u9645\u4e0a\u5c31\u662f1.111010\uff0c\u5c3e\u6570\u9996\u4f4d\u5fc5\u987b\u662f1\uff0c1\u540e\u9762\u7d27\u8ddf\u5c0f\u6570\u70b9\uff0c\u5982\u679c\u51fa\u73b00001111\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u53bb\u6389\u524d\u9762\u76840\uff0c\u79fb\u52a81\u5230\u9996\u4f4d\uff1b\u9898\u5916\u8bdd\uff1a\u968f\u7740\u65f6\u95f4\u7684\u53d1\u5c55\uff0cIEEE 754\u6807\u51c6\u9ed8\u8ba4\u7b2c\u4e00\u4f4d\u4e3a1\uff0c\u6545\u4e3a\u4e86\u80fd\u591f\u5b58\u653e\u66f4\u591a\u6570\u636e\uff0c\u5c31\u820d\u53bb\u4e86\u7b2c\u4e00\u4f4d\uff0c\u6bd4\u5982\u4fdd\u5b581.0101 \u7684\u65f6\u5019\uff0c \u53ea\u4fdd\u5b58 0101\uff0c\u8fd9\u6837\u80fd\u591f\u591a\u5b58\u50a8\u4e00\u4f4d\u6570\u636e\uff09 \uff083\uff092^E \u8868\u793a\u6307\u6570\u4f4d\u3002\uff08\u7528\u4e8e\u79fb\u52a8\u5c0f\u6570\u70b9\uff09 \u6bd4\u5982\uff1a \u5bf9\u4e8e\u5341\u8fdb\u5236\u7684 5.25 \u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u4e3a\uff1a101.01\uff0c\u76f8\u5f53\u4e8e\uff1a1.0101*2^2\u3002\u6240\u4ee5\uff0cS \u4e3a 0\uff0cM \u4e3a 1.0101\uff0cE \u4e3a 2\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6d6e\u70b9\u7c7b\u578b\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u7b26\u53f7\u548c\u5c3e\u6570\uff0c\u8fd8\u6709\u5b83\u7684\u9636\u7801\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5c31\u4e0d\u53bb\u8ba1\u7b97\u4e86\uff0c\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u53bb\u641c\u7d22\u76f8\u5173\u8d44\u6599\u3002 \u601d\u8003\uff1a\u5c31\u7b97double\u670964bit\u4f4d\u6570\uff0c\u4f46\u662f\u4f9d\u7136\u5b58\u5728\u7cbe\u5ea6\u9650\u5236\uff0c\u5982\u679c\u6211\u8981\u8fdb\u884c\u9ad8\u7cbe\u5ea6\u7684\u8ba1\u7b97\uff0c\u600e\u4e48\u529e\uff1fBigDecimal\uff01","title":"\u5c0f\u6570\u7c7b\u578b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_15","text":"\u5e03\u5c14\u7c7b\u578b\uff08boolean\uff09\u53ea\u6709 true \u548c false \u4e24\u79cd\u503c\uff0c\u4e5f\u5c31\u662f\u8981\u4e48\u4e3a\u771f\uff0c\u8981\u4e48\u4e3a\u5047\uff0c\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\u901a\u5e38\u7528\u4f5c\u6d41\u7a0b\u63a7\u5236\u5224\u65ad\u8bed\u53e5\u3002\uff08C\u8bed\u8a00\u4e00\u822c\u4f7f\u75280\u8868\u793afalse\uff0c\u96640\u4ee5\u5916\u7684\u6240\u6709\u6570\u90fd\u8868\u793atrue\uff09\u5e03\u5c14\u7c7b\u578b\u5360\u636e\u7684\u7a7a\u95f4\u5927\u5c0f\u5e76\u672a\u660e\u786e\u5b9a\u4e49\uff0c\u800c\u662f\u6839\u636e\u4e0d\u540c\u7684JVM\u4f1a\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u3002","title":"\u5e03\u5c14\u7c7b\u578b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_16","text":"","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_17","text":"\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u652f\u6301\u5b57\u8282\u6570\u5c0f\u7684\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u8282\u6570\u5927\u7684\u7c7b\u578b\uff0c\u6574\u6570\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\u4e3a\u5c0f\u6570\u7c7b\u578b\uff0c\u8f6c\u6362\u89c4\u5219\u5982\u4e0b\uff1a byte\u2192short(char)\u2192int\u2192long\u2192float\u2192double \u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48long\u6bd4float\u5927\uff0c\u8fd8\u80fd\u8f6c\u6362\u4e3afloat\u5462\uff1f\u5c0f\u6570\u7684\u5b58\u50a8\u89c4\u5219\u8ba9float\u7684\u6700\u5927\u503c\u6bd4long\u8fd8\u5927\uff0c\u53ea\u662f\u53ef\u80fd\u4f1a\u4e22\u5931\u67d0\u4e9b\u4f4d\u4e0a\u7684\u7cbe\u5ea6\uff01 \u6240\u4ee5\uff0c\u5982\u4e0b\u7684\u4ee3\u7801\u5c31\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\uff1a 1 2 3 4 5 6 7 8 9 byte b = 9 ; short s = b ; int i = s ; long l = i ; float f = l ; double d = f ; System . out . println ( d ); //\u8f93\u51fa 9.0","title":"\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_18","text":"\u663e\u793a\u7c7b\u578b\u8f6c\u6362\u4e5f\u53eb\u505a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fdd\u53cd\u9690\u5f0f\u8f6c\u6362\u7684\u89c4\u5219\uff0c\u727a\u7272\u7cbe\u5ea6\u5f3a\u884c\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 1 2 3 4 5 int i = 128 ; byte b = ( byte ) i ; System . out . println ( b ); //\u8f93\u51fa -128 \u4e3a\u4ec0\u4e48\u7ed3\u679c\u662f-128\uff1f\u7cbe\u5ea6\u4e22\u5931\u4e86\uff01 int \u7c7b\u578b\u7684128\u8868\u793a\uff1a00000000 00000000 00000000 10000000 byte\u7c7b\u578b\u8f6c\u6362\u540e\u8868\u793a\uff1axxxxxxxx xxxxxxxx xxxxxxxx 10000000 => -128","title":"\u663e\u793a\u7c7b\u578b\u8f6c\u6362"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_19","text":"\u5728\u53c2\u4e0e\u8fd0\u7b97\u65f6\uff08\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u8868\u8fbe\u5f0f\u4e2d\u65f6\uff0c\u81ea\u589e\u81ea\u51cf\u9664\u5916\uff09\uff0c\u6240\u6709\u7684byte\u578b\u3001short\u578b\u548cchar\u7684\u503c\u5c06\u88ab\u63d0\u5347\u5230int\u578b\uff1a 1 2 3 byte b = 105 ; b = b + 1 ; //\u62a5\u9519\uff01 System . out . println ( b ); \u8fd9\u4e2a\u7279\u6027\u662f\u7531 Java\u865a\u62df\u673a\u89c4\u8303 \u5b9a\u4e49\u7684\uff0c\u4e5f\u662f\u4e3a\u4e86\u63d0\u9ad8\u8fd0\u884c\u7684\u6548\u7387\u3002\u5176\u4ed6\u7684\u7279\u6027\u8fd8\u6709\uff1a \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662flong\u578b\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u662flong\u578b \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662ffloat\u578b\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u662ffloat\u578b \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662fdouble\u578b\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u662fdouble\u578b","title":"\u6570\u636e\u7c7b\u578b\u81ea\u52a8\u63d0\u5347"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_20","text":"","title":"\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_21","text":"\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u662f\u6700\u5e38\u7528\u7684\u8fd0\u7b97\u7b26\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u6211\u4eec\u7b49\u53f7\u53f3\u8fb9\u7684\u7ed3\u679c\uff0c\u4f20\u9012\u7ed9\u7b49\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a 1 2 3 int a = 10 ; int b = 1 + 8 ; int c = 5 * 5 ; \u7b97\u672f\u8fd0\u7b97\u7b26\u4e5f\u5c31\u662f\u6211\u4eec\u5728\u5c0f\u5b66\u9636\u6bb5\u5b66\u4e60\u7684 + - * / % \uff0c\u5206\u522b\u4ee3\u8868\u52a0\u51cf\u4e58\u9664\u8fd8\u6709\u53d6\u4f59\uff0c\u4f8b\u5982\uff1a 1 2 3 4 int a = 2 ; int b = 3 ; int c = a * b ; //\u7ed3\u679c\u4e3a6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c + \u8fd8\u53ef\u4ee5\u7528\u4f5c\u5b57\u7b26\u4e32\u8fde\u63a5\u7b26\u4f7f\u7528\uff1a 1 System . out . println ( \"lbw\" + \"nb\" ); //lbwnb \u5f53\u7136\uff0c\u5b57\u7b26\u4e32\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5176\u4ed6\u7c7b\u578b\uff0c\u4f46\u662f\u4f1a\u5168\u90e8\u5f53\u505a\u5b57\u7b26\u4e32\u5904\u7406\uff1a 1 2 int a = 7 , b = 15 ; System . out . println ( \"lbw\" + a + b ); //lbw715 \u7b97\u672f\u8fd0\u7b97\u7b26\u8fd8\u5305\u62ec ++ \u548c -- \u4e5f\u5c31\u662f\u81ea\u589e\u548c\u81ea\u51cf\uff0c\u4ee5\u81ea\u589e\u4e3a\u4f8b\uff1a 1 2 3 int a = 10 ; a ++ ; System . out . println ( a ); //\u8f93\u51fa\u4e3a11 \u81ea\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26\u653e\u5728\u53d8\u91cf\u7684\u524d\u540e\u7684\u8fd4\u56de\u503c\u662f\u6709\u533a\u522b\u7684\uff1a 1 2 3 int a = 10 ; System . out . println ( a ++ ); //10 \uff08\u5148\u8fd4\u56de\u503c\uff0c\u518d\u81ea\u589e\uff09 System . out . println ( a ); //11 1 2 3 int a = 10 ; System . out . println ( ++ a ); //11 \uff08\u5148\u81ea\u589e\uff0c\u518d\u8fd4\u56de\u503c\uff09 System . out . println ( a ); //11 1 2 3 int a = 10 ; int b = 2 ; System . out . println ( b +++ a ++ ); //\u731c\u731c\u770b\u7ed3\u679c\u662f\u591a\u5c11 \u4e3a\u4e86\u4f7f\u5f97\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec += \u3001 -= \u3001 /= \u3001 *= \u3001 %= \uff0c\u548c\u81ea\u589e\u81ea\u51cf\u7c7b\u4f3c\uff0c\u5148\u6267\u884c\u8fd0\u7b97\uff0c\u518d\u8fd4\u56de\u7ed3\u679c\uff0c\u540c\u65f6\u81ea\u8eab\u6539\u53d8\uff1a 1 2 int a = 10 ; System . out . println ( a += 2 ); //\u7b49\u4ef7\u4e8e a = a + 2","title":"\u8d4b\u503c\u548c\u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_22","text":"\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c\u53ea\u80fd\u662f\u5e03\u5c14\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8981\u4e48\u4e3a\u771f\u8981\u4e48\u4e3a\u5047\uff0c\u5173\u7cfb\u8fd0\u7b97\u7b26\u5305\u62ec\uff1a 1 2 > < == //\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e >= <= != //\u5927\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e \u5173\u7cfb\u8fd0\u7b97\u7b26\u4e00\u822c\u53ea\u7528\u4e8e\u57fa\u672c\u7c7b\u578b\u7684\u6bd4\u8f83\uff0c\u8fd0\u7b97\u7ed3\u679c\u53ea\u80fd\u662fboolean\uff1a 1 2 3 4 5 int a = 10 ; int b = 2 ; boolean x = a > b ; System . out . println ( x ); //\u7ed3\u679c\u4e3a true","title":"\u5173\u7cfb\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_23","text":"\u903b\u8f91\u8fd0\u7b97\u7b26\u4e24\u8fb9\u53ea\u80fd\u662fboolean\u7c7b\u578b\u6216\u662f\u5173\u7cfb/\u903b\u8f91\u8fd0\u7b97\u8868\u8fbe\u5f0f\uff0c\u8fd4\u56de\u503c\u53ea\u80fd\u662fboolean\u7c7b\u578b\uff01\u903b\u8f91\u8fd0\u7b97\u7b26\u5305\u62ec\uff1a 1 2 3 && //\u4e0e\u8fd0\u7b97\uff0c\u8981\u6c42\u4e24\u8fb9\u540c\u65f6\u4e3atrue\u624d\u80fd\u8fd4\u56detrue || //\u6216\u8fd0\u7b97\uff0c\u8981\u6c42\u4e24\u8fb9\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u4e3atrue\u624d\u80fd\u8fd4\u56detrue ! //\u975e\u8fd0\u7b97\uff0c\u4e00\u822c\u653e\u5728\u8868\u8fbe\u5f0f\u6700\u524d\u9762\uff0c\u8868\u8fbe\u5f0f\u7528\u62ec\u53f7\u6269\u8d77\u6765\uff0c\u8868\u793a\u5bf9\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u8fdb\u884c\u53cd\u8f6c \u5b9e\u9645\u6848\u4f8b\u6765\u770b\u770b\uff1a 1 2 3 4 int a = 10 ; int b = 2 ; boolean x = a > b && a < b ; //\u600e\u4e48\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u5462 System . out . println ( x ); //false 1 2 3 4 int a = 10 ; int b = 2 ; boolean x = a > b || a <= b ; //\u4e00\u5b9a\u6709\u4e00\u4e2a\u6ee1\u8db3\uff01 System . out . println ( x ); //true 1 2 3 4 int a = 10 ; int b = 2 ; boolean x = ! ( a > b ); //\u5bf9\u7ed3\u679c\u8fdb\u884c\u53cd\u8f6c\uff0c\u672c\u6765\u5e94\u8be5\u662ftrue System . out . println ( x ); //false","title":"\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_24","text":"1 2 3 4 & //\u6309\u4f4d\u4e0e\uff0c\u6ce8\u610f\uff0c\u8fd4\u56de\u7684\u662f\u8fd0\u7b97\u540e\u7684\u540c\u7c7b\u578b\u503c\uff0c\u4e0d\u662fboolean\uff01 | //\u6309\u4f4d\u6216 ^ //\u6309\u4f4d\u5f02\u6216 0 ^ 0 = 0 ~ //\u6309\u4f4d\u975e \u6309\u4f4d\u8fd0\u7b97\u5b9e\u9645\u4e0a\u662f\u6839\u636e\u503c\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u6765\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f8b\u5982\u6309\u4f4d\u4e0e\uff0c\u4ee54bit\u4e3a\u4f8b\uff1a 0101 & 0100 = 0100 \uff08\u53ea\u6709\u540c\u65f6\u4e3a1\u5bf9\u5e94\u4f4d\u624d\u5f971\uff09 1 2 int a = 7 , b = 15 ; System . out . println ( a & b ); //\u7ed3\u679c\u4e3a7","title":"\u4f4d\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_25","text":"\u4e09\u76ee\u8fd0\u7b97\u7b26\u5176\u5b9e\u662f\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\u800c\u751f\uff0c\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u6765\u51b3\u5b9a\u8fd4\u56de\u503c\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 3 int a = 7 , b = 15 ; String str = a > b ? \"\u884c\" : \"\u4e0d\u884c\" ; // \u5224\u65ad\u6761\u4ef6(\u53ea\u80fd\u662fboolean,\u6216\u8fd4\u56deboolean\u7684\u8868\u8fbe\u5f0f) ? \u6ee1\u8db3\u7684\u8fd4\u56de\u503c : \u4e0d\u6ee1\u8db3\u7684\u8fd4\u56de\u503c System . out . println ( \"\u6c49\u5821\u505a\u7684\u884c\u4e0d\u884c\uff1f\" + str ); //\u6c49\u5821\u505a\u7684\u884c\u4e0d\u884c\uff1f\u4e0d\u884c \u7406\u89e3\u4e09\u76ee\u8fd0\u7b97\u7b26\uff0c\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u540e\u9762\u7684if-else\u8bed\u53e5\u4e86\u3002","title":"\u4e09\u76ee\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_26","text":"\u6211\u4eec\u7684\u7a0b\u5e8f\u90fd\u662f\u4ece\u4e0a\u5f80\u4e0b\u4f9d\u6b21\u8fd0\u884c\u7684\uff0c\u4f46\u662f\uff0c\u4ec5\u4ec5\u662f\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u66f4\u52a0\u9ad8\u7ea7\u7684\u63a7\u5236\u8bed\u53e5\u6765\u5e2e\u6211\u8fdb\u884c\u66f4\u7075\u6d3b\u7684\u63a7\u5236\u3002\u6bd4\u5982\uff0c\u5224\u65ad\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\uff0c\u5927\u4e8e1\u5219\u8f93\u51faok\uff0c\u5c0f\u4e8e1\u5219\u8f93\u51fano\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u9009\u62e9\u7ed3\u6784\u6765\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u6761\u4ef6\u7684\u5224\u65ad\u548c\u7a0b\u5e8f\u7684\u5206\u652f\u8d70\u5411\u3002\u5b66\u4e60\u8fc7C\u8bed\u8a00\u5c31\u5f88\u8f7b\u677e\uff01","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_27","text":"\u9009\u62e9\u7ed3\u6784\u5305\u542bif\u548cswitch\u7c7b\u578b\uff0c\u9009\u62e9\u7ed3\u6784\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u6839\u636e\u6761\u4ef6\u5224\u65ad\uff0c\u518d\u6267\u884c\u54ea\u4e00\u5757\u4ee3\u7801\u3002","title":"\u9009\u62e9\u7ed3\u6784"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#if","text":"\u5c31\u50cf\u4e0a\u9762\u6240\u8bf4\uff0c\u5224\u65ad\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\uff0c\u5927\u4e8e1\u5219\u8f93\u51faok\uff0c\u5c0f\u4e8e1\u5219\u8f93\u51fano\uff0c\u8981\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u91c7\u7528if\u8bed\u53e5\uff1a 1 2 3 4 5 6 if ( \u5224\u65ad\u6761\u4ef6 ){ //\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else { //\u5224\u65ad\u5931\u8d25\u6267\u884c\u7684\u5185\u5bb9 } //if\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u5185\u5bb9\u6b63\u5e38\u6267\u884c \u5176\u4e2d\uff0c else \u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u73b0\u5728\uff0c\u53c8\u6765\u4e86\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u7528\u6237\u8f93\u5165\u7684\u662f1\u6253\u5370ok\uff0c\u8f93\u51652\uff0c\u6253\u5370yes\uff0c\u5176\u4ed6\u6253\u5370no\uff0c\u90a3\u4e48\u8fd9\u6837\u5c31\u9700\u8981\u6211\u4eec\u8fdb\u884c\u591a\u79cd\u6761\u4ef6\u7684\u5224\u65ad\u4e86\uff0c\u5f53\u7136if\u80fd\u8fdb\u884c\u591a\u5206\u652f\u5224\u65ad\uff1a 1 2 3 4 5 6 7 if ( \u5224\u65ad\u6761\u4ef61 ){ //\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else if ( \u5224\u65ad\u6761\u4ef62 ){ //\u518d\u6b21\u5224\u65ad\uff0c\u5982\u679c\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else { //\u4e0a\u9762\u7684\u90fd\u6ca1\u6210\u529f\uff0c\u53ea\u80fd\u8d70\u8fd9\u91cc } \u540c\u6837\uff0c else \u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u73b0\u5728\uff0c\u53c8\u6765\u4e86\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u7528\u6237\u8f93\u51651\u4e4b\u540e\uff0c\u5728\u5224\u65ad\u7528\u6237\u4e0b\u4e00\u6b21\u8f93\u5165\u7684\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u662f1\uff0c\u6253\u5370yes\uff0c\u4e0d\u662f\u5c31\u6253\u5370no\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u5d4c\u5957if\u4e86\uff1a 1 2 3 4 5 6 7 8 if ( \u5224\u65ad\u6761\u4ef61 ){ //\u524d\u63d0\u662f\u5224\u65ad\u6761\u4ef61\u8981\u6210\u529f\u624d\u80fd\u8fdb\u6765\uff01 if ( \u5224\u65ad\u6761\u4ef62 ){ //\u5224\u65ad\u6210\u529f\u6267\u884c\u7684\u5185\u5bb9 } else { //\u5224\u65ad\u5931\u8d25\u6267\u884c\u7684\u5185\u5bb9 } }","title":"if\u8bed\u53e5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#switch","text":"\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u867d\u7136 else-if \u80fd\u89e3\u51b3\u591a\u5206\u652f\u5224\u65ad\u7684\u95ee\u9898\uff0c\u4f46\u662f\u6548\u7387\u5b9e\u5728\u662f\u592a\u4f4e\u4e86\uff0c\u591a\u5206\u652fif\u91c7\u7528\u7684\u662f\u9010\u7ea7\u5411\u4e0b\u5224\u65ad\uff0c\u663e\u7136\u8d39\u65f6\u8d39\u529b\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u76f4\u66f4\u4e13\u4e1a\u7684\u89e3\u51b3\u591a\u5206\u652f\u5224\u65ad\u95ee\u9898\u7684\u4e1c\u897f\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 switch ( \u5224\u65ad\u4e3b\u4f53 ){ case \u503c1 : //\u8fd0\u884cxxx break ; //break\u7528\u4e8e\u8df3\u51faswitch\u8bed\u53e5\uff0c\u4e0d\u6dfb\u52a0\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\uff01 case \u503c2 : //\u8fd0\u884cxxx break ; case \u503c3 : //\u8fd0\u884cxxx break ; } \u5728\u4e0a\u8ff0\u8bed\u53e5\u4e2d\uff0c\u53ea\u6709\u5224\u65ad\u4e3b\u4f53\u7b49\u4e8ecase\u540e\u9762\u7684\u503c\u65f6\uff0c\u624d\u4f1a\u6267\u884ccase\u4e2d\u7684\u8bed\u53e5\uff0c\u540c\u65f6\u9700\u8981\u4f7f\u7528break\u6765\u8df3\u51faswitch\u8bed\u53e5\uff0c\u5426\u5219\u4f1a\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\uff01 \u4e3a\u4ec0\u4e48switch\u6548\u7387\u66f4\u9ad8\u5462\uff0c\u56e0\u4e3aswitch\u91c7\u7528\u4e8c\u5206\u601d\u60f3\u8fdb\u884c\u67e5\u627e\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48switch\u53ea\u80fd\u5224\u65ad\u503c\u76f8\u7b49\u7684\u539f\u56e0\uff09\uff0c\u80fd\u591f\u66f4\u5feb\u5730\u627e\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff01","title":"switch\u8bed\u53e5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_28","text":"\u5c0f\u660e\u60f3\u5411\u5c0f\u7ea2\u8868\u767d\uff0c\u4e8e\u662f\u4ed6\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e86520\u4e2a \"\u6211\u7231\u4f60\"\uff0c\u6211\u4eec\u7528Java\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f","title":"\u5faa\u73af\u7ed3\u6784"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#for","text":"for\u8bed\u53e5\u662f\u6bd4\u8f83\u7075\u6d3b\u7684\u5faa\u73af\u63a7\u5236\u8bed\u53e5\uff0c\u4e00\u4e2afor\u8bed\u53e5\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a 1 2 3 4 for ( \u521d\u59cb\u6761\u4ef6 ; \u5faa\u73af\u6761\u4ef6 ; \u66f4\u65b0 ){ //\u5faa\u73af\u6267\u884c\u7684\u5185\u5bb9 } //\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u7ee7\u7eed\u6267\u884c \u521d\u59cb\u6761\u4ef6\uff1a\u5faa\u73af\u5f00\u59cb\u65f6\u7684\u6761\u4ef6\uff0c\u4e00\u822c\u7528\u4e8e\u5b9a\u4e49\u63a7\u5236\u5faa\u73af\u7684\u53d8\u91cf\u3002 \u5faa\u73af\u6761\u4ef6\uff1a\u6bcf\u8f6e\u5faa\u73af\u5f00\u59cb\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u6b21\u5224\u65ad\uff0c\u5982\u679c\u6ee1\u8db3\u5219\u7ee7\u7eed\uff0c\u4e0d\u6ee1\u8db3\u5219\u7ed3\u675f\uff0c\u8981\u6c42\u4e3aboolean\u53d8\u91cf\u6216\u662fboolean\u8868\u8fbe\u5f0f\u3002 \u66f4\u65b0\uff1a\u6bcf\u8f6e\u5faa\u73af\u7ed3\u675f\u540e\u90fd\u4f1a\u6267\u884c\u7684\u5185\u5bb9\uff0c\u4e00\u822c\u5199\u589e\u91cf\u8868\u8fbe\u5f0f\u3002 \u521d\u59cb\u6761\u4ef6\u3001\u5faa\u73af\u6761\u4ef6\u3001\u66f4\u65b0\u6761\u4ef6\u4e0d\u662f\u7f3a\u4e00\u4e0d\u53ef\uff0c\u751a\u81f3\u53ef\u4ee5\u90fd\u7f3a\uff01 1 2 3 for ( int i = 0 ; i < 520 ; i ++ ){ System . out . println ( \"\u6211\u7231\u4f60\" ); } 1 2 3 for (;;){ //\u8fd9\u91cc\u7684\u5185\u5bb9\u5c06\u4f1a\u6c38\u8fdc\u5730\u8fdb\u884c\u4e0b\u53bb\uff01 } \u589e\u5f3afor\u5faa\u73af\u5728\u6570\u7ec4\u65f6\u518d\u8bb2\u89e3\uff01","title":"for\u8bed\u53e5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#while","text":"while\u5faa\u73af\u548cfor\u5faa\u73af\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u66f4\u52a0\u7684\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u7ef4\u6301\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u5373\u53ef\uff01 1 2 3 while ( \u5faa\u73af\u6761\u4ef6 ){ //\u5faa\u73af\u6267\u884c\u7684\u5185\u5bb9 } \u548cfor\u4e00\u6837\uff0c\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\uff0c\u5f53\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u81ea\u52a8\u9000\u51fa\uff01\u90a3\u4e48\u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u5148\u6267\u884c\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u518d\u53bb\u5224\u65ad\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528do-while\u8bed\u53e5\uff1a 1 2 3 do { //\u6267\u884c\u5185\u5bb9 } while ( \u5faa\u73af\u6761\u4ef6 ); \u4e00\u5b9a\u4f1a\u5148\u6267\u884cdo\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u518d\u505a\u5224\u65ad\uff01 \u601d\u8003\uff1a 1 2 3 4 5 6 7 8 9 for (;;){ } while ( true ){ } //\u5b83\u4eec\u7684\u6027\u80fd\u8c01\u66f4\u9ad8\uff1f","title":"while\u5faa\u73af"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_29","text":"","title":"\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u5b9e\u6218\uff08\u57fa\u7840+\u7b97\u6cd5\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_30","text":"\u7b80\u5355\uff1a\u5c06\u4e5d\u4e5d\u4e58\u6cd5\u8868\u6253\u5370\u5230\u63a7\u5236\u53f0\u3002","title":"\u6253\u5370\u4e5d\u4e5d\u4e58\u6cd5\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#1000","text":"\u4e2d\u7b49\uff1a\u6253\u53701000\u4ee5\u5185\u6240\u6709\u6ee1\u8db3\u6c34\u4ed9\u82b1\u7684\u6570\uff0c\u201c\u6c34\u4ed9\u82b1\u6570\u201d\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\u5176\u5404\u4f4d\u6570\u5b57\u7684\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u6570\u672c\u8eab\uff0c\u4f8b\u5982153\u662f\u201c\u6c34\u4ed9\u82b1\u6570\u201d\uff0c\u56e0\u4e3a\uff1a153 = 1^3 + 5^3 + 3^3","title":"\u6c421000\u4ee5\u5185\u7684\u6c34\u4ed9\u82b1\u6570"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/#_31","text":"\u56f0\u96be\uff1a\u4e00\u5171\u6709n\u4e2a\u53f0\u9636\uff0c\u4e00\u53ea\u9752\u86d9\u6bcf\u6b21\u53ea\u80fd\u8df3\u4e00\u9636\u6216\u662f\u4e24\u9636\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u591a\u5c11\u79cd\u8df3\u5230\u9876\u7aef\u7684\u65b9\u6848\uff1f\u4f8b\u5982n=2\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u6b21\u6027\u8df3\u4e24\u9636\u6216\u662f\u6bcf\u6b21\u8df3\u4e00\u9636\u3002 \u52a8\u6001\u89c4\u5212\uff1a\u5176\u5b9e\uff0c\u5c31\u662f\u5229\u7528\uff0c\u4e0a\u6b21\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u7ed9\u4e0b\u4e00\u6b21\u4f5c\u53c2\u8003\uff0c\u4e0b\u4e00\u6b21\u5c31\u80fd\u5229\u7528\u4e0a\u6b21\u7684\u7ed3\u679c\u5feb\u901f\u5f97\u5230\u7ed3\u679c\uff0c\u4f9d\u6b21\u7c7b\u63a8 \u4e0d\u5bf9\u554a\uff0c\u522b\u7684\u6559\u7a0b\u90fd\u8bb2\u4e86\u6570\u7ec4\u3001\u65b9\u6cd5\uff0c\u600e\u4e48\u6211\u4eec\u8fd8\u6ca1\u8bb2\u5c31\u8fdb\u5165\u9762\u5411\u5bf9\u8c61\u4e86\u5462\uff1f \u6570\u7ec4\u5728Java\u4e2d\uff0c\u5e76\u975e\u57fa\u672c\u7c7b\u578b\uff0c\u6570\u7ec4\u662f\u7f16\u7a0b\u4e0d\u53ef\u89c1\u7684\u5bf9\u8c61\u7c7b\u578b\uff0c\u5b66\u4e60\u4e86\u9762\u5411\u5bf9\u8c61\u518d\u6765\u7406\u89e3\uff0c\u4f1a\u66f4\u52a0\u5bb9\u6613\uff01 \u65b9\u6cd5\u5728Java\u4e2d\u662f\u7c7b\u5177\u6709\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\uff0c\u5728\u4e86\u89e3\u4e86\u5bf9\u8c61\u7c7b\u578b\u4e4b\u540e\uff0c\u518d\u6765\u4e86\u89e3\u65b9\u6cd5\uff0c\u5c31\u66f4\u52a0\u7b80\u5355\u4e86\uff01","title":"\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/","text":"Java\u53cd\u5c04\u548c\u6ce8\u89e3 \u6ce8\u610f\uff1a \u672c\u7ae0\u8282\u6d89\u53ca\u5230JVM\u76f8\u5173\u5e95\u5c42\u539f\u7406\uff0c\u96be\u5ea6\u4f1a\u6709\u4e00\u4e9b\u5927\u3002 \u53cd\u5c04\u5c31\u662f\u628aJava\u7c7b\u4e2d\u7684\u5404\u4e2a\u6210\u5206\u6620\u5c04\u6210\u4e00\u4e2a\u4e2a\u7684Java\u5bf9\u8c61\u3002\u5373\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7c7b\uff0c\u90fd\u80fd\u591f\u77e5\u9053\u8fd9\u4e2a\u7c7b\u6240\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90fd\u80fd\u8c03\u7528\u5b83\u7684\u4efb\u610f\u4e00\u4e2a\u65b9\u6cd5\u548c\u5c5e\u6027\u3002\u8fd9\u79cd\u52a8\u6001\u83b7\u53d6\u4fe1\u606f\u53ca\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u529f\u80fd\u53ebJava\u7684\u53cd\u5c04\u673a\u5236\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\uff0c\u83b7\u53d6\u5230\u7c7b\u7684\u4e00\u4e9b\u5c5e\u6027\uff0c\u5305\u62ec\u7c7b\u91cc\u9762\u6709\u54ea\u4e9b\u5b57\u6bb5\uff0c\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u7ee7\u627f\u81ea\u54ea\u4e2a\u7c7b\uff0c\u751a\u81f3\u8fd8\u80fd\u83b7\u53d6\u5230\u6cdb\u578b\uff01\u5b83\u7684\u6743\u9650\u975e\u5e38\u9ad8\uff0c\u614e\u91cd\u4f7f\u7528\uff01 Java\u7c7b\u52a0\u8f7d\u673a\u5236 \u5728\u5b66\u4e60Java\u7684\u53cd\u5c04\u673a\u5236\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e0b\u7c7b\u7684\u52a0\u8f7d\u673a\u5236\uff0c\u4e00\u4e2a\u7c7b\u662f\u5982\u4f55\u88ab\u52a0\u8f7d\u548c\u4f7f\u7528\u7684\uff1a \u5728Java\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cJVM\u4f1a\u5c06\u4e00\u90e8\u5206\u7c7b\uff08class\u6587\u4ef6\uff09\u5148\u52a0\u8f7d\uff08\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7c7b\u90fd\u4f1a\u5728\u4e00\u5f00\u59cb\u52a0\u8f7d\uff09\uff0c\u901a\u8fc7ClassLoader\u5c06\u7c7b\u52a0\u8f7d\uff0c\u5728\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5c06\u7c7b\u7684\u4fe1\u606f\u63d0\u53d6\u51fa\u6765\uff08\u5b58\u653e\u5728\u5143\u7a7a\u95f4\u4e2d\uff0cJDK1.8\u4e4b\u524d\u5b58\u653e\u5728\u6c38\u4e45\u4ee3\uff09\uff0c\u540c\u65f6\u4e5f\u4f1a\u751f\u6210\u4e00\u4e2aClass\u5bf9\u8c61\u5b58\u653e\u5728\u5185\u5b58\uff08\u5806\u5185\u5b58\uff09\uff0c\u6ce8\u610f\u6b64Class\u5bf9\u8c61\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\uff0c\u4e0e\u52a0\u8f7d\u7684\u7c7b\u552f\u4e00\u5bf9\u5e94\uff01 \u601d\u8003\uff1a \u65e2\u7136\u8bf4\u548c\u4e0e\u52a0\u8f7d\u7684\u7c7b\u552f\u4e00\u5bf9\u5e94\uff0c\u90a3\u5982\u679c\u6211\u4eec\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u4e0eJDK\u5305\u540d\u4e00\u6837\uff0c\u540c\u65f6\u7c7b\u540d\u4e5f\u4fdd\u6301\u4e00\u81f4\uff0c\u90a3\u4e48JVM\u4f1a\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\u5417\uff1f 1 2 3 4 5 6 7 package java.lang ; public class String { //JDK\u63d0\u4f9b\u7684String\u7c7b\u4e5f\u662f public static void main ( String [] args ) { System . out . println ( \"\u6211\u59d3\ud83d\udc34\uff0c\u6211\u53eb\ud83d\udc34nb\" ); } } \u6211\u4eec\u53d1\u73b0\uff0c\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u62a5\u9519\uff1a 1 2 \u9519\u8bef : \u5728\u7c7b java . lang . String \u4e2d\u627e\u4e0d\u5230 main \u65b9\u6cd5 , \u8bf7\u5c06 main \u65b9\u6cd5\u5b9a\u4e49\u4e3a : public static void main ( String [] args ) \u4f46\u662f\u6211\u4eec\u660e\u660e\u5728\u81ea\u5df1\u5199\u7684String\u7c7b\u4e2d\u5b9a\u4e49\u4e86main\u65b9\u6cd5\u554a\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u627e\u4e0d\u5230\u6b64\u65b9\u6cd5\u5462\uff1f\u5b9e\u9645\u4e0a\u8fd9\u662fClassLoader\u7684 \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236 \u5728\u4fdd\u62a4Java\u7a0b\u5e8f\u7684\u6b63\u5e38\u8fd0\u884c\uff1a \u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u7c7b\u6700\u5f00\u59cb\u662f\u7531BootstarpClassLoader\u8fdb\u884c\u52a0\u8f7d\uff0cBootstarpClassLoader\u7528\u4e8e\u52a0\u8f7dJDK\u63d0\u4f9b\u7684\u7c7b\uff0c\u800c\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684\u7c7b\u5b9e\u9645\u4e0a\u662fAppClassLoader\uff0c\u53ea\u6709BootstarpClassLoader\u90fd\u6ca1\u6709\u52a0\u8f7d\u7684\u7c7b\uff0c\u624d\u4f1a\u8ba9AppClassLoader\u6765\u52a0\u8f7d\uff0c\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684\u540c\u540d\u5305\u540c\u540d\u7c7b\u4e0d\u4f1a\u88ab\u52a0\u8f7d\uff0c\u800c\u5b9e\u9645\u8981\u53bb\u542f\u52a8\u7684\u662f\u771f\u6b63\u7684String\u7c7b\uff0c\u4e5f\u5c31\u81ea\u7136\u627e\u4e0d\u5230 main \u65b9\u6cd5\u4e86\uff01 1 2 3 4 5 6 7 8 public class Main { public static void main ( String [] args ) { System . out . println ( Main . class . getClassLoader ()); //\u67e5\u770b\u5f53\u524d\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 System . out . println ( Main . class . getClassLoader (). getParent ()); //\u7236\u52a0\u8f7d\u5668 System . out . println ( Main . class . getClassLoader (). getParent (). getParent ()); //\u7237\u7237\u52a0\u8f7d\u5668 System . out . println ( String . class . getClassLoader ()); //String\u7c7b\u7684\u52a0\u8f7d\u5668 } } \u7531\u4e8eBootstarpClassLoader\u662fC++\u7f16\u5199\u7684\uff0c\u6211\u4eec\u5728Java\u4e2d\u662f\u83b7\u53d6\u4e0d\u5230\u7684\u3002 Class\u5bf9\u8c61 \u901a\u8fc7\u524d\u9762\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u7c7b\u7684\u52a0\u8f7d\uff0c\u540c\u65f6\u4f1a\u63d0\u53d6\u4e00\u4e2a\u7c7b\u7684\u4fe1\u606f\u751f\u6210Class\u5bf9\u8c61\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u53cd\u5c04\u673a\u5236\u5176\u5b9e\u5c31\u662f\u5229\u7528\u8fd9\u4e9b\u5b58\u653e\u7684\u7c7b\u4fe1\u606f\uff0c\u6765\u83b7\u53d6\u7c7b\u7684\u4fe1\u606f\u548c\u64cd\u4f5c\u7c7b\u3002\u90a3\u4e48\u5982\u4f55\u83b7\u53d6\u5230\u6bcf\u4e2a\u7c7b\u5bf9\u5e94\u7684Class\u5bf9\u8c61\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\uff1a 1 2 3 4 5 public static void main ( String [] args ) throws ClassNotFoundException { Class < String > clazz = String . class ; //\u4f7f\u7528class\u5173\u952e\u5b57\uff0c\u901a\u8fc7\u7c7b\u540d\u83b7\u53d6 Class <?> clazz2 = Class . forName ( \"java.lang.String\" ); //\u4f7f\u7528Class\u7c7b\u9759\u6001\u65b9\u6cd5forName()\uff0c\u901a\u8fc7\u5305\u540d.\u7c7b\u540d\u83b7\u53d6\uff0c\u6ce8\u610f\u8fd4\u56de\u503c\u662fClass<?> Class <?> clazz3 = new String ( \"cpdd\" ). getClass (); //\u901a\u8fc7\u5b9e\u4f8b\u5bf9\u8c61\u83b7\u53d6 } \u6ce8\u610fClass\u7c7b\u4e5f\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u53ea\u6709\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5230\u5bf9\u5e94\u7c7b\u578b\u7684Class\u5bf9\u8c61\uff0c\u800c\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\u4f7f\u7528\u4e86 ? \u901a\u914d\u7b26\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u90fd\u548c\u7b2c\u4e00\u4e2a\u8fd4\u56de\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1a 1 2 3 4 5 6 Class < String > clazz = String . class ; //\u4f7f\u7528class\u5173\u952e\u5b57\uff0c\u901a\u8fc7\u7c7b\u540d\u83b7\u53d6 Class <?> clazz2 = Class . forName ( \"java.lang.String\" ); //\u4f7f\u7528Class\u7c7b\u9759\u6001\u65b9\u6cd5forName()\uff0c\u901a\u8fc7\u5305\u540d.\u7c7b\u540d\u83b7\u53d6\uff0c\u6ce8\u610f\u8fd4\u56de\u503c\u662fClass<?> Class <?> clazz3 = new String ( \"cpdd\" ). getClass (); System . out . println ( clazz == clazz2 ); System . out . println ( clazz == clazz3 ); \u901a\u8fc7\u6bd4\u8f83\uff0c\u9a8c\u8bc1\u4e86\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u7ed3\u8bba\uff0c\u5728JVM\u4e2d\u6bcf\u4e2a\u7c7b\u59cb\u7ec8\u53ea\u5b58\u5728\u4e00\u4e2aClass\u5bf9\u8c61\uff0c\u65e0\u8bba\u901a\u8fc7\u4ec0\u4e48\u65b9\u6cd5\u83b7\u53d6\uff0c\u90fd\u662f\u4e00\u6837\u7684\u3002\u73b0\u5728\u6211\u4eec\u518d\u6765\u770b\u770b\u8fd9\u4e2a\u95ee\u9898\uff1a 1 2 3 4 public static void main ( String [] args ) { Class <?> clazz = int . class ; //\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6709Class\u5bf9\u8c61\u5417\uff1f System . out . println ( clazz ); } \u8ff7\u4e86\uff0c\u4e0d\u662f\u6bcf\u4e2a\u7c7b\u624d\u6709Class\u5bf9\u8c61\u5417\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53c8\u4e0d\u662f\u7c7b\uff0c\u8fd9\u4e5f\u884c\u5417\uff1f\u5b9e\u9645\u4e0a\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e5f\u6709\u5bf9\u5e94\u7684Class\u5bf9\u8c61\uff08\u53cd\u5c04\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u7528\u5230\uff09\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7class\u5173\u952e\u5b57\u83b7\u53d6\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u5b9a\u4e49\u5728\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b\u4e2d\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /** * The {@code Class} instance representing the primitive type * {@code int}. * * @since JDK1.1 */ @SuppressWarnings ( \"unchecked\" ) public static final Class < Integer > TYPE = ( Class < Integer > ) Class . getPrimitiveClass ( \"int\" ); /* * Return the Virtual Machine's Class object for the named * primitive type */ static native Class <?> getPrimitiveClass ( String name ); //C++\u5b9e\u73b0\uff0c\u5e76\u975eJava\u5b9a\u4e49 \u6bcf\u4e2a\u5305\u88c5\u7c7b\u4e2d\uff08\u5305\u62ecVoid\uff09\uff0c\u90fd\u6709\u4e00\u4e2a\u83b7\u53d6\u539f\u59cb\u7c7b\u578bClass\u65b9\u6cd5\uff0c\u6ce8\u610f\uff0cgetPrimitiveClass\u83b7\u53d6\u7684\u662f\u539f\u59cb\u7c7b\u578b\uff0c\u5e76\u4e0d\u662f\u5305\u88c5\u7c7b\u578b\uff0c\u53ea\u662f\u53ef\u4ee5\u4f7f\u7528\u5305\u88c5\u7c7b\u6765\u8868\u793a\u3002 1 2 3 4 public static void main ( String [] args ) { Class <?> clazz = int . class ; System . out . println ( Integer . TYPE == int . class ); } \u901a\u8fc7\u5bf9\u6bd4\uff0c\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u5305\u88c5\u7c7b\u578b\u90fd\u6709\u4e00\u4e2aTYPE\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u57fa\u672c\u7c7b\u578b\u7684Class\uff0c\u90a3\u4e48\u5305\u88c5\u7c7b\u7684Class\u548c\u57fa\u672c\u7c7b\u7684Class\u4e00\u6837\u5417\uff1f 1 2 3 public static void main ( String [] args ) { System . out . println ( Integer . TYPE == Integer . class ); } \u6211\u4eec\u53d1\u73b0\uff0c\u5305\u88c5\u7c7b\u578b\u7684Class\u5bf9\u8c61\u5e76\u4e0d\u662f\u57fa\u672c\u7c7b\u578bClass\u5bf9\u8c61\u3002\u6570\u7ec4\u7c7b\u578b\u4e5f\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u53ea\u662f\u7f16\u7a0b\u4e0d\u53ef\u89c1\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u6570\u7ec4\u7684Class\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { Class < String []> clazz = String [] . class ; System . out . println ( clazz . getName ()); //\u83b7\u53d6\u7c7b\u540d\u79f0\uff08\u5f97\u5230\u7684\u662f\u5305\u540d+\u7c7b\u540d\u7684\u5b8c\u6574\u540d\u79f0\uff09 System . out . println ( clazz . getSimpleName ()); System . out . println ( clazz . getTypeName ()); System . out . println ( clazz . getClassLoader ()); //\u83b7\u53d6\u5b83\u7684\u7c7b\u52a0\u8f7d\u5668 System . out . println ( clazz . cast ( new Integer ( \"10\" ))); //\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 } \u518d\u8c08instanceof \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528instanceof\u8fdb\u884c\u7c7b\u578b\u6bd4\u8f83\uff1a 1 2 3 4 public static void main ( String [] args ) { String str = \"\" ; System . out . println ( str instanceof String ); } \u5b83\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u4e3a\u6b64\u63a5\u53e3\u6216\u662f\u7c7b\u7684\u5b9e\u73b0\u6216\u662f\u5b50\u7c7b\uff0c\u800c\u73b0\u5728\u6211\u4eec\u6709\u4e86\u66f4\u591a\u7684\u65b9\u5f0f\u53bb\u5224\u65ad\u7c7b\u578b\uff1a 1 2 3 4 public static void main ( String [] args ) { String str = \"\" ; System . out . println ( str . getClass () == String . class ); //\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4e3a\u8fd9\u4e2a\u7c7b\u578b } \u5982\u679c\u9700\u8981\u5224\u65ad\u662f\u5426\u4e3a\u5b50\u7c7b\u6216\u662f\u63a5\u53e3/\u62bd\u8c61\u7c7b\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 asSubClass() \u65b9\u6cd5\uff1a 1 2 3 4 public static void main ( String [] args ) { Integer i = 10 ; i . getClass (). asSubclass ( Number . class ); //\u5f53Integer\u4e0d\u662fNumber\u7684\u5b50\u7c7b\u65f6\uff0c\u4f1a\u4ea7\u751f\u5f02\u5e38 } \u83b7\u53d6\u7236\u7c7b\u4fe1\u606f \u901a\u8fc7 getSuperclass() \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5230\u7236\u7c7b\u7684Class\u5bf9\u8c61\uff1a 1 2 3 4 public static void main ( String [] args ) { Integer i = 10 ; System . out . println ( i . getClass (). getSuperclass ()); } \u4e5f\u53ef\u4ee5\u901a\u8fc7 getGenericSuperclass() \u83b7\u53d6\u7236\u7c7b\u7684\u539f\u59cb\u7c7b\u578b\u7684Type\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { Integer i = 10 ; Type type = i . getClass (). getGenericSuperclass (); System . out . println ( type ); System . out . println ( type instanceof Class ); } \u6211\u4eec\u53d1\u73b0Type\u5b9e\u9645\u4e0a\u662fClass\u7c7b\u7684\u7236\u63a5\u53e3\uff0c\u4f46\u662f\u83b7\u53d6\u5230\u7684Type\u7684\u5b9e\u73b0\u5e76\u4e0d\u4e00\u5b9a\u662fClass\u3002 \u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u50cf\u4e0a\u9762\u8fd9\u6837\u83b7\u53d6\u7236\u63a5\u53e3\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { Integer i = 10 ; for ( Class <?> anInterface : i . getClass (). getInterfaces ()) { System . out . println ( anInterface . getName ()); } for ( Type genericInterface : i . getClass (). getGenericInterfaces ()) { System . out . println ( genericInterface . getTypeName ()); } } \u521b\u5efa\u7c7b\u5bf9\u8c61 \u65e2\u7136\u6211\u4eec\u62ff\u5230\u4e86\u7c7b\u7684\u5b9a\u4e49\uff0c\u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u901a\u8fc7Class\u5bf9\u8c61\u6765\u521b\u5efa\u5bf9\u8c61\u3001\u8c03\u7528\u65b9\u6cd5\u3001\u4fee\u6539\u53d8\u91cf\u5462\uff1f\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u90a3\u6211\u4eec\u9996\u5148\u6765\u63a2\u8ba8\u4e00\u4e0b\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . newInstance (); student . test (); } static class Student { public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u901a\u8fc7\u4f7f\u7528 newInstance() \u65b9\u6cd5\u6765\u521b\u5efa\u5bf9\u5e94\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u6cdb\u578bT\uff0c\u6ce8\u610f\u5b83\u4f1a\u629b\u51faInstantiationException\u548cIllegalAccessException\u5f02\u5e38\uff0c\u90a3\u4e48\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u5f02\u5e38\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . newInstance (); student . test (); } static class Student { public Student ( String text ){ } public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u5f53\u7c7b\u9ed8\u8ba4\u7684\u6784\u9020\u65b9\u6cd5\u88ab\u5e26\u53c2\u6784\u9020\u8986\u76d6\u65f6\uff0c\u4f1a\u51fa\u73b0InstantiationException\u5f02\u5e38\uff0c\u56e0\u4e3a newInstance() \u53ea\u9002\u7528\u4e8e\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . newInstance (); student . test (); } static class Student { private Student (){} public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u5f53\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u7684\u6743\u9650\u4e0d\u662f public \u65f6\uff0c\u4f1a\u51fa\u73b0IllegalAccessException\u5f02\u5e38\uff0c\u8868\u793a\u6211\u4eec\u65e0\u6743\u53bb\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\u3002\u5728JDK9\u4e4b\u540e\uff0c\u4e0d\u518d\u63a8\u8350\u4f7f\u7528 newInstance() \u65b9\u6cd5\u4e86\uff0c\u800c\u662f\u4f7f\u7528\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u5230\u7684\uff0c\u901a\u8fc7\u83b7\u53d6\u6784\u9020\u5668\uff0c\u6765\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws NoSuchMethodException , InvocationTargetException , InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . getConstructor ( String . class ). newInstance ( \"what's up\" ); student . test (); } static class Student { public Student ( String str ){} public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u901a\u8fc7\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff08\u6784\u9020\u5668\uff09\u6765\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u4f1a\u66f4\u52a0\u5408\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 getConstructor() \u65b9\u6cd5\u6765\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u540c\u65f6\u6211\u4eec\u9700\u8981\u5411\u5176\u4e2d\u586b\u5165\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u6784\u9020\u65b9\u6cd5\u9700\u8981\u7684\u7c7b\u578b\uff0c\u5f53\u7136\u6211\u4eec\u8fd9\u91cc\u53ea\u6f14\u793a\u4e86\u3002\u90a3\u4e48\uff0c\u5f53\u8bbf\u95ee\u6743\u9650\u4e0d\u662fpublic\u7684\u65f6\u5019\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws NoSuchMethodException , InvocationTargetException , InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . getConstructor ( String . class ). newInstance ( \"what's up\" ); student . test (); } static class Student { private Student ( String str ){} public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u8bbf\u95ee\u6743\u9650\u4e0d\u8db3\u65f6\uff0c\u4f1a\u65e0\u6cd5\u627e\u5230\u6b64\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u4f55\u627e\u5230\u975epublic\u7684\u6784\u9020\u65b9\u6cd5\u5462\uff1f 1 2 3 4 5 Class < Student > clazz = Student . class ; Constructor < Student > constructor = clazz . getDeclaredConstructor ( String . class ); constructor . setAccessible ( true ); //\u4fee\u6539\u8bbf\u95ee\u6743\u9650 Student student = constructor . newInstance ( \"what's up\" ); student . test (); \u4f7f\u7528 getDeclaredConstructor() \u65b9\u6cd5\u53ef\u4ee5\u627e\u5230\u7c7b\u4e2d\u7684\u975epublic\u6784\u9020\u65b9\u6cd5\uff0c\u4f46\u662f\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4fee\u6539\u8bbf\u95ee\u6743\u9650\uff0c\u5728\u4fee\u6539\u8bbf\u95ee\u6743\u9650\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u975epublic\u65b9\u6cd5\u4e86\uff08\u8fd9\u610f\u5473\u7740\uff0c\u53cd\u5c04\u53ef\u4ee5\u65e0\u89c6\u6743\u9650\u4fee\u9970\u7b26\u8bbf\u95ee\u7c7b\u7684\u5185\u5bb9\uff09 \u8c03\u7528\u7c7b\u7684\u65b9\u6cd5 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u6765\u8c03\u7528\u7c7b\u7684\u65b9\u6cd5\uff08\u672c\u8d28\u4e0a\u8fd8\u662f\u7c7b\u7684\u5b9e\u4f8b\u8fdb\u884c\u8c03\u7528\uff09\u53ea\u662f\u5229\u7528\u53cd\u5c04\u673a\u5236\u5b9e\u73b0\u4e86\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u6211\u4eec\u5728\u5305\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\uff1a 1 2 3 4 5 6 7 package com.test ; public class Student { public void test ( String str ){ System . out . println ( \"\u8428\u65e5\u6717\" + str ); } } \u8fd9\u6b21\u6211\u4eec\u901a\u8fc7 forName(String) \u6765\u627e\u5230\u8fd9\u4e2a\u7c7b\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); //\u521b\u5efa\u51fa\u5b66\u751f\u5bf9\u8c61 Method method = clazz . getMethod ( \"test\" , String . class ); //\u901a\u8fc7\u65b9\u6cd5\u540d\u548c\u5f62\u53c2\u7c7b\u578b\u83b7\u53d6\u7c7b\u4e2d\u7684\u65b9\u6cd5 method . invoke ( instance , \"what's up\" ); //\u901a\u8fc7Method\u5bf9\u8c61\u7684invoke\u65b9\u6cd5\u6765\u8c03\u7528\u65b9\u6cd5 } \u901a\u8fc7\u8c03\u7528 getMethod() \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5230\u7c7b\u4e2d\u6240\u6709\u58f0\u660e\u4e3apublic\u7684\u65b9\u6cd5\uff0c\u5f97\u5230\u4e00\u4e2aMethod\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Method\u5bf9\u8c61\u7684 invoke() \u65b9\u6cd5\uff08\u8fd4\u56de\u503c\u5c31\u662f\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u662fvoid\uff0c\u8fd4\u56de\u503c\u4e3anull\uff09\u6765\u8c03\u7528\u5df2\u7ecf\u83b7\u53d6\u5230\u7684\u65b9\u6cd5\uff0c\u6ce8\u610f\u4f20\u53c2\u3002 \u6211\u4eec\u53d1\u73b0\uff0c\u5229\u7528\u53cd\u5c04\u4e4b\u540e\uff0c\u5728\u4e00\u4e2a\u5bf9\u8c61\u4ece\u6784\u9020\u5230\u65b9\u6cd5\u8c03\u7528\uff0c\u6ca1\u6709\u4efb\u4f55\u4e00\u5904\u9700\u8981\u5f15\u7528\u5230\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709\u5bfc\u5165Student\u7c7b\uff0c\u6574\u4e2a\u8fc7\u7a0b\u90fd\u662f\u53cd\u5c04\u5728\u4ee3\u66ff\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6574\u4e2a\u8fc7\u7a0b\u88ab\u6a21\u7cca\u4e86\uff0c\u8fc7\u591a\u7684\u4f7f\u7528\u53cd\u5c04\uff0c\u4f1a\u6781\u5927\u5730\u964d\u4f4e\u540e\u671f\u7ef4\u62a4\u6027\u3002 \u540c\u6784\u9020\u65b9\u6cd5\u4e00\u6837\uff0c\u5f53\u51fa\u73b0\u975epublic\u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u6765\u65e0\u89c6\u6743\u9650\u4fee\u9970\u7b26\uff0c\u83b7\u53d6\u975epublic\u65b9\u6cd5\u5e76\u8c03\u7528\uff0c\u73b0\u5728\u6211\u4eec\u5c06 test() \u65b9\u6cd5\u7684\u6743\u9650\u4fee\u9970\u7b26\u6539\u4e3aprivate\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); //\u521b\u5efa\u51fa\u5b66\u751f\u5bf9\u8c61 Method method = clazz . getDeclaredMethod ( \"test\" , String . class ); //\u901a\u8fc7\u65b9\u6cd5\u540d\u548c\u5f62\u53c2\u7c7b\u578b\u83b7\u53d6\u7c7b\u4e2d\u7684\u65b9\u6cd5 method . setAccessible ( true ); method . invoke ( instance , \"what's up\" ); //\u901a\u8fc7Method\u5bf9\u8c61\u7684invoke\u65b9\u6cd5\u6765\u8c03\u7528\u65b9\u6cd5 } Method\u548cConstructor\u90fd\u548cClass\u4e00\u6837\uff0c\u4ed6\u4eec\u5b58\u50a8\u4e86\u65b9\u6cd5\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u65b9\u6cd5\u7684\u5f62\u5f0f\u53c2\u6570\u5217\u8868\uff0c\u8fd4\u56de\u503c\uff0c\u65b9\u6cd5\u7684\u540d\u79f0\u7b49\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7Method\u5bf9\u8c61\u6765\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Method method = clazz . getDeclaredMethod ( \"test\" , String . class ); //\u901a\u8fc7\u65b9\u6cd5\u540d\u548c\u5f62\u53c2\u7c7b\u578b\u83b7\u53d6\u7c7b\u4e2d\u7684\u65b9\u6cd5 System . out . println ( method . getName ()); //\u83b7\u53d6\u65b9\u6cd5\u540d\u79f0 System . out . println ( method . getReturnType ()); //\u83b7\u53d6\u8fd4\u56de\u503c\u7c7b\u578b } \u5f53\u65b9\u6cd5\u7684\u53c2\u6570\u4e3a\u53ef\u53d8\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u83b7\u53d6\u65b9\u6cd5\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5728\u4e4b\u524d\u5c31\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u53ef\u53d8\u53c2\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u7684class\u5bf9\u8c61\u8868\u793a\uff1a 1 Method method = clazz . getDeclaredMethod ( \"test\" , String [] . class ); \u53cd\u5c04\u975e\u5e38\u5f3a\u5927\uff0c\u5c24\u5176\u662f\u6211\u4eec\u63d0\u5230\u7684\u8d8a\u6743\u8bbf\u95ee\uff0c\u4f46\u662f\u8bf7\u4e00\u5b9a\u8c28\u614e\u4f7f\u7528\uff0c\u522b\u4eba\u5c06\u67d0\u4e2a\u65b9\u6cd5\u8bbe\u7f6e\u4e3aprivate\u4e00\u5b9a\u6709\u4ed6\u7684\u7406\u7531\uff0c\u5982\u679c\u5b9e\u5728\u662f\u9700\u8981\u4f7f\u7528\u522b\u4eba\u5b9a\u4e49\u4e3aprivate\u7684\u65b9\u6cd5\uff0c\u5c31\u5fc5\u987b\u786e\u4fdd\u8fd9\u6837\u505a\u662f\u5b89\u5168\u7684\uff0c\u5728\u6ca1\u6709\u4e86\u89e3\u522b\u4eba\u4ee3\u7801\u7684\u6574\u4e2a\u8fc7\u7a0b\u5c31\u5f3a\u884c\u8d8a\u6743\u8bbf\u95ee\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u65e0\u6cd5\u9884\u77e5\u7684\u9519\u8bef\u3002 \u4fee\u6539\u7c7b\u7684\u5c5e\u6027 \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u5b57\u6bb5\u4e5f\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u5b57\u6bb5\u503c\uff0c\u901a\u8fc7 getField() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u7684\u6307\u5b9a\u5b57\u6bb5\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); Field field = clazz . getField ( \"i\" ); //\u83b7\u53d6\u7c7b\u7684\u6210\u5458\u5b57\u6bb5i field . set ( instance , 100 ); //\u5c06\u7c7b\u5b9e\u4f8binstance\u7684\u6210\u5458\u5b57\u6bb5i\u8bbe\u7f6e\u4e3a100 Method method = clazz . getMethod ( \"test\" ); method . invoke ( instance ); } \u5728\u5f97\u5230Field\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 set() \u65b9\u6cd5\u4e3a\u67d0\u4e2a\u5bf9\u8c61\uff0c\u8bbe\u5b9a\u6b64\u5c5e\u6027\u7684\u503c\uff0c\u6bd4\u5982\u4e0a\u9762\uff0c\u6211\u4eec\u5c31\u4e3ainstance\u5bf9\u8c61\u8bbe\u5b9a\u503c\u4e3a100\uff0c\u5f53\u8bbf\u95eeprivate\u5b57\u6bb5\u65f6\uff0c\u540c\u6837\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u64cd\u4f5c\u8fdb\u884c\u8d8a\u6743\u8bbf\u95ee\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); Field field = clazz . getDeclaredField ( \"i\" ); //\u83b7\u53d6\u7c7b\u7684\u6210\u5458\u5b57\u6bb5i field . setAccessible ( true ); field . set ( instance , 100 ); //\u5c06\u7c7b\u5b9e\u4f8binstance\u7684\u6210\u5458\u5b57\u6bb5i\u8bbe\u7f6e\u4e3a100 Method method = clazz . getMethod ( \"test\" ); method . invoke ( instance ); } \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u53cd\u5c04\u51e0\u4e4e\u53ef\u4ee5\u628a\u4e00\u4e2a\u7c7b\u7684\u8001\u5e95\u90fd\u7ed9\u6252\u51fa\u6765\uff0c\u4efb\u4f55\u5c5e\u6027\uff0c\u4efb\u4f55\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u88ab\u53cd\u5c04\u4fee\u6539\uff0c\u65e0\u8bba\u6743\u9650\u4fee\u9970\u7b26\u662f\u4ec0\u4e48\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u6211\u7684\u5b57\u6bb5\u88ab\u6807\u8bb0\u4e3afinal\u5462\uff1f\u73b0\u5728\u5728\u5b57\u6bb5 i \u524d\u9762\u6dfb\u52a0 final \u5173\u952e\u5b57\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u6548\u679c\uff1a 1 private final int i = 10 ; \u8fd9\u65f6\uff0c\u5f53\u5b57\u6bb5\u4e3afinal\u65f6\uff0c\u5c31\u4fee\u6539\u5931\u8d25\u4e86\uff01\u5f53\u7136\uff0c\u901a\u8fc7\u53cd\u5c04\u53ef\u4ee5\u76f4\u63a5\u5c06final\u4fee\u9970\u7b26\u76f4\u63a5\u53bb\u9664\uff0c\u53bb\u9664\u540e\uff0c\u5c31\u53ef\u4ee5\u968f\u610f\u4fee\u6539\u5185\u5bb9\u4e86\uff0c\u6211\u4eec\u6765\u5c1d\u8bd5\u4fee\u6539Integer\u7684value\u503c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws ReflectiveOperationException { Integer i = 10 ; Field field = Integer . class . getDeclaredField ( \"value\" ); Field modifiersField = Field . class . getDeclaredField ( \"modifiers\" ); //\u8fd9\u91cc\u8981\u83b7\u53d6Field\u7c7b\u7684modifiers\u5b57\u6bb5\u8fdb\u884c\u4fee\u6539 modifiersField . setAccessible ( true ); modifiersField . setInt ( field , field . getModifiers () &~ Modifier . FINAL ); //\u53bb\u9664final\u6807\u8bb0 field . setAccessible ( true ); field . set ( i , 100 ); //\u5f3a\u884c\u8bbe\u7f6e\u503c System . out . println ( i ); } \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53cd\u5c04\u975e\u5e38\u66b4\u529b\uff0c\u5c31\u8fde\u88ab\u5b9a\u4e49\u4e3afinal\u5b57\u6bb5\u7684\u503c\u90fd\u80fd\u5f3a\u884c\u4fee\u6539\uff0c\u51e0\u4e4e\u80fd\u591f\u65e0\u89c6\u4e00\u5207\u963b\u62e6\u3002\u6211\u4eec\u6765\u8bd5\u8bd5\u770b\u4fee\u6539\u4e00\u4e9b\u5176\u4ed6\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) throws ReflectiveOperationException { List < String > i = new ArrayList <> (); Field field = ArrayList . class . getDeclaredField ( \"size\" ); field . setAccessible ( true ); field . set ( i , 10 ); i . add ( \"\u6d4b\u8bd5\" ); //\u53ea\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 System . out . println ( i . size ()); //\u5927\u5c0f\u76f4\u63a5\u53d8\u621011 i . remove ( 10 ); //\u778e\u79fb\u9664\u90fd\u4e0d\u5e26\u62a5\u9519\u7684\uff0c\u6de6 } \u5b9e\u9645\u4e0a\uff0c\u6574\u4e2aArrayList\u4f53\u7cfb\u7531\u4e8e\u6211\u4eec\u7684\u53cd\u5c04\u64cd\u4f5c\uff0c\u5bfc\u81f4\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u5b83\u5df2\u7ecf\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u4e86\uff01 \u518d\u6b21\u5f3a\u8c03\uff0c\u5728\u8fdb\u884c\u53cd\u5c04\u64cd\u4f5c\u65f6\uff0c\u5fc5\u987b\u6ce8\u610f\u662f\u5426\u5b89\u5168\uff0c\u867d\u7136\u62e5\u6709\u4e86\u521b\u4e16\u4e3b\u7684\u80fd\u529b\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u6ee5\u7528\uff0c\u6211\u4eec\u53ea\u80fd\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u4e0d\u5f97\u5df2\u624d\u53bb\u4f7f\u7528\u7684\u5de5\u5177\uff01 \u81ea\u5b9a\u4e49ClassLoader\u52a0\u8f7d\u7c7b \u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u5c06class\u6587\u4ef6\u52a0\u8f7d\u5230JVM\u4e2d\u5417\uff1f\u5148\u5199\u597d\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 package com.test ; public class Test { public String text ; public void test ( String str ){ System . out . println ( text + \" > \u6211\u662f\u6d4b\u8bd5\u65b9\u6cd5\uff01\" + str ); } } \u901a\u8fc7javac\u547d\u4ee4\uff0c\u624b\u52a8\u7f16\u8bd1\u4e00\u4e2a.class\u6587\u4ef6\uff1a 1 nagocoler@NagodeMacBook-Pro HelloWorld % javac src/main/java/com/test/Test.java \u7f16\u8bd1\u540e\uff0c\u5f97\u5230\u4e00\u4e2aclass\u6587\u4ef6\uff0c\u6211\u4eec\u628a\u5b83\u653e\u5230\u6839\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u7f16\u5199\u4e00\u4e2a\u6211\u4eec\u81ea\u5df1\u7684ClassLoader\uff0c\u56e0\u4e3a\u666e\u901a\u7684ClassLoader\u65e0\u6cd5\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u6765\u8ba9\u5b83\u652f\u6301\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 //\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5df1\u7684ClassLoader static class MyClassLoader extends ClassLoader { public Class <?> defineClass ( String name , byte [] b ){ return defineClass ( name , b , 0 , b . length ); //\u8c03\u7528protected\u65b9\u6cd5\uff0c\u652f\u6301\u8f7d\u5165\u5916\u90e8class\u6587\u4ef6 } } public static void main ( String [] args ) throws IOException { MyClassLoader classLoader = new MyClassLoader (); FileInputStream stream = new FileInputStream ( \"Test.class\" ); byte [] bytes = new byte [ stream . available () ] ; stream . read ( bytes ); Class <?> clazz = classLoader . defineClass ( \"com.test.Test\" , bytes ); //\u7c7b\u540d\u5fc5\u987b\u548c\u6211\u4eec\u5b9a\u4e49\u7684\u4fdd\u6301\u4e00\u81f4 System . out . println ( clazz . getName ()); //\u6210\u529f\u52a0\u8f7d\u5916\u90e8class\u6587\u4ef6 } \u73b0\u5728\uff0c\u6211\u4eec\u5c31\u5c06\u6b64class\u6587\u4ef6\u8bfb\u53d6\u5e76\u89e3\u6790\u4e3aClass\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6b64\u7c7b\u8fdb\u884c\u64cd\u4f5c\u4e86\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u4f7f\u7528\u6b64\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u662f\u6211\u4eec\u76f4\u63a5\u52a0\u8f7d\u7684\uff09\uff0c\u6211\u4eec\u6765\u8bd5\u8bd5\u770b\u521b\u5efa\u4e00\u4e2a\u6b64\u7c7b\u7684\u5bf9\u8c61\u5e76\u8c03\u7528\u5176\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 try { Object obj = clazz . newInstance (); Method method = clazz . getMethod ( \"test\" , String . class ); //\u83b7\u53d6\u6211\u4eec\u5b9a\u4e49\u7684test(String str)\u65b9\u6cd5 method . invoke ( obj , \"\u54e5\u4eec\u8fd9\u74dc\u591a\u5c11\u94b1\u4e00\u65a4\uff1f\" ); } catch ( Exception e ){ e . printStackTrace (); } \u6211\u4eec\u6765\u8bd5\u8bd5\u770b\u4fee\u6539\u6210\u5458\u5b57\u6bb5\u4e4b\u540e\uff0c\u518d\u6765\u8c03\u7528\u6b64\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 try { Object obj = clazz . newInstance (); Field field = clazz . getField ( \"text\" ); //\u83b7\u53d6\u6210\u5458\u53d8\u91cf String text; field . set ( obj , \"\u534e\u5f3a\" ); Method method = clazz . getMethod ( \"test\" , String . class ); //\u83b7\u53d6\u6211\u4eec\u5b9a\u4e49\u7684test(String str)\u65b9\u6cd5 method . invoke ( obj , \"\u54e5\u4eec\u8fd9\u74dc\u591a\u5c11\u94b1\u4e00\u65a4\uff1f\" ); } catch ( Exception e ){ e . printStackTrace (); } \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5916\u90e8\u52a0\u8f7d\u751a\u81f3\u662f\u7f51\u7edc\u52a0\u8f7d\u4e00\u4e2a\u7c7b\uff0c\u53ea\u9700\u8981\u628a\u7c7b\u6587\u4ef6\u4f20\u9012\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u65e0\u9700\u518d\u5c06\u4ee3\u7801\u5199\u5728\u672c\u5730\uff0c\u800c\u662f\u52a8\u6001\u8fdb\u884c\u4f20\u9012\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62\u6e90\u4ee3\u7801\u88ab\u53cd\u7f16\u8bd1\uff08\u53ea\u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u60f3\u7834\u89e3\u4f60\u4ee3\u7801\u6709\u7684\u662f\u65b9\u6cd5\uff09\uff0c\u800c\u4e14\u5728\u66f4\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9byte[]\u8fdb\u884c\u52a0\u5bc6\uff0c\u4fdd\u8bc1\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027\u3002 \u6ce8\u89e3 \u5176\u5b9e\u6211\u4eec\u5728\u4e4b\u524d\u5c31\u63a5\u89e6\u5230\u6ce8\u89e3\u4e86\uff0c\u6bd4\u5982 @Override \u8868\u793a\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\uff08\u5f53\u7136\u4e0d\u52a0\u6548\u679c\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u6b64\u6ce8\u89e3\u5728\u7f16\u8bd1\u65f6\u4f1a\u88ab\u81ea\u52a8\u4e22\u5f03\uff09\u6ce8\u89e3\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u53ea\u4e0d\u8fc7\u5b83\u7684\u7528\u6cd5\u6bd4\u8f83\u7279\u6b8a\u3002 \u6ce8\u89e3\u53ef\u4ee5\u88ab\u6807\u6ce8\u5728\u4efb\u610f\u5730\u65b9\uff0c\u5305\u62ec\u65b9\u6cd5\u4e0a\u3001\u7c7b\u540d\u4e0a\u3001\u53c2\u6570\u4e0a\u3001\u6210\u5458\u5c5e\u6027\u4e0a\u3001\u6ce8\u89e3\u5b9a\u4e49\u4e0a\u7b49\uff0c\u5c31\u50cf\u6ce8\u91ca\u4e00\u6837\uff0c\u5b83\u76f8\u5f53\u4e8e\u6211\u4eec\u5bf9\u67d0\u6837\u4e1c\u897f\u7684\u4e00\u4e2a\u6807\u8bb0\u3002\u800c\u4e0e\u6ce8\u91ca\u4e0d\u540c\u7684\u662f\uff0c\u6ce8\u89e3\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\uff0c\u6ce8\u89e3\u4e5f\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\u3002 \u9884\u8bbe\u6ce8\u89e3 JDK\u9884\u8bbe\u4e86\u4ee5\u4e0b\u6ce8\u89e3\uff0c\u4f5c\u7528\u4e8e\u4ee3\u7801\uff1a @Override - \u68c0\u67e5\uff08\u4ec5\u4ec5\u662f\u68c0\u67e5\uff0c\u4e0d\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff09\u8be5\u65b9\u6cd5\u662f\u5426\u662f\u91cd\u5199\u65b9\u6cd5\u3002\u5982\u679c\u53d1\u73b0\u5176\u7236\u7c7b\uff0c\u6216\u8005\u662f\u5f15\u7528\u7684\u63a5\u53e3\u4e2d\u5e76\u6ca1\u6709\u8be5\u65b9\u6cd5\u65f6\uff0c\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\u3002 @Deprecated - \u6807\u8bb0\u8fc7\u65f6\u65b9\u6cd5\u3002\u5982\u679c\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u4f1a\u62a5\u7f16\u8bd1\u8b66\u544a\u3002 @SuppressWarnings - \u6307\u793a\u7f16\u8bd1\u5668\u53bb\u5ffd\u7565\u6ce8\u89e3\u4e2d\u58f0\u660e\u7684\u8b66\u544a\uff08\u4ec5\u4ec5\u7f16\u8bd1\u5668\u9636\u6bb5\uff0c\u4e0d\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff09 @FunctionalInterface - Java 8 \u5f00\u59cb\u652f\u6301\uff0c\u6807\u8bc6\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6216\u51fd\u6570\u5f0f\u63a5\u53e3\u3002 @SafeVarargs - Java 7 \u5f00\u59cb\u652f\u6301\uff0c\u5ffd\u7565\u4efb\u4f55\u4f7f\u7528\u53c2\u6570\u4e3a\u6cdb\u578b\u53d8\u91cf\u7684\u65b9\u6cd5\u6216\u6784\u9020\u51fd\u6570\u8c03\u7528\u4ea7\u751f\u7684\u8b66\u544a\u3002 \u5143\u6ce8\u89e3 \u5143\u6ce8\u89e3\u662f\u4f5c\u7528\u4e8e\u6ce8\u89e3\u4e0a\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u6211\u4eec\u7f16\u5199\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\uff1a @Retention - \u6807\u8bc6\u8fd9\u4e2a\u6ce8\u89e3\u600e\u4e48\u4fdd\u5b58\uff0c\u662f\u53ea\u5728\u4ee3\u7801\u4e2d\uff0c\u8fd8\u662f\u7f16\u5165class\u6587\u4ef6\u4e2d\uff0c\u6216\u8005\u662f\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u3002 @Documented - \u6807\u8bb0\u8fd9\u4e9b\u6ce8\u89e3\u662f\u5426\u5305\u542b\u5728\u7528\u6237\u6587\u6863\u4e2d\u3002 @Target - \u6807\u8bb0\u8fd9\u4e2a\u6ce8\u89e3\u5e94\u8be5\u662f\u54ea\u79cd Java \u6210\u5458\u3002 @Inherited - \u6807\u8bb0\u8fd9\u4e2a\u6ce8\u89e3\u662f\u7ee7\u627f\u4e8e\u54ea\u4e2a\u6ce8\u89e3\u7c7b(\u9ed8\u8ba4 \u6ce8\u89e3\u5e76\u6ca1\u6709\u7ee7\u627f\u4e8e\u4efb\u4f55\u5b50\u7c7b) @Repeatable - Java 8 \u5f00\u59cb\u652f\u6301\uff0c\u6807\u8bc6\u67d0\u6ce8\u89e3\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u58f0\u660e\u4e0a\u4f7f\u7528\u591a\u6b21\u3002 \u770b\u4e86\u8fd9\u4e48\u591a\u9884\u8bbe\u7684\u6ce8\u89e3\uff0c\u4f60\u4eec\u80af\u5b9a\u773c\u82b1\u7f2d\u4e71\u4e86\uff0c\u90a3\u6211\u4eec\u6765\u770b\u770b @Override \u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff1a 1 2 3 4 @Target ( ElementType . METHOD ) @Retention ( RetentionPolicy . SOURCE ) public @interface Override { } \u8be5\u6ce8\u89e3\u7531 @Target \u9650\u5b9a\u4e3a\u53ea\u80fd\u4f5c\u7528\u4e8e\u65b9\u6cd5\u4e0a\uff0cElementType\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u7528\u4e8e\u8868\u793a\u6b64\u679a\u4e3e\u7684\u4f5c\u7528\u57df\uff0c\u4e00\u4e2a\u6ce8\u89e3\u53ef\u4ee5\u6709\u5f88\u591a\u4e2a\u4f5c\u7528\u57df\u3002 @Retention \u8868\u793a\u6b64\u6ce8\u89e3\u7684\u4fdd\u7559\u7b56\u7565\uff0c\u5305\u62ec\u4e09\u79cd\u7b56\u7565\uff0c\u5728\u4e0a\u8ff0\u4e2d\u6709\u5199\u5230\uff0c\u800c\u8fd9\u91cc\u5b9a\u4e49\u4e3a\u53ea\u5728\u4ee3\u7801\u4e2d\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\u9700\u8981\u5b9a\u4e491\u4e2a @Retention \u548c1-n\u4e2a @Target \u3002 \u65e2\u7136\u4e86\u89e3\u4e86\u5143\u6ce8\u89e3\u7684\u4f7f\u7528\u548c\u6ce8\u89e3\u7684\u5b9a\u4e49\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u6765\u5c1d\u8bd5\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5df1\u7684\u6ce8\u89e3\uff1a 1 2 3 4 @Target ( ElementType . METHOD ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aTest\u6ce8\u89e3\uff0c\u5e76\u5c06\u5176\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u540c\u65f6\u6b64\u6ce8\u89e3\u53ef\u4ee5\u4f5c\u7528\u4e8e\u65b9\u6cd5\u6216\u662f\u7c7b\u4e0a\uff1a 1 2 3 4 5 6 7 @Test public class Main { @Test public static void main ( String [] args ) { } } \u8fd9\u6837\uff0c\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6ce8\u89e3\u5c31\u88ab\u6211\u4eec\u521b\u5efa\u4e86\u3002 \u6ce8\u89e3\u7684\u4f7f\u7528 \u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u6ce8\u89e3\u4e2d\u5b9a\u4e49\u4e00\u4e9b\u5c5e\u6027\uff0c\u6ce8\u89e3\u7684\u5c5e\u6027\u4e5f\u53eb\u505a\u6210\u5458\u53d8\u91cf\uff0c\u6ce8\u89e3\u53ea\u6709\u6210\u5458\u53d8\u91cf\uff0c\u6ca1\u6709\u65b9\u6cd5\u3002\u6ce8\u89e3\u7684\u6210\u5458\u53d8\u91cf\u5728\u6ce8\u89e3\u7684\u5b9a\u4e49\u4e2d\u4ee5\u201c\u65e0\u5f62\u53c2\u7684\u65b9\u6cd5\u201d\u5f62\u5f0f\u6765\u58f0\u660e\uff0c\u5176\u65b9\u6cd5\u540d\u5b9a\u4e49\u4e86\u8be5\u6210\u5458\u53d8\u91cf\u7684\u540d\u5b57\uff0c\u5176\u8fd4\u56de\u503c\u5b9a\u4e49\u4e86\u8be5\u6210\u5458\u53d8\u91cf\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String value (); } \u9ed8\u8ba4\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u540d\u5b57\u8bbe\u5b9a\u4e3avalue\uff0c\u5426\u5219\uff0c\u6211\u4eec\u9700\u8981\u5728\u4f7f\u7528\u65f6\u624b\u52a8\u6307\u5b9a\u6ce8\u89e3\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u4f7f\u7528value\u5219\u65e0\u9700\u586b\u5165\uff1a 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String test (); } 1 2 3 4 5 6 public class Main { @Test ( test = \"\" ) public static void main ( String [] args ) { } } \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528default\u5173\u952e\u5b57\u6765\u4e3a\u8fd9\u4e9b\u5c5e\u6027\u6307\u5b9a\u9ed8\u8ba4\u503c\uff1a 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String value () default \"\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\uff0c\u7ed9\u4e2a\u4e09\u8fde\u5427\uff01\" ; } \u5f53\u5c5e\u6027\u5b58\u5728\u9ed8\u8ba4\u503c\u65f6\uff0c\u4f7f\u7528\u6ce8\u89e3\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u4f20\u5165\u5c5e\u6027\u503c\u3002\u5f53\u5c5e\u6027\u4e3a\u6570\u7ec4\u65f6\u5462\uff1f 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String [] value (); } \u5f53\u5c5e\u6027\u4e3a\u6570\u7ec4\uff0c\u6211\u4eec\u5728\u4f7f\u7528\u6ce8\u89e3\u4f20\u53c2\u65f6\uff0c\u5982\u679c\u6570\u7ec4\u91cc\u9762\u53ea\u6709\u4e00\u4e2a\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u503c\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff1a 1 2 3 4 @Test ( \"\u5173\u6ce8\u70b9\u4e86\u5417\" ) public static void main ( String [] args ) { } 1 2 3 4 5 6 public class Main { @Test ({ \"value1\" , \"value2\" }) //\u591a\u4e2a\u503c\u65f6\u5c31\u4f7f\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765 public static void main ( String [] args ) { } } \u53cd\u5c04\u83b7\u53d6\u6ce8\u89e3 \u65e2\u7136\u6211\u4eec\u7684\u6ce8\u89e3\u53ef\u4ee5\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\uff0c\u5982\u4f55\u83b7\u53d6\u6211\u4eec\u7f16\u5199\u7684\u6ce8\u89e3\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u53cd\u5c04\u673a\u5236\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Class < Student > clazz = Student . class ; for ( Annotation annotation : clazz . getAnnotations ()) { System . out . println ( annotation . annotationType ()); //\u83b7\u53d6\u7c7b\u578b System . out . println ( annotation instanceof Test ); //\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4e3aTest Test test = ( Test ) annotation ; System . out . println ( test . value ()); //\u83b7\u53d6\u6211\u4eec\u5728\u6ce8\u89e3\u4e2d\u5199\u5165\u7684\u5185\u5bb9 } } \u901a\u8fc7\u53cd\u5c04\u673a\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u83b7\u53d6\u5230\u6211\u4eec\u6807\u8bb0\u7684\u6ce8\u89e3\uff0c\u540c\u65f6\u8fd8\u80fd\u83b7\u53d6\u5230\u6ce8\u89e3\u4e2d\u586b\u5165\u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\uff0c\u65b9\u6cd5\u4e0a\u7684\u6807\u8bb0\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u83b7\u53d6\u6ce8\u89e3\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) throws NoSuchMethodException { Class < Student > clazz = Student . class ; for ( Annotation annotation : clazz . getMethod ( \"test\" ). getAnnotations ()) { System . out . println ( annotation . annotationType ()); //\u83b7\u53d6\u7c7b\u578b System . out . println ( annotation instanceof Test ); //\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4e3aTest Test test = ( Test ) annotation ; System . out . println ( test . value ()); //\u83b7\u53d6\u6211\u4eec\u5728\u6ce8\u89e3\u4e2d\u5199\u5165\u7684\u5185\u5bb9 } } \u65e0\u8bba\u662f\u65b9\u6cd5\u3001\u7c7b\u3001\u8fd8\u662f\u5b57\u6bb5\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 getAnnotations() \u65b9\u6cd5\uff08\u8fd8\u6709\u51e0\u4e2a\u540c\u540d\u7684\uff09\u6765\u5feb\u901f\u83b7\u53d6\u6211\u4eec\u6807\u8bb0\u7684\u6ce8\u89e3\u3002 \u6240\u4ee5\u8bf4\u5462\uff0c\u8fd9\u73a9\u610f\u5b66\u6765\u6709\u5565\u7528\uff1f\u4e1d\u6bebget\u4e0d\u5230\u8fd9\u73a9\u610f\u7684\u7528\u5904\u3002\u5176\u5b9e\u4e0d\u662f\uff0c\u73b0\u9636\u6bb5\u4f60\u4eec\u8fd8\u4f53\u4f1a\u4e0d\u5230\u6ce8\u89e3\u5e26\u6765\u7684\u5feb\u4e50\uff0c\u5728\u63a5\u89e6\u5230Spring\u548cSpringBoot\u7b49\u5927\u578b\u6846\u67b6\u540e\uff0c\u5c31\u80fd\u611f\u53d7\u5230\u6ce8\u89e3\u5e26\u6765\u7684\u9b45\u529b\u4e86\u3002","title":"Java\u53cd\u5c04\u548c\u6ce8\u89e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#java","text":"\u6ce8\u610f\uff1a \u672c\u7ae0\u8282\u6d89\u53ca\u5230JVM\u76f8\u5173\u5e95\u5c42\u539f\u7406\uff0c\u96be\u5ea6\u4f1a\u6709\u4e00\u4e9b\u5927\u3002 \u53cd\u5c04\u5c31\u662f\u628aJava\u7c7b\u4e2d\u7684\u5404\u4e2a\u6210\u5206\u6620\u5c04\u6210\u4e00\u4e2a\u4e2a\u7684Java\u5bf9\u8c61\u3002\u5373\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7c7b\uff0c\u90fd\u80fd\u591f\u77e5\u9053\u8fd9\u4e2a\u7c7b\u6240\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90fd\u80fd\u8c03\u7528\u5b83\u7684\u4efb\u610f\u4e00\u4e2a\u65b9\u6cd5\u548c\u5c5e\u6027\u3002\u8fd9\u79cd\u52a8\u6001\u83b7\u53d6\u4fe1\u606f\u53ca\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u529f\u80fd\u53ebJava\u7684\u53cd\u5c04\u673a\u5236\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\uff0c\u83b7\u53d6\u5230\u7c7b\u7684\u4e00\u4e9b\u5c5e\u6027\uff0c\u5305\u62ec\u7c7b\u91cc\u9762\u6709\u54ea\u4e9b\u5b57\u6bb5\uff0c\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u7ee7\u627f\u81ea\u54ea\u4e2a\u7c7b\uff0c\u751a\u81f3\u8fd8\u80fd\u83b7\u53d6\u5230\u6cdb\u578b\uff01\u5b83\u7684\u6743\u9650\u975e\u5e38\u9ad8\uff0c\u614e\u91cd\u4f7f\u7528\uff01","title":"Java\u53cd\u5c04\u548c\u6ce8\u89e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#java_1","text":"\u5728\u5b66\u4e60Java\u7684\u53cd\u5c04\u673a\u5236\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e0b\u7c7b\u7684\u52a0\u8f7d\u673a\u5236\uff0c\u4e00\u4e2a\u7c7b\u662f\u5982\u4f55\u88ab\u52a0\u8f7d\u548c\u4f7f\u7528\u7684\uff1a \u5728Java\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cJVM\u4f1a\u5c06\u4e00\u90e8\u5206\u7c7b\uff08class\u6587\u4ef6\uff09\u5148\u52a0\u8f7d\uff08\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7c7b\u90fd\u4f1a\u5728\u4e00\u5f00\u59cb\u52a0\u8f7d\uff09\uff0c\u901a\u8fc7ClassLoader\u5c06\u7c7b\u52a0\u8f7d\uff0c\u5728\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5c06\u7c7b\u7684\u4fe1\u606f\u63d0\u53d6\u51fa\u6765\uff08\u5b58\u653e\u5728\u5143\u7a7a\u95f4\u4e2d\uff0cJDK1.8\u4e4b\u524d\u5b58\u653e\u5728\u6c38\u4e45\u4ee3\uff09\uff0c\u540c\u65f6\u4e5f\u4f1a\u751f\u6210\u4e00\u4e2aClass\u5bf9\u8c61\u5b58\u653e\u5728\u5185\u5b58\uff08\u5806\u5185\u5b58\uff09\uff0c\u6ce8\u610f\u6b64Class\u5bf9\u8c61\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\uff0c\u4e0e\u52a0\u8f7d\u7684\u7c7b\u552f\u4e00\u5bf9\u5e94\uff01 \u601d\u8003\uff1a \u65e2\u7136\u8bf4\u548c\u4e0e\u52a0\u8f7d\u7684\u7c7b\u552f\u4e00\u5bf9\u5e94\uff0c\u90a3\u5982\u679c\u6211\u4eec\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u4e0eJDK\u5305\u540d\u4e00\u6837\uff0c\u540c\u65f6\u7c7b\u540d\u4e5f\u4fdd\u6301\u4e00\u81f4\uff0c\u90a3\u4e48JVM\u4f1a\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\u5417\uff1f 1 2 3 4 5 6 7 package java.lang ; public class String { //JDK\u63d0\u4f9b\u7684String\u7c7b\u4e5f\u662f public static void main ( String [] args ) { System . out . println ( \"\u6211\u59d3\ud83d\udc34\uff0c\u6211\u53eb\ud83d\udc34nb\" ); } } \u6211\u4eec\u53d1\u73b0\uff0c\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u62a5\u9519\uff1a 1 2 \u9519\u8bef : \u5728\u7c7b java . lang . String \u4e2d\u627e\u4e0d\u5230 main \u65b9\u6cd5 , \u8bf7\u5c06 main \u65b9\u6cd5\u5b9a\u4e49\u4e3a : public static void main ( String [] args ) \u4f46\u662f\u6211\u4eec\u660e\u660e\u5728\u81ea\u5df1\u5199\u7684String\u7c7b\u4e2d\u5b9a\u4e49\u4e86main\u65b9\u6cd5\u554a\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u627e\u4e0d\u5230\u6b64\u65b9\u6cd5\u5462\uff1f\u5b9e\u9645\u4e0a\u8fd9\u662fClassLoader\u7684 \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236 \u5728\u4fdd\u62a4Java\u7a0b\u5e8f\u7684\u6b63\u5e38\u8fd0\u884c\uff1a \u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u7c7b\u6700\u5f00\u59cb\u662f\u7531BootstarpClassLoader\u8fdb\u884c\u52a0\u8f7d\uff0cBootstarpClassLoader\u7528\u4e8e\u52a0\u8f7dJDK\u63d0\u4f9b\u7684\u7c7b\uff0c\u800c\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684\u7c7b\u5b9e\u9645\u4e0a\u662fAppClassLoader\uff0c\u53ea\u6709BootstarpClassLoader\u90fd\u6ca1\u6709\u52a0\u8f7d\u7684\u7c7b\uff0c\u624d\u4f1a\u8ba9AppClassLoader\u6765\u52a0\u8f7d\uff0c\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684\u540c\u540d\u5305\u540c\u540d\u7c7b\u4e0d\u4f1a\u88ab\u52a0\u8f7d\uff0c\u800c\u5b9e\u9645\u8981\u53bb\u542f\u52a8\u7684\u662f\u771f\u6b63\u7684String\u7c7b\uff0c\u4e5f\u5c31\u81ea\u7136\u627e\u4e0d\u5230 main \u65b9\u6cd5\u4e86\uff01 1 2 3 4 5 6 7 8 public class Main { public static void main ( String [] args ) { System . out . println ( Main . class . getClassLoader ()); //\u67e5\u770b\u5f53\u524d\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 System . out . println ( Main . class . getClassLoader (). getParent ()); //\u7236\u52a0\u8f7d\u5668 System . out . println ( Main . class . getClassLoader (). getParent (). getParent ()); //\u7237\u7237\u52a0\u8f7d\u5668 System . out . println ( String . class . getClassLoader ()); //String\u7c7b\u7684\u52a0\u8f7d\u5668 } } \u7531\u4e8eBootstarpClassLoader\u662fC++\u7f16\u5199\u7684\uff0c\u6211\u4eec\u5728Java\u4e2d\u662f\u83b7\u53d6\u4e0d\u5230\u7684\u3002","title":"Java\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#class","text":"\u901a\u8fc7\u524d\u9762\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u7c7b\u7684\u52a0\u8f7d\uff0c\u540c\u65f6\u4f1a\u63d0\u53d6\u4e00\u4e2a\u7c7b\u7684\u4fe1\u606f\u751f\u6210Class\u5bf9\u8c61\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u53cd\u5c04\u673a\u5236\u5176\u5b9e\u5c31\u662f\u5229\u7528\u8fd9\u4e9b\u5b58\u653e\u7684\u7c7b\u4fe1\u606f\uff0c\u6765\u83b7\u53d6\u7c7b\u7684\u4fe1\u606f\u548c\u64cd\u4f5c\u7c7b\u3002\u90a3\u4e48\u5982\u4f55\u83b7\u53d6\u5230\u6bcf\u4e2a\u7c7b\u5bf9\u5e94\u7684Class\u5bf9\u8c61\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\uff1a 1 2 3 4 5 public static void main ( String [] args ) throws ClassNotFoundException { Class < String > clazz = String . class ; //\u4f7f\u7528class\u5173\u952e\u5b57\uff0c\u901a\u8fc7\u7c7b\u540d\u83b7\u53d6 Class <?> clazz2 = Class . forName ( \"java.lang.String\" ); //\u4f7f\u7528Class\u7c7b\u9759\u6001\u65b9\u6cd5forName()\uff0c\u901a\u8fc7\u5305\u540d.\u7c7b\u540d\u83b7\u53d6\uff0c\u6ce8\u610f\u8fd4\u56de\u503c\u662fClass<?> Class <?> clazz3 = new String ( \"cpdd\" ). getClass (); //\u901a\u8fc7\u5b9e\u4f8b\u5bf9\u8c61\u83b7\u53d6 } \u6ce8\u610fClass\u7c7b\u4e5f\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u53ea\u6709\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5230\u5bf9\u5e94\u7c7b\u578b\u7684Class\u5bf9\u8c61\uff0c\u800c\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\u4f7f\u7528\u4e86 ? \u901a\u914d\u7b26\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u90fd\u548c\u7b2c\u4e00\u4e2a\u8fd4\u56de\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1a 1 2 3 4 5 6 Class < String > clazz = String . class ; //\u4f7f\u7528class\u5173\u952e\u5b57\uff0c\u901a\u8fc7\u7c7b\u540d\u83b7\u53d6 Class <?> clazz2 = Class . forName ( \"java.lang.String\" ); //\u4f7f\u7528Class\u7c7b\u9759\u6001\u65b9\u6cd5forName()\uff0c\u901a\u8fc7\u5305\u540d.\u7c7b\u540d\u83b7\u53d6\uff0c\u6ce8\u610f\u8fd4\u56de\u503c\u662fClass<?> Class <?> clazz3 = new String ( \"cpdd\" ). getClass (); System . out . println ( clazz == clazz2 ); System . out . println ( clazz == clazz3 ); \u901a\u8fc7\u6bd4\u8f83\uff0c\u9a8c\u8bc1\u4e86\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u7ed3\u8bba\uff0c\u5728JVM\u4e2d\u6bcf\u4e2a\u7c7b\u59cb\u7ec8\u53ea\u5b58\u5728\u4e00\u4e2aClass\u5bf9\u8c61\uff0c\u65e0\u8bba\u901a\u8fc7\u4ec0\u4e48\u65b9\u6cd5\u83b7\u53d6\uff0c\u90fd\u662f\u4e00\u6837\u7684\u3002\u73b0\u5728\u6211\u4eec\u518d\u6765\u770b\u770b\u8fd9\u4e2a\u95ee\u9898\uff1a 1 2 3 4 public static void main ( String [] args ) { Class <?> clazz = int . class ; //\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6709Class\u5bf9\u8c61\u5417\uff1f System . out . println ( clazz ); } \u8ff7\u4e86\uff0c\u4e0d\u662f\u6bcf\u4e2a\u7c7b\u624d\u6709Class\u5bf9\u8c61\u5417\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53c8\u4e0d\u662f\u7c7b\uff0c\u8fd9\u4e5f\u884c\u5417\uff1f\u5b9e\u9645\u4e0a\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e5f\u6709\u5bf9\u5e94\u7684Class\u5bf9\u8c61\uff08\u53cd\u5c04\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u7528\u5230\uff09\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7class\u5173\u952e\u5b57\u83b7\u53d6\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u5b9a\u4e49\u5728\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b\u4e2d\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /** * The {@code Class} instance representing the primitive type * {@code int}. * * @since JDK1.1 */ @SuppressWarnings ( \"unchecked\" ) public static final Class < Integer > TYPE = ( Class < Integer > ) Class . getPrimitiveClass ( \"int\" ); /* * Return the Virtual Machine's Class object for the named * primitive type */ static native Class <?> getPrimitiveClass ( String name ); //C++\u5b9e\u73b0\uff0c\u5e76\u975eJava\u5b9a\u4e49 \u6bcf\u4e2a\u5305\u88c5\u7c7b\u4e2d\uff08\u5305\u62ecVoid\uff09\uff0c\u90fd\u6709\u4e00\u4e2a\u83b7\u53d6\u539f\u59cb\u7c7b\u578bClass\u65b9\u6cd5\uff0c\u6ce8\u610f\uff0cgetPrimitiveClass\u83b7\u53d6\u7684\u662f\u539f\u59cb\u7c7b\u578b\uff0c\u5e76\u4e0d\u662f\u5305\u88c5\u7c7b\u578b\uff0c\u53ea\u662f\u53ef\u4ee5\u4f7f\u7528\u5305\u88c5\u7c7b\u6765\u8868\u793a\u3002 1 2 3 4 public static void main ( String [] args ) { Class <?> clazz = int . class ; System . out . println ( Integer . TYPE == int . class ); } \u901a\u8fc7\u5bf9\u6bd4\uff0c\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u5305\u88c5\u7c7b\u578b\u90fd\u6709\u4e00\u4e2aTYPE\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u57fa\u672c\u7c7b\u578b\u7684Class\uff0c\u90a3\u4e48\u5305\u88c5\u7c7b\u7684Class\u548c\u57fa\u672c\u7c7b\u7684Class\u4e00\u6837\u5417\uff1f 1 2 3 public static void main ( String [] args ) { System . out . println ( Integer . TYPE == Integer . class ); } \u6211\u4eec\u53d1\u73b0\uff0c\u5305\u88c5\u7c7b\u578b\u7684Class\u5bf9\u8c61\u5e76\u4e0d\u662f\u57fa\u672c\u7c7b\u578bClass\u5bf9\u8c61\u3002\u6570\u7ec4\u7c7b\u578b\u4e5f\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u53ea\u662f\u7f16\u7a0b\u4e0d\u53ef\u89c1\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u6570\u7ec4\u7684Class\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { Class < String []> clazz = String [] . class ; System . out . println ( clazz . getName ()); //\u83b7\u53d6\u7c7b\u540d\u79f0\uff08\u5f97\u5230\u7684\u662f\u5305\u540d+\u7c7b\u540d\u7684\u5b8c\u6574\u540d\u79f0\uff09 System . out . println ( clazz . getSimpleName ()); System . out . println ( clazz . getTypeName ()); System . out . println ( clazz . getClassLoader ()); //\u83b7\u53d6\u5b83\u7684\u7c7b\u52a0\u8f7d\u5668 System . out . println ( clazz . cast ( new Integer ( \"10\" ))); //\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 }","title":"Class\u5bf9\u8c61"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#instanceof","text":"\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528instanceof\u8fdb\u884c\u7c7b\u578b\u6bd4\u8f83\uff1a 1 2 3 4 public static void main ( String [] args ) { String str = \"\" ; System . out . println ( str instanceof String ); } \u5b83\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u4e3a\u6b64\u63a5\u53e3\u6216\u662f\u7c7b\u7684\u5b9e\u73b0\u6216\u662f\u5b50\u7c7b\uff0c\u800c\u73b0\u5728\u6211\u4eec\u6709\u4e86\u66f4\u591a\u7684\u65b9\u5f0f\u53bb\u5224\u65ad\u7c7b\u578b\uff1a 1 2 3 4 public static void main ( String [] args ) { String str = \"\" ; System . out . println ( str . getClass () == String . class ); //\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4e3a\u8fd9\u4e2a\u7c7b\u578b } \u5982\u679c\u9700\u8981\u5224\u65ad\u662f\u5426\u4e3a\u5b50\u7c7b\u6216\u662f\u63a5\u53e3/\u62bd\u8c61\u7c7b\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 asSubClass() \u65b9\u6cd5\uff1a 1 2 3 4 public static void main ( String [] args ) { Integer i = 10 ; i . getClass (). asSubclass ( Number . class ); //\u5f53Integer\u4e0d\u662fNumber\u7684\u5b50\u7c7b\u65f6\uff0c\u4f1a\u4ea7\u751f\u5f02\u5e38 }","title":"\u518d\u8c08instanceof"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_1","text":"\u901a\u8fc7 getSuperclass() \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5230\u7236\u7c7b\u7684Class\u5bf9\u8c61\uff1a 1 2 3 4 public static void main ( String [] args ) { Integer i = 10 ; System . out . println ( i . getClass (). getSuperclass ()); } \u4e5f\u53ef\u4ee5\u901a\u8fc7 getGenericSuperclass() \u83b7\u53d6\u7236\u7c7b\u7684\u539f\u59cb\u7c7b\u578b\u7684Type\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { Integer i = 10 ; Type type = i . getClass (). getGenericSuperclass (); System . out . println ( type ); System . out . println ( type instanceof Class ); } \u6211\u4eec\u53d1\u73b0Type\u5b9e\u9645\u4e0a\u662fClass\u7c7b\u7684\u7236\u63a5\u53e3\uff0c\u4f46\u662f\u83b7\u53d6\u5230\u7684Type\u7684\u5b9e\u73b0\u5e76\u4e0d\u4e00\u5b9a\u662fClass\u3002 \u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u50cf\u4e0a\u9762\u8fd9\u6837\u83b7\u53d6\u7236\u63a5\u53e3\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { Integer i = 10 ; for ( Class <?> anInterface : i . getClass (). getInterfaces ()) { System . out . println ( anInterface . getName ()); } for ( Type genericInterface : i . getClass (). getGenericInterfaces ()) { System . out . println ( genericInterface . getTypeName ()); } }","title":"\u83b7\u53d6\u7236\u7c7b\u4fe1\u606f"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_2","text":"\u65e2\u7136\u6211\u4eec\u62ff\u5230\u4e86\u7c7b\u7684\u5b9a\u4e49\uff0c\u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u901a\u8fc7Class\u5bf9\u8c61\u6765\u521b\u5efa\u5bf9\u8c61\u3001\u8c03\u7528\u65b9\u6cd5\u3001\u4fee\u6539\u53d8\u91cf\u5462\uff1f\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u90a3\u6211\u4eec\u9996\u5148\u6765\u63a2\u8ba8\u4e00\u4e0b\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . newInstance (); student . test (); } static class Student { public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u901a\u8fc7\u4f7f\u7528 newInstance() \u65b9\u6cd5\u6765\u521b\u5efa\u5bf9\u5e94\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u6cdb\u578bT\uff0c\u6ce8\u610f\u5b83\u4f1a\u629b\u51faInstantiationException\u548cIllegalAccessException\u5f02\u5e38\uff0c\u90a3\u4e48\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u5f02\u5e38\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . newInstance (); student . test (); } static class Student { public Student ( String text ){ } public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u5f53\u7c7b\u9ed8\u8ba4\u7684\u6784\u9020\u65b9\u6cd5\u88ab\u5e26\u53c2\u6784\u9020\u8986\u76d6\u65f6\uff0c\u4f1a\u51fa\u73b0InstantiationException\u5f02\u5e38\uff0c\u56e0\u4e3a newInstance() \u53ea\u9002\u7528\u4e8e\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . newInstance (); student . test (); } static class Student { private Student (){} public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u5f53\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u7684\u6743\u9650\u4e0d\u662f public \u65f6\uff0c\u4f1a\u51fa\u73b0IllegalAccessException\u5f02\u5e38\uff0c\u8868\u793a\u6211\u4eec\u65e0\u6743\u53bb\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\u3002\u5728JDK9\u4e4b\u540e\uff0c\u4e0d\u518d\u63a8\u8350\u4f7f\u7528 newInstance() \u65b9\u6cd5\u4e86\uff0c\u800c\u662f\u4f7f\u7528\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u5230\u7684\uff0c\u901a\u8fc7\u83b7\u53d6\u6784\u9020\u5668\uff0c\u6765\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws NoSuchMethodException , InvocationTargetException , InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . getConstructor ( String . class ). newInstance ( \"what's up\" ); student . test (); } static class Student { public Student ( String str ){} public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u901a\u8fc7\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff08\u6784\u9020\u5668\uff09\u6765\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u4f1a\u66f4\u52a0\u5408\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 getConstructor() \u65b9\u6cd5\u6765\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u540c\u65f6\u6211\u4eec\u9700\u8981\u5411\u5176\u4e2d\u586b\u5165\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u6784\u9020\u65b9\u6cd5\u9700\u8981\u7684\u7c7b\u578b\uff0c\u5f53\u7136\u6211\u4eec\u8fd9\u91cc\u53ea\u6f14\u793a\u4e86\u3002\u90a3\u4e48\uff0c\u5f53\u8bbf\u95ee\u6743\u9650\u4e0d\u662fpublic\u7684\u65f6\u5019\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws NoSuchMethodException , InvocationTargetException , InstantiationException , IllegalAccessException { Class < Student > clazz = Student . class ; Student student = clazz . getConstructor ( String . class ). newInstance ( \"what's up\" ); student . test (); } static class Student { private Student ( String str ){} public void test (){ System . out . println ( \"\u8428\u65e5\u6717\" ); } } \u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u8bbf\u95ee\u6743\u9650\u4e0d\u8db3\u65f6\uff0c\u4f1a\u65e0\u6cd5\u627e\u5230\u6b64\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u4f55\u627e\u5230\u975epublic\u7684\u6784\u9020\u65b9\u6cd5\u5462\uff1f 1 2 3 4 5 Class < Student > clazz = Student . class ; Constructor < Student > constructor = clazz . getDeclaredConstructor ( String . class ); constructor . setAccessible ( true ); //\u4fee\u6539\u8bbf\u95ee\u6743\u9650 Student student = constructor . newInstance ( \"what's up\" ); student . test (); \u4f7f\u7528 getDeclaredConstructor() \u65b9\u6cd5\u53ef\u4ee5\u627e\u5230\u7c7b\u4e2d\u7684\u975epublic\u6784\u9020\u65b9\u6cd5\uff0c\u4f46\u662f\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4fee\u6539\u8bbf\u95ee\u6743\u9650\uff0c\u5728\u4fee\u6539\u8bbf\u95ee\u6743\u9650\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u975epublic\u65b9\u6cd5\u4e86\uff08\u8fd9\u610f\u5473\u7740\uff0c\u53cd\u5c04\u53ef\u4ee5\u65e0\u89c6\u6743\u9650\u4fee\u9970\u7b26\u8bbf\u95ee\u7c7b\u7684\u5185\u5bb9\uff09","title":"\u521b\u5efa\u7c7b\u5bf9\u8c61"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_3","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u6765\u8c03\u7528\u7c7b\u7684\u65b9\u6cd5\uff08\u672c\u8d28\u4e0a\u8fd8\u662f\u7c7b\u7684\u5b9e\u4f8b\u8fdb\u884c\u8c03\u7528\uff09\u53ea\u662f\u5229\u7528\u53cd\u5c04\u673a\u5236\u5b9e\u73b0\u4e86\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u6211\u4eec\u5728\u5305\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\uff1a 1 2 3 4 5 6 7 package com.test ; public class Student { public void test ( String str ){ System . out . println ( \"\u8428\u65e5\u6717\" + str ); } } \u8fd9\u6b21\u6211\u4eec\u901a\u8fc7 forName(String) \u6765\u627e\u5230\u8fd9\u4e2a\u7c7b\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); //\u521b\u5efa\u51fa\u5b66\u751f\u5bf9\u8c61 Method method = clazz . getMethod ( \"test\" , String . class ); //\u901a\u8fc7\u65b9\u6cd5\u540d\u548c\u5f62\u53c2\u7c7b\u578b\u83b7\u53d6\u7c7b\u4e2d\u7684\u65b9\u6cd5 method . invoke ( instance , \"what's up\" ); //\u901a\u8fc7Method\u5bf9\u8c61\u7684invoke\u65b9\u6cd5\u6765\u8c03\u7528\u65b9\u6cd5 } \u901a\u8fc7\u8c03\u7528 getMethod() \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5230\u7c7b\u4e2d\u6240\u6709\u58f0\u660e\u4e3apublic\u7684\u65b9\u6cd5\uff0c\u5f97\u5230\u4e00\u4e2aMethod\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Method\u5bf9\u8c61\u7684 invoke() \u65b9\u6cd5\uff08\u8fd4\u56de\u503c\u5c31\u662f\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u662fvoid\uff0c\u8fd4\u56de\u503c\u4e3anull\uff09\u6765\u8c03\u7528\u5df2\u7ecf\u83b7\u53d6\u5230\u7684\u65b9\u6cd5\uff0c\u6ce8\u610f\u4f20\u53c2\u3002 \u6211\u4eec\u53d1\u73b0\uff0c\u5229\u7528\u53cd\u5c04\u4e4b\u540e\uff0c\u5728\u4e00\u4e2a\u5bf9\u8c61\u4ece\u6784\u9020\u5230\u65b9\u6cd5\u8c03\u7528\uff0c\u6ca1\u6709\u4efb\u4f55\u4e00\u5904\u9700\u8981\u5f15\u7528\u5230\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709\u5bfc\u5165Student\u7c7b\uff0c\u6574\u4e2a\u8fc7\u7a0b\u90fd\u662f\u53cd\u5c04\u5728\u4ee3\u66ff\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6574\u4e2a\u8fc7\u7a0b\u88ab\u6a21\u7cca\u4e86\uff0c\u8fc7\u591a\u7684\u4f7f\u7528\u53cd\u5c04\uff0c\u4f1a\u6781\u5927\u5730\u964d\u4f4e\u540e\u671f\u7ef4\u62a4\u6027\u3002 \u540c\u6784\u9020\u65b9\u6cd5\u4e00\u6837\uff0c\u5f53\u51fa\u73b0\u975epublic\u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u6765\u65e0\u89c6\u6743\u9650\u4fee\u9970\u7b26\uff0c\u83b7\u53d6\u975epublic\u65b9\u6cd5\u5e76\u8c03\u7528\uff0c\u73b0\u5728\u6211\u4eec\u5c06 test() \u65b9\u6cd5\u7684\u6743\u9650\u4fee\u9970\u7b26\u6539\u4e3aprivate\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); //\u521b\u5efa\u51fa\u5b66\u751f\u5bf9\u8c61 Method method = clazz . getDeclaredMethod ( \"test\" , String . class ); //\u901a\u8fc7\u65b9\u6cd5\u540d\u548c\u5f62\u53c2\u7c7b\u578b\u83b7\u53d6\u7c7b\u4e2d\u7684\u65b9\u6cd5 method . setAccessible ( true ); method . invoke ( instance , \"what's up\" ); //\u901a\u8fc7Method\u5bf9\u8c61\u7684invoke\u65b9\u6cd5\u6765\u8c03\u7528\u65b9\u6cd5 } Method\u548cConstructor\u90fd\u548cClass\u4e00\u6837\uff0c\u4ed6\u4eec\u5b58\u50a8\u4e86\u65b9\u6cd5\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u65b9\u6cd5\u7684\u5f62\u5f0f\u53c2\u6570\u5217\u8868\uff0c\u8fd4\u56de\u503c\uff0c\u65b9\u6cd5\u7684\u540d\u79f0\u7b49\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7Method\u5bf9\u8c61\u6765\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Method method = clazz . getDeclaredMethod ( \"test\" , String . class ); //\u901a\u8fc7\u65b9\u6cd5\u540d\u548c\u5f62\u53c2\u7c7b\u578b\u83b7\u53d6\u7c7b\u4e2d\u7684\u65b9\u6cd5 System . out . println ( method . getName ()); //\u83b7\u53d6\u65b9\u6cd5\u540d\u79f0 System . out . println ( method . getReturnType ()); //\u83b7\u53d6\u8fd4\u56de\u503c\u7c7b\u578b } \u5f53\u65b9\u6cd5\u7684\u53c2\u6570\u4e3a\u53ef\u53d8\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u83b7\u53d6\u65b9\u6cd5\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5728\u4e4b\u524d\u5c31\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u53ef\u53d8\u53c2\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u7684class\u5bf9\u8c61\u8868\u793a\uff1a 1 Method method = clazz . getDeclaredMethod ( \"test\" , String [] . class ); \u53cd\u5c04\u975e\u5e38\u5f3a\u5927\uff0c\u5c24\u5176\u662f\u6211\u4eec\u63d0\u5230\u7684\u8d8a\u6743\u8bbf\u95ee\uff0c\u4f46\u662f\u8bf7\u4e00\u5b9a\u8c28\u614e\u4f7f\u7528\uff0c\u522b\u4eba\u5c06\u67d0\u4e2a\u65b9\u6cd5\u8bbe\u7f6e\u4e3aprivate\u4e00\u5b9a\u6709\u4ed6\u7684\u7406\u7531\uff0c\u5982\u679c\u5b9e\u5728\u662f\u9700\u8981\u4f7f\u7528\u522b\u4eba\u5b9a\u4e49\u4e3aprivate\u7684\u65b9\u6cd5\uff0c\u5c31\u5fc5\u987b\u786e\u4fdd\u8fd9\u6837\u505a\u662f\u5b89\u5168\u7684\uff0c\u5728\u6ca1\u6709\u4e86\u89e3\u522b\u4eba\u4ee3\u7801\u7684\u6574\u4e2a\u8fc7\u7a0b\u5c31\u5f3a\u884c\u8d8a\u6743\u8bbf\u95ee\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u65e0\u6cd5\u9884\u77e5\u7684\u9519\u8bef\u3002","title":"\u8c03\u7528\u7c7b\u7684\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_4","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u5b57\u6bb5\u4e5f\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u5b57\u6bb5\u503c\uff0c\u901a\u8fc7 getField() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u7684\u6307\u5b9a\u5b57\u6bb5\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); Field field = clazz . getField ( \"i\" ); //\u83b7\u53d6\u7c7b\u7684\u6210\u5458\u5b57\u6bb5i field . set ( instance , 100 ); //\u5c06\u7c7b\u5b9e\u4f8binstance\u7684\u6210\u5458\u5b57\u6bb5i\u8bbe\u7f6e\u4e3a100 Method method = clazz . getMethod ( \"test\" ); method . invoke ( instance ); } \u5728\u5f97\u5230Field\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 set() \u65b9\u6cd5\u4e3a\u67d0\u4e2a\u5bf9\u8c61\uff0c\u8bbe\u5b9a\u6b64\u5c5e\u6027\u7684\u503c\uff0c\u6bd4\u5982\u4e0a\u9762\uff0c\u6211\u4eec\u5c31\u4e3ainstance\u5bf9\u8c61\u8bbe\u5b9a\u503c\u4e3a100\uff0c\u5f53\u8bbf\u95eeprivate\u5b57\u6bb5\u65f6\uff0c\u540c\u6837\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u64cd\u4f5c\u8fdb\u884c\u8d8a\u6743\u8bbf\u95ee\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) throws ReflectiveOperationException { Class <?> clazz = Class . forName ( \"com.test.Student\" ); Object instance = clazz . newInstance (); Field field = clazz . getDeclaredField ( \"i\" ); //\u83b7\u53d6\u7c7b\u7684\u6210\u5458\u5b57\u6bb5i field . setAccessible ( true ); field . set ( instance , 100 ); //\u5c06\u7c7b\u5b9e\u4f8binstance\u7684\u6210\u5458\u5b57\u6bb5i\u8bbe\u7f6e\u4e3a100 Method method = clazz . getMethod ( \"test\" ); method . invoke ( instance ); } \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u53cd\u5c04\u51e0\u4e4e\u53ef\u4ee5\u628a\u4e00\u4e2a\u7c7b\u7684\u8001\u5e95\u90fd\u7ed9\u6252\u51fa\u6765\uff0c\u4efb\u4f55\u5c5e\u6027\uff0c\u4efb\u4f55\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u88ab\u53cd\u5c04\u4fee\u6539\uff0c\u65e0\u8bba\u6743\u9650\u4fee\u9970\u7b26\u662f\u4ec0\u4e48\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u6211\u7684\u5b57\u6bb5\u88ab\u6807\u8bb0\u4e3afinal\u5462\uff1f\u73b0\u5728\u5728\u5b57\u6bb5 i \u524d\u9762\u6dfb\u52a0 final \u5173\u952e\u5b57\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u6548\u679c\uff1a 1 private final int i = 10 ; \u8fd9\u65f6\uff0c\u5f53\u5b57\u6bb5\u4e3afinal\u65f6\uff0c\u5c31\u4fee\u6539\u5931\u8d25\u4e86\uff01\u5f53\u7136\uff0c\u901a\u8fc7\u53cd\u5c04\u53ef\u4ee5\u76f4\u63a5\u5c06final\u4fee\u9970\u7b26\u76f4\u63a5\u53bb\u9664\uff0c\u53bb\u9664\u540e\uff0c\u5c31\u53ef\u4ee5\u968f\u610f\u4fee\u6539\u5185\u5bb9\u4e86\uff0c\u6211\u4eec\u6765\u5c1d\u8bd5\u4fee\u6539Integer\u7684value\u503c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws ReflectiveOperationException { Integer i = 10 ; Field field = Integer . class . getDeclaredField ( \"value\" ); Field modifiersField = Field . class . getDeclaredField ( \"modifiers\" ); //\u8fd9\u91cc\u8981\u83b7\u53d6Field\u7c7b\u7684modifiers\u5b57\u6bb5\u8fdb\u884c\u4fee\u6539 modifiersField . setAccessible ( true ); modifiersField . setInt ( field , field . getModifiers () &~ Modifier . FINAL ); //\u53bb\u9664final\u6807\u8bb0 field . setAccessible ( true ); field . set ( i , 100 ); //\u5f3a\u884c\u8bbe\u7f6e\u503c System . out . println ( i ); } \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53cd\u5c04\u975e\u5e38\u66b4\u529b\uff0c\u5c31\u8fde\u88ab\u5b9a\u4e49\u4e3afinal\u5b57\u6bb5\u7684\u503c\u90fd\u80fd\u5f3a\u884c\u4fee\u6539\uff0c\u51e0\u4e4e\u80fd\u591f\u65e0\u89c6\u4e00\u5207\u963b\u62e6\u3002\u6211\u4eec\u6765\u8bd5\u8bd5\u770b\u4fee\u6539\u4e00\u4e9b\u5176\u4ed6\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) throws ReflectiveOperationException { List < String > i = new ArrayList <> (); Field field = ArrayList . class . getDeclaredField ( \"size\" ); field . setAccessible ( true ); field . set ( i , 10 ); i . add ( \"\u6d4b\u8bd5\" ); //\u53ea\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 System . out . println ( i . size ()); //\u5927\u5c0f\u76f4\u63a5\u53d8\u621011 i . remove ( 10 ); //\u778e\u79fb\u9664\u90fd\u4e0d\u5e26\u62a5\u9519\u7684\uff0c\u6de6 } \u5b9e\u9645\u4e0a\uff0c\u6574\u4e2aArrayList\u4f53\u7cfb\u7531\u4e8e\u6211\u4eec\u7684\u53cd\u5c04\u64cd\u4f5c\uff0c\u5bfc\u81f4\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u5b83\u5df2\u7ecf\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u4e86\uff01 \u518d\u6b21\u5f3a\u8c03\uff0c\u5728\u8fdb\u884c\u53cd\u5c04\u64cd\u4f5c\u65f6\uff0c\u5fc5\u987b\u6ce8\u610f\u662f\u5426\u5b89\u5168\uff0c\u867d\u7136\u62e5\u6709\u4e86\u521b\u4e16\u4e3b\u7684\u80fd\u529b\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u6ee5\u7528\uff0c\u6211\u4eec\u53ea\u80fd\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u4e0d\u5f97\u5df2\u624d\u53bb\u4f7f\u7528\u7684\u5de5\u5177\uff01","title":"\u4fee\u6539\u7c7b\u7684\u5c5e\u6027"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#classloader","text":"\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u5c06class\u6587\u4ef6\u52a0\u8f7d\u5230JVM\u4e2d\u5417\uff1f\u5148\u5199\u597d\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 package com.test ; public class Test { public String text ; public void test ( String str ){ System . out . println ( text + \" > \u6211\u662f\u6d4b\u8bd5\u65b9\u6cd5\uff01\" + str ); } } \u901a\u8fc7javac\u547d\u4ee4\uff0c\u624b\u52a8\u7f16\u8bd1\u4e00\u4e2a.class\u6587\u4ef6\uff1a 1 nagocoler@NagodeMacBook-Pro HelloWorld % javac src/main/java/com/test/Test.java \u7f16\u8bd1\u540e\uff0c\u5f97\u5230\u4e00\u4e2aclass\u6587\u4ef6\uff0c\u6211\u4eec\u628a\u5b83\u653e\u5230\u6839\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u7f16\u5199\u4e00\u4e2a\u6211\u4eec\u81ea\u5df1\u7684ClassLoader\uff0c\u56e0\u4e3a\u666e\u901a\u7684ClassLoader\u65e0\u6cd5\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u6765\u8ba9\u5b83\u652f\u6301\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 //\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5df1\u7684ClassLoader static class MyClassLoader extends ClassLoader { public Class <?> defineClass ( String name , byte [] b ){ return defineClass ( name , b , 0 , b . length ); //\u8c03\u7528protected\u65b9\u6cd5\uff0c\u652f\u6301\u8f7d\u5165\u5916\u90e8class\u6587\u4ef6 } } public static void main ( String [] args ) throws IOException { MyClassLoader classLoader = new MyClassLoader (); FileInputStream stream = new FileInputStream ( \"Test.class\" ); byte [] bytes = new byte [ stream . available () ] ; stream . read ( bytes ); Class <?> clazz = classLoader . defineClass ( \"com.test.Test\" , bytes ); //\u7c7b\u540d\u5fc5\u987b\u548c\u6211\u4eec\u5b9a\u4e49\u7684\u4fdd\u6301\u4e00\u81f4 System . out . println ( clazz . getName ()); //\u6210\u529f\u52a0\u8f7d\u5916\u90e8class\u6587\u4ef6 } \u73b0\u5728\uff0c\u6211\u4eec\u5c31\u5c06\u6b64class\u6587\u4ef6\u8bfb\u53d6\u5e76\u89e3\u6790\u4e3aClass\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6b64\u7c7b\u8fdb\u884c\u64cd\u4f5c\u4e86\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u4f7f\u7528\u6b64\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u662f\u6211\u4eec\u76f4\u63a5\u52a0\u8f7d\u7684\uff09\uff0c\u6211\u4eec\u6765\u8bd5\u8bd5\u770b\u521b\u5efa\u4e00\u4e2a\u6b64\u7c7b\u7684\u5bf9\u8c61\u5e76\u8c03\u7528\u5176\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 try { Object obj = clazz . newInstance (); Method method = clazz . getMethod ( \"test\" , String . class ); //\u83b7\u53d6\u6211\u4eec\u5b9a\u4e49\u7684test(String str)\u65b9\u6cd5 method . invoke ( obj , \"\u54e5\u4eec\u8fd9\u74dc\u591a\u5c11\u94b1\u4e00\u65a4\uff1f\" ); } catch ( Exception e ){ e . printStackTrace (); } \u6211\u4eec\u6765\u8bd5\u8bd5\u770b\u4fee\u6539\u6210\u5458\u5b57\u6bb5\u4e4b\u540e\uff0c\u518d\u6765\u8c03\u7528\u6b64\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 try { Object obj = clazz . newInstance (); Field field = clazz . getField ( \"text\" ); //\u83b7\u53d6\u6210\u5458\u53d8\u91cf String text; field . set ( obj , \"\u534e\u5f3a\" ); Method method = clazz . getMethod ( \"test\" , String . class ); //\u83b7\u53d6\u6211\u4eec\u5b9a\u4e49\u7684test(String str)\u65b9\u6cd5 method . invoke ( obj , \"\u54e5\u4eec\u8fd9\u74dc\u591a\u5c11\u94b1\u4e00\u65a4\uff1f\" ); } catch ( Exception e ){ e . printStackTrace (); } \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5916\u90e8\u52a0\u8f7d\u751a\u81f3\u662f\u7f51\u7edc\u52a0\u8f7d\u4e00\u4e2a\u7c7b\uff0c\u53ea\u9700\u8981\u628a\u7c7b\u6587\u4ef6\u4f20\u9012\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u65e0\u9700\u518d\u5c06\u4ee3\u7801\u5199\u5728\u672c\u5730\uff0c\u800c\u662f\u52a8\u6001\u8fdb\u884c\u4f20\u9012\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62\u6e90\u4ee3\u7801\u88ab\u53cd\u7f16\u8bd1\uff08\u53ea\u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u60f3\u7834\u89e3\u4f60\u4ee3\u7801\u6709\u7684\u662f\u65b9\u6cd5\uff09\uff0c\u800c\u4e14\u5728\u66f4\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9byte[]\u8fdb\u884c\u52a0\u5bc6\uff0c\u4fdd\u8bc1\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027\u3002","title":"\u81ea\u5b9a\u4e49ClassLoader\u52a0\u8f7d\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_5","text":"\u5176\u5b9e\u6211\u4eec\u5728\u4e4b\u524d\u5c31\u63a5\u89e6\u5230\u6ce8\u89e3\u4e86\uff0c\u6bd4\u5982 @Override \u8868\u793a\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\uff08\u5f53\u7136\u4e0d\u52a0\u6548\u679c\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u6b64\u6ce8\u89e3\u5728\u7f16\u8bd1\u65f6\u4f1a\u88ab\u81ea\u52a8\u4e22\u5f03\uff09\u6ce8\u89e3\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u53ea\u4e0d\u8fc7\u5b83\u7684\u7528\u6cd5\u6bd4\u8f83\u7279\u6b8a\u3002 \u6ce8\u89e3\u53ef\u4ee5\u88ab\u6807\u6ce8\u5728\u4efb\u610f\u5730\u65b9\uff0c\u5305\u62ec\u65b9\u6cd5\u4e0a\u3001\u7c7b\u540d\u4e0a\u3001\u53c2\u6570\u4e0a\u3001\u6210\u5458\u5c5e\u6027\u4e0a\u3001\u6ce8\u89e3\u5b9a\u4e49\u4e0a\u7b49\uff0c\u5c31\u50cf\u6ce8\u91ca\u4e00\u6837\uff0c\u5b83\u76f8\u5f53\u4e8e\u6211\u4eec\u5bf9\u67d0\u6837\u4e1c\u897f\u7684\u4e00\u4e2a\u6807\u8bb0\u3002\u800c\u4e0e\u6ce8\u91ca\u4e0d\u540c\u7684\u662f\uff0c\u6ce8\u89e3\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\uff0c\u6ce8\u89e3\u4e5f\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\u3002","title":"\u6ce8\u89e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_6","text":"JDK\u9884\u8bbe\u4e86\u4ee5\u4e0b\u6ce8\u89e3\uff0c\u4f5c\u7528\u4e8e\u4ee3\u7801\uff1a @Override - \u68c0\u67e5\uff08\u4ec5\u4ec5\u662f\u68c0\u67e5\uff0c\u4e0d\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff09\u8be5\u65b9\u6cd5\u662f\u5426\u662f\u91cd\u5199\u65b9\u6cd5\u3002\u5982\u679c\u53d1\u73b0\u5176\u7236\u7c7b\uff0c\u6216\u8005\u662f\u5f15\u7528\u7684\u63a5\u53e3\u4e2d\u5e76\u6ca1\u6709\u8be5\u65b9\u6cd5\u65f6\uff0c\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\u3002 @Deprecated - \u6807\u8bb0\u8fc7\u65f6\u65b9\u6cd5\u3002\u5982\u679c\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u4f1a\u62a5\u7f16\u8bd1\u8b66\u544a\u3002 @SuppressWarnings - \u6307\u793a\u7f16\u8bd1\u5668\u53bb\u5ffd\u7565\u6ce8\u89e3\u4e2d\u58f0\u660e\u7684\u8b66\u544a\uff08\u4ec5\u4ec5\u7f16\u8bd1\u5668\u9636\u6bb5\uff0c\u4e0d\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff09 @FunctionalInterface - Java 8 \u5f00\u59cb\u652f\u6301\uff0c\u6807\u8bc6\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6216\u51fd\u6570\u5f0f\u63a5\u53e3\u3002 @SafeVarargs - Java 7 \u5f00\u59cb\u652f\u6301\uff0c\u5ffd\u7565\u4efb\u4f55\u4f7f\u7528\u53c2\u6570\u4e3a\u6cdb\u578b\u53d8\u91cf\u7684\u65b9\u6cd5\u6216\u6784\u9020\u51fd\u6570\u8c03\u7528\u4ea7\u751f\u7684\u8b66\u544a\u3002","title":"\u9884\u8bbe\u6ce8\u89e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_7","text":"\u5143\u6ce8\u89e3\u662f\u4f5c\u7528\u4e8e\u6ce8\u89e3\u4e0a\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u6211\u4eec\u7f16\u5199\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\uff1a @Retention - \u6807\u8bc6\u8fd9\u4e2a\u6ce8\u89e3\u600e\u4e48\u4fdd\u5b58\uff0c\u662f\u53ea\u5728\u4ee3\u7801\u4e2d\uff0c\u8fd8\u662f\u7f16\u5165class\u6587\u4ef6\u4e2d\uff0c\u6216\u8005\u662f\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u3002 @Documented - \u6807\u8bb0\u8fd9\u4e9b\u6ce8\u89e3\u662f\u5426\u5305\u542b\u5728\u7528\u6237\u6587\u6863\u4e2d\u3002 @Target - \u6807\u8bb0\u8fd9\u4e2a\u6ce8\u89e3\u5e94\u8be5\u662f\u54ea\u79cd Java \u6210\u5458\u3002 @Inherited - \u6807\u8bb0\u8fd9\u4e2a\u6ce8\u89e3\u662f\u7ee7\u627f\u4e8e\u54ea\u4e2a\u6ce8\u89e3\u7c7b(\u9ed8\u8ba4 \u6ce8\u89e3\u5e76\u6ca1\u6709\u7ee7\u627f\u4e8e\u4efb\u4f55\u5b50\u7c7b) @Repeatable - Java 8 \u5f00\u59cb\u652f\u6301\uff0c\u6807\u8bc6\u67d0\u6ce8\u89e3\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u58f0\u660e\u4e0a\u4f7f\u7528\u591a\u6b21\u3002 \u770b\u4e86\u8fd9\u4e48\u591a\u9884\u8bbe\u7684\u6ce8\u89e3\uff0c\u4f60\u4eec\u80af\u5b9a\u773c\u82b1\u7f2d\u4e71\u4e86\uff0c\u90a3\u6211\u4eec\u6765\u770b\u770b @Override \u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff1a 1 2 3 4 @Target ( ElementType . METHOD ) @Retention ( RetentionPolicy . SOURCE ) public @interface Override { } \u8be5\u6ce8\u89e3\u7531 @Target \u9650\u5b9a\u4e3a\u53ea\u80fd\u4f5c\u7528\u4e8e\u65b9\u6cd5\u4e0a\uff0cElementType\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u7528\u4e8e\u8868\u793a\u6b64\u679a\u4e3e\u7684\u4f5c\u7528\u57df\uff0c\u4e00\u4e2a\u6ce8\u89e3\u53ef\u4ee5\u6709\u5f88\u591a\u4e2a\u4f5c\u7528\u57df\u3002 @Retention \u8868\u793a\u6b64\u6ce8\u89e3\u7684\u4fdd\u7559\u7b56\u7565\uff0c\u5305\u62ec\u4e09\u79cd\u7b56\u7565\uff0c\u5728\u4e0a\u8ff0\u4e2d\u6709\u5199\u5230\uff0c\u800c\u8fd9\u91cc\u5b9a\u4e49\u4e3a\u53ea\u5728\u4ee3\u7801\u4e2d\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\u9700\u8981\u5b9a\u4e491\u4e2a @Retention \u548c1-n\u4e2a @Target \u3002 \u65e2\u7136\u4e86\u89e3\u4e86\u5143\u6ce8\u89e3\u7684\u4f7f\u7528\u548c\u6ce8\u89e3\u7684\u5b9a\u4e49\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u6765\u5c1d\u8bd5\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5df1\u7684\u6ce8\u89e3\uff1a 1 2 3 4 @Target ( ElementType . METHOD ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aTest\u6ce8\u89e3\uff0c\u5e76\u5c06\u5176\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u540c\u65f6\u6b64\u6ce8\u89e3\u53ef\u4ee5\u4f5c\u7528\u4e8e\u65b9\u6cd5\u6216\u662f\u7c7b\u4e0a\uff1a 1 2 3 4 5 6 7 @Test public class Main { @Test public static void main ( String [] args ) { } } \u8fd9\u6837\uff0c\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6ce8\u89e3\u5c31\u88ab\u6211\u4eec\u521b\u5efa\u4e86\u3002","title":"\u5143\u6ce8\u89e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_8","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u6ce8\u89e3\u4e2d\u5b9a\u4e49\u4e00\u4e9b\u5c5e\u6027\uff0c\u6ce8\u89e3\u7684\u5c5e\u6027\u4e5f\u53eb\u505a\u6210\u5458\u53d8\u91cf\uff0c\u6ce8\u89e3\u53ea\u6709\u6210\u5458\u53d8\u91cf\uff0c\u6ca1\u6709\u65b9\u6cd5\u3002\u6ce8\u89e3\u7684\u6210\u5458\u53d8\u91cf\u5728\u6ce8\u89e3\u7684\u5b9a\u4e49\u4e2d\u4ee5\u201c\u65e0\u5f62\u53c2\u7684\u65b9\u6cd5\u201d\u5f62\u5f0f\u6765\u58f0\u660e\uff0c\u5176\u65b9\u6cd5\u540d\u5b9a\u4e49\u4e86\u8be5\u6210\u5458\u53d8\u91cf\u7684\u540d\u5b57\uff0c\u5176\u8fd4\u56de\u503c\u5b9a\u4e49\u4e86\u8be5\u6210\u5458\u53d8\u91cf\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String value (); } \u9ed8\u8ba4\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u540d\u5b57\u8bbe\u5b9a\u4e3avalue\uff0c\u5426\u5219\uff0c\u6211\u4eec\u9700\u8981\u5728\u4f7f\u7528\u65f6\u624b\u52a8\u6307\u5b9a\u6ce8\u89e3\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u4f7f\u7528value\u5219\u65e0\u9700\u586b\u5165\uff1a 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String test (); } 1 2 3 4 5 6 public class Main { @Test ( test = \"\" ) public static void main ( String [] args ) { } } \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528default\u5173\u952e\u5b57\u6765\u4e3a\u8fd9\u4e9b\u5c5e\u6027\u6307\u5b9a\u9ed8\u8ba4\u503c\uff1a 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String value () default \"\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\uff0c\u7ed9\u4e2a\u4e09\u8fde\u5427\uff01\" ; } \u5f53\u5c5e\u6027\u5b58\u5728\u9ed8\u8ba4\u503c\u65f6\uff0c\u4f7f\u7528\u6ce8\u89e3\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u4f20\u5165\u5c5e\u6027\u503c\u3002\u5f53\u5c5e\u6027\u4e3a\u6570\u7ec4\u65f6\u5462\uff1f 1 2 3 4 5 @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { String [] value (); } \u5f53\u5c5e\u6027\u4e3a\u6570\u7ec4\uff0c\u6211\u4eec\u5728\u4f7f\u7528\u6ce8\u89e3\u4f20\u53c2\u65f6\uff0c\u5982\u679c\u6570\u7ec4\u91cc\u9762\u53ea\u6709\u4e00\u4e2a\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u503c\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff1a 1 2 3 4 @Test ( \"\u5173\u6ce8\u70b9\u4e86\u5417\" ) public static void main ( String [] args ) { } 1 2 3 4 5 6 public class Main { @Test ({ \"value1\" , \"value2\" }) //\u591a\u4e2a\u503c\u65f6\u5c31\u4f7f\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765 public static void main ( String [] args ) { } }","title":"\u6ce8\u89e3\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#_9","text":"\u65e2\u7136\u6211\u4eec\u7684\u6ce8\u89e3\u53ef\u4ee5\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\uff0c\u5982\u4f55\u83b7\u53d6\u6211\u4eec\u7f16\u5199\u7684\u6ce8\u89e3\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u53cd\u5c04\u673a\u5236\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Class < Student > clazz = Student . class ; for ( Annotation annotation : clazz . getAnnotations ()) { System . out . println ( annotation . annotationType ()); //\u83b7\u53d6\u7c7b\u578b System . out . println ( annotation instanceof Test ); //\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4e3aTest Test test = ( Test ) annotation ; System . out . println ( test . value ()); //\u83b7\u53d6\u6211\u4eec\u5728\u6ce8\u89e3\u4e2d\u5199\u5165\u7684\u5185\u5bb9 } } \u901a\u8fc7\u53cd\u5c04\u673a\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u83b7\u53d6\u5230\u6211\u4eec\u6807\u8bb0\u7684\u6ce8\u89e3\uff0c\u540c\u65f6\u8fd8\u80fd\u83b7\u53d6\u5230\u6ce8\u89e3\u4e2d\u586b\u5165\u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\uff0c\u65b9\u6cd5\u4e0a\u7684\u6807\u8bb0\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u83b7\u53d6\u6ce8\u89e3\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) throws NoSuchMethodException { Class < Student > clazz = Student . class ; for ( Annotation annotation : clazz . getMethod ( \"test\" ). getAnnotations ()) { System . out . println ( annotation . annotationType ()); //\u83b7\u53d6\u7c7b\u578b System . out . println ( annotation instanceof Test ); //\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4e3aTest Test test = ( Test ) annotation ; System . out . println ( test . value ()); //\u83b7\u53d6\u6211\u4eec\u5728\u6ce8\u89e3\u4e2d\u5199\u5165\u7684\u5185\u5bb9 } } \u65e0\u8bba\u662f\u65b9\u6cd5\u3001\u7c7b\u3001\u8fd8\u662f\u5b57\u6bb5\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 getAnnotations() \u65b9\u6cd5\uff08\u8fd8\u6709\u51e0\u4e2a\u540c\u540d\u7684\uff09\u6765\u5feb\u901f\u83b7\u53d6\u6211\u4eec\u6807\u8bb0\u7684\u6ce8\u89e3\u3002 \u6240\u4ee5\u8bf4\u5462\uff0c\u8fd9\u73a9\u610f\u5b66\u6765\u6709\u5565\u7528\uff1f\u4e1d\u6bebget\u4e0d\u5230\u8fd9\u73a9\u610f\u7684\u7528\u5904\u3002\u5176\u5b9e\u4e0d\u662f\uff0c\u73b0\u9636\u6bb5\u4f60\u4eec\u8fd8\u4f53\u4f1a\u4e0d\u5230\u6ce8\u89e3\u5e26\u6765\u7684\u5feb\u4e50\uff0c\u5728\u63a5\u89e6\u5230Spring\u548cSpringBoot\u7b49\u5927\u578b\u6846\u67b6\u540e\uff0c\u5c31\u80fd\u611f\u53d7\u5230\u6ce8\u89e3\u5e26\u6765\u7684\u9b45\u529b\u4e86\u3002","title":"\u53cd\u5c04\u83b7\u53d6\u6ce8\u89e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/","text":"Java\u5f02\u5e38\u673a\u5236 \u5728\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u4f1a\u6309\u7167\u6211\u4eec\u7684\u601d\u8def\u53bb\u8fd0\u884c\uff0c\u6309\u7406\u8bf4\u662f\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u7684\uff0c\u4f46\u662f\uff0c\u4ee3\u7801\u5b9e\u9645\u7f16\u5199\u540e\u5e76\u4e0d\u4e00\u5b9a\u662f\u5b8c\u7f8e\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u6211\u4eec\u6ca1\u6709\u8003\u8651\u5230\u7684\u60c5\u51b5\uff0c\u5982\u679c\u8fd9\u4e9b\u60c5\u51b5\u80fd\u591f\u6b63\u5e38\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u7684\u7ed3\u679c\u8fd8\u597d\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u95ee\u9898\u4e86\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { test ( 1 , 0 ); //\u5f53b\u4e3a0\u7684\u65f6\u5019\uff0c\u8fd8\u80fd\u6b63\u5e38\u8fd0\u884c\u5417\uff1f } private static int test ( int a , int b ){ return a / b ; //\u6ca1\u6709\u4efb\u4f55\u7684\u5224\u65ad\u800c\u662f\u76f4\u63a5\u505a\u8ba1\u7b97 } Exception in thread \"main\" java . lang . ArithmeticException : / by zero at com . test . Application . test ( Application . java : 9 ) at com . test . Application . main ( Application . java : 5 ) \u5f53\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u6211\u4eec\u6ca1\u6709\u8003\u8651\u5230\u7684\u60c5\u51b5\u65f6\uff0c\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u5f02\u5e38\u6216\u662f\u9519\u8bef\uff01 \u5f02\u5e38 \u6211\u4eec\u5728\u4e4b\u524d\u5176\u5b9e\u5df2\u7ecf\u63a5\u89e6\u8fc7\u4e00\u4e9b\u5f02\u5e38\u4e86\uff0c\u6bd4\u5982\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff0c\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u7b97\u672f\u5f02\u5e38\u7b49\uff0c\u4ed6\u4eec\u5176\u5b9e\u90fd\u662f\u5f02\u5e38\u7c7b\u578b\uff0c\u6211\u4eec\u7684\u6bcf\u4e00\u4e2a\u5f02\u5e38\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u4ed6\u4eec\u90fd\u7ee7\u627f\u81ea Exception \u7c7b\uff01\u5f02\u5e38\u7c7b\u578b\u672c\u8d28\u4f9d\u7136\u7c7b\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u5f02\u5e38\u7c7b\u578b\u652f\u6301\u5728\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u95ee\u9898\u65f6\u629b\u51fa\uff08\u4e5f\u5c31\u662f\u4e0a\u9762\u51fa\u73b0\u7684\u7ea2\u8272\u62a5\u9519\uff09\u4e5f\u53ef\u4ee5\u63d0\u524d\u58f0\u660e\uff0c\u544a\u77e5\u4f7f\u7528\u8005\u9700\u8981\u5904\u7406\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38\uff01 \u8fd0\u884c\u65f6\u5f02\u5e38 \u5f02\u5e38\u7684\u7b2c\u4e00\u79cd\u7c7b\u578b\u662f\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u5982\u4e0a\u8ff0\u7684\u5217\u5b50\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u65e0\u6cd5\u611f\u77e5\u4ee3\u7801\u662f\u5426\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u53ea\u6709\u5728\u8fd0\u884c\u7684\u65f6\u5019\u624d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u51fa\u9519\uff08\u6b63\u5e38\u60c5\u51b5\u4e0b\u662f\u4e0d\u4f1a\u51fa\u9519\u7684\uff09\uff0c\u8fd9\u6837\u7684\u5f02\u5e38\u79f0\u4e3a\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u6240\u6709\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\u90fd\u7ee7\u627f\u81ea RuntimeException \u3002 \u7f16\u8bd1\u65f6\u5f02\u5e38 \u5f02\u5e38\u7684\u53e6\u4e00\u79cd\u7c7b\u578b\u662f\u7f16\u8bd1\u65f6\u5f02\u5e38\uff0c\u7f16\u8bd1\u65f6\u5f02\u5e38\u662f\u660e\u786e\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u9700\u8981\u8fdb\u884c\u5904\u7406\u7684\u5f02\u5e38\uff08\u6355\u83b7\u5f02\u5e38\uff09\u5982\u679c\u4e0d\u8fdb\u884c\u5904\u7406\uff0c\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff01\u9ed8\u8ba4\u7ee7\u627f\u81ea Exception \u7c7b\u7684\u5f02\u5e38\u90fd\u662f\u7f16\u8bd1\u65f6\u5f02\u5e38\u3002 1 2 File file = new File ( \"my.txt\" ); file . createNewFile (); //\u8981\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u5904\u7406\u5f02\u5e38 \u9519\u8bef \u9519\u8bef\u6bd4\u5f02\u5e38\u66f4\u4e25\u91cd\uff0c\u5f02\u5e38\u5c31\u662f\u4e0d\u540c\u5bfb\u5e38\uff0c\u4f46\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u81f4\u547d\u7684\u95ee\u9898\uff0c\u800c\u9519\u8bef\u662f\u81f4\u547d\u95ee\u9898\uff0c\u4e00\u822c\u51fa\u73b0\u9519\u8bef\u53ef\u80fdJVM\u5c31\u65e0\u6cd5\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u4e86\uff0c\u6bd4\u5982 OutOfMemoryError \u5c31\u662f\u5185\u5b58\u6ea2\u51fa\u9519\u8bef\uff08\u5185\u5b58\u5360\u7528\u5df2\u7ecf\u8d85\u51fa\u9650\u5236\uff0c\u65e0\u6cd5\u7ee7\u7eed\u7533\u8bf7\u5185\u5b58\u4e86\uff09 1 int [] arr = new int [ Integer . MAX_VALUE ] ; //\u80fd\u521b\u5efa\u5982\u6b64\u4e4b\u5927\u7684\u6570\u7ec4\u5417\uff1f \u8fd0\u884c\u540e\u5f97\u5230\u4ee5\u4e0b\u5185\u5bb9\uff1a 1 2 Exception in thread \"main\" java . lang . OutOfMemoryError : Requested array size exceeds VM limit at com . test . Main . main ( Main . java : 14 ) \u9519\u8bef\u90fd\u7ee7\u627f\u81ea Error \u7c7b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u4e2d\u53ea\u80fd\u5904\u7406\u5f02\u5e38\uff0c\u9519\u8bef\u662f\u5f88\u96be\u8fdb\u884c\u5904\u7406\u7684\uff0c Error \u548c Execption \u90fd\u7ee7\u627f\u81ea Throwable \u7c7b\u3002\u5f53\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u9519\u8bef\u6216\u5f02\u5e38\u65f6\u53c8\u6ca1\u6709\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u7a0b\u5e8f\uff08\u5f53\u524d\u7ebf\u7a0b\uff09\u5c06\u7ec8\u6b62\u8fd0\u884c\uff1a 1 2 int [] arr = new int [ Integer . MAX_VALUE ] ; System . out . println ( \"lbwnb\" ); //\u8fd8\u80fd\u6b63\u5e38\u6253\u5370\u5417\uff1f \u5f02\u5e38\u7684\u5904\u7406 \u5f53\u7a0b\u5e8f\u6ca1\u6709\u6309\u7167\u6211\u4eec\u60f3\u8981\u7684\u6837\u5b50\u8fd0\u884c\u800c\u51fa\u73b0\u5f02\u5e38\u65f6\uff08\u9ed8\u8ba4\u4f1a\u4ea4\u7ed9JVM\u6765\u5904\u7406\uff0cJVM\u53d1\u73b0\u4efb\u4f55\u5f02\u5e38\u90fd\u4f1a\u7acb\u5373\u7ec8\u6b62\u7a0b\u5e8f\u8fd0\u884c\uff0c\u5e76\u5728\u63a7\u5236\u53f0\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u81ea\u5df1\u5904\u7406\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u8ba9\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\uff0c\u5c31\u9700\u8981\u5bf9\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u6bd4\u5982\uff1a 1 2 3 int [] arr = new int [ 5 ] ; arr [ 5 ] = 1 ; //\u6211\u4eec\u9700\u8981\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u4fdd\u8bc1\u540e\u9762\u7684\u4ee3\u7801\u6b63\u5e38\u8fd0\u884c\uff01 System . out . println ( \"lbwnb\" ); \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 try \u548c catch \u8bed\u53e5\u5757\u6765\u5904\u7406\uff1a 1 2 3 4 5 6 7 8 int [] arr = new int [ 5 ] ; try { //\u5728try\u5757\u4e2d\u8fd0\u884c\u4ee3\u7801 arr [ 5 ] = 1 ; //\u5f53\u4ee3\u7801\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u5f02\u5e38\u4f1a\u88ab\u6355\u83b7\uff0c\u5e76\u5728catch\u5757\u4e2d\u5f97\u5230\u5f02\u5e38\u7c7b\u578b\u7684\u5bf9\u8c61 } catch ( ArrayIndexOutOfBoundsException e ){ //\u6355\u83b7\u7684\u5f02\u5e38\u7c7b\u578b System . out . println ( \"\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u5f02\u5e38\uff01\" ); //\u51fa\u73b0\u5f02\u5e38\u65f6\u6267\u884c } //\u540e\u9762\u7684\u4ee3\u7801\u4f1a\u6b63\u5e38\u8fd0\u884c System . out . println ( \"lbwnb\" ); \u5f53\u5f02\u5e38\u88ab\u6355\u83b7\u540e\uff0c\u5c31\u7531\u6211\u4eec\u81ea\u5df1\u8fdb\u884c\u5904\u7406\uff08\u4e0d\u518d\u4ea4\u7ed9JVM\u5904\u7406\uff09\uff0c\u56e0\u6b64\u5c31\u4e0d\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\u8fd0\u884c\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 e.printStackTrace() \u6765\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff0c\u5b9a\u4f4d\u6211\u4eec\u7684\u5f02\u5e38\u51fa\u73b0\u4f4d\u7f6e\uff1a 1 2 3 4 java . lang . ArrayIndexOutOfBoundsException : 5 at com . test . Main . main ( Main . java : 7 ) //Main\u7c7b\u7684\u7b2c7\u884c\u51fa\u73b0\u95ee\u9898 \u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u5f02\u5e38 \uff01 lbwnb \u8fd0\u884c\u65f6\u5f02\u5e38\u5728\u7f16\u8bd1\u65f6\u53ef\u4ee5\u4e0d\u7528\u6355\u83b7\uff0c\u4f46\u662f\u7f16\u8bd1\u65f6\u5f02\u5e38\u5fc5\u987b\u8fdb\u884c\u5904\u7406\uff1a 1 2 3 4 5 6 File file = new File ( \"my.txt\" ); try { file . createNewFile (); } catch ( IOException e ) { //\u6355\u83b7\u58f0\u660e\u7684\u5f02\u5e38\u7c7b\u578b e . printStackTrace (); } \u53ef\u4ee5\u6355\u83b7\u5230\u7c7b\u578b\u4e0d\u6b62\u662f Exception \u7684\u5b50\u7c7b\uff0c\u53ea\u8981\u662f\u7ee7\u627f\u81ea Throwalbe \u7684\u7c7b\uff0c\u90fd\u80fd\u88ab\u6355\u83b7\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c Error \u4e5f\u80fd\u88ab\u6355\u83b7\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u9519\u8bef\u4e00\u822c\u662f\u865a\u62df\u673a\u76f8\u5173\u7684\u95ee\u9898\uff0c\u51fa\u73b0 Error \u5e94\u8be5\u4ece\u95ee\u9898\u7684\u6839\u6e90\u53bb\u89e3\u51b3\u3002 \u5f02\u5e38\u7684\u629b\u51fa \u5f53\u522b\u4eba\u8c03\u7528\u6211\u4eec\u7684\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u4f20\u5165\u4e86\u9519\u8bef\u7684\u53c2\u6570\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u624b\u52a8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u6765\u7ec8\u6b62\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\uff0c\u540c\u65f6\u544a\u77e5\u4e0a\u4e00\u7ea7\u65b9\u6cd5\u6267\u884c\u51fa\u73b0\u4e86\u95ee\u9898\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try { test ( 1 , 0 ); } catch ( Exception e ) { //\u6355\u83b7\u65b9\u6cd5\u4e2d\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38 e . printStackTrace (); } } private static int test ( int a , int b ) throws Exception { //\u58f0\u660e\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b if ( b == 0 ) throw new Exception ( \"0\u4e0d\u80fd\u505a\u9664\u6570\uff01\" ); //\u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\u5f02\u5e38 return a / b ; //\u629b\u51fa\u5f02\u5e38\u4f1a\u7ec8\u6b62\u4ee3\u7801\u8fd0\u884c } \u901a\u8fc7 throw \u5173\u952e\u5b57\u629b\u51fa\u5f02\u5e38\uff08\u629b\u51fa\u5f02\u5e38\u540e\uff0c\u540e\u9762\u7684\u4ee3\u7801\u4e0d\u518d\u6267\u884c\uff09\u5f53\u7a0b\u5e8f\u8fd0\u884c\u5230\u8fd9\u4e00\u884c\u65f6\uff0c\u5c31\u4f1a\u7ec8\u6b62\u6267\u884c\uff0c\u5e76\u51fa\u73b0\u4e00\u4e2a\u5f02\u5e38\u3002 \u5982\u679c\u65b9\u6cd5\u4e2d\u629b\u51fa\u4e86\u975e\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u4f46\u662f\u4e0d\u5e0c\u671b\u5728\u6b64\u65b9\u6cd5\u5185\u5904\u7406\uff0c\u800c\u662f\u4ea4\u7ed9\u8c03\u7528\u8005\u6765\u5904\u7406\u5f02\u5e38\uff0c\u5c31\u9700\u8981\u5728\u65b9\u6cd5\u5b9a\u4e49\u540e\u9762\u663e\u5f0f\u58f0\u660e\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff01\u5982\u679c\u629b\u51fa\u7684\u662f\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u5219\u4e0d\u9700\u8981\u5728\u65b9\u6cd5\u540e\u9762\u58f0\u660e\u5f02\u5e38\u7c7b\u578b\uff0c\u8c03\u7528\u65f6\u4e5f\u65e0\u9700\u6355\u83b7\uff0c\u4f46\u662f\u51fa\u73b0\u5f02\u5e38\u65f6\u540c\u6837\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\uff08\u51fa\u73b0\u8fd0\u884c\u65f6\u5f02\u5e38\u540c\u65f6\u672a\u88ab\u6355\u83b7\u4f1a\u9ed8\u8ba4\u4ea4\u7ed9JVM\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5e8f\u5e76\u5728\u63a7\u5236\u53f0\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff09 \u5982\u679c\u60f3\u8981\u8c03\u7528\u58f0\u660e\u7f16\u8bd1\u65f6\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4f9d\u7136\u4e0d\u60f3\u53bb\u5904\u7406\uff0c\u53ef\u4ee5\u540c\u6837\u7684\u5728\u65b9\u6cd5\u4e0a\u58f0\u660e throws \u6765\u7ee7\u7eed\u4ea4\u7ed9\u4e0a\u4e00\u7ea7\u5904\u7406\u3002 1 2 3 4 5 6 7 8 public static void main ( String [] args ) throws Exception { //\u51fa\u73b0\u5f02\u5e38\u5c31\u518d\u5f80\u4e0a\u629b\uff0c\u800c\u4e0d\u662f\u5728\u6b64\u65b9\u6cd5\u5185\u5904\u7406 test ( 1 , 0 ); } private static int test ( int a , int b ) throws Exception { //\u58f0\u660e\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b if ( b == 0 ) throw new Exception ( \"0\u4e0d\u80fd\u505a\u9664\u6570\uff01\" ); //\u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\u5f02\u5e38 return a / b ; } \u5f53main\u65b9\u6cd5\u90fd\u58f0\u660e\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u51fa\u73b0\u5f02\u5e38\u5c31\u7531JVM\u8fdb\u884c\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u5f0f\uff08\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5e8f\u5e76\u5728\u63a7\u5236\u53f0\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff09 \u5f02\u5e38\u53ea\u80fd\u88ab\u6355\u83b7\u4e00\u6b21\uff0c\u5f53\u5f02\u5e38\u6355\u83b7\u51fa\u73b0\u5d4c\u5957\u65f6\uff0c\u53ea\u4f1a\u5728\u6700\u5185\u5c42\u88ab\u6355\u83b7\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main ( String [] args ) throws Exception { try { test ( 1 , 0 ); } catch ( Exception e ){ System . out . println ( \"\u5916\u5c42\" ); } } private static int test ( int a , int b ){ try { if ( b == 0 ) throw new Exception ( \"0\u4e0d\u80fd\u505a\u9664\u6570\uff01\" ); } catch ( Exception e ){ System . out . println ( \"\u5185\u5c42\" ); return 0 ; } return a / b ; } \u81ea\u5b9a\u4e49\u5f02\u5e38 JDK\u4e3a\u6211\u4eec\u5df2\u7ecf\u63d0\u524d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5f02\u5e38\u4e86\uff0c\u4f46\u662f\u53ef\u80fd\u5bf9\u6211\u4eec\u6765\u8bf4\u4e0d\u591f\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u5f02\u5e38\uff1a 1 2 3 4 5 6 7 public class MyException extends Exception { //\u76f4\u63a5\u7ee7\u627f\u5373\u53ef } public static void main ( String [] args ) throws MyException { throw new MyException (); //\u76f4\u63a5\u4f7f\u7528 } \u4e5f\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u7684\u5e26\u63cf\u8ff0\u7684\u6784\u9020\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 public class MyException extends Exception { public MyException ( String message ){ super ( message ); } } public static void main ( String [] args ) throws MyException { throw new MyException ( \"\u51fa\u73b0\u4e86\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\" ); } \u6355\u83b7\u5f02\u5e38\u6307\u5b9a\u7684\u7c7b\u578b\uff0c\u4f1a\u6355\u83b7\u5176\u6240\u6709\u5b50\u5f02\u5e38\u7c7b\u578b\uff1a 1 2 3 4 5 try { throw new MyException ( \"\u51fa\u73b0\u4e86\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\" ); } catch ( Exception e ) { //\u6355\u83b7\u7236\u5f02\u5e38\u7c7b\u578b System . out . println ( \"\u6355\u83b7\u5230\u5f02\u5e38\" ); } \u591a\u91cd\u5f02\u5e38\u6355\u83b7\u548cfinally\u5173\u952e\u5b57 \u5f53\u4ee3\u7801\u53ef\u80fd\u51fa\u73b0\u591a\u79cd\u7c7b\u578b\u7684\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5206\u4e0d\u540c\u60c5\u51b5\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u591a\u91cd\u5f02\u5e38\u6355\u83b7\uff1a 1 2 3 4 5 6 7 8 9 try { //.... } catch ( NullPointerException e ) { } catch ( IndexOutOfBoundsException e ){ } catch ( RuntimeException e ){ } \u6ce8\u610f\uff0c\u7c7b\u4f3c\u4e8e if-else if \u7684\u7ed3\u6784\uff0c\u7236\u5f02\u5e38\u7c7b\u578b\u53ea\u80fd\u653e\u5728\u6700\u540e\uff01 1 2 3 4 5 6 7 8 9 try { //.... } catch ( RuntimeException e ){ //\u7236\u7c7b\u578b\u5728\u524d\uff0c\u4f1a\u5c06\u5b50\u7c7b\u7684\u4e5f\u6355\u83b7 } catch ( NullPointerException e ) { //\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u88ab\u6355\u83b7 } catch ( IndexOutOfBoundsException e ){ //\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u88ab\u6355\u83b7 } \u5982\u679c\u5e0c\u671b\u628a\u8fd9\u4e9b\u5f02\u5e38\u653e\u5728\u4e00\u8d77\u8fdb\u884c\u5904\u7406\uff1a 1 2 3 4 5 try { //.... } catch ( NullPointerException | IndexOutOfBoundsException e ) { //\u7528|\u9694\u5f00\u6bcf\u79cd\u7c7b\u578b\u5373\u53ef } \u5f53\u6211\u4eec\u5e0c\u671b\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u65e0\u8bba\u662f\u5426\u51fa\u73b0\u5f02\u5e38\uff0c\u90fd\u4f1a\u5728\u6700\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53ef\u4ee5\u4ea4\u7ed9 finally \u8bed\u53e5\u5757\u6765\u5904\u7406\uff1a 1 2 3 4 5 6 7 try { //.... } catch ( Exception e ){ } finally { System . out . println ( \"lbwnb\" ); //\u65e0\u8bba\u662f\u5426\u51fa\u73b0\u5f02\u5e38\uff0c\u90fd\u4f1a\u5728\u6700\u540e\u6267\u884c } try \u8bed\u53e5\u5757\u81f3\u5c11\u8981\u914d\u5408 catch \u6216 finally \u4e2d\u7684\u4e00\u4e2a\uff1a 1 2 3 4 5 6 try { int a = 10 ; a /= 0 ; } finally { //\u4e0d\u6355\u83b7\u5f02\u5e38\uff0c\u7a0b\u5e8f\u4f1a\u7ec8\u6b62\uff0c\u4f46\u5728\u6700\u540e\u4f9d\u7136\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u5185\u5bb9 System . out . println ( \"lbwnb\" ); } \u601d\u8003\uff1a try \u3001 catch \u548c finally \u6267\u884c\u987a\u5e8f\uff1a 1 2 3 4 5 6 7 8 9 private static int test ( int a ){ try { return a ; } catch ( Exception e ){ return 0 ; } finally { a = a + 1 ; } }","title":"Java\u5f02\u5e38\u673a\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#java","text":"\u5728\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u4f1a\u6309\u7167\u6211\u4eec\u7684\u601d\u8def\u53bb\u8fd0\u884c\uff0c\u6309\u7406\u8bf4\u662f\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u7684\uff0c\u4f46\u662f\uff0c\u4ee3\u7801\u5b9e\u9645\u7f16\u5199\u540e\u5e76\u4e0d\u4e00\u5b9a\u662f\u5b8c\u7f8e\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u6211\u4eec\u6ca1\u6709\u8003\u8651\u5230\u7684\u60c5\u51b5\uff0c\u5982\u679c\u8fd9\u4e9b\u60c5\u51b5\u80fd\u591f\u6b63\u5e38\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u7684\u7ed3\u679c\u8fd8\u597d\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u95ee\u9898\u4e86\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { test ( 1 , 0 ); //\u5f53b\u4e3a0\u7684\u65f6\u5019\uff0c\u8fd8\u80fd\u6b63\u5e38\u8fd0\u884c\u5417\uff1f } private static int test ( int a , int b ){ return a / b ; //\u6ca1\u6709\u4efb\u4f55\u7684\u5224\u65ad\u800c\u662f\u76f4\u63a5\u505a\u8ba1\u7b97 } Exception in thread \"main\" java . lang . ArithmeticException : / by zero at com . test . Application . test ( Application . java : 9 ) at com . test . Application . main ( Application . java : 5 ) \u5f53\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u6211\u4eec\u6ca1\u6709\u8003\u8651\u5230\u7684\u60c5\u51b5\u65f6\uff0c\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u5f02\u5e38\u6216\u662f\u9519\u8bef\uff01","title":"Java\u5f02\u5e38\u673a\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_1","text":"\u6211\u4eec\u5728\u4e4b\u524d\u5176\u5b9e\u5df2\u7ecf\u63a5\u89e6\u8fc7\u4e00\u4e9b\u5f02\u5e38\u4e86\uff0c\u6bd4\u5982\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff0c\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u7b97\u672f\u5f02\u5e38\u7b49\uff0c\u4ed6\u4eec\u5176\u5b9e\u90fd\u662f\u5f02\u5e38\u7c7b\u578b\uff0c\u6211\u4eec\u7684\u6bcf\u4e00\u4e2a\u5f02\u5e38\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u4ed6\u4eec\u90fd\u7ee7\u627f\u81ea Exception \u7c7b\uff01\u5f02\u5e38\u7c7b\u578b\u672c\u8d28\u4f9d\u7136\u7c7b\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u5f02\u5e38\u7c7b\u578b\u652f\u6301\u5728\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u95ee\u9898\u65f6\u629b\u51fa\uff08\u4e5f\u5c31\u662f\u4e0a\u9762\u51fa\u73b0\u7684\u7ea2\u8272\u62a5\u9519\uff09\u4e5f\u53ef\u4ee5\u63d0\u524d\u58f0\u660e\uff0c\u544a\u77e5\u4f7f\u7528\u8005\u9700\u8981\u5904\u7406\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38\uff01","title":"\u5f02\u5e38"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_2","text":"\u5f02\u5e38\u7684\u7b2c\u4e00\u79cd\u7c7b\u578b\u662f\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u5982\u4e0a\u8ff0\u7684\u5217\u5b50\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u65e0\u6cd5\u611f\u77e5\u4ee3\u7801\u662f\u5426\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u53ea\u6709\u5728\u8fd0\u884c\u7684\u65f6\u5019\u624d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u51fa\u9519\uff08\u6b63\u5e38\u60c5\u51b5\u4e0b\u662f\u4e0d\u4f1a\u51fa\u9519\u7684\uff09\uff0c\u8fd9\u6837\u7684\u5f02\u5e38\u79f0\u4e3a\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u6240\u6709\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\u90fd\u7ee7\u627f\u81ea RuntimeException \u3002","title":"\u8fd0\u884c\u65f6\u5f02\u5e38"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_3","text":"\u5f02\u5e38\u7684\u53e6\u4e00\u79cd\u7c7b\u578b\u662f\u7f16\u8bd1\u65f6\u5f02\u5e38\uff0c\u7f16\u8bd1\u65f6\u5f02\u5e38\u662f\u660e\u786e\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u9700\u8981\u8fdb\u884c\u5904\u7406\u7684\u5f02\u5e38\uff08\u6355\u83b7\u5f02\u5e38\uff09\u5982\u679c\u4e0d\u8fdb\u884c\u5904\u7406\uff0c\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff01\u9ed8\u8ba4\u7ee7\u627f\u81ea Exception \u7c7b\u7684\u5f02\u5e38\u90fd\u662f\u7f16\u8bd1\u65f6\u5f02\u5e38\u3002 1 2 File file = new File ( \"my.txt\" ); file . createNewFile (); //\u8981\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u5904\u7406\u5f02\u5e38","title":"\u7f16\u8bd1\u65f6\u5f02\u5e38"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_4","text":"\u9519\u8bef\u6bd4\u5f02\u5e38\u66f4\u4e25\u91cd\uff0c\u5f02\u5e38\u5c31\u662f\u4e0d\u540c\u5bfb\u5e38\uff0c\u4f46\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u81f4\u547d\u7684\u95ee\u9898\uff0c\u800c\u9519\u8bef\u662f\u81f4\u547d\u95ee\u9898\uff0c\u4e00\u822c\u51fa\u73b0\u9519\u8bef\u53ef\u80fdJVM\u5c31\u65e0\u6cd5\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u4e86\uff0c\u6bd4\u5982 OutOfMemoryError \u5c31\u662f\u5185\u5b58\u6ea2\u51fa\u9519\u8bef\uff08\u5185\u5b58\u5360\u7528\u5df2\u7ecf\u8d85\u51fa\u9650\u5236\uff0c\u65e0\u6cd5\u7ee7\u7eed\u7533\u8bf7\u5185\u5b58\u4e86\uff09 1 int [] arr = new int [ Integer . MAX_VALUE ] ; //\u80fd\u521b\u5efa\u5982\u6b64\u4e4b\u5927\u7684\u6570\u7ec4\u5417\uff1f \u8fd0\u884c\u540e\u5f97\u5230\u4ee5\u4e0b\u5185\u5bb9\uff1a 1 2 Exception in thread \"main\" java . lang . OutOfMemoryError : Requested array size exceeds VM limit at com . test . Main . main ( Main . java : 14 ) \u9519\u8bef\u90fd\u7ee7\u627f\u81ea Error \u7c7b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u4e2d\u53ea\u80fd\u5904\u7406\u5f02\u5e38\uff0c\u9519\u8bef\u662f\u5f88\u96be\u8fdb\u884c\u5904\u7406\u7684\uff0c Error \u548c Execption \u90fd\u7ee7\u627f\u81ea Throwable \u7c7b\u3002\u5f53\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u9519\u8bef\u6216\u5f02\u5e38\u65f6\u53c8\u6ca1\u6709\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u7a0b\u5e8f\uff08\u5f53\u524d\u7ebf\u7a0b\uff09\u5c06\u7ec8\u6b62\u8fd0\u884c\uff1a 1 2 int [] arr = new int [ Integer . MAX_VALUE ] ; System . out . println ( \"lbwnb\" ); //\u8fd8\u80fd\u6b63\u5e38\u6253\u5370\u5417\uff1f","title":"\u9519\u8bef"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_5","text":"\u5f53\u7a0b\u5e8f\u6ca1\u6709\u6309\u7167\u6211\u4eec\u60f3\u8981\u7684\u6837\u5b50\u8fd0\u884c\u800c\u51fa\u73b0\u5f02\u5e38\u65f6\uff08\u9ed8\u8ba4\u4f1a\u4ea4\u7ed9JVM\u6765\u5904\u7406\uff0cJVM\u53d1\u73b0\u4efb\u4f55\u5f02\u5e38\u90fd\u4f1a\u7acb\u5373\u7ec8\u6b62\u7a0b\u5e8f\u8fd0\u884c\uff0c\u5e76\u5728\u63a7\u5236\u53f0\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u81ea\u5df1\u5904\u7406\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u8ba9\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\uff0c\u5c31\u9700\u8981\u5bf9\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u6bd4\u5982\uff1a 1 2 3 int [] arr = new int [ 5 ] ; arr [ 5 ] = 1 ; //\u6211\u4eec\u9700\u8981\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u4fdd\u8bc1\u540e\u9762\u7684\u4ee3\u7801\u6b63\u5e38\u8fd0\u884c\uff01 System . out . println ( \"lbwnb\" ); \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 try \u548c catch \u8bed\u53e5\u5757\u6765\u5904\u7406\uff1a 1 2 3 4 5 6 7 8 int [] arr = new int [ 5 ] ; try { //\u5728try\u5757\u4e2d\u8fd0\u884c\u4ee3\u7801 arr [ 5 ] = 1 ; //\u5f53\u4ee3\u7801\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u5f02\u5e38\u4f1a\u88ab\u6355\u83b7\uff0c\u5e76\u5728catch\u5757\u4e2d\u5f97\u5230\u5f02\u5e38\u7c7b\u578b\u7684\u5bf9\u8c61 } catch ( ArrayIndexOutOfBoundsException e ){ //\u6355\u83b7\u7684\u5f02\u5e38\u7c7b\u578b System . out . println ( \"\u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u5f02\u5e38\uff01\" ); //\u51fa\u73b0\u5f02\u5e38\u65f6\u6267\u884c } //\u540e\u9762\u7684\u4ee3\u7801\u4f1a\u6b63\u5e38\u8fd0\u884c System . out . println ( \"lbwnb\" ); \u5f53\u5f02\u5e38\u88ab\u6355\u83b7\u540e\uff0c\u5c31\u7531\u6211\u4eec\u81ea\u5df1\u8fdb\u884c\u5904\u7406\uff08\u4e0d\u518d\u4ea4\u7ed9JVM\u5904\u7406\uff09\uff0c\u56e0\u6b64\u5c31\u4e0d\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\u8fd0\u884c\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 e.printStackTrace() \u6765\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff0c\u5b9a\u4f4d\u6211\u4eec\u7684\u5f02\u5e38\u51fa\u73b0\u4f4d\u7f6e\uff1a 1 2 3 4 java . lang . ArrayIndexOutOfBoundsException : 5 at com . test . Main . main ( Main . java : 7 ) //Main\u7c7b\u7684\u7b2c7\u884c\u51fa\u73b0\u95ee\u9898 \u7a0b\u5e8f\u8fd0\u884c\u51fa\u73b0\u5f02\u5e38 \uff01 lbwnb \u8fd0\u884c\u65f6\u5f02\u5e38\u5728\u7f16\u8bd1\u65f6\u53ef\u4ee5\u4e0d\u7528\u6355\u83b7\uff0c\u4f46\u662f\u7f16\u8bd1\u65f6\u5f02\u5e38\u5fc5\u987b\u8fdb\u884c\u5904\u7406\uff1a 1 2 3 4 5 6 File file = new File ( \"my.txt\" ); try { file . createNewFile (); } catch ( IOException e ) { //\u6355\u83b7\u58f0\u660e\u7684\u5f02\u5e38\u7c7b\u578b e . printStackTrace (); } \u53ef\u4ee5\u6355\u83b7\u5230\u7c7b\u578b\u4e0d\u6b62\u662f Exception \u7684\u5b50\u7c7b\uff0c\u53ea\u8981\u662f\u7ee7\u627f\u81ea Throwalbe \u7684\u7c7b\uff0c\u90fd\u80fd\u88ab\u6355\u83b7\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c Error \u4e5f\u80fd\u88ab\u6355\u83b7\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u9519\u8bef\u4e00\u822c\u662f\u865a\u62df\u673a\u76f8\u5173\u7684\u95ee\u9898\uff0c\u51fa\u73b0 Error \u5e94\u8be5\u4ece\u95ee\u9898\u7684\u6839\u6e90\u53bb\u89e3\u51b3\u3002","title":"\u5f02\u5e38\u7684\u5904\u7406"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_6","text":"\u5f53\u522b\u4eba\u8c03\u7528\u6211\u4eec\u7684\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u4f20\u5165\u4e86\u9519\u8bef\u7684\u53c2\u6570\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u624b\u52a8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u6765\u7ec8\u6b62\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\uff0c\u540c\u65f6\u544a\u77e5\u4e0a\u4e00\u7ea7\u65b9\u6cd5\u6267\u884c\u51fa\u73b0\u4e86\u95ee\u9898\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try { test ( 1 , 0 ); } catch ( Exception e ) { //\u6355\u83b7\u65b9\u6cd5\u4e2d\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38 e . printStackTrace (); } } private static int test ( int a , int b ) throws Exception { //\u58f0\u660e\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b if ( b == 0 ) throw new Exception ( \"0\u4e0d\u80fd\u505a\u9664\u6570\uff01\" ); //\u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\u5f02\u5e38 return a / b ; //\u629b\u51fa\u5f02\u5e38\u4f1a\u7ec8\u6b62\u4ee3\u7801\u8fd0\u884c } \u901a\u8fc7 throw \u5173\u952e\u5b57\u629b\u51fa\u5f02\u5e38\uff08\u629b\u51fa\u5f02\u5e38\u540e\uff0c\u540e\u9762\u7684\u4ee3\u7801\u4e0d\u518d\u6267\u884c\uff09\u5f53\u7a0b\u5e8f\u8fd0\u884c\u5230\u8fd9\u4e00\u884c\u65f6\uff0c\u5c31\u4f1a\u7ec8\u6b62\u6267\u884c\uff0c\u5e76\u51fa\u73b0\u4e00\u4e2a\u5f02\u5e38\u3002 \u5982\u679c\u65b9\u6cd5\u4e2d\u629b\u51fa\u4e86\u975e\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u4f46\u662f\u4e0d\u5e0c\u671b\u5728\u6b64\u65b9\u6cd5\u5185\u5904\u7406\uff0c\u800c\u662f\u4ea4\u7ed9\u8c03\u7528\u8005\u6765\u5904\u7406\u5f02\u5e38\uff0c\u5c31\u9700\u8981\u5728\u65b9\u6cd5\u5b9a\u4e49\u540e\u9762\u663e\u5f0f\u58f0\u660e\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff01\u5982\u679c\u629b\u51fa\u7684\u662f\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u5219\u4e0d\u9700\u8981\u5728\u65b9\u6cd5\u540e\u9762\u58f0\u660e\u5f02\u5e38\u7c7b\u578b\uff0c\u8c03\u7528\u65f6\u4e5f\u65e0\u9700\u6355\u83b7\uff0c\u4f46\u662f\u51fa\u73b0\u5f02\u5e38\u65f6\u540c\u6837\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\uff08\u51fa\u73b0\u8fd0\u884c\u65f6\u5f02\u5e38\u540c\u65f6\u672a\u88ab\u6355\u83b7\u4f1a\u9ed8\u8ba4\u4ea4\u7ed9JVM\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5e8f\u5e76\u5728\u63a7\u5236\u53f0\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff09 \u5982\u679c\u60f3\u8981\u8c03\u7528\u58f0\u660e\u7f16\u8bd1\u65f6\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4f9d\u7136\u4e0d\u60f3\u53bb\u5904\u7406\uff0c\u53ef\u4ee5\u540c\u6837\u7684\u5728\u65b9\u6cd5\u4e0a\u58f0\u660e throws \u6765\u7ee7\u7eed\u4ea4\u7ed9\u4e0a\u4e00\u7ea7\u5904\u7406\u3002 1 2 3 4 5 6 7 8 public static void main ( String [] args ) throws Exception { //\u51fa\u73b0\u5f02\u5e38\u5c31\u518d\u5f80\u4e0a\u629b\uff0c\u800c\u4e0d\u662f\u5728\u6b64\u65b9\u6cd5\u5185\u5904\u7406 test ( 1 , 0 ); } private static int test ( int a , int b ) throws Exception { //\u58f0\u660e\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b if ( b == 0 ) throw new Exception ( \"0\u4e0d\u80fd\u505a\u9664\u6570\uff01\" ); //\u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\u5f02\u5e38 return a / b ; } \u5f53main\u65b9\u6cd5\u90fd\u58f0\u660e\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u51fa\u73b0\u5f02\u5e38\u5c31\u7531JVM\u8fdb\u884c\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u5f0f\uff08\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5e8f\u5e76\u5728\u63a7\u5236\u53f0\u6253\u5370\u6808\u8ffd\u8e2a\u4fe1\u606f\uff09 \u5f02\u5e38\u53ea\u80fd\u88ab\u6355\u83b7\u4e00\u6b21\uff0c\u5f53\u5f02\u5e38\u6355\u83b7\u51fa\u73b0\u5d4c\u5957\u65f6\uff0c\u53ea\u4f1a\u5728\u6700\u5185\u5c42\u88ab\u6355\u83b7\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main ( String [] args ) throws Exception { try { test ( 1 , 0 ); } catch ( Exception e ){ System . out . println ( \"\u5916\u5c42\" ); } } private static int test ( int a , int b ){ try { if ( b == 0 ) throw new Exception ( \"0\u4e0d\u80fd\u505a\u9664\u6570\uff01\" ); } catch ( Exception e ){ System . out . println ( \"\u5185\u5c42\" ); return 0 ; } return a / b ; }","title":"\u5f02\u5e38\u7684\u629b\u51fa"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#_7","text":"JDK\u4e3a\u6211\u4eec\u5df2\u7ecf\u63d0\u524d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5f02\u5e38\u4e86\uff0c\u4f46\u662f\u53ef\u80fd\u5bf9\u6211\u4eec\u6765\u8bf4\u4e0d\u591f\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u5f02\u5e38\uff1a 1 2 3 4 5 6 7 public class MyException extends Exception { //\u76f4\u63a5\u7ee7\u627f\u5373\u53ef } public static void main ( String [] args ) throws MyException { throw new MyException (); //\u76f4\u63a5\u4f7f\u7528 } \u4e5f\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u7684\u5e26\u63cf\u8ff0\u7684\u6784\u9020\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 public class MyException extends Exception { public MyException ( String message ){ super ( message ); } } public static void main ( String [] args ) throws MyException { throw new MyException ( \"\u51fa\u73b0\u4e86\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\" ); } \u6355\u83b7\u5f02\u5e38\u6307\u5b9a\u7684\u7c7b\u578b\uff0c\u4f1a\u6355\u83b7\u5176\u6240\u6709\u5b50\u5f02\u5e38\u7c7b\u578b\uff1a 1 2 3 4 5 try { throw new MyException ( \"\u51fa\u73b0\u4e86\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\" ); } catch ( Exception e ) { //\u6355\u83b7\u7236\u5f02\u5e38\u7c7b\u578b System . out . println ( \"\u6355\u83b7\u5230\u5f02\u5e38\" ); }","title":"\u81ea\u5b9a\u4e49\u5f02\u5e38"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/#finally","text":"\u5f53\u4ee3\u7801\u53ef\u80fd\u51fa\u73b0\u591a\u79cd\u7c7b\u578b\u7684\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5206\u4e0d\u540c\u60c5\u51b5\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u591a\u91cd\u5f02\u5e38\u6355\u83b7\uff1a 1 2 3 4 5 6 7 8 9 try { //.... } catch ( NullPointerException e ) { } catch ( IndexOutOfBoundsException e ){ } catch ( RuntimeException e ){ } \u6ce8\u610f\uff0c\u7c7b\u4f3c\u4e8e if-else if \u7684\u7ed3\u6784\uff0c\u7236\u5f02\u5e38\u7c7b\u578b\u53ea\u80fd\u653e\u5728\u6700\u540e\uff01 1 2 3 4 5 6 7 8 9 try { //.... } catch ( RuntimeException e ){ //\u7236\u7c7b\u578b\u5728\u524d\uff0c\u4f1a\u5c06\u5b50\u7c7b\u7684\u4e5f\u6355\u83b7 } catch ( NullPointerException e ) { //\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u88ab\u6355\u83b7 } catch ( IndexOutOfBoundsException e ){ //\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u88ab\u6355\u83b7 } \u5982\u679c\u5e0c\u671b\u628a\u8fd9\u4e9b\u5f02\u5e38\u653e\u5728\u4e00\u8d77\u8fdb\u884c\u5904\u7406\uff1a 1 2 3 4 5 try { //.... } catch ( NullPointerException | IndexOutOfBoundsException e ) { //\u7528|\u9694\u5f00\u6bcf\u79cd\u7c7b\u578b\u5373\u53ef } \u5f53\u6211\u4eec\u5e0c\u671b\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u65e0\u8bba\u662f\u5426\u51fa\u73b0\u5f02\u5e38\uff0c\u90fd\u4f1a\u5728\u6700\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53ef\u4ee5\u4ea4\u7ed9 finally \u8bed\u53e5\u5757\u6765\u5904\u7406\uff1a 1 2 3 4 5 6 7 try { //.... } catch ( Exception e ){ } finally { System . out . println ( \"lbwnb\" ); //\u65e0\u8bba\u662f\u5426\u51fa\u73b0\u5f02\u5e38\uff0c\u90fd\u4f1a\u5728\u6700\u540e\u6267\u884c } try \u8bed\u53e5\u5757\u81f3\u5c11\u8981\u914d\u5408 catch \u6216 finally \u4e2d\u7684\u4e00\u4e2a\uff1a 1 2 3 4 5 6 try { int a = 10 ; a /= 0 ; } finally { //\u4e0d\u6355\u83b7\u5f02\u5e38\uff0c\u7a0b\u5e8f\u4f1a\u7ec8\u6b62\uff0c\u4f46\u5728\u6700\u540e\u4f9d\u7136\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u5185\u5bb9 System . out . println ( \"lbwnb\" ); } \u601d\u8003\uff1a try \u3001 catch \u548c finally \u6267\u884c\u987a\u5e8f\uff1a 1 2 3 4 5 6 7 8 9 private static int test ( int a ){ try { return a ; } catch ( Exception e ){ return 0 ; } finally { a = a + 1 ; } }","title":"\u591a\u91cd\u5f02\u5e38\u6355\u83b7\u548cfinally\u5173\u952e\u5b57"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/","text":"Java\u5bf9\u8c61\u548c\u591a\u6001 \uff08\u9762\u5411\u5bf9\u8c61\uff09 \u9762\u5411\u5bf9\u8c61\u57fa\u7840 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1(Object Oriented Programming) \u5bf9\u8c61\u57fa\u4e8e\u7c7b\u521b\u5efa\uff0c\u7c7b\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6a21\u677f\uff0c\u5bf9\u8c61\u5c31\u662f\u6839\u636e\u6a21\u677f\u521b\u5efa\u51fa\u6765\u7684\u5b9e\u4f53\uff08\u5c31\u50cf\u505a\u6708\u997c\uff0c\u6211\u4eec\u8981\u505a\u4e00\u4e2a\u6708\u997c\u9996\u5148\u9700\u8981\u4e00\u4e2a\u6a21\u5177\uff0c\u6a21\u5177\u5c31\u662f\u6211\u4eec\u7684\u7c7b\uff0c\u800c\u505a\u51fa\u6765\u7684\u6708\u997c\uff0c\u5c31\u662f\u7c7b\u7684\u5b9e\u73b0\uff0c\u4e5f\u53eb\u505a\u5bf9\u8c61\uff09\uff0c\u7c7b\u662f\u62bd\u8c61\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u4e0d\u80fd\u4ee3\u8868\u67d0\u4e00\u4e2a\u5177\u4f53\u7684\u4e8b\u7269\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u4e00\u4e2a\u6a21\u677f\u3002\u7c7b\u5177\u6709\u81ea\u5df1\u7684\u5c5e\u6027\uff0c\u5305\u62ec\u6210\u5458\u53d8\u91cf\u3001\u6210\u5458\u65b9\u6cd5\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u6765\u8ba9\u7c7b\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002 1 2 3 4 Scanner sc = new Scanner ( System . in ); String str = sc . nextLine (); System . out . println ( \"\u4f60\u8f93\u5165\u4e86\uff1a\" + str ); sc . close (); \u6240\u6709\u7684\u5bf9\u8c61\uff0c\u90fd\u9700\u8981\u901a\u8fc7 new \u5173\u952e\u5b57\u521b\u5efa\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u5bf9\u8c61\uff01Java\u4e0d\u662f\u7eaf\u9762\u5bf9\u5bf9\u8c61\u8bed\u8a00\uff01 \u4e0d\u662f\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u90fd\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u4ee3\u8868\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53d8\u91cf\uff0c\u4fdd\u5b58\u7684\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u6765\u5bf9\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\uff08\u6700\u597d\u4e0d\u8981\u7406\u89e3\u4e3a\u5f15\u7528\u6307\u5411\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u521d\u5b66\u8005\u4e0d\u8981\u8c08\u5185\u5b58\uff0c\u5b66\u5230JVM\u65f6\u518d\u6765\u8ba8\u8bba\uff09 \u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u7531JVM\u7edf\u4e00\u7ba1\u7406\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u518d\u4f7f\u7528\u65f6\uff08\u6bd4\u5982\u5931\u53bb\u5f15\u7528\u6216\u662f\u79bb\u5f00\u4e86\u4f5c\u7528\u57df\uff09\u4f1a\u88abJVM\u81ea\u52a8\u6e05\u7406\uff0c\u5185\u5b58\u7ba1\u7406\u66f4\u65b9\u4fbf\uff01 \u7c7b\u7684\u57fa\u672c\u7ed3\u6784 \u4e3a\u4e86\u5feb\u901f\u638c\u63e1\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u7c7b\uff0c\u521b\u5efa\u7684\u7c7b\u6587\u4ef6\u540d\u79f0\u5e94\u8be5\u548c\u7c7b\u540d\u4e00\u81f4\u3002 \u6210\u5458\u53d8\u91cf \u5728\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u5305\u542b\u8bb8\u591a\u7684\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u53eb\u6210\u5458\u5c5e\u6027\uff0c\u6210\u5458\u5b57\u6bb5(field)\u901a\u8fc7 . \u6765\u8bbf\u95ee\u6211\u4eec\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u8bbf\u95ee\u548c\u4fee\u6539\u8fd9\u4e9b\u53d8\u91cf\u3002\u6210\u5458\u53d8\u91cf\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff01 1 2 3 4 5 6 7 8 9 10 public class Test { int age ; String name ; } public static void main ( String [] args ) { Test test = new Test (); test . name = \"\u5965\u5229\u7ed9\" ; System . out . println ( test . name ); } \u6210\u5458\u53d8\u91cf\u9ed8\u8ba4\u5e26\u6709\u521d\u59cb\u503c\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u521d\u59cb\u503c\u3002 \u6210\u5458\u65b9\u6cd5 \u6211\u4eec\u4e4b\u524d\u7684\u5b66\u4e60\u4e2d\u63a5\u89e6\u8fc7\u65b9\u6cd5(Method)\u5417\uff1f\u4e3b\u65b9\u6cd5\uff01 1 2 3 public static void main ( String [] args ) { //Body } \u65b9\u6cd5\u662f\u8bed\u53e5\u7684\u96c6\u5408\uff0c\u662f\u4e3a\u4e86\u5b8c\u6210\u67d0\u4ef6\u4e8b\u60c5\u800c\u5b58\u5728\u7684\u3002\u5b8c\u6210\u67d0\u4ef6\u4e8b\u60c5\uff0c\u53ef\u4ee5\u6709\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u505a\u4e86\u5c31\u505a\u4e86\uff0c\u4e0d\u8fd4\u56de\u7ed3\u679c\u3002\u6bd4\u5982\u8ba1\u7b97\u4e24\u4e2a\u6570\u5b57\u7684\u548c\uff0c\u6211\u4eec\u9700\u8981\u5f97\u5230\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u8bf4\u65b9\u6cd5\u9700\u8981\u6709\u8fd4\u56de\u503c\uff1b\u53c8\u6bd4\u5982\uff0c\u6211\u4eec\u53ea\u60f3\u5427\u6570\u5b57\u6253\u5370\u5728\u63a7\u5236\u53f0\uff0c\u53ea\u9700\u8981\u6253\u5370\u5c31\u884c\uff0c\u4e0d\u7528\u7ed9\u6211\u7ed3\u679c\uff0c\u6240\u4ee5\u8bf4\u65b9\u6cd5\u4e0d\u9700\u8981\u6709\u8fd4\u56de\u503c\u3002 \u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 \u5728\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 3 4 [ \u8fd4\u56de\u503c\u7c7b\u578b ] \u65b9\u6cd5\u540d\u79f0 ( [ \u53c2\u6570 ] ){ //\u65b9\u6cd5\u4f53 return \u7ed3\u679c ; } \u8fd4\u56de\u503c\u7c7b\u578b\uff1a\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u662fvoid\uff0c\u8868\u793a\u6ca1\u6709\u8fd4\u56de\u503c \u65b9\u6cd5\u540d\u79f0\uff1a\u548c\u6807\u8bc6\u7b26\u7684\u89c4\u5219\u4e00\u81f4\uff0c\u548c\u53d8\u91cf\u4e00\u6837\uff0c\u89c4\u8303\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff01 \u53c2\u6570\uff1a\u4f8b\u5982\u65b9\u6cd5\u9700\u8981\u8ba1\u7b97\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u628a\u4e24\u4e2a\u6570\u5230\u5e95\u662f\u4ec0\u4e48\u544a\u8bc9\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u65b9\u6cd5 \u65b9\u6cd5\u4f53\uff1a\u65b9\u6cd5\u5177\u4f53\u8981\u5e72\u7684\u4e8b\u60c5 \u7ed3\u679c\uff1a\u65b9\u6cd5\u6267\u884c\u7684\u7ed3\u679c\u901a\u8fc7return\u8fd4\u56de\uff08\u5982\u679c\u8fd4\u56de\u7c7b\u578b\u4e3avoid\uff0c\u53ef\u4ee5\u7701\u7565return\uff09 \u975evoid\u65b9\u6cd5\u4e2d\uff0c return \u5173\u952e\u5b57\u4e0d\u4e00\u5b9a\u9700\u8981\u653e\u5728\u6700\u540e\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u4fdd\u8bc1\u65b9\u6cd5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u5177\u6709\u8fd4\u56de\u503c\uff01 1 2 3 4 5 6 7 int test ( int a ){ if ( a > 0 ){ //\u7f3a\u5c11retrun\u8bed\u53e5\uff01 } else { return 0 ; } } return \u4e5f\u80fd\u7528\u6765\u63d0\u524d\u7ed3\u675f\u6574\u4e2a\u65b9\u6cd5\uff0c\u65e0\u8bba\u6b64\u65f6\u7a0b\u5e8f\u6267\u884c\u5230\u4f55\u5904\uff0c\u65e0\u8bbareturn\u4f4d\u4e8e\u54ea\u91cc\uff0c\u90fd\u4f1a\u7acb\u5373\u7ed3\u675f\u4e2a\u65b9\u6cd5\uff01 1 2 3 4 5 6 void main ( String [] args ) { for ( int i = 0 ; i < 10 ; i ++ ) { if ( i == 1 ) return ; //\u5728\u5faa\u73af\u5185\u8fd4\u56de\u4e86\uff01\u548cbreak\u533a\u522b\uff1f } System . out . println ( \"\u6de6\" ); //\u8fd8\u4f1a\u5230\u8fd9\u91cc\u5417\uff1f } \u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u679c\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f1a\u5728\u8c03\u7528\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5bf9\u53c2\u6570\u7684\u503c\u8fdb\u884c\u590d\u5236\uff0c\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u53d8\u91cf\uff0c\u4e0d\u662f\u6211\u4eec\u4f20\u5165\u7684\u53d8\u91cf\u672c\u8eab\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { int a = 10 , b = 20 ; new Test (). swap ( a , b ); System . out . println ( \"a=\" + a + \", b=\" + b ); } public class Test { void swap ( int a , int b ){ //\u4f20\u9012\u7684\u4ec5\u4ec5\u662f\u503c\u800c\u5df2\uff01 int temp = a ; a = b ; b = temp ; } } \u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u679c\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u90a3\u4e48\u4f20\u5165\u7684\u4f9d\u7136\u662f\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\uff01\uff08\u7c7b\u4f3c\u4e8eC\u8bed\u8a00\u7684\u6307\u9488\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class B { String name ; } public class A { void test ( B b ){ //\u4f20\u9012\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u503c System . out . println ( b . name ); } } public static void main ( String [] args ) { int a = 10 , b = 20 ; B b = new B (); b . name = \"lbw\" ; new A (). test ( b ); System . out . println ( \"a=\" + a + \", b=\" + b ); } \u65b9\u6cd5\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8c03\u7528 1 2 3 4 5 6 7 void a (){ //xxxx } void b (){ a (); } \u5f53\u65b9\u6cd5\u5728\u81ea\u5df1\u5185\u90e8\u8c03\u7528\u81ea\u5df1\u65f6\uff0c\u79f0\u4e3a\u9012\u5f52\u8c03\u7528\uff08\u9012\u5f52\u5f88\u5371\u9669\uff0c\u614e\u91cd\uff01\uff09 1 2 3 int a (){ return a (); } \u6210\u5458\u65b9\u6cd5\u548c\u6210\u5458\u53d8\u91cf\u4e00\u6837\uff0c\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u53ea\u80fd\u901a\u8fc7\u5bf9\u8c61\u53bb\u8c03\u7528\uff01 \u5bf9\u8c61\u8bbe\u8ba1\u7ec3\u4e60 \u5b66\u751f\u5e94\u8be5\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a\u540d\u5b57\u3001\u5e74\u9f84 \u5b66\u751f\u5e94\u8be5\u5177\u6709\u4ee5\u4e0b\u884c\u4e3a\uff1a\u5b66\u4e60\u3001\u8fd0\u52a8\u3001\u8bf4\u8bdd \u65b9\u6cd5\u7684\u91cd\u8f7d \u4e00\u4e2a\u7c7b\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u540c\u540d\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u9700\u8981\u7684\u5f62\u5f0f\u53c2\u6570\u4e0d\u4e00\u6837\u3002\uff08\u8865\u5145\uff1a\u5f62\u5f0f\u53c2\u6570\u5c31\u662f\u5b9a\u4e49\u65b9\u6cd5\u9700\u8981\u7684\u53c2\u6570\uff0c\u5b9e\u9645\u53c2\u6570\u5c31\u4f20\u5165\u7684\u53c2\u6570\uff09\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u53ef\u4ee5\u76f8\u540c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u540c\uff0c\u4f46\u662f\u4ec5\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\uff0c\u662f\u4e0d\u5141\u8bb8\u7684\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class Test { int a (){ //\u539f\u672c\u7684\u65b9\u6cd5 return 1 ; } int a ( int i ){ //ok\uff0c\u5f62\u53c2\u4e0d\u540c return i ; } void a ( byte i ){ //ok\uff0c\u8fd4\u56de\u7c7b\u578b\u548c\u5f62\u53c2\u90fd\u4e0d\u540c } void a (){ //\u9519\u8bef\uff0c\u4ec5\u8fd4\u56de\u503c\u7c7b\u578b\u540d\u79f0\u4e0d\u540c\u4e0d\u80fd\u91cd\u8f7d } } \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u4f46\u662f\u652f\u6301\u8c03\u7528\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u6267\u884c\u4e00\u6837\u7684\u903b\u8f91\uff1a 1 2 3 4 5 6 7 8 9 public class Test { int sum ( int a , int b ){ //\u53ea\u6709int\u652f\u6301\uff0c\u4e0d\u7075\u6d3b\uff01 return a + b ; } double sum ( double a , double b ){ //\u91cd\u5199\u4e00\u4e2adouble\u7c7b\u578b\u7684\uff0c\u5c31\u652f\u6301\u5c0f\u6570\u8ba1\u7b97\u4e86 return a + b ; } } \u73b0\u5728\u6211\u4eec\u6709\u5f88\u591a\u79cd\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4f20\u5165\u5b9e\u53c2\u540e\uff0c\u5230\u5e95\u8fdb\u4e86\u54ea\u4e2a\u65b9\u6cd5\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 public class Test { void a ( int i ){ System . out . println ( \"\u8c03\u7528\u4e86int\" ); } void a ( short i ){ System . out . println ( \"\u8c03\u7528\u4e86short\" ); } void a ( long i ){ System . out . println ( \"\u8c03\u7528\u4e86long\" ); } void a ( char i ){ System . out . println ( \"\u8c03\u7528\u4e86char\" ); } void a ( double i ){ System . out . println ( \"\u8c03\u7528\u4e86double\" ); } void a ( float i ){ System . out . println ( \"\u8c03\u7528\u4e86float\" ); } public static void main ( String [] args ) { Test test = new Test (); test . a ( 1 ); //\u76f4\u63a5\u8f93\u5165\u6574\u6570 test . a ( 1.0 ); //\u76f4\u63a5\u8f93\u5165\u5c0f\u6570 short s = 2 ; test . a ( s ); //\u4f1a\u5bf9\u53f7\u5165\u5ea7\u5417\uff1f test . a ( 1.0F ); } } \u6784\u9020\u65b9\u6cd5 \u6784\u9020\u65b9\u6cd5\uff08\u6784\u9020\u5668\uff09\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u8fd4\u56de\u7684\u662f\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff01\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u9ed8\u8ba4\u81ea\u5e26\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 //\u53cd\u7f16\u8bd1\u7ed3\u679c package com.test ; public class Test { public Test () { //\u5373\u4f7f\u4f60\u4ec0\u4e48\u90fd\u4e0d\u7f16\u5199\uff0c\u4e5f\u81ea\u5e26\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u53ea\u662f\u9ed8\u8ba4\u662f\u9690\u85cf\u7684 } } \u53cd\u7f16\u8bd1\u5176\u5b9e\u5c31\u662f\u628a\u6211\u4eec\u7f16\u8bd1\u597d\u7684class\u6587\u4ef6\u53d8\u56deJava\u6e90\u4ee3\u7801\u3002 1 2 Test test = new Test (); //\u5b9e\u9645\u4e0a\u5b58\u5728Test()\u8fd9\u4e2a\u7684\u65b9\u6cd5\uff0cnew\u5173\u952e\u5b57\u5c31\u662f\u7528\u6765\u521b\u5efa\u5e76\u5f97\u5230\u5f15\u7528\u7684 // new + \u4f60\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u5199\u660e\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u6bcf\u4e2a\u7c7b\u90fd\u5fc5\u987b\u5177\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff01\u53ea\u6709\u8c03\u7528\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u624d\u80fd\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff01 \u7c7b\u8981\u5728\u4e00\u5f00\u59cb\u51c6\u5907\u7684\u6240\u6709\u4e1c\u897f\uff0c\u90fd\u4f1a\u5728\u6784\u9020\u65b9\u6cd5\u91cc\u9762\u6267\u884c\uff0c\u5b8c\u6210\u6784\u9020\u65b9\u6cd5\u7684\u5185\u5bb9\u540e\uff0c\u624d\u80fd\u521b\u5efa\u51fa\u5bf9\u8c61\uff01 \u4e00\u822c\u6700\u5e38\u7528\u7684\u5c31\u662f\u7ed9\u6210\u5458\u5c5e\u6027\u8d4b\u521d\u59cb\u503c\uff1a 1 2 3 4 5 6 7 public class Student { String name ; Student (){ name = \"\u4f1e\u5175\u4e00\u53f7\" ; } } \u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u6709\u53c2\u6784\u9020\uff0c\u5f53\u9047\u5230\u540d\u79f0\u51b2\u7a81\u65f6\uff0c\u9700\u8981\u7528\u5230this\u5173\u952e\u5b57 1 2 3 4 5 6 7 8 9 public class Student { String name ; Student ( String name ){ //\u5f62\u53c2\u548c\u7c7b\u6210\u5458\u53d8\u91cf\u51b2\u7a81\u4e86\uff0cJava\u4f1a\u4f18\u5148\u4f7f\u7528\u5f62\u5f0f\u53c2\u6570\u5b9a\u4e49\u7684\u53d8\u91cf\uff01 this . name = name ; //\u901a\u8fc7this\u6307\u4ee3\u5f53\u524d\u7684\u5bf9\u8c61\u5c5e\u6027\uff0cthis\u5c31\u4ee3\u8868\u5f53\u524d\u5bf9\u8c61 } } //idea \u53f3\u952e\u5feb\u901f\u751f\u6210\uff01 \u6ce8\u610f\uff0cthis\u53ea\u80fd\u7528\u4e8e\u6307\u4ee3\u5f53\u524d\u5bf9\u8c61\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\uff0c\u53ea\u6709\u5c5e\u4e8e\u5bf9\u8c61\u62e5\u6709\u7684\u90e8\u5206\u624d\u53ef\u4ee5\u4f7f\u7528this\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u80fd\u5728\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u4e2d\u4f7f\u7528this\uff0c\u4e0d\u80fd\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4f7f\u7528this\u5173\u952e\u5b57\u3002 \u5728\u6211\u4eec\u5b9a\u4e49\u4e86\u65b0\u7684\u6709\u53c2\u6784\u9020\u4e4b\u540e\uff0c\u9ed8\u8ba4\u7684\u65e0\u53c2\u6784\u9020\u4f1a\u88ab\u8986\u76d6\uff01 1 //\u53cd\u7f16\u8bd1\u540e\u4f9d\u7136\u53ea\u6709\u6211\u4eec\u5b9a\u4e49\u7684\u6709\u53c2\u6784\u9020\uff01 \u5982\u679c\u540c\u65f6\u9700\u8981\u6709\u53c2\u548c\u65e0\u53c2\u6784\u9020\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u7528\u5230\u65b9\u6cd5\u7684\u91cd\u8f7d\uff01\u624b\u52a8\u518d\u53bb\u5b9a\u4e49\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u3002 1 2 3 4 5 6 7 8 9 10 11 public class Student { String name ; Student (){ } Student ( String name ){ this . name = name ; } } \u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u59cb\u7ec8\u5728\u6784\u9020\u65b9\u6cd5\u6267\u884c\u4e4b\u524d 1 2 3 4 5 6 7 8 9 10 11 public class Student { String a = \"sadasa\" ; Student (){ System . out . println ( a ); } public static void main ( String [] args ) { Student s = new Student (); } } \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5 \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u662f\u7c7b\u5177\u6709\u7684\u5c5e\u6027\uff08\u540e\u9762\u8fd8\u4f1a\u63d0\u5230\u9759\u6001\u7c7b\u3001\u9759\u6001\u4ee3\u7801\u5757\uff09\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u5185\u5bb9\u3002\u6211\u4eec\u901a\u8fc7\u4f7f\u7528 static \u5173\u952e\u5b57\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u6216\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u9759\u6001\u7684\uff0c\u4e00\u65e6\u88ab\u58f0\u660e\u4e3a\u9759\u6001\uff0c\u90a3\u4e48\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u521b\u5efa\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u64cd\u4f5c\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u76ee\u6807\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u8c61\u518d\u591a\uff0c\u4e5f\u53ea\u6709\u8fd9\u4e00\u4e2a\u9759\u6001\u7684\u53d8\u91cf\u6216\u65b9\u6cd5\u3002\u90a3\u4e48\uff0c\u4e00\u4e2a\u5bf9\u8c61\u6539\u53d8\u4e86\u9759\u6001\u53d8\u91cf\u7684\u503c\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u5bf9\u8c61\u8bfb\u53d6\u7684\u5c31\u662f\u88ab\u6539\u53d8\u7684\u503c\u3002 1 2 3 4 5 6 7 8 9 10 public class Student { static int a ; } public static void main ( String [] args ) { Student s1 = new Student (); s1 . a = 10 ; Student s2 = new Student (); System . out . println ( s2 . a ); } \u4e0d\u63a8\u8350\u4f7f\u7528\u5bf9\u8c61\u6765\u8c03\u7528\uff0c\u88ab\u6807\u8bb0\u4e3a\u9759\u6001\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 \u7c7b\u540d.xxx \u7684\u5f62\u5f0f\u8bbf\u95ee 1 2 3 4 public static void main ( String [] args ) { Student . a = 10 ; System . out . println ( Student . a ); } \u7b80\u8ff0\u7c7b\u52a0\u8f7d\u673a\u5236 \u7c7b\u5e76\u4e0d\u662f\u5728\u4e00\u5f00\u59cb\u5c31\u5168\u90e8\u52a0\u8f7d\u597d\uff0c\u800c\u662f\u5728\u9700\u8981\u65f6\u624d\u4f1a\u53bb\u52a0\u8f7d\uff08\u63d0\u5347\u901f\u5ea6\uff09\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u52a0\u8f7d\u7c7b\uff1a \u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf\uff0c\u6216\u8005\u4e3a\u9759\u6001\u53d8\u91cf\u8d4b\u503c new \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\uff08\u9690\u5f0f\u52a0\u8f7d\uff09 \u8c03\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5 \u5b50\u7c7b\u521d\u59cb\u5316\u65f6 \u5176\u4ed6\u7684\u60c5\u51b5\u4f1a\u5728\u8bb2\u5230\u53cd\u5c04\u65f6\u4ecb\u7ecd \u6240\u6709\u88ab\u6807\u8bb0\u4e3a\u9759\u6001\u7684\u5185\u5bb9\uff0c\u4f1a\u5728\u7c7b\u521a\u52a0\u8f7d\u7684\u65f6\u5019\u5c31\u5206\u914d\uff0c\u800c\u4e0d\u662f\u5728\u5bf9\u8c61\u521b\u5efa\u7684\u65f6\u5019\u5206\u914d\uff0c\u6240\u4ee5\u8bf4\u9759\u6001\u5185\u5bb9\u4e00\u5b9a\u4f1a\u5728\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u521d\u59cb\u5316\u4e4b\u524d\u5b8c\u6210\u52a0\u8f7d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 public class Student { static int a = test (); //\u76f4\u63a5\u8c03\u7528\u9759\u6001\u65b9\u6cd5\uff0c\u53ea\u80fd\u8c03\u7528\u9759\u6001\u65b9\u6cd5 Student (){ System . out . println ( \"\u6784\u9020\u7c7b\u5bf9\u8c61\" ); } static int test (){ //\u9759\u6001\u65b9\u6cd5\u521a\u52a0\u8f7d\u65f6\u5c31\u6709\u4e86 System . out . println ( \"\u521d\u59cb\u5316\u53d8\u91cfa\" ); return 1 ; } } \u601d\u8003\uff1a\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u80fd\u6b63\u5e38\u8fd0\u884c\u5417\uff1f\u5982\u679c\u80fd\uff0c\u4f1a\u8f93\u51fa\u4ec0\u4e48\u5185\u5bb9\uff1f 1 2 3 4 5 6 7 8 9 10 11 public class Student { static int a = test (); static int test (){ return a ; } public static void main ( String [] args ) { System . out . println ( Student . a ); } } \u5b9a\u4e49\u548c\u8d4b\u503c\u662f\u4e24\u4e2a\u9636\u6bb5\uff0c\u5728\u5b9a\u4e49\u65f6\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\uff08\u4e0a\u9762\u8bb2\u7684\uff0c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4f1a\u6709\u9ed8\u8ba4\u503c\uff09\u5b9a\u4e49\u51fa\u6765\u4e4b\u540e\uff0c\u5982\u679c\u53d1\u73b0\u6709\u8d4b\u503c\u8bed\u53e5\uff0c\u518d\u8fdb\u884c\u8d4b\u503c\uff0c\u800c\u8fd9\u65f6\uff0c\u8c03\u7528\u4e86\u9759\u6001\u65b9\u6cd5\uff0c\u6240\u4ee5\u8bf4\u4f1a\u5148\u53bb\u52a0\u8f7d\u9759\u6001\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u8c03\u7528\u65f6\u62ff\u5230a\uff0c\u800ca\u8fd9\u65f6\u4ec5\u4ec5\u662f\u521a\u5b9a\u4e49\uff0c\u6240\u4ee5\u8bf4\u8fd8\u662f\u521d\u59cb\u503c\uff0c\u6700\u540e\u5f97\u52300 \u4ee3\u7801\u5757\u548c\u9759\u6001\u4ee3\u7801\u5757 \u4ee3\u7801\u5757\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u6267\u884c\uff0c\u4e5f\u662f\u5c5e\u4e8e\u7c7b\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u5b83\u5728\u6784\u9020\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff08\u548c\u6210\u5458\u53d8\u91cf\u521d\u59cb\u503c\u4e00\u6837\uff09\uff0c\u4e14\u6bcf\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53ea\u6267\u884c\u4e00\u6b21\uff01\uff08\u76f8\u5f53\u4e8e\u6784\u9020\u4e4b\u524d\u7684\u51c6\u5907\u5de5\u4f5c\uff09 1 2 3 4 5 6 7 8 9 public class Student { { System . out . println ( \"\u6211\u662f\u4ee3\u7801\u5757\" ); } Student (){ System . out . println ( \"\u6211\u662f\u6784\u9020\u65b9\u6cd5\" ); } } \u9759\u6001\u4ee3\u7801\u5757\u548c\u4e0a\u9762\u7684\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u53d8\u91cf\u4e00\u6837\uff0c\u5728\u7c7b\u521a\u52a0\u8f7d\u65f6\u5c31\u4f1a\u8c03\u7528\uff1b 1 2 3 4 5 6 7 8 9 10 11 public class Student { static int a ; static { a = 10 ; } public static void main ( String [] args ) { System . out . println ( Student . a ); } } String\u548cStringBuilder\u7c7b \u5b57\u7b26\u4e32\u7c7b\u662f\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u7684\u7c7b\uff0c\u4ed6\u662fJava\u4e2d\u552f\u4e00\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u7c7b\uff01(Java\u4e0d\u652f\u6301\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0cString\u662f\u7279\u4f8b) String\u7684\u5bf9\u8c61\u76f4\u63a5\u652f\u6301\u4f7f\u7528 + \u6216 += \u8fd0\u7b97\u7b26\u6765\u8fdb\u884c\u62fc\u63a5\uff0c\u5e76\u5f62\u6210\u65b0\u7684String\u5bf9\u8c61\uff01\uff08String\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff01\uff09 1 2 3 String a = \"dasdsa\" , b = \"dasdasdsa\" ; String l = a + b ; System . out . println ( l ); \u5927\u91cf\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u4f3c\u4e4e\u4e0d\u592a\u597d\uff0c\u7f16\u8bd1\u5668\u662f\u5f88\u806a\u660e\u7684\uff0cString\u7684\u62fc\u63a5\u6709\u53ef\u80fd\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u4e3aStringBuilder\u6765\u51cf\u5c11\u5bf9\u8c61\u521b\u5efa\uff08\u5bf9\u8c61\u9891\u7e41\u521b\u5efa\u65f6\u5f88\u8d39\u65f6\u95f4\u540c\u65f6\u5360\u5185\u5b58\u7684\uff01\uff09 1 String result = \"String\" + \"and\" ; //\u4f1a\u88ab\u4f18\u5316\u6210\u4e00\u53e5\uff01 1 2 3 4 String str1 = \"String\" ; String str2 = \"and\" ; String result = str1 + str2 ; //\u53d8\u91cf\u968f\u65f6\u53ef\u53d8\uff0c\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u5b9aresult\u7684\u503c\uff0c\u90a3\u4e48\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u518d\u53bb\u786e\u5b9a 1 2 3 4 String str1 = \"String\" ; String str2 = \"and\" ; String result = ( new StringBuilder ( String . valueOf ( str1 ))). append ( str2 ). toString (); //\u4f7f\u7528StringBuilder\uff0c\u4f1a\u91c7\u7528\u7c7b\u4f3c\u4e8e\u7b2c\u4e00\u79cd\u5b9e\u73b0\uff0c\u663e\u7136\u4f1a\u66f4\u5feb\uff01 StringBuilder\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u5b83\u80fd\u591f\u5b58\u50a8\u53ef\u53d8\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff01 1 2 3 4 5 6 7 StringBuilder builder = new StringBuilder (); builder . append ( \"a\" ) . append ( \"bc\" ) . append ( \"d\" ); //\u94fe\u5f0f\u8c03\u7528 String str = builder . toString (); System . out . println ( str ); \u5305\u548c\u8bbf\u95ee\u63a7\u5236 \u5305\u58f0\u660e\u548c\u5bfc\u5165 \u5305\u5176\u5b9e\u5c31\u662f\u7528\u6765\u533a\u5206\u7c7b\u4f4d\u7f6e\u7684\u4e1c\u897f\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u5c06\u6211\u4eec\u7684\u7c7b\u8fdb\u884c\u5206\u7c7b\uff0c\u7c7b\u4f3c\u4e8eC++\u4e2d\u7684namespace\uff01 1 2 3 4 5 package com.test ; public class Test { } \u5305\u5176\u5b9e\u662f\u6587\u4ef6\u5939\uff0c\u6bd4\u5982com.test\u5c31\u662f\u4e00\u4e2acom\u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2atest\u6587\u4ef6\u5939\uff0c\u518d\u5305\u542b\u6211\u4eecTest\u7c7b\u3002 \u4e00\u822c\u5305\u6309\u7167\u4e2a\u4eba\u6216\u662f\u516c\u53f8\u57df\u540d\u7684\u89c4\u5219\u5012\u8fc7\u6765\u5199 \u9876\u7ea7\u57df\u540d.\u4e00\u7ea7\u57df\u540d.\u4e8c\u7ea7\u57df\u540d com.java.xxxx \u5982\u679c\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u5305\u91cc\u9762\u7684\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981 import \uff08\u7c7b\u4f3c\u4e8eC/C++\u4e2d\u7684include\uff09 1 import com.test.Student ; \u4e5f\u53ef\u4ee5\u5bfc\u5165\u5305\u4e0b\u7684\u5168\u90e8\uff08\u4e00\u822c\u5bfc\u5165\u4f1a\u7531\u7f16\u8bd1\u5668\u81ea\u5e26\u5e2e\u6211\u4eec\u8865\u5168\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u8bb0\u5f97\u6211\u4eec\u9700\u8981\u5bfc\u5305\uff01\uff09 1 import com.test.* Java\u9ed8\u8ba4\u4e3a\u6211\u4eec\u5bfc\u5165\u4e86\u4ee5\u4e0b\u7684\u5305\uff0c\u4e0d\u9700\u8981\u53bb\u58f0\u660e 1 import java.lang.* \u9759\u6001\u5bfc\u5165 \u9759\u6001\u5bfc\u5165\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u67d0\u4e2a\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u6216\u8005\u662f\u9759\u6001\u53d8\u91cf\uff0c\u5bfc\u5165\u540e\uff0c\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u65b9\u6cd5\u6216\u662f\u7c7b\u5728\u5b9a\u4e49\u5728\u5f53\u524d\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8be5\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 import static com.test.ui.Student.test ; public class Main { public static void main ( String [] args ) { test (); } } \u9759\u6001\u5bfc\u5165\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u7684\u521d\u59cb\u5316\uff01 \u8bbf\u95ee\u63a7\u5236 Java\u652f\u6301\u5bf9\u7c7b\u5c5e\u6027\u8bbf\u95ee\u7684\u4fdd\u62a4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5e0c\u671b\u5916\u90e8\u7c7b\u8bbf\u95ee\u7c7b\u4e2d\u7684\u5c5e\u6027\u6216\u662f\u65b9\u6cd5\uff0c\u53ea\u5141\u8bb8\u5185\u90e8\u8c03\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u6743\u9650\u63a7\u5236\u7b26\u3002 \u6743\u9650\u63a7\u5236\u7b26\u53ef\u4ee5\u58f0\u660e\u5728\u65b9\u6cd5\u3001\u6210\u5458\u53d8\u91cf\u3001\u7c7b\u524d\u9762\uff0c\u4e00\u65e6\u58f0\u660eprivate\uff0c\u53ea\u80fd\u7c7b\u5185\u90e8\u8bbf\u95ee\uff01 1 2 3 4 5 6 7 8 public class Student { private int a = 10 ; //\u5177\u6709\u79c1\u6709\u8bbf\u95ee\u6743\u9650\uff0c\u53ea\u80fd\u7c7b\u5185\u90e8\u8bbf\u95ee } public static void main ( String [] args ) { Student s = new Student (); System . out . println ( s . a ); //\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u5417\uff1f } \u548c\u6587\u4ef6\u540d\u79f0\u76f8\u540c\u7684\u7c7b\uff0c\u53ea\u80fd\u662fpublic\uff0c\u5e76\u4e14\u4e00\u4e2ajava\u6587\u4ef6\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2apublic class\uff01 1 2 3 4 5 6 7 // Student.java public class Student { } class Test { //\u4e0d\u80fd\u6dfb\u52a0\u6743\u9650\u4fee\u9970\u7b26\uff01\u53ea\u80fd\u662fdefault } \u6570\u7ec4\u7c7b\u578b \u5047\u8bbe\u51fa\u73b0\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u60f3\u8bb0\u5f55100\u4e2a\u6570\u5b57\uff0c\u5b9a\u4e49100\u4e2a\u53d8\u91cf\u8fd8\u53ef\u884c\u5417\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5230\u6570\u7ec4\uff0c\u6570\u7ec4\u662f\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u6709\u5e8f\u96c6\u5408\u3002\u6570\u7ec4\u53ef\u4ee5\u4ee3\u8868\u4efb\u4f55\u76f8\u540c\u7c7b\u578b\u7684\u4e00\u7ec4\u5185\u5bb9\uff08\u5305\u62ec\u5f15\u7528\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\uff09\u5176\u4e2d\u5b58\u653e\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u79f0\u4e3a\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u6570\u7ec4\u7684\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u662f0\uff01 1 2 int [] arr = new int [ 10 ] ; //\u9700\u8981new\u5173\u952e\u5b57\u6765\u521b\u5efa\uff01 String [] arr2 = new String [ 10 ] ; \u6570\u7ec4\u672c\u8eab\u4e5f\u662f\u7c7b\uff08\u7f16\u7a0b\u4e0d\u53ef\u89c1\uff0cC++\u5199\u7684\uff09\uff0c\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff01 1 2 3 int [] arr = new int [ 10 ] ; System . out . println ( arr . length ); //\u6570\u7ec4\u6709\u6210\u5458\u53d8\u91cf\uff01 System . out . println ( arr . toString ()); //\u6570\u7ec4\u6709\u6210\u5458\u65b9\u6cd5\uff01 \u4e00\u7ef4\u6570\u7ec4 \u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5143\u7d20\u662f\u4f9d\u6b21\u6392\u5217\u7684\uff08\u7ebf\u6027\uff09\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u6765\u8bbf\u95ee\uff01\u58f0\u660e\u683c\u5f0f\u5982\u4e0b\uff1a ``` java \u7c7b\u578b[] \u53d8\u91cf\u540d\u79f0 = new \u7c7b\u578b[\u6570\u7ec4\u5927\u5c0f]; \u7c7b\u578b \u53d8\u91cf\u540d\u79f0n = new \u7c7b\u578b[\u6570\u7ec4\u5927\u5c0f]; //\u652f\u6301C\u8bed\u8a00\u6837\u5f0f\uff0c\u4f46\u4e0d\u63a8\u8350\uff01 \u7c7b\u578b[] \u53d8\u91cf\u540d\u79f0 = new \u7c7b\u578b[]{...}; //\u9759\u6001\u521d\u59cb\u5316\uff08\u76f4\u63a5\u6307\u5b9a\u503c\u548c\u5927\u5c0f\uff09 \u7c7b\u578b[] \u53d8\u91cf\u540d\u79f0 = {...}; //\u540c\u4e0a\uff0c\u4f46\u662f\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u8d4b\u503c 1 2 3 4 5 6 7 \u521b\u5efa\u51fa\u6765\u7684\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u9ed8\u8ba4\u503c\uff08\u89c4\u5219\u548c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4e00\u6837\uff0cC\u8bed\u8a00\u521b\u5efa\u7684\u6570\u7ec4\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u53bb\u8bbf\u95ee\uff1a ```java int[] arr = new int[10]; arr[0] = 626; System.out.println(arr[0]); System.out.println(arr[1]); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \u6570\u7ec4\u53d8\u91cf\u540d\u79f0.length \u6765\u83b7\u53d6\u5f53\u524d\u6570\u7ec4\u957f\u5ea6\uff1a 1 2 int [] arr = new int [] { 1 , 2 , 3 }; System . out . println ( arr . length ); //\u6253\u5370length\u6210\u5458\u53d8\u91cf\u7684\u503c \u6570\u7ec4\u5728\u521b\u5efa\u65f6\uff0c\u5c31\u56fa\u5b9a\u957f\u5ea6\uff0c\u4e0d\u53ef\u66f4\u6539\uff01\u8bbf\u95ee\u8d85\u51fa\u6570\u7ec4\u957f\u5ea6\u7684\u5185\u5bb9\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\uff01 1 2 3 4 5 String [] arr = new String [ 10 ] ; System . out . println ( arr [ 10 ] ); //\u51fa\u73b0\u5f02\u5e38\uff01 //Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 11 // at com.test.Application.main(Application.java:7) \u601d\u8003\uff1a\u80fd\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539length\u7684\u503c\u6765\u5b9e\u73b0\u52a8\u6001\u6269\u5bb9\u5462\uff1f 1 2 int [] arr = new int [] { 1 , 2 , 3 }; arr . length = 10 ; \u6570\u7ec4\u505a\u5b9e\u53c2\uff0c\u56e0\u4e3a\u6570\u7ec4\u4e5f\u662f\u7c7b\uff0c\u6240\u4ee5\u5f62\u53c2\u5f97\u5230\u7684\u662f\u6570\u7ec4\u7684\u5f15\u7528\u800c\u4e0d\u662f\u590d\u5236\u7684\u6570\u7ec4\uff0c\u64cd\u4f5c\u7684\u4f9d\u7136\u662f\u6570\u7ec4\u5bf9\u8c61\u672c\u8eab 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 }; test ( arr ); System . out . println ( arr [ 0 ] ); } private static void test ( int [] arr ){ arr [ 0 ] = 2934 ; } \u6570\u7ec4\u7684\u904d\u5386 \u5982\u679c\u6211\u4eec\u60f3\u8981\u5feb\u901f\u6253\u5370\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u53c8\u600e\u4e48\u529e\u5462\uff1f \u4f20\u7edffor\u5faa\u73af \u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u8054\u60f3\u5230for\u5faa\u73af 1 2 3 4 int [] arr = new int [] { 1 , 2 , 3 }; for ( int i = 0 ; i < arr . length ; i ++ ) { System . out . println ( arr [ i ] ); } foreach \u4f20\u7edffor\u5faa\u73af\u867d\u7136\u53ef\u63a7\u6027\u9ad8\uff0c\u4f46\u662f\u4e0d\u591f\u7701\u4e8b\uff0c\u8981\u5199\u4e00\u5927\u5806\u4e1c\u897f\uff0c\u6709\u6ca1\u6709\u4e00\u79cd\u7701\u4e8b\u7684\u5199\u6cd5\u5462\uff1f 1 2 3 4 int [] arr = new int [] { 1 , 2 , 3 }; for ( int i : arr ) { System . out . println ( i ); } foreach\u5c5e\u4e8e\u589e\u5f3a\u578b\u7684for\u5faa\u73af\uff0c\u5b83\u4f7f\u5f97\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u540c\u65f6\u6211\u4eec\u80fd\u76f4\u63a5\u62ff\u5230\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\u3002 \u4e8c\u7ef4\u6570\u7ec4 \u4e8c\u7ef4\u6570\u7ec4\u5176\u5b9e\u5c31\u662f\u5b58\u653e\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5b58\u653e\u4e00\u4e2a\u6570\u7ec4\u7684\u5f15\u7528\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u53d8\u6210\u4e86\u4e00\u4e2a\u5e73\u9762\u3002 1 2 3 4 5 //\u4e09\u884c\u4e24\u5217 int [][] arr = { { 1 , 2 }, { 3 , 4 }, { 5 , 6 }}; System . out . println ( arr [ 2 ][ 1 ] ); \u4e8c\u7ef4\u6570\u7ec4\u7684\u904d\u5386\u540c\u4e00\u7ef4\u6570\u7ec4\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u5d4c\u5957\u5faa\u73af\uff01 1 2 3 4 5 6 7 8 int [][] arr = new int [][] { { 1 , 2 }, { 3 , 4 }, { 5 , 6 }}; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 2 ; j ++ ) { System . out . println ( arr [ i ][ j ] ); } } \u591a\u7ef4\u6570\u7ec4 \u4e0d\u6b62\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8fd8\u5b58\u5728\u4e09\u7ef4\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u5b58\u653e\u6570\u7ec4\u7684\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u539f\u7406\u540c\u4e8c\u7ef4\u6570\u7ec4\u4e00\u6837\uff0c\u9010\u7ea7\u8bbf\u95ee\u5373\u53ef\u3002 \u53ef\u53d8\u957f\u53c2\u6570 \u53ef\u53d8\u957f\u53c2\u6570\u5176\u5b9e\u5c31\u662f\u6570\u7ec4\u7684\u4e00\u79cd\u5e94\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u65b9\u6cd5\u7684\u5f62\u53c2\u4e3a\u4e00\u4e2a\u53ef\u53d8\u957f\u53c2\u6570\uff0c\u8981\u6c42\u5b9e\u53c2\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u52a8\u6001\u586b\u51650\u4e2a\u6216\u591a\u4e2a\uff0c\u800c\u4e0d\u662f\u56fa\u5b9a\u7684\u6570\u91cf 1 2 3 4 5 6 7 public static void main ( String [] args ) { test ( \"AAA\" , \"BBB\" , \"CCC\" ); //\u53ef\u53d8\u957f\uff0c\u6700\u540e\u90fd\u4f1a\u88ab\u81ea\u52a8\u5c01\u88c5\u6210\u4e00\u4e2a\u6570\u7ec4 } private static void test ( String ... test ){ System . out . println ( test [ 0 ] ); //\u5176\u5b9e\u53c2\u6570\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4 } \u7531\u4e8e\u662f\u6570\u7ec4\uff0c\u6240\u4ee5\u8bf4\u53ea\u80fd\u4f7f\u7528\u4e00\u79cd\u7c7b\u578b\u7684\u53ef\u53d8\u957f\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u53d8\u957f\u53c2\u6570\u53ea\u80fd\u653e\u5728\u6700\u540e\u4e00\u4f4d\uff01 \u5b9e\u6218\uff1a\u4e09\u5927\u57fa\u672c\u6392\u5e8f\u7b97\u6cd5 \u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u7ec4\uff0c\u4f46\u662f\u6570\u7ec4\u91cc\u9762\u7684\u6570\u636e\u662f\u4e71\u5e8f\u6392\u5217\u7684\uff0c\u5982\u4f55\u4f7f\u5b83\u53d8\u5f97\u6709\u5e8f\uff1f 1 int [] arr = { 8 , 5 , 0 , 1 , 4 , 9 , 2 , 3 , 6 , 7 }; \u6392\u5e8f\u662f\u7f16\u7a0b\u7684\u4e00\u4e2a\u91cd\u8981\u6280\u80fd\uff0c\u638c\u63e1\u6392\u5e8f\u7b97\u6cd5\uff0c\u4f60\u7684\u6280\u672f\u624d\u80fd\u66f4\u4e0a\u4e00\u5c42\u697c\uff0c\u5f88\u591a\u7684\u9879\u76ee\u90fd\u9700\u8981\u7528\u5230\u6392\u5e8f\uff01\u4e09\u5927\u6392\u5e8f\u7b97\u6cd5\uff1a \u5192\u6ce1\u6392\u5e8f \u5192\u6ce1\u6392\u5e8f\u5c31\u662f\u5192\u6ce1\uff0c\u5176\u5b9e\u5c31\u662f\u4e0d\u65ad\u4f7f\u5f97\u6211\u4eec\u65e0\u5e8f\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u6570\u5411\u524d\u79fb\u52a8\uff0c\u7ecf\u5386n\u8f6e\u5faa\u73af\u9010\u6e10\u5c06\u6bcf\u4e00\u4e2a\u6570\u63a8\u5411\u6700\u524d\u3002 \u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6392\u5e8f\u5176\u5b9e\u5c31\u8ddf\u6211\u4eec\u6253\u724c\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u5728\u6478\u724c\u7684\u65f6\u5019\uff0c\u724c\u5806\u662f\u4e71\u5e8f\u7684\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u5f20\u4e00\u5f20\u6478\u5230\u624b\u4e2d\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97\u5b83\u53d8\u6210\u4e86\u6709\u5e8f\u7684\uff01 \u9009\u62e9\u6392\u5e8f \u9009\u62e9\u6392\u5e8f\u5176\u5b9e\u5c31\u662f\u6bcf\u6b21\u90fd\u9009\u62e9\u5f53\u524d\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u6392\u5230\u6700\u524d\u9762\uff01 \u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001 \u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\u3002 \u5c01\u88c5 \u5c01\u88c5\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u53d8\u91cf\u7684\u5b89\u5168\u6027\uff0c\u4f7f\u7528\u8005\u4e0d\u5fc5\u5728\u610f\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u53ea\u662f\u901a\u8fc7\u5916\u90e8\u63a5\u53e3\u5373\u53ef\u8bbf\u95ee\u7c7b\u7684\u6210\u5458\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u5c01\u88c5\uff0c\u7c7b\u4e2d\u7684\u5b9e\u4f8b\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u548c\u4fee\u6539\uff0c\u53ef\u80fd\u7ed9\u6574\u4e2a\u4ee3\u7801\u5e26\u6765\u4e0d\u597d\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u5728\u7f16\u5199\u7c7b\u65f6\u4e00\u822c\u5c06\u6210\u5458\u53d8\u91cf\u79c1\u6709\u5316\uff0c\u5916\u90e8\u7c7b\u9700\u8981\u540cgetter\u548csetter\u65b9\u6cd5\u6765\u67e5\u770b\u548c\u8bbe\u7f6e\u53d8\u91cf\u3002 \u8bbe\u60f3\uff1a\u5b66\u751f\u5c0f\u660e\u5df2\u7ecf\u521b\u5efa\u6210\u529f\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u80fd\u968f\u4fbf\u6539\u4ed6\u7684\u540d\u5b57\u548c\u5e74\u9f84\u5417\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class Student { private String name ; private int age ; public Student ( String name , int age ) { this . name = name ; this . age = age ; } public int getAge () { return age ; } public String getName () { return name ; } } \u4e5f\u5c31\u662f\u8bf4\uff0c\u5916\u90e8\u73b0\u5728\u53ea\u80fd\u901a\u8fc7\u8c03\u7528\u6211\u5b9a\u4e49\u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u6210\u5458\u5c5e\u6027\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5c0f\u660e\u53ef\u4ee5\u4fee\u6539\u540d\u5b57\uff0c\u4f46\u662f\u540d\u5b57\u4e2d\u4e0d\u80fd\u5305\u542b\"\u5c0f\"\u8fd9\u4e2a\u5b57\u3002 1 2 3 4 public void setName ( String name ) { if ( name . contains ( \"\u5c0f\" )) return ; this . name = name ; } \u5355\u72ec\u7ed9\u5916\u90e8\u5f00\u653e\u8bbe\u7f6e\u540d\u79f0\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u8fd8\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\uff0c\u6240\u4ee5\u8bf4\u4e0d\u80fd\u7ed9\u5916\u90e8\u76f4\u63a5\u64cd\u4f5c\u6210\u5458\u53d8\u91cf\u7684\u6743\u9650\uff01 \u5c01\u88c5\u601d\u60f3\u5176\u5b9e\u5c31\u662f\u628a\u5b9e\u73b0\u7ec6\u8282\u7ed9\u9690\u85cf\u4e86\uff0c\u5916\u90e8\u53ea\u9700\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4ec0\u4e48\u4f5c\u7528\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u5b9e\u73b0\u3002 \u5c01\u88c5\u5c31\u662f\u901a\u8fc7\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u6765\u5b9e\u73b0\u7684\u3002 \u7ee7\u627f \u7ee7\u627f\u5c5e\u4e8e\u975e\u5e38\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u5728\u5b9a\u4e49\u4e0d\u540c\u7c7b\u7684\u65f6\u5019\u5b58\u5728\u4e00\u4e9b\u76f8\u540c\u5c5e\u6027\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5171\u540c\u5c5e\u6027\u62bd\u8c61\u6210\u4e00\u4e2a\u7236\u7c7b\uff0c\u5728\u5b9a\u4e49\u5176\u4ed6\u5b50\u7c7b\u65f6\u53ef\u4ee5\u7ee7\u627f\u81ea\u8be5\u7236\u7c7b\uff0c\u51cf\u5c11\u4ee3\u7801\u7684\u91cd\u590d\u5b9a\u4e49\uff0c\u5b50\u7c7b\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u4e2d \u975e\u79c1\u6709 \u7684\u6210\u5458\u3002 \u73b0\u5728\u5b66\u751f\u5206\u4e3a\u4e24\u79cd\uff0c\u827a\u672f\u751f\u548c\u4f53\u80b2\u751f\uff0c\u4ed6\u4eec\u90fd\u662f\u5b66\u751f\u7684\u5206\u652f\uff0c\u4f46\u662f\u4ed6\u4eec\u90fd\u6709\u81ea\u5df1\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class SportsStudent extends Student { //\u901a\u8fc7extends\u5173\u952e\u5b57\u6765\u7ee7\u627f\u7236\u7c7b public SportsStudent ( String name , int age ) { super ( name , age ); //\u5fc5\u987b\u5148\u901a\u8fc7super\u5173\u952e\u5b57\uff08\u6307\u4ee3\u7236\u7c7b\uff09\uff0c\u5b9e\u73b0\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff01 } public void exercise (){ System . out . println ( \"\u6211\u8d85\u52c7\u7684\uff01\" ); } } public class ArtStudent extends Student { public ArtStudent ( String name , int age ) { super ( name , age ); } public void art (){ System . out . println ( \"\u968f\u624b\u753b\u4e2a\u6bd5\u52a0\u7d22\uff01\" ); } } \u5b50\u7c7b\u5177\u6709\u7236\u7c7b\u7684\u5168\u90e8\u5c5e\u6027\uff0cprotected\u53ef\u89c1\u4f46\u5916\u90e8\u65e0\u6cd5\u4f7f\u7528\uff08\u5305\u62ec private \u5c5e\u6027\uff0c\u4e0d\u53ef\u89c1\uff0c\u65e0\u6cd5\u4f7f\u7528\uff09\uff0c\u540c\u65f6\u5b50\u7c7b\u8fd8\u80fd\u6709\u81ea\u5df1\u7684\u65b9\u6cd5\u3002\u7ee7\u627f\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b\uff0c\u4e0d\u652f\u6301\u591a\u7ee7\u627f\uff01 \u6bcf\u4e00\u4e2a\u5b50\u7c7b\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2a\u5b9e\u73b0\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5728\u6784\u9020\u65b9\u6cd5\u5f00\u59cb\u4f7f\u7528 super() \uff0c\u5982\u679c\u7236\u7c7b\u4f7f\u7528\u7684\u662f\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b50\u7c7b\u4e0d\u7528\u624b\u52a8\u6307\u660e\u3002 \u6240\u6709\u7c7b\u90fd\u9ed8\u8ba4\u7ee7\u627f\u81eaObject\u7c7b\uff0c\u9664\u975e\u624b\u52a8\u6307\u5b9a\u7c7b\u578b\uff0c\u4f46\u662f\u4f9d\u7136\u6539\u53d8\u4e0d\u4e86\u6700\u9876\u5c42\u7684\u7236\u7c7b\u662fObject\u7c7b\u3002\u6240\u6709\u7c7b\u90fd\u5305\u542bObject\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { Object obj = new Object ; System . out . println ( obj . hashCode ()); //\u6c42\u5bf9\u8c61\u7684hashcode\uff0c\u9ed8\u8ba4\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740 System . out . println ( obj . equals ( obj )); //\u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u540c\uff0c\u9ed8\u8ba4\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u7b49\u540c\u4e8e == System . out . println ( obj . toString ()); //\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u751f\u6210\u5bf9\u8c61\u7684\u7c7b\u540d\u79f0+hashcode } \u5173\u4e8eObject\u7c7b\u7684\u5176\u4ed6\u65b9\u6cd5\uff0c\u6211\u4eec\u4f1a\u5728Java\u591a\u7ebf\u7a0b\u4e2d\u518d\u6765\u63d0\u53ca\u3002 \u591a\u6001 \u591a\u6001\u662f\u540c\u4e00\u4e2a\u884c\u4e3a\u5177\u6709\u591a\u4e2a\u4e0d\u540c\u8868\u73b0\u5f62\u5f0f\u6216\u5f62\u6001\u7684\u80fd\u529b\u3002\u4e5f\u5c31\u662f\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u7531\u4e8e\u5b9e\u73b0\u7c7b\u4e0d\u540c\uff0c\u6267\u884c\u7684\u7ed3\u679c\u4e5f\u4e0d\u540c\uff01 \u65b9\u6cd5\u7684\u91cd\u5199 \u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u4e86\u65b9\u6cd5\u7684\u91cd\u8f7d\uff0c\u65b9\u6cd5\u7684\u91cd\u5199\u548c\u91cd\u8f7d\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u91cd\u8f7d\u662f\u539f\u6709\u7684\u65b9\u6cd5\u903b\u8f91\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u66f4\u591a\u53c2\u6570\u7684\u5b9e\u73b0\uff0c\u800c\u91cd\u5199\u662f\u76f4\u63a5\u8986\u76d6\u539f\u6709\u65b9\u6cd5\uff01 1 2 3 4 5 6 7 8 9 10 //\u7236\u7c7b\u4e2d\u7684study public void study (){ System . out . println ( \"\u5b66\u4e60\" ); } //\u5b50\u7c7b\u4e2d\u7684study @Override //\u58f0\u660e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u91cd\u5199\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u8981\uff0c\u6211\u4eec\u73b0\u9636\u6bb5\u4e0d\u63a5\u89e6 public void study (){ System . out . println ( \"\u7ed9\u4f60\u770b\u70b9\u597d\u5eb7\u7684\" ); } \u518d\u6b21\u5b9a\u4e49\u540c\u6837\u7684\u65b9\u6cd5\u540e\uff0c\u7236\u7c7b\u7684\u65b9\u6cd5\u5c31\u88ab\u8986\u76d6\uff01\u5b50\u7c7b\u8fd8\u53ef\u4ee5\u7ed9\u7236\u7c7b\u65b9\u6cd5\u63d0\u5347\u8bbf\u95ee\u6743\u9650\uff01 1 2 3 4 public static void main ( String [] args ) { SportsStudent student = new SportsStudent ( \"lbw\" , 20 ); student . study (); //\u8f93\u51fa\u5b50\u7c7b\u5b9a\u4e49\u7684\u5185\u5bb9 } \u601d\u8003\uff1a\u9759\u6001\u65b9\u6cd5\u80fd\u88ab\u91cd\u5199\u5417\uff1f \u5f53\u6211\u4eec\u5728\u91cd\u5199\u65b9\u6cd5\u65f6\uff0c\u4e0d\u4ec5\u60f3\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u903b\u8f91\uff0c\u540c\u65f6\u8fd8\u5e0c\u671b\u6267\u884c\u7236\u7c7b\u7684\u903b\u8f91\uff08\u4e5f\u5c31\u662f\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff09\u600e\u4e48\u529e\u5462\uff1f 1 2 3 4 public void study (){ super . study (); System . out . println ( \"\u7ed9\u4f60\u770b\u70b9\u597d\u5eb7\u7684\" ); } \u540c\u7406\uff0c\u5982\u679c\u60f3\u8bbf\u95ee\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528super\u5173\u952e\u5b57\u6765\u8bbf\u95ee\uff0c\u6ce8\u610f\uff0c\u5b50\u7c7b\u53ef\u4ee5\u5177\u6709\u548c\u7236\u7c7b\u76f8\u540c\u7684\u6210\u5458\u53d8\u91cf\uff01\u800c\u5728\u65b9\u6cd5\u4e2d\u8bbf\u95ee\u7684\u9ed8\u8ba4\u662f \u5f62\u53c2\u5217\u8868\u4e2d > \u5f53\u524d\u7c7b\u7684\u6210\u5458\u53d8\u91cf > \u7236\u7c7b\u6210\u5458\u53d8\u91cf 1 2 3 4 5 public void setTest ( int test ){ test = 1 ; this . test = 1 ; super . test = 1 ; } \u518d\u8c08\u7c7b\u578b\u8f6c\u6362 \u6211\u4eec\u66fe\u7ecf\u5b66\u4e60\u8fc7\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u652f\u6301\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u800c\u6211\u4eec\u7684\u7c7b\u4e5f\u662f\u652f\u6301\u7c7b\u578b\u8f6c\u6362\u7684\uff08\u4ec5\u9650\u4e8e\u5b58\u5728\u4eb2\u7f18\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff09\u6bd4\u5982\u5b50\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5411\u4e0a\u8f6c\u578b\uff1a 1 2 Student student = new SportsStudent ( \"lbw\" , 20 ); //\u7236\u7c7b\u53d8\u91cf\u5f15\u7528\u5b50\u7c7b\u5b9e\u4f8b student . study (); //\u5f97\u5230\u4f9d\u7136\u662f\u5177\u4f53\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7c7b\u578b\u7684\u7ed3\u679c \u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u5df2\u7ecf\u660e\u786e\u662f\u7531\u54ea\u4e2a\u7c7b\u5b9e\u73b0\u7684\u7236\u7c7b\u5f15\u7528\uff0c\u5f3a\u5236\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 Student student = new SportsStudent ( \"lbw\" , 20 ); //\u662f\u7531SportsStudent\u8fdb\u884c\u5b9e\u73b0\u7684 //... do something... SportsStudent ps = ( SportsStudent ) student ; //\u8ba9\u5b83\u53d8\u6210\u4e00\u4e2a\u5177\u4f53\u7684\u5b50\u7c7b ps . sport (); //\u8c03\u7528\u5177\u4f53\u5b9e\u73b0\u7c7b\u7684\u65b9\u6cd5 \u8fd9\u6837\u7684\u7c7b\u578b\u8f6c\u6362\u79f0\u4e3a\u5411\u4e0b\u8f6c\u578b\u3002 instanceof\u5173\u952e\u5b57 \u90a3\u4e48\u6211\u4eec\u5982\u679c\u53ea\u662f\u5f97\u5230\u4e00\u4e2a\u7236\u7c7b\u5f15\u7528\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u5b83\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\u5b50\u7c7b\u7684\u5b9e\u73b0\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528instanceof\u5173\u952e\u5b57\u6765\u5b9e\u73b0\uff0c\u5b83\u80fd\u591f\u8fdb\u884c\u7c7b\u578b\u5224\u65ad\uff01 1 2 3 4 5 6 7 8 9 private static void test ( Student student ){ if ( student instanceof SportsStudent ){ SportsStudent sportsStudent = ( SportsStudent ) student ; sportsStudent . sport (); } else if ( student instanceof ArtStudent ){ ArtStudent artStudent = ( ArtStudent ) student ; artStudent . art (); } } \u901a\u8fc7\u8fdb\u884c\u7c7b\u578b\u5224\u65ad\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u660e\u786e\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\u5230\u5e95\u662f\u54ea\u4e2a\u7c7b\uff01 \u601d\u8003\uff1a student instanceof Student \u7684\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f \u518d\u8c08final\u5173\u952e\u5b57 \u6211\u4eec\u76ee\u524d\u53ea\u77e5\u9053 final \u5173\u952e\u5b57\u80fd\u591f\u4f7f\u5f97\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u4e0d\u53ef\u66f4\u6539\uff0c\u90a3\u4e48\u5982\u679c\u5728\u7c7b\u524d\u9762\u58f0\u660efinal\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f 1 2 3 public final class Student { //\u7c7b\u88ab\u58f0\u660e\u4e3a\u7ec8\u6001\uff0c\u90a3\u4e48\u5b83\u8fd8\u80fd\u88ab\u7ee7\u627f\u5417 } \u7c7b\u4e00\u65e6\u88ab\u58f0\u660e\u4e3a\u7ec8\u6001\uff0c\u5c06\u65e0\u6cd5\u518d\u88ab\u7ee7\u627f\uff0c\u4e0d\u5141\u8bb8\u5b50\u7c7b\u7684\u5b58\u5728\uff01\u800c\u65b9\u6cd5\u88ab\u58f0\u660e\u4e3afinal\u5462\uff1f 1 2 3 public final void study (){ //\u8fd8\u80fd\u91cd\u5199\u5417 System . out . println ( \"\u5b66\u4e60\" ); } \u5982\u679c\u7c7b\u7684\u6210\u5458\u5c5e\u6027\u88ab\u58f0\u660e\u4e3afinal\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u6216\u662f\u5728\u5b9a\u4e49\u65f6\u8d4b\u521d\u59cb\u503c\uff01 1 2 3 4 5 6 7 private final String name ; //\u5f15\u7528\u7c7b\u578b\u4e0d\u5141\u8bb8\u518d\u6307\u5411\u5176\u4ed6\u5bf9\u8c61 private final int age ; //\u57fa\u672c\u7c7b\u578b\u503c\u4e0d\u5141\u8bb8\u53d1\u751f\u6539\u53d8 public Student ( String name , int age ) { this . name = name ; this . age = age ; } \u5b66\u4e60\u5b8c\u5c01\u88c5\u7ee7\u627f\u548c\u591a\u6001\u4e4b\u540e\uff0c\u6211\u4eec\u63a8\u8350\u5728\u4e0d\u4f1a\u518d\u53d1\u751f\u6539\u53d8\u7684\u6210\u5458\u5c5e\u6027\u4e0a\u6dfb\u52a0final\u5173\u952e\u5b57\uff0cJVM\u4f1a\u5bf9\u6dfb\u52a0\u4e86final\u5173\u952e\u5b57\u7684\u5c5e\u6027\u8fdb\u884c\u4f18\u5316\uff01 \u62bd\u8c61\u7c7b \u7c7b\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u800c\u62bd\u8c61\u7c7b\uff0c\u628a\u7c7b\u8fd8\u8981\u62bd\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u53ea\u4fdd\u7559\u7279\u5f81\uff0c\u800c\u4e0d\u4fdd\u7559\u5177\u4f53\u5448\u73b0\u5f62\u6001\uff0c\u6bd4\u5982\u65b9\u6cd5\u53ef\u4ee5\u5b9a\u4e49\u597d\uff0c\u4f46\u662f\u6211\u53ef\u4ee5\u4e0d\u53bb\u5b9e\u73b0\u5b83\uff0c\u800c\u662f\u4ea4\u7531\u5b50\u7c7b\u6765\u8fdb\u884c\u5b9e\u73b0\uff01 1 2 3 public abstract class Student { //\u62bd\u8c61\u7c7b public abstract void test (); //\u62bd\u8c61\u65b9\u6cd5 } \u901a\u8fc7\u4f7f\u7528 abstract \u5173\u952e\u5b57\u6765\u8868\u660e\u4e00\u4e2a\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u4f7f\u7528 abstract \u5173\u952e\u5b57\u6765\u8868\u660e\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u62bd\u8c61\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u666e\u901a\u65b9\u6cd5\uff0c\u62bd\u8c61\u65b9\u6cd5\u4e0d\u9700\u8981\u7f16\u5199\u5177\u4f53\u5b9e\u73b0\uff08\u65e0\u65b9\u6cd5\u4f53\uff09\u4f46\u662f \u5fc5\u987b \u7531\u5b50\u7c7b\u5b9e\u73b0\uff08\u9664\u975e\u5b50\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff09\uff01 \u62bd\u8c61\u7c7b\u7531\u4e8e\u4e0d\u662f\u5177\u4f53\u7684\u7c7b\u5b9a\u4e49\uff0c\u56e0\u6b64\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7new\u5173\u952e\u5b57\u6765\u521b\u5efa\u5bf9\u8c61\uff01 1 2 3 4 5 Student s = new Student (){ //\u53ea\u80fd\u76f4\u63a5\u521b\u5efa\u5e26\u5b9e\u73b0\u7684\u533f\u540d\u5185\u90e8\u7c7b\uff01 public void test (){ } } \u56e0\u6b64\uff0c\u62bd\u8c61\u7c7b\u4e00\u822c\u53ea\u7528\u4f5c\u7ee7\u627f\u4f7f\u7528\uff01\u62bd\u8c61\u7c7b\u4f7f\u5f97\u7ee7\u627f\u5173\u7cfb\u4e4b\u95f4\u66f4\u52a0\u660e\u786e\uff1a 1 2 3 public void study (){ //\u73b0\u5728\u53ea\u80fd\u7531\u5b50\u7c7b\u7f16\u5199\uff0c\u7236\u7c7b\u6ca1\u6709\u5b9a\u4e49\uff0c\u66f4\u52a0\u660e\u786e\u4e86\u591a\u6001\u7684\u5b9a\u4e49\uff01\u540c\u4e00\u4e2a\u65b9\u6cd5\u591a\u79cd\u5b9e\u73b0\uff01 System . out . println ( \"\u7ed9\u4f60\u770b\u70b9\u597d\u5eb7\u7684\" ); } \u63a5\u53e3 \u63a5\u53e3\u751a\u81f3\u6bd4\u62bd\u8c61\u7c7b\u8fd8\u62bd\u8c61\uff0c\u4ed6\u53ea\u4ee3\u8868\u67d0\u4e2a\u786e\u5207\u7684\u529f\u80fd\uff01\u4e5f\u5c31\u662f\u53ea\u5305\u542b\u65b9\u6cd5\u7684\u5b9a\u4e49\uff0c\u751a\u81f3\u90fd\u4e0d\u662f\u4e00\u4e2a\u7c7b\uff01\u63a5\u53e3\u5305\u542b\u4e86\u4e00\u4e9b\u5217\u65b9\u6cd5\u7684\u5177\u4f53\u5b9a\u4e49\uff0c\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8868\u793a\u7c7b\u652f\u6301\u63a5\u53e3\u4ee3\u8868\u7684\u529f\u80fd\uff08\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u63d2\u4ef6\uff0c\u53ea\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u9644\u5c5e\u529f\u80fd\u52a0\u5728\u4e3b\u4f53\u4e0a\uff0c\u540c\u65f6\u5177\u4f53\u5b9e\u73b0\u8fd8\u9700\u8981\u7531\u4e3b\u4f53\u6765\u5b9e\u73b0\uff09 1 2 3 public interface Eat { void eat (); } \u901a\u8fc7\u4f7f\u7528 interface \u5173\u952e\u5b57\u6765\u8868\u660e\u662f\u4e00\u4e2a\u63a5\u53e3\uff08\u6ce8\u610f\uff0c\u8fd9\u91ccclass\u5173\u952e\u5b57\u88ab\u66ff\u6362\u4e3a\u4e86interface\uff09\u63a5\u53e3\u53ea\u80fd\u5305\u542b public \u6743\u9650\u7684 \u62bd\u8c61\u65b9\u6cd5 \uff01\uff08Java8\u4ee5\u540e\u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff09\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e default \u5173\u952e\u5b57\u6765\u7ed9\u62bd\u8c61\u65b9\u6cd5\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\uff1a 1 2 3 4 5 public interface Eat { default void eat (){ //do something... } } \u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4e3apublic static final 1 2 3 4 public interface Eat { int a = 1 ; void eat (); } \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u4e2a\u63a5\u53e3\uff0c\u4f46\u662f\u4e0d\u80fd\u7406\u89e3\u4e3a\u591a\u7ee7\u627f\uff01\uff08\u5b9e\u9645\u4e0a\u5b9e\u73b0\u63a5\u53e3\u662f\u9644\u52a0\u529f\u80fd\uff0c\u548c\u7ee7\u627f\u7684\u6982\u5ff5\u6709\u4e00\u5b9a\u51fa\u5165\uff0c\u9876\u591a\u8bf4\u662f\u591a\u7ee7\u627f\u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff09\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u9644\u52a0\u5f88\u591a\u4e2a\u529f\u80fd\uff01 1 2 3 4 5 6 public class SportsStudent extends Student implements Eat , ...{ @Override public void eat () { } } \u7c7b\u901a\u8fc7 implements \u5173\u952e\u5b57\u6765\u58f0\u660e\u5b9e\u73b0\u7684\u63a5\u53e3\uff01\u6bcf\u4e2a\u63a5\u53e3\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\uff01 \u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u4e5f\u80fd\u901a\u8fc7instanceof\u5173\u952e\u5b57\u5224\u65ad\uff0c\u4e5f\u652f\u6301\u5411\u4e0a\u548c\u5411\u4e0b\u8f6c\u578b\uff01 \u5185\u90e8\u7c7b \u7c7b\u4e2d\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u7c7b\uff01\u5404\u79cd\u5404\u6837\u7684\u957f\u76f8\u602a\u5f02\u7684\u4ee3\u7801\u5c31\u662f\u4ece\u8fd9\u91cc\u5f00\u59cb\u51fa\u73b0\u7684\uff01 \u6210\u5458\u5185\u90e8\u7c7b \u6211\u4eec\u7684\u7c7b\u4e2d\u53ef\u4ee5\u5728\u5d4c\u5957\u4e00\u4e2a\u7c7b\uff1a 1 2 3 4 5 public class Test { class Inner { //\u7c7b\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b } } \u6210\u5458\u5185\u90e8\u7c7b\u548c\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u65b9\u6cd5\u4e00\u6837\uff0c\u90fd\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5fc5\u987b\u5b58\u5728\u5916\u90e8\u5bf9\u8c61\uff0c\u624d\u80fd\u521b\u5efa\u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\uff01 1 2 3 4 public static void main ( String [] args ) { Test test = new Test (); Test . Inner inner = test . new Inner (); //\u5199\u6cd5\u6709\u90a3\u4e48\u4e00\u4e1d\u602a\u5f02\uff0c\u4f46\u662f\u6ca1\u6bdb\u75c5\uff01 } \u9759\u6001\u5185\u90e8\u7c7b \u9759\u6001\u5185\u90e8\u7c7b\u5176\u5b9e\u5c31\u548c\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u4e00\u6837\uff0c\u662f\u5c5e\u4e8e\u7c7b\u62e5\u6709\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 \u7c7b\u540d. \u53bb\u8bbf\u95ee: 1 2 3 4 5 6 7 8 9 public class Test { static class Inner { } } public static void main ( String [] args ) { Test . Inner inner = new Test . Inner (); //\u4e0d\u7528\u518d\u521b\u5efa\u5916\u90e8\u7c7b\u5bf9\u8c61\u4e86\uff01 } \u5c40\u90e8\u5185\u90e8\u7c7b \u5bf9\uff0c\u4f60\u6ca1\u731c\u9519\uff0c\u5c31\u662f\u548c\u5c40\u90e8\u53d8\u91cf\u4e00\u6837\u54d2~ 1 2 3 4 5 6 7 8 9 public class Test { public void test (){ class Inner { } Inner inner = new Inner (); } } \u53cd\u6b63\u6211\u662f\u6ca1\u7528\u8fc7\uff01\u5185\u90e8\u7c7b -> \u7d2f\u4e0d\u7d2f -> \u53cd\u6b63\u6211\u7d2f\u4e86\uff01 \u533f\u540d\u5185\u90e8\u7c7b \u533f\u540d\u5185\u90e8\u7c7b\u624d\u662f\u6211\u4eec\u7684\u91cd\u70b9\uff0c\u4e5f\u662f\u5b9e\u73b0lambda\u8868\u8fbe\u5f0f\u7684\u539f\u7406\uff01\u533f\u540d\u5185\u90e8\u7c7b\u5176\u5b9e\u5c31\u662f\u5728new\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5bf9\u63a5\u53e3\u6216\u662f\u62bd\u8c61\u7c7b\u7684\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { Eat eat = new Eat () { @Override public void eat () { //DO something... } }; } \u6211\u4eec\u4e0d\u7528\u5355\u72ec\u53bb\u521b\u5efa\u4e00\u4e2a\u7c7b\u6765\u5b9e\u73b0\uff0c\u800c\u662f\u53ef\u4ee5\u76f4\u63a5\u5728new\u7684\u65f6\u5019\u5199\u5bf9\u5e94\u7684\u5b9e\u73b0\uff01\u4f46\u662f\uff0c\u8fd9\u6837\u5199\uff0c\u65e0\u6cd5\u5b9e\u73b0\u590d\u7528\uff0c\u53ea\u80fd\u5728\u8fd9\u91cc\u4f7f\u7528\uff01 lambda\u8868\u8fbe\u5f0f \u8bfb\u4f5c \u03bb \u8868\u8fbe\u5f0f\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u63a5\u53e3\u533f\u540d\u5b9e\u73b0\u7684\u7b80\u5316\uff0c\u6bd4\u5982\u8bf4\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Eat eat = new Eat () { @Override public void eat () { //DO something... } }; } public static void main ( String [] args ) { Eat eat = () -> {}; //\u7b49\u4ef7\u4e8e\u4e0a\u8ff0\u5185\u5bb9 } lambda\u8868\u8fbe\u5f0f\uff08\u533f\u540d\u5185\u90e8\u7c7b\uff09\u53ea\u80fd\u8bbf\u95ee\u5916\u90e8\u7684final\u7c7b\u578b\u6216\u662f\u9690\u5f0ffinal\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\uff01 \u4e3a\u4e86\u65b9\u4fbf\uff0cJDK\u9ed8\u8ba4\u5c31\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e13\u95e8\u5199\u51fd\u6570\u5f0f\u7684\u63a5\u53e3\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecdConsumer \u679a\u4e3e\u7c7b \u5047\u8bbe\u73b0\u5728\u6211\u4eec\u60f3\u7ed9\u5c0f\u660e\u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\uff08\u8dd1\u6b65\u3001\u5b66\u4e60\u3001\u7761\u89c9\uff09\uff0c\u5916\u90e8\u53ef\u4ee5\u5b9e\u65f6\u83b7\u53d6\u5c0f\u660e\u7684\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Student { private final String name ; private final int age ; private String status ; //... public void setStatus ( String status ) { this . status = status ; } public String getStatus () { return status ; } } \u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u4ec5\u4ec5\u662f\u5b58\u50a8\u5b57\u7b26\u4e32\uff0c\u4f3c\u4e4e\u5916\u90e8\u53ef\u4ee5\u4e0d\u6309\u7167\u6211\u4eec\u89c4\u5219\uff0c\u4f20\u5165\u4e00\u4e9b\u5176\u4ed6\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u591f\u4e25\u8c28\u7684\uff01 \u6709\u6ca1\u6709\u4e00\u79cd\u529e\u6cd5\uff0c\u80fd\u591f\u66f4\u597d\u5730\u53bb\u5b9e\u73b0\u8fd9\u6837\u7684\u72b6\u6001\u6807\u8bb0\u5462\uff1f\u6211\u4eec\u5e0c\u671b\u5f00\u53d1\u8005\u62ff\u5230\u4f7f\u7528\u7684\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u597d\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u7c7b\uff01 1 2 3 public enum Status { RUNNING , STUDY , SLEEP //\u76f4\u63a5\u5199\u6bcf\u4e2a\u72b6\u6001\u7684\u540d\u5b57\u5373\u53ef\uff0c\u5206\u53f7\u53ef\u4ee5\u4e0d\u6253\uff0c\u4f46\u662f\u63a8\u8350\u6253\u4e0a } \u4f7f\u7528\u679a\u4e3e\u7c7b\u4e5f\u975e\u5e38\u65b9\u4fbf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u76f4\u63a5\u8bbf\u95ee\u5373\u53ef 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Student { private final String name ; private final int age ; private Status status ; //... public void setStatus ( Status status ) { //\u4e0d\u518d\u662fString\uff0c\u800c\u662f\u6211\u4eec\u6307\u5b9a\u7684\u679a\u4e3e\u7c7b\u578b this . status = status ; } public Status getStatus () { return status ; } } public static void main ( String [] args ) { Student student = new Student ( \"\u5c0f\u660e\" , 18 ); student . setStatus ( Status . RUNNING ); System . out . println ( student . getStatus ()); } \u679a\u4e3e\u7c7b\u578b\u4f7f\u7528\u8d77\u6765\u5c31\u975e\u5e38\u65b9\u4fbf\u4e86\uff0c\u5176\u5b9e\u679a\u4e3e\u7c7b\u578b\u7684\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u7c7b\uff0c\u4f46\u662f\u5b83\u7ee7\u627f\u81ea Enum \u7c7b\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a public static final \u7684Status\u7c7b\u578b\u6210\u5458\u53d8\u91cf\uff01 1 2 3 4 5 6 7 8 9 // Compiled from \"Status.java\" public final class com . test . Status extends java . lang . Enum < com . test . Status > { public static final com . test . Status RUNNING ; public static final com . test . Status STUDY ; public static final com . test . Status SLEEP ; public static com . test . Status [] values (); public static com . test . Status valueOf ( java . lang . String ); static {}; } \u65e2\u7136\u679a\u4e3e\u7c7b\u578b\u662f\u666e\u901a\u7684\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed9\u679a\u4e3e\u7c7b\u578b\u6dfb\u52a0\u72ec\u6709\u7684\u6210\u5458\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public enum Status { RUNNING ( \"\u7761\u89c9\" ), STUDY ( \"\u5b66\u4e60\" ), SLEEP ( \"\u7761\u89c9\" ); //\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u88ab\u8986\u76d6\uff0c\u521b\u5efa\u679a\u4e3e\u9700\u8981\u6dfb\u52a0\u53c2\u6570\uff08\u672c\u8d28\u5c31\u662f\u8c03\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff01\uff09 private final String name ; //\u679a\u4e3e\u7684\u6210\u5458\u53d8\u91cf Status ( String name ){ //\u8986\u76d6\u539f\u6709\u6784\u9020\u65b9\u6cd5\uff08\u9ed8\u8ba4private\uff0c\u53ea\u80fd\u5185\u90e8\u4f7f\u7528\uff01\uff09 this . name = name ; } public String getName () { //\u83b7\u53d6\u5c01\u88c5\u7684\u6210\u5458\u53d8\u91cf return name ; } } public static void main ( String [] args ) { Student student = new Student ( \"\u5c0f\u660e\" , 18 ); student . setStatus ( Status . RUNNING ); System . out . println ( student . getStatus (). getName ()); } \u679a\u4e3e\u7c7b\u8fd8\u81ea\u5e26\u4e00\u4e9b\u7ee7\u627f\u4e0b\u6765\u7684\u5b9e\u7528\u65b9\u6cd5 1 2 Status . valueOf ( \"\" ) //\u5c06\u540d\u79f0\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u679a\u4e3e Status . values () //\u5feb\u901f\u83b7\u53d6\u6240\u6709\u7684\u679a\u4e3e \u57fa\u672c\u7c7b\u578b\u5305\u88c5\u7c7b Java\u5e76\u4e0d\u662f\u7eaf\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u867d\u7136Java\u8bed\u8a00\u662f\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u4f46\u662fJava\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5374\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u5728\u5b66\u4e60\u6cdb\u578b\u548c\u96c6\u5408\u4e4b\u524d\uff0c\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u662f\u4e00\u5b9a\u8981\u8bb2\u89e3\u7684\u5185\u5bb9\uff01 \u6211\u4eec\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u5982\u679c\u60f3\u901a\u8fc7\u5bf9\u8c61\u7684\u5f62\u5f0f\u53bb\u4f7f\u7528\u4ed6\u4eec\uff0cJava\u63d0\u4f9b\u7684\u57fa\u672c\u7c7b\u578b\u5305\u88c5\u7c7b\uff0c\u4f7f\u5f97Java\u80fd\u591f\u66f4\u597d\u7684\u4f53\u73b0\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff0c\u540c\u65f6\u4e5f\u4f7f\u5f97\u57fa\u672c\u7c7b\u578b\u80fd\u591f\u652f\u6301\u5bf9\u8c61\u64cd\u4f5c\uff01 byte -> Byte boolean -> Boolean short -> Short char -> Character int -> Integer long -> Long float -> Float double -> Double \u5305\u88c5\u7c7b\u5b9e\u9645\u4e0a\u5c31\u884c\u5c06\u6211\u4eec\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a\u7c7b\uff08\u8fd0\u7528\u4e86\u5c01\u88c5\u7684\u601d\u60f3\uff09 1 2 3 4 5 private final int value ; //Integer\u5185\u90e8\u5176\u5b9e\u672c\u8d28\u8fd8\u662f\u5b58\u4e86\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c public Integer ( int value ) { this . value = value ; } \u73b0\u5728\u6211\u4eec\u64cd\u4f5c\u7684\u5c31\u662fInteger\u5bf9\u8c61\u800c\u4e0d\u662f\u4e00\u4e2aint\u57fa\u672c\u7c7b\u578b\u4e86\uff01 1 2 3 4 public static void main ( String [] args ) { Integer i = 1 ; //\u5305\u88c5\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u63a5\u6536\u5bf9\u5e94\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5e76\u53d8\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff01 System . out . println ( i + i ); //\u5305\u88c5\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u88ab\u5f53\u505a\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u8fdb\u884c\u64cd\u4f5c\uff01 } \u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1 \u90a3\u4e48\u4e3a\u4ec0\u4e48\u5305\u88c5\u7c7b\u578b\u80fd\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u5177\u4f53\u503c\u6765\u8d4b\u503c\u5462\uff1f\u5176\u5b9e\u4f9d\u9760\u7684\u662f\u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1\u673a\u5236 1 2 Integer i = 1 ; //\u5176\u5b9e\u8fd9\u91cc\u53ea\u662f\u7b80\u5199\u4e86\u800c\u5df2 Integer i = Integer . valueOf ( 1 ); //\u7f16\u8bd1\u540e\u771f\u6b63\u7684\u6837\u5b50 \u8c03\u7528valueOf\u6765\u751f\u6210\u4e00\u4e2aInteger\u5bf9\u8c61\uff01 1 2 3 4 5 public static Integer valueOf ( int i ) { if ( i >= IntegerCache . low && i <= IntegerCache . high ) //\u6ce8\u610f\uff0cJava\u4e3a\u4e86\u4f18\u5316\uff0c\u6709\u4e00\u4e2a\u7f13\u5b58\u673a\u5236\uff0c\u5982\u679c\u662f\u5728-128~127\u4e4b\u95f4\u7684\u6570\uff0c\u4f1a\u76f4\u63a5\u4f7f\u7528\u5df2\u7ecf\u7f13\u5b58\u597d\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u518d\u53bb\u521b\u5efa\u65b0\u7684\uff01\uff08\u9762\u8bd5\u5e38\u8003\uff09 return IntegerCache . cache [ i + ( - IntegerCache . low ) ] ; return new Integer ( i ); //\u8fd4\u56de\u4e00\u4e2a\u65b0\u521b\u5efa\u597d\u7684\u5bf9\u8c61 } \u800c\u5982\u679c\u4f7f\u7528\u5305\u88c5\u7c7b\u6765\u8fdb\u884c\u8fd0\u7b97\uff0c\u6216\u662f\u8d4b\u503c\u7ed9\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u53d8\u91cf\uff0c\u4f1a\u8fdb\u884c\u81ea\u52a8\u62c6\u7bb1\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { Integer i = Integer . valueOf ( 1 ); int a = i ; //\u7b80\u5199 int a = i . intValue (); //\u7f16\u8bd1\u540e\u5b9e\u9645\u7684\u4ee3\u7801 long c = i . longValue (); //\u5176\u4ed6\u7c7b\u578b\u4e5f\u6709\uff01 } \u65e2\u7136\u73b0\u5728\u662f\u5305\u88c5\u7c7b\u578b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u80fd\u4f7f\u7528 == \u6765\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u76f8\u7b49\u5417\uff1f 1 2 3 4 5 6 7 public static void main ( String [] args ) { Integer i1 = 28914 ; Integer i2 = 28914 ; System . out . println ( i1 == i2 ); //\u5b9e\u9645\u4e0a\u5224\u65ad\u662f\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61\uff08\u5185\u5b58\u5730\u5740\u662f\u5426\u76f8\u540c\uff09 System . out . println ( i1 . equals ( i2 )); //\u8fd9\u4e2a\u624d\u662f\u771f\u6b63\u7684\u503c\u5224\u65ad\uff01 } \u6ce8\u610fIntegerCache\u5e26\u6765\u7684\u5f71\u54cd\uff01 \u601d\u8003\uff1a\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u7ed3\u679c\u4f1a\u662f\u4ec0\u4e48\uff1f 1 2 3 4 5 6 public static void main ( String [] args ) { Integer i1 = 28914 ; Integer i2 = 28914 ; System . out . println ( i1 + 1 == i2 + 1 ); } \u5728\u96c6\u5408\u7c7b\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f1a\u7ee7\u7eed\u7528\u5230\u6211\u4eec\u7684\u5305\u88c5\u7c7b\u578b\uff01 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5b9e\u6218 \u867d\u7136\u6211\u4eec\u5b66\u4e60\u4e86\u7f16\u7a0b\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u4e00\u80a1\u8111\u7684\u6240\u6709\u95ee\u9898\u90fd\u7167\u7740\u7f16\u7a0b\u7684\u601d\u7ef4\u53bb\u89e3\u51b3\uff0c\u7f16\u7a0b\u53ea\u662f\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u7075\u6d3b\u7684\u8fd0\u7528\u6211\u4eec\u6240\u5b66\u7684\u77e5\u8bc6\uff0c\u624d\u662f\u89e3\u51b3\u95ee\u9898\u7684\u6700\u597d\u529e\u6cd5\uff01\u6bd4\u5982\uff0c\u6c421\u5230100\u6240\u6709\u6570\u7684\u548c\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { int sum = 0 ; for ( int i = 1 ; i <= 100 ; i ++ ) { //for\u5faa\u73af\u66b4\u529b\u6c42\u89e3\uff0c\u7b80\u5355\uff0c\u4f46\u662f\u6548\u7387\u4f3c\u4e4e\u4f4e\u4e86\u4e00\u4e9b sum += i ; } System . out . println ( sum ); } public static void main ( String [] args ) { System . out . println (( 1 + 100 ) * 50 ); //\u9ad8\u65af\u6c42\u548c\u516c\u5f0f\uff0c\u5229\u7528\u6570\u5b66\uff0c\u77ac\u95f4\u8ba1\u7b97\u7ed3\u679c\uff01 } \u8bf4\u5230\u6700\u540e\uff0c\u5176\u5b9e\u6570\u5b66\u548c\u903b\u8f91\u601d\u7ef4\u624d\u662f\u89e3\u51b3\u95ee\u9898\u7684\u6700\u7ec8\u529e\u6cd5\uff01 \u5bf9\u8c61\u8bbe\u8ba1\uff08\u9762\u5411\u5bf9\u8c61\u3001\u591a\u6001\u8fd0\u7528\uff09 \u8bbe\u8ba1\u4e00\u4e2aPerson\u62bd\u8c61\u7c7b\uff0c\u5305\u542b\u5403\u996d\u8fd0\u52a8\u5b66\u4e60\u4e09\u79cd\u884c\u4e3a\uff0c\u5206\u4e3a\u5de5\u4eba\u3001\u5b66\u751f\u3001\u8001\u5e08\u4e09\u79cd\u804c\u4e1a\u3002 \u8bbe\u8ba1\u8bbe\u8ba1\u4e00\u4e2a\u63a5\u53e3 \u8003\u8bd5 \uff0c\u53ea\u6709\u8001\u5e08\u548c\u5b66\u751f\u4f1a\u8003\u8bd5\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6a21\u62df\u8ba9\u4eba\u7c7b\u8fdb\u5165\u8003\u573a\uff0c\u8981\u6c42\u53ea\u6709\u4f1a\u8003\u8bd5\u7684\u4eba\u624d\u80fd\u8fdb\u5165\uff0c\u5e76\u4e14\u8003\u8bd5\u3002 \u4e8c\u5206\u641c\u7d22\uff08\u641c\u7d22\u7b97\u6cd5\uff09 \u73b0\u5728\u6709\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\uff08\u4ece\u5c0f\u5230\u5927\uff0c\u6570\u7ec4\u957f\u5ea6 0 < n < 1000000\uff09\u5982\u4f55\u5feb\u901f\u5bfb\u627e\u6211\u4eec\u60f3\u8981\u7684\u6570\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u5b58\u5728\u8bf7\u8fd4\u56de\u4e0b\u6807\uff0c\u4e0d\u5b58\u5728\u8fd4\u56de -1 \u5373\u53ef\u3002 1 2 3 4 5 int [] arr = new int [] { 1 , 4 , 5 , 6 , 7 , 10 , 12 , 14 , 20 , 22 , 26 }; //\u6d4b\u8bd5\u7528\u4f8b private static int test ( int [] arr , int target ){ //\u8bf7\u5728\u8fd9\u91cc\u5b9e\u73b0\u641c\u7d22\u7b97\u6cd5 } \u5feb\u901f\u6392\u5e8f\uff08\u6392\u5e8f\u7b97\u6cd5\u3001\u9012\u5f52\u5206\u6cbb\uff09 \uff08\u5f00\u59cb\u4e4b\u524d\u5148\u4ecb\u7ecd\u4e00\u4e0b\u9012\u5f52\uff01\uff09\u5feb\u901f\u6392\u5e8f\u5176\u5b9e\u662f\u4e00\u79cd\u6392\u5e8f\u6267\u884c\u6548\u7387\u5f88\u9ad8\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u5229\u7528 \u5206\u6cbb\u6cd5 \u6765\u5bf9\u5f85\u6392\u5e8f\u5e8f\u5217\u8fdb\u884c\u5206\u6cbb\u6392\u5e8f\uff0c\u5b83\u7684\u601d\u60f3\u4e3b\u8981\u662f\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\u5c06\u5f85\u6392\u8bb0\u5f55\u5206\u9694\u6210\u72ec\u7acb\u7684\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u6bd4\u5173\u952e\u5b57\u5c0f\uff0c\u540e\u9762\u4e00\u90e8\u5206\u6bd4\u5173\u952e\u5b57\u5927\uff0c\u7136\u540e\u518d\u5bf9\u8fd9\u524d\u540e\u7684\u4e24\u90e8\u5206\u5206\u522b\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\uff0c\u901a\u8fc7\u9012\u5f52\u7684\u8fd0\u7b97\u6700\u7ec8\u8fbe\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002 \u5feb\u901f\u6392\u5e8f\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5feb\u901f\uff01\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u4f1a\u9000\u5316\u6210\u5192\u6ce1\u6392\u5e8f\uff01 0/1\u80cc\u5305\u95ee\u9898\uff08\u56de\u6eaf\u6cd5\u3001\u526a\u679d/\u52a8\u6001\u89c4\u5212\u4f18\u5316\uff09 \u7ed9\u5b9a n \u4ef6\u7269\u54c1\uff0c\u6bcf\u4e00\u4e2a\u7269\u54c1\u7684\u91cd\u91cf\u4e3a w[n] \uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u4e3a v[n] \u3002\u73b0\u6311\u9009\u7269\u54c1\u653e\u5165\u80cc\u5305\u4e2d\uff0c\u5047\u5b9a\u80cc\u5305\u80fd\u627f\u53d7\u7684\u6700\u5927\u91cd\u91cf\u4e3a capacity \uff0c\u6c42\u88c5\u5165\u7269\u54c1\u7684\u6700\u5927\u4ef7\u503c\u662f\u591a\u5c11? 1 2 3 int [] w = { 2 , 3 , 4 , 5 }; int [] v = { 3 , 4 , 5 , 6 }; int capacity = 8 ;","title":"Java\u5bf9\u8c61\u548c\u591a\u6001 \uff08\u9762\u5411\u5bf9\u8c61\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#java","text":"","title":"Java\u5bf9\u8c61\u548c\u591a\u6001 \uff08\u9762\u5411\u5bf9\u8c61\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_1","text":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1(Object Oriented Programming) \u5bf9\u8c61\u57fa\u4e8e\u7c7b\u521b\u5efa\uff0c\u7c7b\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6a21\u677f\uff0c\u5bf9\u8c61\u5c31\u662f\u6839\u636e\u6a21\u677f\u521b\u5efa\u51fa\u6765\u7684\u5b9e\u4f53\uff08\u5c31\u50cf\u505a\u6708\u997c\uff0c\u6211\u4eec\u8981\u505a\u4e00\u4e2a\u6708\u997c\u9996\u5148\u9700\u8981\u4e00\u4e2a\u6a21\u5177\uff0c\u6a21\u5177\u5c31\u662f\u6211\u4eec\u7684\u7c7b\uff0c\u800c\u505a\u51fa\u6765\u7684\u6708\u997c\uff0c\u5c31\u662f\u7c7b\u7684\u5b9e\u73b0\uff0c\u4e5f\u53eb\u505a\u5bf9\u8c61\uff09\uff0c\u7c7b\u662f\u62bd\u8c61\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u4e0d\u80fd\u4ee3\u8868\u67d0\u4e00\u4e2a\u5177\u4f53\u7684\u4e8b\u7269\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u4e00\u4e2a\u6a21\u677f\u3002\u7c7b\u5177\u6709\u81ea\u5df1\u7684\u5c5e\u6027\uff0c\u5305\u62ec\u6210\u5458\u53d8\u91cf\u3001\u6210\u5458\u65b9\u6cd5\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u6765\u8ba9\u7c7b\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002 1 2 3 4 Scanner sc = new Scanner ( System . in ); String str = sc . nextLine (); System . out . println ( \"\u4f60\u8f93\u5165\u4e86\uff1a\" + str ); sc . close (); \u6240\u6709\u7684\u5bf9\u8c61\uff0c\u90fd\u9700\u8981\u901a\u8fc7 new \u5173\u952e\u5b57\u521b\u5efa\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u5bf9\u8c61\uff01Java\u4e0d\u662f\u7eaf\u9762\u5bf9\u5bf9\u8c61\u8bed\u8a00\uff01 \u4e0d\u662f\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u90fd\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u4ee3\u8868\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53d8\u91cf\uff0c\u4fdd\u5b58\u7684\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u6765\u5bf9\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\uff08\u6700\u597d\u4e0d\u8981\u7406\u89e3\u4e3a\u5f15\u7528\u6307\u5411\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u521d\u5b66\u8005\u4e0d\u8981\u8c08\u5185\u5b58\uff0c\u5b66\u5230JVM\u65f6\u518d\u6765\u8ba8\u8bba\uff09 \u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u7531JVM\u7edf\u4e00\u7ba1\u7406\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u518d\u4f7f\u7528\u65f6\uff08\u6bd4\u5982\u5931\u53bb\u5f15\u7528\u6216\u662f\u79bb\u5f00\u4e86\u4f5c\u7528\u57df\uff09\u4f1a\u88abJVM\u81ea\u52a8\u6e05\u7406\uff0c\u5185\u5b58\u7ba1\u7406\u66f4\u65b9\u4fbf\uff01","title":"\u9762\u5411\u5bf9\u8c61\u57fa\u7840"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_2","text":"\u4e3a\u4e86\u5feb\u901f\u638c\u63e1\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u7c7b\uff0c\u521b\u5efa\u7684\u7c7b\u6587\u4ef6\u540d\u79f0\u5e94\u8be5\u548c\u7c7b\u540d\u4e00\u81f4\u3002","title":"\u7c7b\u7684\u57fa\u672c\u7ed3\u6784"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_3","text":"\u5728\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u5305\u542b\u8bb8\u591a\u7684\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u53eb\u6210\u5458\u5c5e\u6027\uff0c\u6210\u5458\u5b57\u6bb5(field)\u901a\u8fc7 . \u6765\u8bbf\u95ee\u6211\u4eec\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u8bbf\u95ee\u548c\u4fee\u6539\u8fd9\u4e9b\u53d8\u91cf\u3002\u6210\u5458\u53d8\u91cf\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff01 1 2 3 4 5 6 7 8 9 10 public class Test { int age ; String name ; } public static void main ( String [] args ) { Test test = new Test (); test . name = \"\u5965\u5229\u7ed9\" ; System . out . println ( test . name ); } \u6210\u5458\u53d8\u91cf\u9ed8\u8ba4\u5e26\u6709\u521d\u59cb\u503c\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u521d\u59cb\u503c\u3002","title":"\u6210\u5458\u53d8\u91cf"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_4","text":"\u6211\u4eec\u4e4b\u524d\u7684\u5b66\u4e60\u4e2d\u63a5\u89e6\u8fc7\u65b9\u6cd5(Method)\u5417\uff1f\u4e3b\u65b9\u6cd5\uff01 1 2 3 public static void main ( String [] args ) { //Body } \u65b9\u6cd5\u662f\u8bed\u53e5\u7684\u96c6\u5408\uff0c\u662f\u4e3a\u4e86\u5b8c\u6210\u67d0\u4ef6\u4e8b\u60c5\u800c\u5b58\u5728\u7684\u3002\u5b8c\u6210\u67d0\u4ef6\u4e8b\u60c5\uff0c\u53ef\u4ee5\u6709\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u505a\u4e86\u5c31\u505a\u4e86\uff0c\u4e0d\u8fd4\u56de\u7ed3\u679c\u3002\u6bd4\u5982\u8ba1\u7b97\u4e24\u4e2a\u6570\u5b57\u7684\u548c\uff0c\u6211\u4eec\u9700\u8981\u5f97\u5230\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u8bf4\u65b9\u6cd5\u9700\u8981\u6709\u8fd4\u56de\u503c\uff1b\u53c8\u6bd4\u5982\uff0c\u6211\u4eec\u53ea\u60f3\u5427\u6570\u5b57\u6253\u5370\u5728\u63a7\u5236\u53f0\uff0c\u53ea\u9700\u8981\u6253\u5370\u5c31\u884c\uff0c\u4e0d\u7528\u7ed9\u6211\u7ed3\u679c\uff0c\u6240\u4ee5\u8bf4\u65b9\u6cd5\u4e0d\u9700\u8981\u6709\u8fd4\u56de\u503c\u3002","title":"\u6210\u5458\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_5","text":"\u5728\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 3 4 [ \u8fd4\u56de\u503c\u7c7b\u578b ] \u65b9\u6cd5\u540d\u79f0 ( [ \u53c2\u6570 ] ){ //\u65b9\u6cd5\u4f53 return \u7ed3\u679c ; } \u8fd4\u56de\u503c\u7c7b\u578b\uff1a\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u662fvoid\uff0c\u8868\u793a\u6ca1\u6709\u8fd4\u56de\u503c \u65b9\u6cd5\u540d\u79f0\uff1a\u548c\u6807\u8bc6\u7b26\u7684\u89c4\u5219\u4e00\u81f4\uff0c\u548c\u53d8\u91cf\u4e00\u6837\uff0c\u89c4\u8303\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff01 \u53c2\u6570\uff1a\u4f8b\u5982\u65b9\u6cd5\u9700\u8981\u8ba1\u7b97\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u628a\u4e24\u4e2a\u6570\u5230\u5e95\u662f\u4ec0\u4e48\u544a\u8bc9\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u65b9\u6cd5 \u65b9\u6cd5\u4f53\uff1a\u65b9\u6cd5\u5177\u4f53\u8981\u5e72\u7684\u4e8b\u60c5 \u7ed3\u679c\uff1a\u65b9\u6cd5\u6267\u884c\u7684\u7ed3\u679c\u901a\u8fc7return\u8fd4\u56de\uff08\u5982\u679c\u8fd4\u56de\u7c7b\u578b\u4e3avoid\uff0c\u53ef\u4ee5\u7701\u7565return\uff09 \u975evoid\u65b9\u6cd5\u4e2d\uff0c return \u5173\u952e\u5b57\u4e0d\u4e00\u5b9a\u9700\u8981\u653e\u5728\u6700\u540e\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u4fdd\u8bc1\u65b9\u6cd5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u5177\u6709\u8fd4\u56de\u503c\uff01 1 2 3 4 5 6 7 int test ( int a ){ if ( a > 0 ){ //\u7f3a\u5c11retrun\u8bed\u53e5\uff01 } else { return 0 ; } } return \u4e5f\u80fd\u7528\u6765\u63d0\u524d\u7ed3\u675f\u6574\u4e2a\u65b9\u6cd5\uff0c\u65e0\u8bba\u6b64\u65f6\u7a0b\u5e8f\u6267\u884c\u5230\u4f55\u5904\uff0c\u65e0\u8bbareturn\u4f4d\u4e8e\u54ea\u91cc\uff0c\u90fd\u4f1a\u7acb\u5373\u7ed3\u675f\u4e2a\u65b9\u6cd5\uff01 1 2 3 4 5 6 void main ( String [] args ) { for ( int i = 0 ; i < 10 ; i ++ ) { if ( i == 1 ) return ; //\u5728\u5faa\u73af\u5185\u8fd4\u56de\u4e86\uff01\u548cbreak\u533a\u522b\uff1f } System . out . println ( \"\u6de6\" ); //\u8fd8\u4f1a\u5230\u8fd9\u91cc\u5417\uff1f } \u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u679c\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f1a\u5728\u8c03\u7528\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5bf9\u53c2\u6570\u7684\u503c\u8fdb\u884c\u590d\u5236\uff0c\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u53d8\u91cf\uff0c\u4e0d\u662f\u6211\u4eec\u4f20\u5165\u7684\u53d8\u91cf\u672c\u8eab\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { int a = 10 , b = 20 ; new Test (). swap ( a , b ); System . out . println ( \"a=\" + a + \", b=\" + b ); } public class Test { void swap ( int a , int b ){ //\u4f20\u9012\u7684\u4ec5\u4ec5\u662f\u503c\u800c\u5df2\uff01 int temp = a ; a = b ; b = temp ; } } \u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u679c\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u90a3\u4e48\u4f20\u5165\u7684\u4f9d\u7136\u662f\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\uff01\uff08\u7c7b\u4f3c\u4e8eC\u8bed\u8a00\u7684\u6307\u9488\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class B { String name ; } public class A { void test ( B b ){ //\u4f20\u9012\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u503c System . out . println ( b . name ); } } public static void main ( String [] args ) { int a = 10 , b = 20 ; B b = new B (); b . name = \"lbw\" ; new A (). test ( b ); System . out . println ( \"a=\" + a + \", b=\" + b ); } \u65b9\u6cd5\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8c03\u7528 1 2 3 4 5 6 7 void a (){ //xxxx } void b (){ a (); } \u5f53\u65b9\u6cd5\u5728\u81ea\u5df1\u5185\u90e8\u8c03\u7528\u81ea\u5df1\u65f6\uff0c\u79f0\u4e3a\u9012\u5f52\u8c03\u7528\uff08\u9012\u5f52\u5f88\u5371\u9669\uff0c\u614e\u91cd\uff01\uff09 1 2 3 int a (){ return a (); } \u6210\u5458\u65b9\u6cd5\u548c\u6210\u5458\u53d8\u91cf\u4e00\u6837\uff0c\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u53ea\u80fd\u901a\u8fc7\u5bf9\u8c61\u53bb\u8c03\u7528\uff01","title":"\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_6","text":"\u5b66\u751f\u5e94\u8be5\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a\u540d\u5b57\u3001\u5e74\u9f84 \u5b66\u751f\u5e94\u8be5\u5177\u6709\u4ee5\u4e0b\u884c\u4e3a\uff1a\u5b66\u4e60\u3001\u8fd0\u52a8\u3001\u8bf4\u8bdd","title":"\u5bf9\u8c61\u8bbe\u8ba1\u7ec3\u4e60"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_7","text":"\u4e00\u4e2a\u7c7b\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u540c\u540d\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u9700\u8981\u7684\u5f62\u5f0f\u53c2\u6570\u4e0d\u4e00\u6837\u3002\uff08\u8865\u5145\uff1a\u5f62\u5f0f\u53c2\u6570\u5c31\u662f\u5b9a\u4e49\u65b9\u6cd5\u9700\u8981\u7684\u53c2\u6570\uff0c\u5b9e\u9645\u53c2\u6570\u5c31\u4f20\u5165\u7684\u53c2\u6570\uff09\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u53ef\u4ee5\u76f8\u540c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u540c\uff0c\u4f46\u662f\u4ec5\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\uff0c\u662f\u4e0d\u5141\u8bb8\u7684\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class Test { int a (){ //\u539f\u672c\u7684\u65b9\u6cd5 return 1 ; } int a ( int i ){ //ok\uff0c\u5f62\u53c2\u4e0d\u540c return i ; } void a ( byte i ){ //ok\uff0c\u8fd4\u56de\u7c7b\u578b\u548c\u5f62\u53c2\u90fd\u4e0d\u540c } void a (){ //\u9519\u8bef\uff0c\u4ec5\u8fd4\u56de\u503c\u7c7b\u578b\u540d\u79f0\u4e0d\u540c\u4e0d\u80fd\u91cd\u8f7d } } \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u4f46\u662f\u652f\u6301\u8c03\u7528\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u6267\u884c\u4e00\u6837\u7684\u903b\u8f91\uff1a 1 2 3 4 5 6 7 8 9 public class Test { int sum ( int a , int b ){ //\u53ea\u6709int\u652f\u6301\uff0c\u4e0d\u7075\u6d3b\uff01 return a + b ; } double sum ( double a , double b ){ //\u91cd\u5199\u4e00\u4e2adouble\u7c7b\u578b\u7684\uff0c\u5c31\u652f\u6301\u5c0f\u6570\u8ba1\u7b97\u4e86 return a + b ; } } \u73b0\u5728\u6211\u4eec\u6709\u5f88\u591a\u79cd\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4f20\u5165\u5b9e\u53c2\u540e\uff0c\u5230\u5e95\u8fdb\u4e86\u54ea\u4e2a\u65b9\u6cd5\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 public class Test { void a ( int i ){ System . out . println ( \"\u8c03\u7528\u4e86int\" ); } void a ( short i ){ System . out . println ( \"\u8c03\u7528\u4e86short\" ); } void a ( long i ){ System . out . println ( \"\u8c03\u7528\u4e86long\" ); } void a ( char i ){ System . out . println ( \"\u8c03\u7528\u4e86char\" ); } void a ( double i ){ System . out . println ( \"\u8c03\u7528\u4e86double\" ); } void a ( float i ){ System . out . println ( \"\u8c03\u7528\u4e86float\" ); } public static void main ( String [] args ) { Test test = new Test (); test . a ( 1 ); //\u76f4\u63a5\u8f93\u5165\u6574\u6570 test . a ( 1.0 ); //\u76f4\u63a5\u8f93\u5165\u5c0f\u6570 short s = 2 ; test . a ( s ); //\u4f1a\u5bf9\u53f7\u5165\u5ea7\u5417\uff1f test . a ( 1.0F ); } }","title":"\u65b9\u6cd5\u7684\u91cd\u8f7d"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_8","text":"\u6784\u9020\u65b9\u6cd5\uff08\u6784\u9020\u5668\uff09\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u8fd4\u56de\u7684\u662f\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff01\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u9ed8\u8ba4\u81ea\u5e26\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 //\u53cd\u7f16\u8bd1\u7ed3\u679c package com.test ; public class Test { public Test () { //\u5373\u4f7f\u4f60\u4ec0\u4e48\u90fd\u4e0d\u7f16\u5199\uff0c\u4e5f\u81ea\u5e26\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u53ea\u662f\u9ed8\u8ba4\u662f\u9690\u85cf\u7684 } } \u53cd\u7f16\u8bd1\u5176\u5b9e\u5c31\u662f\u628a\u6211\u4eec\u7f16\u8bd1\u597d\u7684class\u6587\u4ef6\u53d8\u56deJava\u6e90\u4ee3\u7801\u3002 1 2 Test test = new Test (); //\u5b9e\u9645\u4e0a\u5b58\u5728Test()\u8fd9\u4e2a\u7684\u65b9\u6cd5\uff0cnew\u5173\u952e\u5b57\u5c31\u662f\u7528\u6765\u521b\u5efa\u5e76\u5f97\u5230\u5f15\u7528\u7684 // new + \u4f60\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u5199\u660e\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u6bcf\u4e2a\u7c7b\u90fd\u5fc5\u987b\u5177\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff01\u53ea\u6709\u8c03\u7528\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u624d\u80fd\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff01 \u7c7b\u8981\u5728\u4e00\u5f00\u59cb\u51c6\u5907\u7684\u6240\u6709\u4e1c\u897f\uff0c\u90fd\u4f1a\u5728\u6784\u9020\u65b9\u6cd5\u91cc\u9762\u6267\u884c\uff0c\u5b8c\u6210\u6784\u9020\u65b9\u6cd5\u7684\u5185\u5bb9\u540e\uff0c\u624d\u80fd\u521b\u5efa\u51fa\u5bf9\u8c61\uff01 \u4e00\u822c\u6700\u5e38\u7528\u7684\u5c31\u662f\u7ed9\u6210\u5458\u5c5e\u6027\u8d4b\u521d\u59cb\u503c\uff1a 1 2 3 4 5 6 7 public class Student { String name ; Student (){ name = \"\u4f1e\u5175\u4e00\u53f7\" ; } } \u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u6709\u53c2\u6784\u9020\uff0c\u5f53\u9047\u5230\u540d\u79f0\u51b2\u7a81\u65f6\uff0c\u9700\u8981\u7528\u5230this\u5173\u952e\u5b57 1 2 3 4 5 6 7 8 9 public class Student { String name ; Student ( String name ){ //\u5f62\u53c2\u548c\u7c7b\u6210\u5458\u53d8\u91cf\u51b2\u7a81\u4e86\uff0cJava\u4f1a\u4f18\u5148\u4f7f\u7528\u5f62\u5f0f\u53c2\u6570\u5b9a\u4e49\u7684\u53d8\u91cf\uff01 this . name = name ; //\u901a\u8fc7this\u6307\u4ee3\u5f53\u524d\u7684\u5bf9\u8c61\u5c5e\u6027\uff0cthis\u5c31\u4ee3\u8868\u5f53\u524d\u5bf9\u8c61 } } //idea \u53f3\u952e\u5feb\u901f\u751f\u6210\uff01 \u6ce8\u610f\uff0cthis\u53ea\u80fd\u7528\u4e8e\u6307\u4ee3\u5f53\u524d\u5bf9\u8c61\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\uff0c\u53ea\u6709\u5c5e\u4e8e\u5bf9\u8c61\u62e5\u6709\u7684\u90e8\u5206\u624d\u53ef\u4ee5\u4f7f\u7528this\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u80fd\u5728\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u4e2d\u4f7f\u7528this\uff0c\u4e0d\u80fd\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4f7f\u7528this\u5173\u952e\u5b57\u3002 \u5728\u6211\u4eec\u5b9a\u4e49\u4e86\u65b0\u7684\u6709\u53c2\u6784\u9020\u4e4b\u540e\uff0c\u9ed8\u8ba4\u7684\u65e0\u53c2\u6784\u9020\u4f1a\u88ab\u8986\u76d6\uff01 1 //\u53cd\u7f16\u8bd1\u540e\u4f9d\u7136\u53ea\u6709\u6211\u4eec\u5b9a\u4e49\u7684\u6709\u53c2\u6784\u9020\uff01 \u5982\u679c\u540c\u65f6\u9700\u8981\u6709\u53c2\u548c\u65e0\u53c2\u6784\u9020\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u7528\u5230\u65b9\u6cd5\u7684\u91cd\u8f7d\uff01\u624b\u52a8\u518d\u53bb\u5b9a\u4e49\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u3002 1 2 3 4 5 6 7 8 9 10 11 public class Student { String name ; Student (){ } Student ( String name ){ this . name = name ; } } \u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u59cb\u7ec8\u5728\u6784\u9020\u65b9\u6cd5\u6267\u884c\u4e4b\u524d 1 2 3 4 5 6 7 8 9 10 11 public class Student { String a = \"sadasa\" ; Student (){ System . out . println ( a ); } public static void main ( String [] args ) { Student s = new Student (); } }","title":"\u6784\u9020\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_9","text":"\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u662f\u7c7b\u5177\u6709\u7684\u5c5e\u6027\uff08\u540e\u9762\u8fd8\u4f1a\u63d0\u5230\u9759\u6001\u7c7b\u3001\u9759\u6001\u4ee3\u7801\u5757\uff09\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u5185\u5bb9\u3002\u6211\u4eec\u901a\u8fc7\u4f7f\u7528 static \u5173\u952e\u5b57\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u6216\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u9759\u6001\u7684\uff0c\u4e00\u65e6\u88ab\u58f0\u660e\u4e3a\u9759\u6001\uff0c\u90a3\u4e48\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u521b\u5efa\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u64cd\u4f5c\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u76ee\u6807\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u8c61\u518d\u591a\uff0c\u4e5f\u53ea\u6709\u8fd9\u4e00\u4e2a\u9759\u6001\u7684\u53d8\u91cf\u6216\u65b9\u6cd5\u3002\u90a3\u4e48\uff0c\u4e00\u4e2a\u5bf9\u8c61\u6539\u53d8\u4e86\u9759\u6001\u53d8\u91cf\u7684\u503c\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u5bf9\u8c61\u8bfb\u53d6\u7684\u5c31\u662f\u88ab\u6539\u53d8\u7684\u503c\u3002 1 2 3 4 5 6 7 8 9 10 public class Student { static int a ; } public static void main ( String [] args ) { Student s1 = new Student (); s1 . a = 10 ; Student s2 = new Student (); System . out . println ( s2 . a ); } \u4e0d\u63a8\u8350\u4f7f\u7528\u5bf9\u8c61\u6765\u8c03\u7528\uff0c\u88ab\u6807\u8bb0\u4e3a\u9759\u6001\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 \u7c7b\u540d.xxx \u7684\u5f62\u5f0f\u8bbf\u95ee 1 2 3 4 public static void main ( String [] args ) { Student . a = 10 ; System . out . println ( Student . a ); }","title":"\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_10","text":"\u7c7b\u5e76\u4e0d\u662f\u5728\u4e00\u5f00\u59cb\u5c31\u5168\u90e8\u52a0\u8f7d\u597d\uff0c\u800c\u662f\u5728\u9700\u8981\u65f6\u624d\u4f1a\u53bb\u52a0\u8f7d\uff08\u63d0\u5347\u901f\u5ea6\uff09\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u52a0\u8f7d\u7c7b\uff1a \u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf\uff0c\u6216\u8005\u4e3a\u9759\u6001\u53d8\u91cf\u8d4b\u503c new \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\uff08\u9690\u5f0f\u52a0\u8f7d\uff09 \u8c03\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5 \u5b50\u7c7b\u521d\u59cb\u5316\u65f6 \u5176\u4ed6\u7684\u60c5\u51b5\u4f1a\u5728\u8bb2\u5230\u53cd\u5c04\u65f6\u4ecb\u7ecd \u6240\u6709\u88ab\u6807\u8bb0\u4e3a\u9759\u6001\u7684\u5185\u5bb9\uff0c\u4f1a\u5728\u7c7b\u521a\u52a0\u8f7d\u7684\u65f6\u5019\u5c31\u5206\u914d\uff0c\u800c\u4e0d\u662f\u5728\u5bf9\u8c61\u521b\u5efa\u7684\u65f6\u5019\u5206\u914d\uff0c\u6240\u4ee5\u8bf4\u9759\u6001\u5185\u5bb9\u4e00\u5b9a\u4f1a\u5728\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u521d\u59cb\u5316\u4e4b\u524d\u5b8c\u6210\u52a0\u8f7d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 public class Student { static int a = test (); //\u76f4\u63a5\u8c03\u7528\u9759\u6001\u65b9\u6cd5\uff0c\u53ea\u80fd\u8c03\u7528\u9759\u6001\u65b9\u6cd5 Student (){ System . out . println ( \"\u6784\u9020\u7c7b\u5bf9\u8c61\" ); } static int test (){ //\u9759\u6001\u65b9\u6cd5\u521a\u52a0\u8f7d\u65f6\u5c31\u6709\u4e86 System . out . println ( \"\u521d\u59cb\u5316\u53d8\u91cfa\" ); return 1 ; } } \u601d\u8003\uff1a\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u80fd\u6b63\u5e38\u8fd0\u884c\u5417\uff1f\u5982\u679c\u80fd\uff0c\u4f1a\u8f93\u51fa\u4ec0\u4e48\u5185\u5bb9\uff1f 1 2 3 4 5 6 7 8 9 10 11 public class Student { static int a = test (); static int test (){ return a ; } public static void main ( String [] args ) { System . out . println ( Student . a ); } } \u5b9a\u4e49\u548c\u8d4b\u503c\u662f\u4e24\u4e2a\u9636\u6bb5\uff0c\u5728\u5b9a\u4e49\u65f6\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\uff08\u4e0a\u9762\u8bb2\u7684\uff0c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4f1a\u6709\u9ed8\u8ba4\u503c\uff09\u5b9a\u4e49\u51fa\u6765\u4e4b\u540e\uff0c\u5982\u679c\u53d1\u73b0\u6709\u8d4b\u503c\u8bed\u53e5\uff0c\u518d\u8fdb\u884c\u8d4b\u503c\uff0c\u800c\u8fd9\u65f6\uff0c\u8c03\u7528\u4e86\u9759\u6001\u65b9\u6cd5\uff0c\u6240\u4ee5\u8bf4\u4f1a\u5148\u53bb\u52a0\u8f7d\u9759\u6001\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u8c03\u7528\u65f6\u62ff\u5230a\uff0c\u800ca\u8fd9\u65f6\u4ec5\u4ec5\u662f\u521a\u5b9a\u4e49\uff0c\u6240\u4ee5\u8bf4\u8fd8\u662f\u521d\u59cb\u503c\uff0c\u6700\u540e\u5f97\u52300","title":"\u7b80\u8ff0\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_11","text":"\u4ee3\u7801\u5757\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u6267\u884c\uff0c\u4e5f\u662f\u5c5e\u4e8e\u7c7b\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u5b83\u5728\u6784\u9020\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff08\u548c\u6210\u5458\u53d8\u91cf\u521d\u59cb\u503c\u4e00\u6837\uff09\uff0c\u4e14\u6bcf\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53ea\u6267\u884c\u4e00\u6b21\uff01\uff08\u76f8\u5f53\u4e8e\u6784\u9020\u4e4b\u524d\u7684\u51c6\u5907\u5de5\u4f5c\uff09 1 2 3 4 5 6 7 8 9 public class Student { { System . out . println ( \"\u6211\u662f\u4ee3\u7801\u5757\" ); } Student (){ System . out . println ( \"\u6211\u662f\u6784\u9020\u65b9\u6cd5\" ); } } \u9759\u6001\u4ee3\u7801\u5757\u548c\u4e0a\u9762\u7684\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u53d8\u91cf\u4e00\u6837\uff0c\u5728\u7c7b\u521a\u52a0\u8f7d\u65f6\u5c31\u4f1a\u8c03\u7528\uff1b 1 2 3 4 5 6 7 8 9 10 11 public class Student { static int a ; static { a = 10 ; } public static void main ( String [] args ) { System . out . println ( Student . a ); } }","title":"\u4ee3\u7801\u5757\u548c\u9759\u6001\u4ee3\u7801\u5757"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#stringstringbuilder","text":"\u5b57\u7b26\u4e32\u7c7b\u662f\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u7684\u7c7b\uff0c\u4ed6\u662fJava\u4e2d\u552f\u4e00\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u7c7b\uff01(Java\u4e0d\u652f\u6301\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0cString\u662f\u7279\u4f8b) String\u7684\u5bf9\u8c61\u76f4\u63a5\u652f\u6301\u4f7f\u7528 + \u6216 += \u8fd0\u7b97\u7b26\u6765\u8fdb\u884c\u62fc\u63a5\uff0c\u5e76\u5f62\u6210\u65b0\u7684String\u5bf9\u8c61\uff01\uff08String\u7684\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff01\uff09 1 2 3 String a = \"dasdsa\" , b = \"dasdasdsa\" ; String l = a + b ; System . out . println ( l ); \u5927\u91cf\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u4f3c\u4e4e\u4e0d\u592a\u597d\uff0c\u7f16\u8bd1\u5668\u662f\u5f88\u806a\u660e\u7684\uff0cString\u7684\u62fc\u63a5\u6709\u53ef\u80fd\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u4e3aStringBuilder\u6765\u51cf\u5c11\u5bf9\u8c61\u521b\u5efa\uff08\u5bf9\u8c61\u9891\u7e41\u521b\u5efa\u65f6\u5f88\u8d39\u65f6\u95f4\u540c\u65f6\u5360\u5185\u5b58\u7684\uff01\uff09 1 String result = \"String\" + \"and\" ; //\u4f1a\u88ab\u4f18\u5316\u6210\u4e00\u53e5\uff01 1 2 3 4 String str1 = \"String\" ; String str2 = \"and\" ; String result = str1 + str2 ; //\u53d8\u91cf\u968f\u65f6\u53ef\u53d8\uff0c\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u5b9aresult\u7684\u503c\uff0c\u90a3\u4e48\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u518d\u53bb\u786e\u5b9a 1 2 3 4 String str1 = \"String\" ; String str2 = \"and\" ; String result = ( new StringBuilder ( String . valueOf ( str1 ))). append ( str2 ). toString (); //\u4f7f\u7528StringBuilder\uff0c\u4f1a\u91c7\u7528\u7c7b\u4f3c\u4e8e\u7b2c\u4e00\u79cd\u5b9e\u73b0\uff0c\u663e\u7136\u4f1a\u66f4\u5feb\uff01 StringBuilder\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u5b83\u80fd\u591f\u5b58\u50a8\u53ef\u53d8\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff01 1 2 3 4 5 6 7 StringBuilder builder = new StringBuilder (); builder . append ( \"a\" ) . append ( \"bc\" ) . append ( \"d\" ); //\u94fe\u5f0f\u8c03\u7528 String str = builder . toString (); System . out . println ( str );","title":"String\u548cStringBuilder\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_12","text":"","title":"\u5305\u548c\u8bbf\u95ee\u63a7\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_13","text":"\u5305\u5176\u5b9e\u5c31\u662f\u7528\u6765\u533a\u5206\u7c7b\u4f4d\u7f6e\u7684\u4e1c\u897f\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u5c06\u6211\u4eec\u7684\u7c7b\u8fdb\u884c\u5206\u7c7b\uff0c\u7c7b\u4f3c\u4e8eC++\u4e2d\u7684namespace\uff01 1 2 3 4 5 package com.test ; public class Test { } \u5305\u5176\u5b9e\u662f\u6587\u4ef6\u5939\uff0c\u6bd4\u5982com.test\u5c31\u662f\u4e00\u4e2acom\u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2atest\u6587\u4ef6\u5939\uff0c\u518d\u5305\u542b\u6211\u4eecTest\u7c7b\u3002 \u4e00\u822c\u5305\u6309\u7167\u4e2a\u4eba\u6216\u662f\u516c\u53f8\u57df\u540d\u7684\u89c4\u5219\u5012\u8fc7\u6765\u5199 \u9876\u7ea7\u57df\u540d.\u4e00\u7ea7\u57df\u540d.\u4e8c\u7ea7\u57df\u540d com.java.xxxx \u5982\u679c\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u5305\u91cc\u9762\u7684\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981 import \uff08\u7c7b\u4f3c\u4e8eC/C++\u4e2d\u7684include\uff09 1 import com.test.Student ; \u4e5f\u53ef\u4ee5\u5bfc\u5165\u5305\u4e0b\u7684\u5168\u90e8\uff08\u4e00\u822c\u5bfc\u5165\u4f1a\u7531\u7f16\u8bd1\u5668\u81ea\u5e26\u5e2e\u6211\u4eec\u8865\u5168\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u8bb0\u5f97\u6211\u4eec\u9700\u8981\u5bfc\u5305\uff01\uff09 1 import com.test.* Java\u9ed8\u8ba4\u4e3a\u6211\u4eec\u5bfc\u5165\u4e86\u4ee5\u4e0b\u7684\u5305\uff0c\u4e0d\u9700\u8981\u53bb\u58f0\u660e 1 import java.lang.*","title":"\u5305\u58f0\u660e\u548c\u5bfc\u5165"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_14","text":"\u9759\u6001\u5bfc\u5165\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u67d0\u4e2a\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u6216\u8005\u662f\u9759\u6001\u53d8\u91cf\uff0c\u5bfc\u5165\u540e\uff0c\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u65b9\u6cd5\u6216\u662f\u7c7b\u5728\u5b9a\u4e49\u5728\u5f53\u524d\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8be5\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 import static com.test.ui.Student.test ; public class Main { public static void main ( String [] args ) { test (); } } \u9759\u6001\u5bfc\u5165\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u7684\u521d\u59cb\u5316\uff01","title":"\u9759\u6001\u5bfc\u5165"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_15","text":"Java\u652f\u6301\u5bf9\u7c7b\u5c5e\u6027\u8bbf\u95ee\u7684\u4fdd\u62a4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5e0c\u671b\u5916\u90e8\u7c7b\u8bbf\u95ee\u7c7b\u4e2d\u7684\u5c5e\u6027\u6216\u662f\u65b9\u6cd5\uff0c\u53ea\u5141\u8bb8\u5185\u90e8\u8c03\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u6743\u9650\u63a7\u5236\u7b26\u3002 \u6743\u9650\u63a7\u5236\u7b26\u53ef\u4ee5\u58f0\u660e\u5728\u65b9\u6cd5\u3001\u6210\u5458\u53d8\u91cf\u3001\u7c7b\u524d\u9762\uff0c\u4e00\u65e6\u58f0\u660eprivate\uff0c\u53ea\u80fd\u7c7b\u5185\u90e8\u8bbf\u95ee\uff01 1 2 3 4 5 6 7 8 public class Student { private int a = 10 ; //\u5177\u6709\u79c1\u6709\u8bbf\u95ee\u6743\u9650\uff0c\u53ea\u80fd\u7c7b\u5185\u90e8\u8bbf\u95ee } public static void main ( String [] args ) { Student s = new Student (); System . out . println ( s . a ); //\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u5417\uff1f } \u548c\u6587\u4ef6\u540d\u79f0\u76f8\u540c\u7684\u7c7b\uff0c\u53ea\u80fd\u662fpublic\uff0c\u5e76\u4e14\u4e00\u4e2ajava\u6587\u4ef6\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2apublic class\uff01 1 2 3 4 5 6 7 // Student.java public class Student { } class Test { //\u4e0d\u80fd\u6dfb\u52a0\u6743\u9650\u4fee\u9970\u7b26\uff01\u53ea\u80fd\u662fdefault }","title":"\u8bbf\u95ee\u63a7\u5236"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_16","text":"\u5047\u8bbe\u51fa\u73b0\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u60f3\u8bb0\u5f55100\u4e2a\u6570\u5b57\uff0c\u5b9a\u4e49100\u4e2a\u53d8\u91cf\u8fd8\u53ef\u884c\u5417\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5230\u6570\u7ec4\uff0c\u6570\u7ec4\u662f\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u6709\u5e8f\u96c6\u5408\u3002\u6570\u7ec4\u53ef\u4ee5\u4ee3\u8868\u4efb\u4f55\u76f8\u540c\u7c7b\u578b\u7684\u4e00\u7ec4\u5185\u5bb9\uff08\u5305\u62ec\u5f15\u7528\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\uff09\u5176\u4e2d\u5b58\u653e\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u79f0\u4e3a\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u6570\u7ec4\u7684\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u662f0\uff01 1 2 int [] arr = new int [ 10 ] ; //\u9700\u8981new\u5173\u952e\u5b57\u6765\u521b\u5efa\uff01 String [] arr2 = new String [ 10 ] ; \u6570\u7ec4\u672c\u8eab\u4e5f\u662f\u7c7b\uff08\u7f16\u7a0b\u4e0d\u53ef\u89c1\uff0cC++\u5199\u7684\uff09\uff0c\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff01 1 2 3 int [] arr = new int [ 10 ] ; System . out . println ( arr . length ); //\u6570\u7ec4\u6709\u6210\u5458\u53d8\u91cf\uff01 System . out . println ( arr . toString ()); //\u6570\u7ec4\u6709\u6210\u5458\u65b9\u6cd5\uff01","title":"\u6570\u7ec4\u7c7b\u578b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_17","text":"\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5143\u7d20\u662f\u4f9d\u6b21\u6392\u5217\u7684\uff08\u7ebf\u6027\uff09\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u6765\u8bbf\u95ee\uff01\u58f0\u660e\u683c\u5f0f\u5982\u4e0b\uff1a ``` java \u7c7b\u578b[] \u53d8\u91cf\u540d\u79f0 = new \u7c7b\u578b[\u6570\u7ec4\u5927\u5c0f]; \u7c7b\u578b \u53d8\u91cf\u540d\u79f0n = new \u7c7b\u578b[\u6570\u7ec4\u5927\u5c0f]; //\u652f\u6301C\u8bed\u8a00\u6837\u5f0f\uff0c\u4f46\u4e0d\u63a8\u8350\uff01 \u7c7b\u578b[] \u53d8\u91cf\u540d\u79f0 = new \u7c7b\u578b[]{...}; //\u9759\u6001\u521d\u59cb\u5316\uff08\u76f4\u63a5\u6307\u5b9a\u503c\u548c\u5927\u5c0f\uff09 \u7c7b\u578b[] \u53d8\u91cf\u540d\u79f0 = {...}; //\u540c\u4e0a\uff0c\u4f46\u662f\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u8d4b\u503c 1 2 3 4 5 6 7 \u521b\u5efa\u51fa\u6765\u7684\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u9ed8\u8ba4\u503c\uff08\u89c4\u5219\u548c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4e00\u6837\uff0cC\u8bed\u8a00\u521b\u5efa\u7684\u6570\u7ec4\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u53bb\u8bbf\u95ee\uff1a ```java int[] arr = new int[10]; arr[0] = 626; System.out.println(arr[0]); System.out.println(arr[1]); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \u6570\u7ec4\u53d8\u91cf\u540d\u79f0.length \u6765\u83b7\u53d6\u5f53\u524d\u6570\u7ec4\u957f\u5ea6\uff1a 1 2 int [] arr = new int [] { 1 , 2 , 3 }; System . out . println ( arr . length ); //\u6253\u5370length\u6210\u5458\u53d8\u91cf\u7684\u503c \u6570\u7ec4\u5728\u521b\u5efa\u65f6\uff0c\u5c31\u56fa\u5b9a\u957f\u5ea6\uff0c\u4e0d\u53ef\u66f4\u6539\uff01\u8bbf\u95ee\u8d85\u51fa\u6570\u7ec4\u957f\u5ea6\u7684\u5185\u5bb9\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\uff01 1 2 3 4 5 String [] arr = new String [ 10 ] ; System . out . println ( arr [ 10 ] ); //\u51fa\u73b0\u5f02\u5e38\uff01 //Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 11 // at com.test.Application.main(Application.java:7) \u601d\u8003\uff1a\u80fd\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539length\u7684\u503c\u6765\u5b9e\u73b0\u52a8\u6001\u6269\u5bb9\u5462\uff1f 1 2 int [] arr = new int [] { 1 , 2 , 3 }; arr . length = 10 ; \u6570\u7ec4\u505a\u5b9e\u53c2\uff0c\u56e0\u4e3a\u6570\u7ec4\u4e5f\u662f\u7c7b\uff0c\u6240\u4ee5\u5f62\u53c2\u5f97\u5230\u7684\u662f\u6570\u7ec4\u7684\u5f15\u7528\u800c\u4e0d\u662f\u590d\u5236\u7684\u6570\u7ec4\uff0c\u64cd\u4f5c\u7684\u4f9d\u7136\u662f\u6570\u7ec4\u5bf9\u8c61\u672c\u8eab 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 }; test ( arr ); System . out . println ( arr [ 0 ] ); } private static void test ( int [] arr ){ arr [ 0 ] = 2934 ; }","title":"\u4e00\u7ef4\u6570\u7ec4"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_18","text":"\u5982\u679c\u6211\u4eec\u60f3\u8981\u5feb\u901f\u6253\u5370\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u53c8\u600e\u4e48\u529e\u5462\uff1f","title":"\u6570\u7ec4\u7684\u904d\u5386"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#for","text":"\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u8054\u60f3\u5230for\u5faa\u73af 1 2 3 4 int [] arr = new int [] { 1 , 2 , 3 }; for ( int i = 0 ; i < arr . length ; i ++ ) { System . out . println ( arr [ i ] ); }","title":"\u4f20\u7edffor\u5faa\u73af"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#foreach","text":"\u4f20\u7edffor\u5faa\u73af\u867d\u7136\u53ef\u63a7\u6027\u9ad8\uff0c\u4f46\u662f\u4e0d\u591f\u7701\u4e8b\uff0c\u8981\u5199\u4e00\u5927\u5806\u4e1c\u897f\uff0c\u6709\u6ca1\u6709\u4e00\u79cd\u7701\u4e8b\u7684\u5199\u6cd5\u5462\uff1f 1 2 3 4 int [] arr = new int [] { 1 , 2 , 3 }; for ( int i : arr ) { System . out . println ( i ); } foreach\u5c5e\u4e8e\u589e\u5f3a\u578b\u7684for\u5faa\u73af\uff0c\u5b83\u4f7f\u5f97\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u540c\u65f6\u6211\u4eec\u80fd\u76f4\u63a5\u62ff\u5230\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\u3002","title":"foreach"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_19","text":"\u4e8c\u7ef4\u6570\u7ec4\u5176\u5b9e\u5c31\u662f\u5b58\u653e\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5b58\u653e\u4e00\u4e2a\u6570\u7ec4\u7684\u5f15\u7528\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u53d8\u6210\u4e86\u4e00\u4e2a\u5e73\u9762\u3002 1 2 3 4 5 //\u4e09\u884c\u4e24\u5217 int [][] arr = { { 1 , 2 }, { 3 , 4 }, { 5 , 6 }}; System . out . println ( arr [ 2 ][ 1 ] ); \u4e8c\u7ef4\u6570\u7ec4\u7684\u904d\u5386\u540c\u4e00\u7ef4\u6570\u7ec4\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u5d4c\u5957\u5faa\u73af\uff01 1 2 3 4 5 6 7 8 int [][] arr = new int [][] { { 1 , 2 }, { 3 , 4 }, { 5 , 6 }}; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 2 ; j ++ ) { System . out . println ( arr [ i ][ j ] ); } }","title":"\u4e8c\u7ef4\u6570\u7ec4"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_20","text":"\u4e0d\u6b62\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8fd8\u5b58\u5728\u4e09\u7ef4\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u5b58\u653e\u6570\u7ec4\u7684\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u539f\u7406\u540c\u4e8c\u7ef4\u6570\u7ec4\u4e00\u6837\uff0c\u9010\u7ea7\u8bbf\u95ee\u5373\u53ef\u3002","title":"\u591a\u7ef4\u6570\u7ec4"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_21","text":"\u53ef\u53d8\u957f\u53c2\u6570\u5176\u5b9e\u5c31\u662f\u6570\u7ec4\u7684\u4e00\u79cd\u5e94\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u65b9\u6cd5\u7684\u5f62\u53c2\u4e3a\u4e00\u4e2a\u53ef\u53d8\u957f\u53c2\u6570\uff0c\u8981\u6c42\u5b9e\u53c2\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u52a8\u6001\u586b\u51650\u4e2a\u6216\u591a\u4e2a\uff0c\u800c\u4e0d\u662f\u56fa\u5b9a\u7684\u6570\u91cf 1 2 3 4 5 6 7 public static void main ( String [] args ) { test ( \"AAA\" , \"BBB\" , \"CCC\" ); //\u53ef\u53d8\u957f\uff0c\u6700\u540e\u90fd\u4f1a\u88ab\u81ea\u52a8\u5c01\u88c5\u6210\u4e00\u4e2a\u6570\u7ec4 } private static void test ( String ... test ){ System . out . println ( test [ 0 ] ); //\u5176\u5b9e\u53c2\u6570\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4 } \u7531\u4e8e\u662f\u6570\u7ec4\uff0c\u6240\u4ee5\u8bf4\u53ea\u80fd\u4f7f\u7528\u4e00\u79cd\u7c7b\u578b\u7684\u53ef\u53d8\u957f\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u53d8\u957f\u53c2\u6570\u53ea\u80fd\u653e\u5728\u6700\u540e\u4e00\u4f4d\uff01","title":"\u53ef\u53d8\u957f\u53c2\u6570"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_22","text":"\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u7ec4\uff0c\u4f46\u662f\u6570\u7ec4\u91cc\u9762\u7684\u6570\u636e\u662f\u4e71\u5e8f\u6392\u5217\u7684\uff0c\u5982\u4f55\u4f7f\u5b83\u53d8\u5f97\u6709\u5e8f\uff1f 1 int [] arr = { 8 , 5 , 0 , 1 , 4 , 9 , 2 , 3 , 6 , 7 }; \u6392\u5e8f\u662f\u7f16\u7a0b\u7684\u4e00\u4e2a\u91cd\u8981\u6280\u80fd\uff0c\u638c\u63e1\u6392\u5e8f\u7b97\u6cd5\uff0c\u4f60\u7684\u6280\u672f\u624d\u80fd\u66f4\u4e0a\u4e00\u5c42\u697c\uff0c\u5f88\u591a\u7684\u9879\u76ee\u90fd\u9700\u8981\u7528\u5230\u6392\u5e8f\uff01\u4e09\u5927\u6392\u5e8f\u7b97\u6cd5\uff1a \u5192\u6ce1\u6392\u5e8f \u5192\u6ce1\u6392\u5e8f\u5c31\u662f\u5192\u6ce1\uff0c\u5176\u5b9e\u5c31\u662f\u4e0d\u65ad\u4f7f\u5f97\u6211\u4eec\u65e0\u5e8f\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u6570\u5411\u524d\u79fb\u52a8\uff0c\u7ecf\u5386n\u8f6e\u5faa\u73af\u9010\u6e10\u5c06\u6bcf\u4e00\u4e2a\u6570\u63a8\u5411\u6700\u524d\u3002 \u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6392\u5e8f\u5176\u5b9e\u5c31\u8ddf\u6211\u4eec\u6253\u724c\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u5728\u6478\u724c\u7684\u65f6\u5019\uff0c\u724c\u5806\u662f\u4e71\u5e8f\u7684\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u5f20\u4e00\u5f20\u6478\u5230\u624b\u4e2d\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97\u5b83\u53d8\u6210\u4e86\u6709\u5e8f\u7684\uff01 \u9009\u62e9\u6392\u5e8f \u9009\u62e9\u6392\u5e8f\u5176\u5b9e\u5c31\u662f\u6bcf\u6b21\u90fd\u9009\u62e9\u5f53\u524d\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u6392\u5230\u6700\u524d\u9762\uff01","title":"\u5b9e\u6218\uff1a\u4e09\u5927\u57fa\u672c\u6392\u5e8f\u7b97\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_23","text":"\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\u3002","title":"\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_24","text":"\u5c01\u88c5\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u53d8\u91cf\u7684\u5b89\u5168\u6027\uff0c\u4f7f\u7528\u8005\u4e0d\u5fc5\u5728\u610f\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u53ea\u662f\u901a\u8fc7\u5916\u90e8\u63a5\u53e3\u5373\u53ef\u8bbf\u95ee\u7c7b\u7684\u6210\u5458\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u5c01\u88c5\uff0c\u7c7b\u4e2d\u7684\u5b9e\u4f8b\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u548c\u4fee\u6539\uff0c\u53ef\u80fd\u7ed9\u6574\u4e2a\u4ee3\u7801\u5e26\u6765\u4e0d\u597d\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u5728\u7f16\u5199\u7c7b\u65f6\u4e00\u822c\u5c06\u6210\u5458\u53d8\u91cf\u79c1\u6709\u5316\uff0c\u5916\u90e8\u7c7b\u9700\u8981\u540cgetter\u548csetter\u65b9\u6cd5\u6765\u67e5\u770b\u548c\u8bbe\u7f6e\u53d8\u91cf\u3002 \u8bbe\u60f3\uff1a\u5b66\u751f\u5c0f\u660e\u5df2\u7ecf\u521b\u5efa\u6210\u529f\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u80fd\u968f\u4fbf\u6539\u4ed6\u7684\u540d\u5b57\u548c\u5e74\u9f84\u5417\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class Student { private String name ; private int age ; public Student ( String name , int age ) { this . name = name ; this . age = age ; } public int getAge () { return age ; } public String getName () { return name ; } } \u4e5f\u5c31\u662f\u8bf4\uff0c\u5916\u90e8\u73b0\u5728\u53ea\u80fd\u901a\u8fc7\u8c03\u7528\u6211\u5b9a\u4e49\u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u6210\u5458\u5c5e\u6027\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5c0f\u660e\u53ef\u4ee5\u4fee\u6539\u540d\u5b57\uff0c\u4f46\u662f\u540d\u5b57\u4e2d\u4e0d\u80fd\u5305\u542b\"\u5c0f\"\u8fd9\u4e2a\u5b57\u3002 1 2 3 4 public void setName ( String name ) { if ( name . contains ( \"\u5c0f\" )) return ; this . name = name ; } \u5355\u72ec\u7ed9\u5916\u90e8\u5f00\u653e\u8bbe\u7f6e\u540d\u79f0\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u8fd8\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\uff0c\u6240\u4ee5\u8bf4\u4e0d\u80fd\u7ed9\u5916\u90e8\u76f4\u63a5\u64cd\u4f5c\u6210\u5458\u53d8\u91cf\u7684\u6743\u9650\uff01 \u5c01\u88c5\u601d\u60f3\u5176\u5b9e\u5c31\u662f\u628a\u5b9e\u73b0\u7ec6\u8282\u7ed9\u9690\u85cf\u4e86\uff0c\u5916\u90e8\u53ea\u9700\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4ec0\u4e48\u4f5c\u7528\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u5b9e\u73b0\u3002 \u5c01\u88c5\u5c31\u662f\u901a\u8fc7\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u6765\u5b9e\u73b0\u7684\u3002","title":"\u5c01\u88c5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_25","text":"\u7ee7\u627f\u5c5e\u4e8e\u975e\u5e38\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u5728\u5b9a\u4e49\u4e0d\u540c\u7c7b\u7684\u65f6\u5019\u5b58\u5728\u4e00\u4e9b\u76f8\u540c\u5c5e\u6027\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5171\u540c\u5c5e\u6027\u62bd\u8c61\u6210\u4e00\u4e2a\u7236\u7c7b\uff0c\u5728\u5b9a\u4e49\u5176\u4ed6\u5b50\u7c7b\u65f6\u53ef\u4ee5\u7ee7\u627f\u81ea\u8be5\u7236\u7c7b\uff0c\u51cf\u5c11\u4ee3\u7801\u7684\u91cd\u590d\u5b9a\u4e49\uff0c\u5b50\u7c7b\u53ef\u4ee5\u4f7f\u7528\u7236\u7c7b\u4e2d \u975e\u79c1\u6709 \u7684\u6210\u5458\u3002 \u73b0\u5728\u5b66\u751f\u5206\u4e3a\u4e24\u79cd\uff0c\u827a\u672f\u751f\u548c\u4f53\u80b2\u751f\uff0c\u4ed6\u4eec\u90fd\u662f\u5b66\u751f\u7684\u5206\u652f\uff0c\u4f46\u662f\u4ed6\u4eec\u90fd\u6709\u81ea\u5df1\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class SportsStudent extends Student { //\u901a\u8fc7extends\u5173\u952e\u5b57\u6765\u7ee7\u627f\u7236\u7c7b public SportsStudent ( String name , int age ) { super ( name , age ); //\u5fc5\u987b\u5148\u901a\u8fc7super\u5173\u952e\u5b57\uff08\u6307\u4ee3\u7236\u7c7b\uff09\uff0c\u5b9e\u73b0\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff01 } public void exercise (){ System . out . println ( \"\u6211\u8d85\u52c7\u7684\uff01\" ); } } public class ArtStudent extends Student { public ArtStudent ( String name , int age ) { super ( name , age ); } public void art (){ System . out . println ( \"\u968f\u624b\u753b\u4e2a\u6bd5\u52a0\u7d22\uff01\" ); } } \u5b50\u7c7b\u5177\u6709\u7236\u7c7b\u7684\u5168\u90e8\u5c5e\u6027\uff0cprotected\u53ef\u89c1\u4f46\u5916\u90e8\u65e0\u6cd5\u4f7f\u7528\uff08\u5305\u62ec private \u5c5e\u6027\uff0c\u4e0d\u53ef\u89c1\uff0c\u65e0\u6cd5\u4f7f\u7528\uff09\uff0c\u540c\u65f6\u5b50\u7c7b\u8fd8\u80fd\u6709\u81ea\u5df1\u7684\u65b9\u6cd5\u3002\u7ee7\u627f\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b\uff0c\u4e0d\u652f\u6301\u591a\u7ee7\u627f\uff01 \u6bcf\u4e00\u4e2a\u5b50\u7c7b\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2a\u5b9e\u73b0\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5728\u6784\u9020\u65b9\u6cd5\u5f00\u59cb\u4f7f\u7528 super() \uff0c\u5982\u679c\u7236\u7c7b\u4f7f\u7528\u7684\u662f\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b50\u7c7b\u4e0d\u7528\u624b\u52a8\u6307\u660e\u3002 \u6240\u6709\u7c7b\u90fd\u9ed8\u8ba4\u7ee7\u627f\u81eaObject\u7c7b\uff0c\u9664\u975e\u624b\u52a8\u6307\u5b9a\u7c7b\u578b\uff0c\u4f46\u662f\u4f9d\u7136\u6539\u53d8\u4e0d\u4e86\u6700\u9876\u5c42\u7684\u7236\u7c7b\u662fObject\u7c7b\u3002\u6240\u6709\u7c7b\u90fd\u5305\u542bObject\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { Object obj = new Object ; System . out . println ( obj . hashCode ()); //\u6c42\u5bf9\u8c61\u7684hashcode\uff0c\u9ed8\u8ba4\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740 System . out . println ( obj . equals ( obj )); //\u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u540c\uff0c\u9ed8\u8ba4\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u7b49\u540c\u4e8e == System . out . println ( obj . toString ()); //\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u751f\u6210\u5bf9\u8c61\u7684\u7c7b\u540d\u79f0+hashcode } \u5173\u4e8eObject\u7c7b\u7684\u5176\u4ed6\u65b9\u6cd5\uff0c\u6211\u4eec\u4f1a\u5728Java\u591a\u7ebf\u7a0b\u4e2d\u518d\u6765\u63d0\u53ca\u3002","title":"\u7ee7\u627f"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_26","text":"\u591a\u6001\u662f\u540c\u4e00\u4e2a\u884c\u4e3a\u5177\u6709\u591a\u4e2a\u4e0d\u540c\u8868\u73b0\u5f62\u5f0f\u6216\u5f62\u6001\u7684\u80fd\u529b\u3002\u4e5f\u5c31\u662f\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u7531\u4e8e\u5b9e\u73b0\u7c7b\u4e0d\u540c\uff0c\u6267\u884c\u7684\u7ed3\u679c\u4e5f\u4e0d\u540c\uff01","title":"\u591a\u6001"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_27","text":"\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u4e86\u65b9\u6cd5\u7684\u91cd\u8f7d\uff0c\u65b9\u6cd5\u7684\u91cd\u5199\u548c\u91cd\u8f7d\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u91cd\u8f7d\u662f\u539f\u6709\u7684\u65b9\u6cd5\u903b\u8f91\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u66f4\u591a\u53c2\u6570\u7684\u5b9e\u73b0\uff0c\u800c\u91cd\u5199\u662f\u76f4\u63a5\u8986\u76d6\u539f\u6709\u65b9\u6cd5\uff01 1 2 3 4 5 6 7 8 9 10 //\u7236\u7c7b\u4e2d\u7684study public void study (){ System . out . println ( \"\u5b66\u4e60\" ); } //\u5b50\u7c7b\u4e2d\u7684study @Override //\u58f0\u660e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u91cd\u5199\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u8981\uff0c\u6211\u4eec\u73b0\u9636\u6bb5\u4e0d\u63a5\u89e6 public void study (){ System . out . println ( \"\u7ed9\u4f60\u770b\u70b9\u597d\u5eb7\u7684\" ); } \u518d\u6b21\u5b9a\u4e49\u540c\u6837\u7684\u65b9\u6cd5\u540e\uff0c\u7236\u7c7b\u7684\u65b9\u6cd5\u5c31\u88ab\u8986\u76d6\uff01\u5b50\u7c7b\u8fd8\u53ef\u4ee5\u7ed9\u7236\u7c7b\u65b9\u6cd5\u63d0\u5347\u8bbf\u95ee\u6743\u9650\uff01 1 2 3 4 public static void main ( String [] args ) { SportsStudent student = new SportsStudent ( \"lbw\" , 20 ); student . study (); //\u8f93\u51fa\u5b50\u7c7b\u5b9a\u4e49\u7684\u5185\u5bb9 } \u601d\u8003\uff1a\u9759\u6001\u65b9\u6cd5\u80fd\u88ab\u91cd\u5199\u5417\uff1f \u5f53\u6211\u4eec\u5728\u91cd\u5199\u65b9\u6cd5\u65f6\uff0c\u4e0d\u4ec5\u60f3\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u903b\u8f91\uff0c\u540c\u65f6\u8fd8\u5e0c\u671b\u6267\u884c\u7236\u7c7b\u7684\u903b\u8f91\uff08\u4e5f\u5c31\u662f\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff09\u600e\u4e48\u529e\u5462\uff1f 1 2 3 4 public void study (){ super . study (); System . out . println ( \"\u7ed9\u4f60\u770b\u70b9\u597d\u5eb7\u7684\" ); } \u540c\u7406\uff0c\u5982\u679c\u60f3\u8bbf\u95ee\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528super\u5173\u952e\u5b57\u6765\u8bbf\u95ee\uff0c\u6ce8\u610f\uff0c\u5b50\u7c7b\u53ef\u4ee5\u5177\u6709\u548c\u7236\u7c7b\u76f8\u540c\u7684\u6210\u5458\u53d8\u91cf\uff01\u800c\u5728\u65b9\u6cd5\u4e2d\u8bbf\u95ee\u7684\u9ed8\u8ba4\u662f \u5f62\u53c2\u5217\u8868\u4e2d > \u5f53\u524d\u7c7b\u7684\u6210\u5458\u53d8\u91cf > \u7236\u7c7b\u6210\u5458\u53d8\u91cf 1 2 3 4 5 public void setTest ( int test ){ test = 1 ; this . test = 1 ; super . test = 1 ; }","title":"\u65b9\u6cd5\u7684\u91cd\u5199"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_28","text":"\u6211\u4eec\u66fe\u7ecf\u5b66\u4e60\u8fc7\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u652f\u6301\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u800c\u6211\u4eec\u7684\u7c7b\u4e5f\u662f\u652f\u6301\u7c7b\u578b\u8f6c\u6362\u7684\uff08\u4ec5\u9650\u4e8e\u5b58\u5728\u4eb2\u7f18\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff09\u6bd4\u5982\u5b50\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5411\u4e0a\u8f6c\u578b\uff1a 1 2 Student student = new SportsStudent ( \"lbw\" , 20 ); //\u7236\u7c7b\u53d8\u91cf\u5f15\u7528\u5b50\u7c7b\u5b9e\u4f8b student . study (); //\u5f97\u5230\u4f9d\u7136\u662f\u5177\u4f53\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7c7b\u578b\u7684\u7ed3\u679c \u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u5df2\u7ecf\u660e\u786e\u662f\u7531\u54ea\u4e2a\u7c7b\u5b9e\u73b0\u7684\u7236\u7c7b\u5f15\u7528\uff0c\u5f3a\u5236\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 Student student = new SportsStudent ( \"lbw\" , 20 ); //\u662f\u7531SportsStudent\u8fdb\u884c\u5b9e\u73b0\u7684 //... do something... SportsStudent ps = ( SportsStudent ) student ; //\u8ba9\u5b83\u53d8\u6210\u4e00\u4e2a\u5177\u4f53\u7684\u5b50\u7c7b ps . sport (); //\u8c03\u7528\u5177\u4f53\u5b9e\u73b0\u7c7b\u7684\u65b9\u6cd5 \u8fd9\u6837\u7684\u7c7b\u578b\u8f6c\u6362\u79f0\u4e3a\u5411\u4e0b\u8f6c\u578b\u3002","title":"\u518d\u8c08\u7c7b\u578b\u8f6c\u6362"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#instanceof","text":"\u90a3\u4e48\u6211\u4eec\u5982\u679c\u53ea\u662f\u5f97\u5230\u4e00\u4e2a\u7236\u7c7b\u5f15\u7528\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u5b83\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\u5b50\u7c7b\u7684\u5b9e\u73b0\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528instanceof\u5173\u952e\u5b57\u6765\u5b9e\u73b0\uff0c\u5b83\u80fd\u591f\u8fdb\u884c\u7c7b\u578b\u5224\u65ad\uff01 1 2 3 4 5 6 7 8 9 private static void test ( Student student ){ if ( student instanceof SportsStudent ){ SportsStudent sportsStudent = ( SportsStudent ) student ; sportsStudent . sport (); } else if ( student instanceof ArtStudent ){ ArtStudent artStudent = ( ArtStudent ) student ; artStudent . art (); } } \u901a\u8fc7\u8fdb\u884c\u7c7b\u578b\u5224\u65ad\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u660e\u786e\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\u5230\u5e95\u662f\u54ea\u4e2a\u7c7b\uff01 \u601d\u8003\uff1a student instanceof Student \u7684\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f","title":"instanceof\u5173\u952e\u5b57"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#final","text":"\u6211\u4eec\u76ee\u524d\u53ea\u77e5\u9053 final \u5173\u952e\u5b57\u80fd\u591f\u4f7f\u5f97\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u4e0d\u53ef\u66f4\u6539\uff0c\u90a3\u4e48\u5982\u679c\u5728\u7c7b\u524d\u9762\u58f0\u660efinal\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f 1 2 3 public final class Student { //\u7c7b\u88ab\u58f0\u660e\u4e3a\u7ec8\u6001\uff0c\u90a3\u4e48\u5b83\u8fd8\u80fd\u88ab\u7ee7\u627f\u5417 } \u7c7b\u4e00\u65e6\u88ab\u58f0\u660e\u4e3a\u7ec8\u6001\uff0c\u5c06\u65e0\u6cd5\u518d\u88ab\u7ee7\u627f\uff0c\u4e0d\u5141\u8bb8\u5b50\u7c7b\u7684\u5b58\u5728\uff01\u800c\u65b9\u6cd5\u88ab\u58f0\u660e\u4e3afinal\u5462\uff1f 1 2 3 public final void study (){ //\u8fd8\u80fd\u91cd\u5199\u5417 System . out . println ( \"\u5b66\u4e60\" ); } \u5982\u679c\u7c7b\u7684\u6210\u5458\u5c5e\u6027\u88ab\u58f0\u660e\u4e3afinal\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u6216\u662f\u5728\u5b9a\u4e49\u65f6\u8d4b\u521d\u59cb\u503c\uff01 1 2 3 4 5 6 7 private final String name ; //\u5f15\u7528\u7c7b\u578b\u4e0d\u5141\u8bb8\u518d\u6307\u5411\u5176\u4ed6\u5bf9\u8c61 private final int age ; //\u57fa\u672c\u7c7b\u578b\u503c\u4e0d\u5141\u8bb8\u53d1\u751f\u6539\u53d8 public Student ( String name , int age ) { this . name = name ; this . age = age ; } \u5b66\u4e60\u5b8c\u5c01\u88c5\u7ee7\u627f\u548c\u591a\u6001\u4e4b\u540e\uff0c\u6211\u4eec\u63a8\u8350\u5728\u4e0d\u4f1a\u518d\u53d1\u751f\u6539\u53d8\u7684\u6210\u5458\u5c5e\u6027\u4e0a\u6dfb\u52a0final\u5173\u952e\u5b57\uff0cJVM\u4f1a\u5bf9\u6dfb\u52a0\u4e86final\u5173\u952e\u5b57\u7684\u5c5e\u6027\u8fdb\u884c\u4f18\u5316\uff01","title":"\u518d\u8c08final\u5173\u952e\u5b57"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_29","text":"\u7c7b\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u800c\u62bd\u8c61\u7c7b\uff0c\u628a\u7c7b\u8fd8\u8981\u62bd\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u53ea\u4fdd\u7559\u7279\u5f81\uff0c\u800c\u4e0d\u4fdd\u7559\u5177\u4f53\u5448\u73b0\u5f62\u6001\uff0c\u6bd4\u5982\u65b9\u6cd5\u53ef\u4ee5\u5b9a\u4e49\u597d\uff0c\u4f46\u662f\u6211\u53ef\u4ee5\u4e0d\u53bb\u5b9e\u73b0\u5b83\uff0c\u800c\u662f\u4ea4\u7531\u5b50\u7c7b\u6765\u8fdb\u884c\u5b9e\u73b0\uff01 1 2 3 public abstract class Student { //\u62bd\u8c61\u7c7b public abstract void test (); //\u62bd\u8c61\u65b9\u6cd5 } \u901a\u8fc7\u4f7f\u7528 abstract \u5173\u952e\u5b57\u6765\u8868\u660e\u4e00\u4e2a\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u4f7f\u7528 abstract \u5173\u952e\u5b57\u6765\u8868\u660e\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u62bd\u8c61\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u666e\u901a\u65b9\u6cd5\uff0c\u62bd\u8c61\u65b9\u6cd5\u4e0d\u9700\u8981\u7f16\u5199\u5177\u4f53\u5b9e\u73b0\uff08\u65e0\u65b9\u6cd5\u4f53\uff09\u4f46\u662f \u5fc5\u987b \u7531\u5b50\u7c7b\u5b9e\u73b0\uff08\u9664\u975e\u5b50\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff09\uff01 \u62bd\u8c61\u7c7b\u7531\u4e8e\u4e0d\u662f\u5177\u4f53\u7684\u7c7b\u5b9a\u4e49\uff0c\u56e0\u6b64\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7new\u5173\u952e\u5b57\u6765\u521b\u5efa\u5bf9\u8c61\uff01 1 2 3 4 5 Student s = new Student (){ //\u53ea\u80fd\u76f4\u63a5\u521b\u5efa\u5e26\u5b9e\u73b0\u7684\u533f\u540d\u5185\u90e8\u7c7b\uff01 public void test (){ } } \u56e0\u6b64\uff0c\u62bd\u8c61\u7c7b\u4e00\u822c\u53ea\u7528\u4f5c\u7ee7\u627f\u4f7f\u7528\uff01\u62bd\u8c61\u7c7b\u4f7f\u5f97\u7ee7\u627f\u5173\u7cfb\u4e4b\u95f4\u66f4\u52a0\u660e\u786e\uff1a 1 2 3 public void study (){ //\u73b0\u5728\u53ea\u80fd\u7531\u5b50\u7c7b\u7f16\u5199\uff0c\u7236\u7c7b\u6ca1\u6709\u5b9a\u4e49\uff0c\u66f4\u52a0\u660e\u786e\u4e86\u591a\u6001\u7684\u5b9a\u4e49\uff01\u540c\u4e00\u4e2a\u65b9\u6cd5\u591a\u79cd\u5b9e\u73b0\uff01 System . out . println ( \"\u7ed9\u4f60\u770b\u70b9\u597d\u5eb7\u7684\" ); }","title":"\u62bd\u8c61\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_30","text":"\u63a5\u53e3\u751a\u81f3\u6bd4\u62bd\u8c61\u7c7b\u8fd8\u62bd\u8c61\uff0c\u4ed6\u53ea\u4ee3\u8868\u67d0\u4e2a\u786e\u5207\u7684\u529f\u80fd\uff01\u4e5f\u5c31\u662f\u53ea\u5305\u542b\u65b9\u6cd5\u7684\u5b9a\u4e49\uff0c\u751a\u81f3\u90fd\u4e0d\u662f\u4e00\u4e2a\u7c7b\uff01\u63a5\u53e3\u5305\u542b\u4e86\u4e00\u4e9b\u5217\u65b9\u6cd5\u7684\u5177\u4f53\u5b9a\u4e49\uff0c\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8868\u793a\u7c7b\u652f\u6301\u63a5\u53e3\u4ee3\u8868\u7684\u529f\u80fd\uff08\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u63d2\u4ef6\uff0c\u53ea\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u9644\u5c5e\u529f\u80fd\u52a0\u5728\u4e3b\u4f53\u4e0a\uff0c\u540c\u65f6\u5177\u4f53\u5b9e\u73b0\u8fd8\u9700\u8981\u7531\u4e3b\u4f53\u6765\u5b9e\u73b0\uff09 1 2 3 public interface Eat { void eat (); } \u901a\u8fc7\u4f7f\u7528 interface \u5173\u952e\u5b57\u6765\u8868\u660e\u662f\u4e00\u4e2a\u63a5\u53e3\uff08\u6ce8\u610f\uff0c\u8fd9\u91ccclass\u5173\u952e\u5b57\u88ab\u66ff\u6362\u4e3a\u4e86interface\uff09\u63a5\u53e3\u53ea\u80fd\u5305\u542b public \u6743\u9650\u7684 \u62bd\u8c61\u65b9\u6cd5 \uff01\uff08Java8\u4ee5\u540e\u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff09\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e default \u5173\u952e\u5b57\u6765\u7ed9\u62bd\u8c61\u65b9\u6cd5\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\uff1a 1 2 3 4 5 public interface Eat { default void eat (){ //do something... } } \u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4e3apublic static final 1 2 3 4 public interface Eat { int a = 1 ; void eat (); } \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u4e2a\u63a5\u53e3\uff0c\u4f46\u662f\u4e0d\u80fd\u7406\u89e3\u4e3a\u591a\u7ee7\u627f\uff01\uff08\u5b9e\u9645\u4e0a\u5b9e\u73b0\u63a5\u53e3\u662f\u9644\u52a0\u529f\u80fd\uff0c\u548c\u7ee7\u627f\u7684\u6982\u5ff5\u6709\u4e00\u5b9a\u51fa\u5165\uff0c\u9876\u591a\u8bf4\u662f\u591a\u7ee7\u627f\u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff09\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u9644\u52a0\u5f88\u591a\u4e2a\u529f\u80fd\uff01 1 2 3 4 5 6 public class SportsStudent extends Student implements Eat , ...{ @Override public void eat () { } } \u7c7b\u901a\u8fc7 implements \u5173\u952e\u5b57\u6765\u58f0\u660e\u5b9e\u73b0\u7684\u63a5\u53e3\uff01\u6bcf\u4e2a\u63a5\u53e3\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\uff01 \u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u4e5f\u80fd\u901a\u8fc7instanceof\u5173\u952e\u5b57\u5224\u65ad\uff0c\u4e5f\u652f\u6301\u5411\u4e0a\u548c\u5411\u4e0b\u8f6c\u578b\uff01","title":"\u63a5\u53e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_31","text":"\u7c7b\u4e2d\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u7c7b\uff01\u5404\u79cd\u5404\u6837\u7684\u957f\u76f8\u602a\u5f02\u7684\u4ee3\u7801\u5c31\u662f\u4ece\u8fd9\u91cc\u5f00\u59cb\u51fa\u73b0\u7684\uff01","title":"\u5185\u90e8\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_32","text":"\u6211\u4eec\u7684\u7c7b\u4e2d\u53ef\u4ee5\u5728\u5d4c\u5957\u4e00\u4e2a\u7c7b\uff1a 1 2 3 4 5 public class Test { class Inner { //\u7c7b\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b } } \u6210\u5458\u5185\u90e8\u7c7b\u548c\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u65b9\u6cd5\u4e00\u6837\uff0c\u90fd\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5fc5\u987b\u5b58\u5728\u5916\u90e8\u5bf9\u8c61\uff0c\u624d\u80fd\u521b\u5efa\u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\uff01 1 2 3 4 public static void main ( String [] args ) { Test test = new Test (); Test . Inner inner = test . new Inner (); //\u5199\u6cd5\u6709\u90a3\u4e48\u4e00\u4e1d\u602a\u5f02\uff0c\u4f46\u662f\u6ca1\u6bdb\u75c5\uff01 }","title":"\u6210\u5458\u5185\u90e8\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_33","text":"\u9759\u6001\u5185\u90e8\u7c7b\u5176\u5b9e\u5c31\u548c\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u4e00\u6837\uff0c\u662f\u5c5e\u4e8e\u7c7b\u62e5\u6709\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 \u7c7b\u540d. \u53bb\u8bbf\u95ee: 1 2 3 4 5 6 7 8 9 public class Test { static class Inner { } } public static void main ( String [] args ) { Test . Inner inner = new Test . Inner (); //\u4e0d\u7528\u518d\u521b\u5efa\u5916\u90e8\u7c7b\u5bf9\u8c61\u4e86\uff01 }","title":"\u9759\u6001\u5185\u90e8\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_34","text":"\u5bf9\uff0c\u4f60\u6ca1\u731c\u9519\uff0c\u5c31\u662f\u548c\u5c40\u90e8\u53d8\u91cf\u4e00\u6837\u54d2~ 1 2 3 4 5 6 7 8 9 public class Test { public void test (){ class Inner { } Inner inner = new Inner (); } } \u53cd\u6b63\u6211\u662f\u6ca1\u7528\u8fc7\uff01\u5185\u90e8\u7c7b -> \u7d2f\u4e0d\u7d2f -> \u53cd\u6b63\u6211\u7d2f\u4e86\uff01","title":"\u5c40\u90e8\u5185\u90e8\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_35","text":"\u533f\u540d\u5185\u90e8\u7c7b\u624d\u662f\u6211\u4eec\u7684\u91cd\u70b9\uff0c\u4e5f\u662f\u5b9e\u73b0lambda\u8868\u8fbe\u5f0f\u7684\u539f\u7406\uff01\u533f\u540d\u5185\u90e8\u7c7b\u5176\u5b9e\u5c31\u662f\u5728new\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5bf9\u63a5\u53e3\u6216\u662f\u62bd\u8c61\u7c7b\u7684\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { Eat eat = new Eat () { @Override public void eat () { //DO something... } }; } \u6211\u4eec\u4e0d\u7528\u5355\u72ec\u53bb\u521b\u5efa\u4e00\u4e2a\u7c7b\u6765\u5b9e\u73b0\uff0c\u800c\u662f\u53ef\u4ee5\u76f4\u63a5\u5728new\u7684\u65f6\u5019\u5199\u5bf9\u5e94\u7684\u5b9e\u73b0\uff01\u4f46\u662f\uff0c\u8fd9\u6837\u5199\uff0c\u65e0\u6cd5\u5b9e\u73b0\u590d\u7528\uff0c\u53ea\u80fd\u5728\u8fd9\u91cc\u4f7f\u7528\uff01","title":"\u533f\u540d\u5185\u90e8\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#lambda","text":"\u8bfb\u4f5c \u03bb \u8868\u8fbe\u5f0f\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u63a5\u53e3\u533f\u540d\u5b9e\u73b0\u7684\u7b80\u5316\uff0c\u6bd4\u5982\u8bf4\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Eat eat = new Eat () { @Override public void eat () { //DO something... } }; } public static void main ( String [] args ) { Eat eat = () -> {}; //\u7b49\u4ef7\u4e8e\u4e0a\u8ff0\u5185\u5bb9 } lambda\u8868\u8fbe\u5f0f\uff08\u533f\u540d\u5185\u90e8\u7c7b\uff09\u53ea\u80fd\u8bbf\u95ee\u5916\u90e8\u7684final\u7c7b\u578b\u6216\u662f\u9690\u5f0ffinal\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\uff01 \u4e3a\u4e86\u65b9\u4fbf\uff0cJDK\u9ed8\u8ba4\u5c31\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e13\u95e8\u5199\u51fd\u6570\u5f0f\u7684\u63a5\u53e3\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecdConsumer","title":"lambda\u8868\u8fbe\u5f0f"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_36","text":"\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u60f3\u7ed9\u5c0f\u660e\u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\uff08\u8dd1\u6b65\u3001\u5b66\u4e60\u3001\u7761\u89c9\uff09\uff0c\u5916\u90e8\u53ef\u4ee5\u5b9e\u65f6\u83b7\u53d6\u5c0f\u660e\u7684\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Student { private final String name ; private final int age ; private String status ; //... public void setStatus ( String status ) { this . status = status ; } public String getStatus () { return status ; } } \u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u4ec5\u4ec5\u662f\u5b58\u50a8\u5b57\u7b26\u4e32\uff0c\u4f3c\u4e4e\u5916\u90e8\u53ef\u4ee5\u4e0d\u6309\u7167\u6211\u4eec\u89c4\u5219\uff0c\u4f20\u5165\u4e00\u4e9b\u5176\u4ed6\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u591f\u4e25\u8c28\u7684\uff01 \u6709\u6ca1\u6709\u4e00\u79cd\u529e\u6cd5\uff0c\u80fd\u591f\u66f4\u597d\u5730\u53bb\u5b9e\u73b0\u8fd9\u6837\u7684\u72b6\u6001\u6807\u8bb0\u5462\uff1f\u6211\u4eec\u5e0c\u671b\u5f00\u53d1\u8005\u62ff\u5230\u4f7f\u7528\u7684\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u597d\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u7c7b\uff01 1 2 3 public enum Status { RUNNING , STUDY , SLEEP //\u76f4\u63a5\u5199\u6bcf\u4e2a\u72b6\u6001\u7684\u540d\u5b57\u5373\u53ef\uff0c\u5206\u53f7\u53ef\u4ee5\u4e0d\u6253\uff0c\u4f46\u662f\u63a8\u8350\u6253\u4e0a } \u4f7f\u7528\u679a\u4e3e\u7c7b\u4e5f\u975e\u5e38\u65b9\u4fbf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u76f4\u63a5\u8bbf\u95ee\u5373\u53ef 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Student { private final String name ; private final int age ; private Status status ; //... public void setStatus ( Status status ) { //\u4e0d\u518d\u662fString\uff0c\u800c\u662f\u6211\u4eec\u6307\u5b9a\u7684\u679a\u4e3e\u7c7b\u578b this . status = status ; } public Status getStatus () { return status ; } } public static void main ( String [] args ) { Student student = new Student ( \"\u5c0f\u660e\" , 18 ); student . setStatus ( Status . RUNNING ); System . out . println ( student . getStatus ()); } \u679a\u4e3e\u7c7b\u578b\u4f7f\u7528\u8d77\u6765\u5c31\u975e\u5e38\u65b9\u4fbf\u4e86\uff0c\u5176\u5b9e\u679a\u4e3e\u7c7b\u578b\u7684\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u7c7b\uff0c\u4f46\u662f\u5b83\u7ee7\u627f\u81ea Enum \u7c7b\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a public static final \u7684Status\u7c7b\u578b\u6210\u5458\u53d8\u91cf\uff01 1 2 3 4 5 6 7 8 9 // Compiled from \"Status.java\" public final class com . test . Status extends java . lang . Enum < com . test . Status > { public static final com . test . Status RUNNING ; public static final com . test . Status STUDY ; public static final com . test . Status SLEEP ; public static com . test . Status [] values (); public static com . test . Status valueOf ( java . lang . String ); static {}; } \u65e2\u7136\u679a\u4e3e\u7c7b\u578b\u662f\u666e\u901a\u7684\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed9\u679a\u4e3e\u7c7b\u578b\u6dfb\u52a0\u72ec\u6709\u7684\u6210\u5458\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public enum Status { RUNNING ( \"\u7761\u89c9\" ), STUDY ( \"\u5b66\u4e60\" ), SLEEP ( \"\u7761\u89c9\" ); //\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u88ab\u8986\u76d6\uff0c\u521b\u5efa\u679a\u4e3e\u9700\u8981\u6dfb\u52a0\u53c2\u6570\uff08\u672c\u8d28\u5c31\u662f\u8c03\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff01\uff09 private final String name ; //\u679a\u4e3e\u7684\u6210\u5458\u53d8\u91cf Status ( String name ){ //\u8986\u76d6\u539f\u6709\u6784\u9020\u65b9\u6cd5\uff08\u9ed8\u8ba4private\uff0c\u53ea\u80fd\u5185\u90e8\u4f7f\u7528\uff01\uff09 this . name = name ; } public String getName () { //\u83b7\u53d6\u5c01\u88c5\u7684\u6210\u5458\u53d8\u91cf return name ; } } public static void main ( String [] args ) { Student student = new Student ( \"\u5c0f\u660e\" , 18 ); student . setStatus ( Status . RUNNING ); System . out . println ( student . getStatus (). getName ()); } \u679a\u4e3e\u7c7b\u8fd8\u81ea\u5e26\u4e00\u4e9b\u7ee7\u627f\u4e0b\u6765\u7684\u5b9e\u7528\u65b9\u6cd5 1 2 Status . valueOf ( \"\" ) //\u5c06\u540d\u79f0\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u679a\u4e3e Status . values () //\u5feb\u901f\u83b7\u53d6\u6240\u6709\u7684\u679a\u4e3e","title":"\u679a\u4e3e\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_37","text":"Java\u5e76\u4e0d\u662f\u7eaf\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u867d\u7136Java\u8bed\u8a00\u662f\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u4f46\u662fJava\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5374\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u5728\u5b66\u4e60\u6cdb\u578b\u548c\u96c6\u5408\u4e4b\u524d\uff0c\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u662f\u4e00\u5b9a\u8981\u8bb2\u89e3\u7684\u5185\u5bb9\uff01 \u6211\u4eec\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u5982\u679c\u60f3\u901a\u8fc7\u5bf9\u8c61\u7684\u5f62\u5f0f\u53bb\u4f7f\u7528\u4ed6\u4eec\uff0cJava\u63d0\u4f9b\u7684\u57fa\u672c\u7c7b\u578b\u5305\u88c5\u7c7b\uff0c\u4f7f\u5f97Java\u80fd\u591f\u66f4\u597d\u7684\u4f53\u73b0\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff0c\u540c\u65f6\u4e5f\u4f7f\u5f97\u57fa\u672c\u7c7b\u578b\u80fd\u591f\u652f\u6301\u5bf9\u8c61\u64cd\u4f5c\uff01 byte -> Byte boolean -> Boolean short -> Short char -> Character int -> Integer long -> Long float -> Float double -> Double \u5305\u88c5\u7c7b\u5b9e\u9645\u4e0a\u5c31\u884c\u5c06\u6211\u4eec\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a\u7c7b\uff08\u8fd0\u7528\u4e86\u5c01\u88c5\u7684\u601d\u60f3\uff09 1 2 3 4 5 private final int value ; //Integer\u5185\u90e8\u5176\u5b9e\u672c\u8d28\u8fd8\u662f\u5b58\u4e86\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c public Integer ( int value ) { this . value = value ; } \u73b0\u5728\u6211\u4eec\u64cd\u4f5c\u7684\u5c31\u662fInteger\u5bf9\u8c61\u800c\u4e0d\u662f\u4e00\u4e2aint\u57fa\u672c\u7c7b\u578b\u4e86\uff01 1 2 3 4 public static void main ( String [] args ) { Integer i = 1 ; //\u5305\u88c5\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u63a5\u6536\u5bf9\u5e94\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5e76\u53d8\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff01 System . out . println ( i + i ); //\u5305\u88c5\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u88ab\u5f53\u505a\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u8fdb\u884c\u64cd\u4f5c\uff01 }","title":"\u57fa\u672c\u7c7b\u578b\u5305\u88c5\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_38","text":"\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5305\u88c5\u7c7b\u578b\u80fd\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u5177\u4f53\u503c\u6765\u8d4b\u503c\u5462\uff1f\u5176\u5b9e\u4f9d\u9760\u7684\u662f\u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1\u673a\u5236 1 2 Integer i = 1 ; //\u5176\u5b9e\u8fd9\u91cc\u53ea\u662f\u7b80\u5199\u4e86\u800c\u5df2 Integer i = Integer . valueOf ( 1 ); //\u7f16\u8bd1\u540e\u771f\u6b63\u7684\u6837\u5b50 \u8c03\u7528valueOf\u6765\u751f\u6210\u4e00\u4e2aInteger\u5bf9\u8c61\uff01 1 2 3 4 5 public static Integer valueOf ( int i ) { if ( i >= IntegerCache . low && i <= IntegerCache . high ) //\u6ce8\u610f\uff0cJava\u4e3a\u4e86\u4f18\u5316\uff0c\u6709\u4e00\u4e2a\u7f13\u5b58\u673a\u5236\uff0c\u5982\u679c\u662f\u5728-128~127\u4e4b\u95f4\u7684\u6570\uff0c\u4f1a\u76f4\u63a5\u4f7f\u7528\u5df2\u7ecf\u7f13\u5b58\u597d\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u518d\u53bb\u521b\u5efa\u65b0\u7684\uff01\uff08\u9762\u8bd5\u5e38\u8003\uff09 return IntegerCache . cache [ i + ( - IntegerCache . low ) ] ; return new Integer ( i ); //\u8fd4\u56de\u4e00\u4e2a\u65b0\u521b\u5efa\u597d\u7684\u5bf9\u8c61 } \u800c\u5982\u679c\u4f7f\u7528\u5305\u88c5\u7c7b\u6765\u8fdb\u884c\u8fd0\u7b97\uff0c\u6216\u662f\u8d4b\u503c\u7ed9\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u53d8\u91cf\uff0c\u4f1a\u8fdb\u884c\u81ea\u52a8\u62c6\u7bb1\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { Integer i = Integer . valueOf ( 1 ); int a = i ; //\u7b80\u5199 int a = i . intValue (); //\u7f16\u8bd1\u540e\u5b9e\u9645\u7684\u4ee3\u7801 long c = i . longValue (); //\u5176\u4ed6\u7c7b\u578b\u4e5f\u6709\uff01 } \u65e2\u7136\u73b0\u5728\u662f\u5305\u88c5\u7c7b\u578b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u80fd\u4f7f\u7528 == \u6765\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u76f8\u7b49\u5417\uff1f 1 2 3 4 5 6 7 public static void main ( String [] args ) { Integer i1 = 28914 ; Integer i2 = 28914 ; System . out . println ( i1 == i2 ); //\u5b9e\u9645\u4e0a\u5224\u65ad\u662f\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61\uff08\u5185\u5b58\u5730\u5740\u662f\u5426\u76f8\u540c\uff09 System . out . println ( i1 . equals ( i2 )); //\u8fd9\u4e2a\u624d\u662f\u771f\u6b63\u7684\u503c\u5224\u65ad\uff01 } \u6ce8\u610fIntegerCache\u5e26\u6765\u7684\u5f71\u54cd\uff01 \u601d\u8003\uff1a\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u7ed3\u679c\u4f1a\u662f\u4ec0\u4e48\uff1f 1 2 3 4 5 6 public static void main ( String [] args ) { Integer i1 = 28914 ; Integer i2 = 28914 ; System . out . println ( i1 + 1 == i2 + 1 ); } \u5728\u96c6\u5408\u7c7b\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f1a\u7ee7\u7eed\u7528\u5230\u6211\u4eec\u7684\u5305\u88c5\u7c7b\u578b\uff01","title":"\u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_39","text":"\u867d\u7136\u6211\u4eec\u5b66\u4e60\u4e86\u7f16\u7a0b\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u4e00\u80a1\u8111\u7684\u6240\u6709\u95ee\u9898\u90fd\u7167\u7740\u7f16\u7a0b\u7684\u601d\u7ef4\u53bb\u89e3\u51b3\uff0c\u7f16\u7a0b\u53ea\u662f\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u7075\u6d3b\u7684\u8fd0\u7528\u6211\u4eec\u6240\u5b66\u7684\u77e5\u8bc6\uff0c\u624d\u662f\u89e3\u51b3\u95ee\u9898\u7684\u6700\u597d\u529e\u6cd5\uff01\u6bd4\u5982\uff0c\u6c421\u5230100\u6240\u6709\u6570\u7684\u548c\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { int sum = 0 ; for ( int i = 1 ; i <= 100 ; i ++ ) { //for\u5faa\u73af\u66b4\u529b\u6c42\u89e3\uff0c\u7b80\u5355\uff0c\u4f46\u662f\u6548\u7387\u4f3c\u4e4e\u4f4e\u4e86\u4e00\u4e9b sum += i ; } System . out . println ( sum ); } public static void main ( String [] args ) { System . out . println (( 1 + 100 ) * 50 ); //\u9ad8\u65af\u6c42\u548c\u516c\u5f0f\uff0c\u5229\u7528\u6570\u5b66\uff0c\u77ac\u95f4\u8ba1\u7b97\u7ed3\u679c\uff01 } \u8bf4\u5230\u6700\u540e\uff0c\u5176\u5b9e\u6570\u5b66\u548c\u903b\u8f91\u601d\u7ef4\u624d\u662f\u89e3\u51b3\u95ee\u9898\u7684\u6700\u7ec8\u529e\u6cd5\uff01","title":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5b9e\u6218"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_40","text":"\u8bbe\u8ba1\u4e00\u4e2aPerson\u62bd\u8c61\u7c7b\uff0c\u5305\u542b\u5403\u996d\u8fd0\u52a8\u5b66\u4e60\u4e09\u79cd\u884c\u4e3a\uff0c\u5206\u4e3a\u5de5\u4eba\u3001\u5b66\u751f\u3001\u8001\u5e08\u4e09\u79cd\u804c\u4e1a\u3002 \u8bbe\u8ba1\u8bbe\u8ba1\u4e00\u4e2a\u63a5\u53e3 \u8003\u8bd5 \uff0c\u53ea\u6709\u8001\u5e08\u548c\u5b66\u751f\u4f1a\u8003\u8bd5\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6a21\u62df\u8ba9\u4eba\u7c7b\u8fdb\u5165\u8003\u573a\uff0c\u8981\u6c42\u53ea\u6709\u4f1a\u8003\u8bd5\u7684\u4eba\u624d\u80fd\u8fdb\u5165\uff0c\u5e76\u4e14\u8003\u8bd5\u3002","title":"\u5bf9\u8c61\u8bbe\u8ba1\uff08\u9762\u5411\u5bf9\u8c61\u3001\u591a\u6001\u8fd0\u7528\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_41","text":"\u73b0\u5728\u6709\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\uff08\u4ece\u5c0f\u5230\u5927\uff0c\u6570\u7ec4\u957f\u5ea6 0 < n < 1000000\uff09\u5982\u4f55\u5feb\u901f\u5bfb\u627e\u6211\u4eec\u60f3\u8981\u7684\u6570\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u5b58\u5728\u8bf7\u8fd4\u56de\u4e0b\u6807\uff0c\u4e0d\u5b58\u5728\u8fd4\u56de -1 \u5373\u53ef\u3002 1 2 3 4 5 int [] arr = new int [] { 1 , 4 , 5 , 6 , 7 , 10 , 12 , 14 , 20 , 22 , 26 }; //\u6d4b\u8bd5\u7528\u4f8b private static int test ( int [] arr , int target ){ //\u8bf7\u5728\u8fd9\u91cc\u5b9e\u73b0\u641c\u7d22\u7b97\u6cd5 }","title":"\u4e8c\u5206\u641c\u7d22\uff08\u641c\u7d22\u7b97\u6cd5\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#_42","text":"\uff08\u5f00\u59cb\u4e4b\u524d\u5148\u4ecb\u7ecd\u4e00\u4e0b\u9012\u5f52\uff01\uff09\u5feb\u901f\u6392\u5e8f\u5176\u5b9e\u662f\u4e00\u79cd\u6392\u5e8f\u6267\u884c\u6548\u7387\u5f88\u9ad8\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u5229\u7528 \u5206\u6cbb\u6cd5 \u6765\u5bf9\u5f85\u6392\u5e8f\u5e8f\u5217\u8fdb\u884c\u5206\u6cbb\u6392\u5e8f\uff0c\u5b83\u7684\u601d\u60f3\u4e3b\u8981\u662f\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\u5c06\u5f85\u6392\u8bb0\u5f55\u5206\u9694\u6210\u72ec\u7acb\u7684\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u6bd4\u5173\u952e\u5b57\u5c0f\uff0c\u540e\u9762\u4e00\u90e8\u5206\u6bd4\u5173\u952e\u5b57\u5927\uff0c\u7136\u540e\u518d\u5bf9\u8fd9\u524d\u540e\u7684\u4e24\u90e8\u5206\u5206\u522b\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\uff0c\u901a\u8fc7\u9012\u5f52\u7684\u8fd0\u7b97\u6700\u7ec8\u8fbe\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002 \u5feb\u901f\u6392\u5e8f\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5feb\u901f\uff01\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u4f1a\u9000\u5316\u6210\u5192\u6ce1\u6392\u5e8f\uff01","title":"\u5feb\u901f\u6392\u5e8f\uff08\u6392\u5e8f\u7b97\u6cd5\u3001\u9012\u5f52\u5206\u6cbb\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/#01","text":"\u7ed9\u5b9a n \u4ef6\u7269\u54c1\uff0c\u6bcf\u4e00\u4e2a\u7269\u54c1\u7684\u91cd\u91cf\u4e3a w[n] \uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u4e3a v[n] \u3002\u73b0\u6311\u9009\u7269\u54c1\u653e\u5165\u80cc\u5305\u4e2d\uff0c\u5047\u5b9a\u80cc\u5305\u80fd\u627f\u53d7\u7684\u6700\u5927\u91cd\u91cf\u4e3a capacity \uff0c\u6c42\u88c5\u5165\u7269\u54c1\u7684\u6700\u5927\u4ef7\u503c\u662f\u591a\u5c11? 1 2 3 int [] w = { 2 , 3 , 4 , 5 }; int [] v = { 3 , 4 , 5 , 6 }; int capacity = 8 ;","title":"0/1\u80cc\u5305\u95ee\u9898\uff08\u56de\u6eaf\u6cd5\u3001\u526a\u679d/\u52a8\u6001\u89c4\u5212\u4f18\u5316\uff09"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/","text":"Java I/O \u6ce8\u610f\uff1a \u8fd9\u5757\u4f1a\u6d89\u53ca\u5230 \u64cd\u4f5c\u7cfb\u7edf \u548c \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406 \u76f8\u5173\u5185\u5bb9\u3002 I/O\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u8f93\u5165\u8f93\u51fa\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u6709I/O\u5462\uff1f\u5176\u5b9eI/O\u65e0\u65f6\u65e0\u523b\u90fd\u5728\u6211\u4eec\u7684\u8eab\u8fb9\uff0c\u6bd4\u5982\u8bfb\u53d6\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\uff0c\u7f51\u7edc\u6587\u4ef6\u4f20\u8f93\uff0c\u9f20\u6807\u952e\u76d8\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u662f\u63a5\u53d7\u5355\u7247\u673a\u53d1\u56de\u7684\u6570\u636e\uff0c\u800c\u80fd\u591f\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u8bbe\u5907\u5c31\u662fI/O\u8bbe\u5907\u3002 \u6211\u4eec\u53ef\u4ee5\u5927\u81f4\u770b\u4e00\u4e0b\u6574\u4e2a\u8ba1\u7b97\u673a\u7684\u603b\u7ebf\u7ed3\u6784\uff1a \u5e38\u89c1\u7684I/O\u8bbe\u5907\u4e00\u822c\u662f\u9f20\u6807\u3001\u952e\u76d8\u8fd9\u7c7b\u901a\u8fc7USB\u8fdb\u884c\u4f20\u8f93\u7684\u5916\u8bbe\u6216\u8005\u662f\u901a\u8fc7Sata\u63a5\u53e3\u6216\u662fM.2\u8fde\u63a5\u7684\u786c\u76d8\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8bbe\u5907\u662f\u7531CPU\u53d1\u51fa\u6307\u4ee4\u901a\u8fc7\u5357\u6865\u82af\u7247\u95f4\u63a5\u8fdb\u884c\u63a7\u5236\uff0c\u800c\u4e0d\u662f\u7531CPU\u76f4\u63a5\u64cd\u4f5c\u3002 \u800c\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\uff0c\u60f3\u8981\u8bfb\u53d6\u8fd9\u4e9b\u5916\u90e8\u8fde\u63a5\u7684I/O\u8bbe\u5907\u4e2d\u7684\u5185\u5bb9\uff0c\u5c31\u9700\u8981\u5c06\u6570\u636e\u4f20\u8f93\u5230\u5185\u5b58\u4e2d\u3002\u800c\u9700\u8981\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u5355\u5355\u51ed\u501f\u4e00\u4e2a\u5c0f\u7684\u7a0b\u5e8f\u662f\u65e0\u6cd5\u505a\u5230\u7684\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\uff08\u5982\uff1aWindows/Linux/MacOS\uff09\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u63a7\u5236\u548c\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90\u7684\u8f6f\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8bfb\u53d6\u4e00\u4e2aIO\u8bbe\u5907\u7684\u5185\u5bb9\u65f6\uff0c\u53ef\u4ee5\u5411\u64cd\u4f5c\u7cfb\u7edf\u53d1\u51fa\u8bf7\u6c42\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u5e2e\u52a9\u6211\u4eec\u6765\u548c\u5e95\u5c42\u7684\u786c\u4ef6\u4ea4\u4e92\u4ee5\u5b8c\u6210\u6211\u4eec\u7684\u8bfb\u53d6/\u5199\u5165\u8bf7\u6c42\u3002\u4ece\u8bfb\u53d6\u786c\u76d8\u6587\u4ef6\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u7740\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u4e5f\u5c31\u662f\u6587\u4ef6\u5728\u786c\u76d8\u4e2d\u7684\u5b58\u50a8\u6392\u5217\u65b9\u5f0f\uff0c\u5982Windows\u5c31\u662fNTFS\u3001MacOS\u5c31\u662fAPFS\uff09\uff0c\u786c\u76d8\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u4e2a0\u548c1\u8fd9\u6837\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u81f3\u4e8e0\u548c1\u5982\u4f55\u6392\u5217\uff0c\u5404\u81ea\u53c8\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff0c\u5c31\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u7684\u6587\u4ef6\u7cfb\u7edf\u6765\u51b3\u5b9a\u7684\u3002\u4ece\u7f51\u7edc\u901a\u4fe1\u89d2\u5ea6\u6765\u8bf4\uff0c\u7f51\u7edc\u4fe1\u53f7\u901a\u8fc7\u7f51\u5361\u7b49\u8bbe\u5907\u7ffb\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u4fe1\u53f7\uff0c\u518d\u4ea4\u7ed9\u7cfb\u7edf\u8fdb\u884c\u8bfb\u53d6\uff0c\u6700\u540e\u518d\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u7ed9\u5230\u7a0b\u5e8f\u3002 JDK\u63d0\u4f9b\u4e86\u4e00\u5957\u7528\u4e8eIO\u64cd\u4f5c\u7684\u6846\u67b6\uff0c\u6839\u636e\u6d41\u7684\u4f20\u8f93\u65b9\u5411\u548c\u8bfb\u53d6\u5355\u4f4d\uff0c\u5206\u4e3a\u5b57\u8282\u6d41InputStream\u548cOutputStream\u4ee5\u53ca\u5b57\u7b26\u6d41Reader\u548cWriter\uff0c\u5f53\u7136\uff0c\u8fd9\u91cc\u7684Stream\u5e76\u4e0d\u662f\u524d\u9762\u96c6\u5408\u6846\u67b6\u8ba4\u8bc6\u7684Stream\uff0c\u8fd9\u91cc\u7684\u6d41\u6307\u7684\u662f\u6570\u636e\u6d41\uff0c\u901a\u8fc7\u6d41\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e00\u76f4\u4ece\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u5c3d\u5934\uff0c\u6216\u662f\u4e0d\u65ad\u5411\u5176\u4e2d\u5199\u5165\u6570\u636e\uff0c\u76f4\u5230\u6211\u4eec\u5199\u5165\u5b8c\u6210\u3002\u800c\u8fd9\u7c7bIO\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684BIO\uff0c \u5b57\u8282\u6d41\u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a byte \u7684\u5927\u5c0f\uff0c\u800c\u5b57\u7b26\u6d41\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a char \u7684\u5927\u5c0f\uff08\u5728\u8bfb\u53d6\u7eaf\u6587\u672c\u6587\u4ef6\u7684\u65f6\u5019\u66f4\u52a0\u9002\u5408\uff09\uff0c\u6709\u5173\u8fd9\u4e24\u79cd\u6d41\uff0c\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u8fd9\u4e2a\u7ae0\u8282\u6211\u4eec\u9700\u8981\u5b66\u4e6016\u4e2a\u5173\u952e\u7684\u6d41\u3002 \u6587\u4ef6\u6d41 \u8981\u5b66\u4e60\u548c\u4f7f\u7528IO\uff0c\u9996\u5148\u5c31\u8981\u4ece\u6700\u6613\u4e8e\u7406\u89e3\u7684\u8bfb\u53d6\u6587\u4ef6\u5f00\u59cb\u8bf4\u8d77\u3002 \u6587\u4ef6\u5b57\u8282\u6d41 \u9996\u5148\u4ecb\u7ecd\u4e00\u4e0bFileInputStream\uff0c\u901a\u8fc7\u5b83\u6765\u83b7\u53d6\u6587\u4ef6\u7684\u8f93\u5165\u6d41\u3002 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try { FileInputStream inputStream = new FileInputStream ( \"\u8def\u5f84\" ); //\u8def\u5f84\u652f\u6301\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84 } catch ( FileNotFoundException e ) { e . printStackTrace (); } } \u76f8\u5bf9\u8def\u5f84\u662f\u5728\u5f53\u524d\u8fd0\u884c\u7684\u8def\u5f84\u4e0b\u5bfb\u627e\u6587\u4ef6\uff0c\u800c\u7edd\u5bf9\u8def\u5f84\uff0c\u662f\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\u5bfb\u627e\u3002\u8def\u5f84\u5206\u5272\u7b26\u652f\u6301\u4f7f\u7528 / \u6216\u662f \\\\ \uff0c\u4f46\u662f\u4e0d\u80fd\u5199\u4e3a \\ \u56e0\u4e3a\u5b83\u662f\u8f6c\u4e49\u5b57\u7b26\uff01 \u5728\u4f7f\u7528\u5b8c\u6210\u4e00\u4e2a\u6d41\u4e4b\u540e\uff0c\u5fc5\u987b\u5173\u95ed\u8fd9\u4e2a\u6d41\u6765\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u91ca\u653e\uff0c\u5426\u5219\u8d44\u6e90\u4f1a\u88ab\u4e00\u76f4\u5360\u7528\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { FileInputStream inputStream = null ; //\u5b9a\u4e49\u53ef\u4ee5\u5148\u653e\u5728try\u5916\u90e8 try { inputStream = new FileInputStream ( \"\u8def\u5f84\" ); } catch ( FileNotFoundException e ) { e . printStackTrace (); } finally { try { //\u5efa\u8bae\u5728finally\u4e2d\u8fdb\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u662f\u4efb\u4f55\u60c5\u51b5\u90fd\u5fc5\u987b\u8981\u6267\u884c\u7684\uff01 if ( inputStream != null ) inputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } } } \u867d\u7136\u8fd9\u6837\u7684\u5199\u6cd5\u624d\u662f\u6700\u4fdd\u9669\u7684\uff0c\u4f46\u662f\u663e\u5f97\u8fc7\u4e8e\u7e41\u7410\u4e86\uff0c\u5c24\u5176\u662ffinally\u4e2d\u518d\u6b21\u5d4c\u5957\u4e86\u4e00\u4e2atry-catch\u5757\uff0c\u56e0\u6b64\u5728JDK1.7\u65b0\u589e\u4e86try-with-resource\u8bed\u6cd5\uff0c\u7528\u4e8e\u7b80\u5316\u8fd9\u6837\u7684\u5199\u6cd5\uff08\u672c\u8d28\u4e0a\u8fd8\u662f\u548c\u8fd9\u6837\u7684\u64cd\u4f5c\u4e00\u81f4\uff0c\u53ea\u662f\u6362\u4e86\u4e2a\u5199\u6cd5\uff09 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { //\u6ce8\u610f\uff0c\u8fd9\u79cd\u8bed\u6cd5\u53ea\u652f\u6301\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\u7684\u7c7b\uff01 try ( FileInputStream inputStream = new FileInputStream ( \"\u8def\u5f84\" )) { //\u76f4\u63a5\u5728try()\u4e2d\u5b9a\u4e49\u8981\u5728\u5b8c\u6210\u4e4b\u540e\u91ca\u653e\u7684\u8d44\u6e90 } catch ( IOException e ) { //\u8fd9\u91cc\u53d8\u6210IOException\u662f\u56e0\u4e3a\u8c03\u7528close()\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c\u800cFileNotFoundException\u662f\u7ee7\u627f\u81eaIOException\u7684 e . printStackTrace (); } //\u65e0\u9700\u518d\u7f16\u5199finally\u8bed\u53e5\u5757\uff0c\u56e0\u4e3a\u5728\u6700\u540e\u81ea\u52a8\u5e2e\u6211\u4eec\u8c03\u7528\u4e86close() } \u4e4b\u540e\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u90fd\u4f7f\u7528\u6b64\u8bed\u6cd5\u8fdb\u884c\u6559\u5b66\u3002 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { //test.txt\uff1aa try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { //\u4f7f\u7528read()\u65b9\u6cd5\u8fdb\u884c\u5b57\u7b26\u8bfb\u53d6 System . out . println (( char ) inputStream . read ()); //\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff08\u82f1\u6587\u5b57\u6bcd\u53ea\u53601\u5b57\u8282\uff0c\u4e2d\u6587\u53602\u5b57\u8282\uff09 System . out . println ( inputStream . read ()); //\u552f\u4e00\u4e00\u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u5df2\u7ecf\u8bfb\u5b8c\u4e86\uff0c\u518d\u6b21\u8bfb\u53d6\u8fd4\u56de-1\u8868\u793a\u6ca1\u6709\u5185\u5bb9\u4e86 } catch ( IOException e ){ e . printStackTrace (); } } \u4f7f\u7528read\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u6ce8\u610f\uff0c\u6d41\u7684\u5185\u5bb9\u662f\u6709\u9650\u7684\uff0c\u8bfb\u53d6\u4e00\u4e2a\u5c11\u4e00\u4e2a\uff01\u6211\u4eec\u5982\u679c\u60f3\u4e00\u6b21\u6027\u5168\u90e8\u8bfb\u53d6\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2awhile\u5faa\u73af\u6765\u5b8c\u6210\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { //test.txt\uff1aabcd try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { int tmp ; while (( tmp = inputStream . read ()) != - 1 ){ //\u901a\u8fc7while\u5faa\u73af\u6765\u4e00\u6b21\u6027\u8bfb\u5b8c\u5185\u5bb9 System . out . println (( char ) tmp ); } } catch ( IOException e ){ e . printStackTrace (); } } \u4f7f\u7528\u65b9\u6cd5\u80fd\u67e5\u770b\u5f53\u524d\u53ef\u8bfb\u7684\u5269\u4f59\u5b57\u8282\u6570\u91cf\uff08\u6ce8\u610f\uff1a\u5e76\u4e0d\u4e00\u5b9a\u771f\u5b9e\u7684\u6570\u636e\u91cf\u5c31\u662f\u8fd9\u4e48\u591a\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edcI/O\u64cd\u4f5c\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u9884\u4f30\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6682\u65f6\u80fd\u4e00\u6b21\u6027\u8bfb\u53d6\u7684\u6570\u91cf\uff09 1 2 3 4 5 try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { System . out . println ( inputStream . available ()); //\u67e5\u770b\u5269\u4f59\u6570\u91cf } catch ( IOException e ){ e . printStackTrace (); } \u5f53\u7136\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8bfb\u53d6\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u90a3\u80fd\u5426\u4e00\u6b21\u6027\u5168\u90e8\u8bfb\u53d6\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u9884\u7f6e\u4e00\u4e2a\u5408\u9002\u5bb9\u91cf\u7684byte[]\u6570\u7ec4\u6765\u5b58\u653e\u3002 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { //test.txt\uff1aabcd try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { byte [] bytes = new byte [ inputStream . available () ] ; //\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u597d\u5408\u9002\u5bb9\u91cf\u7684byte\u6570\u7ec4\u6765\u5b58\u653e System . out . println ( inputStream . read ( bytes )); //\u4e00\u6b21\u6027\u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff08\u8fd4\u56de\u503c\u662f\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff09 System . out . println ( new String ( bytes )); //\u901a\u8fc7String(byte[])\u6784\u9020\u65b9\u6cd5\u5f97\u5230\u5b57\u7b26\u4e32 } catch ( IOException e ){ e . printStackTrace (); } } \u4e5f\u53ef\u4ee5\u63a7\u5236\u8981\u8bfb\u53d6\u6570\u91cf\uff1a 1 System . out . println ( inputStream . read ( bytes , 1 , 2 )); //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4ece\u7ed9\u5b9a\u6570\u7ec4\u7684\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u653e\u5165\u5185\u5bb9\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u8bfb\u53d6\u6d41\u4e2d\u7684\u5b57\u8282\u6570 \u6ce8\u610f \uff1a\u4e00\u6b21\u6027\u8bfb\u53d6\u540c\u5355\u4e2a\u8bfb\u53d6\u4e00\u6837\uff0c\u5f53\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u53ef\u8bfb\u65f6\uff0c\u4f9d\u7136\u4f1a\u8fd4\u56de-1 \u901a\u8fc7 skip() \u65b9\u6cd5\u53ef\u4ee5\u8df3\u8fc7\u6307\u5b9a\u6570\u91cf\u7684\u5b57\u8282\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { //test.txt\uff1aabcd try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { System . out . println ( inputStream . skip ( 1 )); System . out . println (( char ) inputStream . read ()); //\u8df3\u8fc7\u4e86\u4e00\u4e2a\u5b57\u8282 } catch ( IOException e ){ e . printStackTrace (); } } \u6ce8\u610f\uff1aFileInputStream\u662f\u4e0d\u652f\u6301 reset() \u7684\uff0c\u867d\u7136\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u91cc\u5148\u4e0d\u63d0\u53ca\u3002 \u65e2\u7136\u6709\u8f93\u5165\u6d41\uff0c\u90a3\u4e48\u6587\u4ef6\u8f93\u51fa\u6d41\u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { //\u8f93\u51fa\u6d41\u4e5f\u9700\u8981\u5728\u6700\u540e\u8c03\u7528close()\u65b9\u6cd5\uff0c\u5e76\u4e14\u540c\u6837\u652f\u6301try-with-resource try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" )) { //\u6ce8\u610f\uff1a\u82e5\u6b64\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u6587\u4ef6\uff01 } catch ( IOException e ){ e . printStackTrace (); } } \u8f93\u51fa\u6d41\u6ca1\u6709 read() \u64cd\u4f5c\u800c\u662f write() \u64cd\u4f5c\uff0c\u4f7f\u7528\u65b9\u6cd5\u540c\u8f93\u5165\u6d41\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u73b0\u5728\u7684\u65b9\u5411\u53d8\u4e3a\u6211\u4eec\u5411\u6587\u4ef6\u91cc\u5199\u5165\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" )) { outputStream . write ( 'c' ); //\u540cread\u4e00\u6837\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u5165\u5185\u5bb9 outputStream . write ( \"lbwnb\" . getBytes ()); //\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199\u5165byte[] outputStream . write ( \"lbwnb\" . getBytes (), 0 , 1 ); //\u540c\u4e0a\u8f93\u5165\u6d41 outputStream . flush (); //\u5efa\u8bae\u5728\u6700\u540e\u6267\u884c\u4e00\u6b21\u5237\u65b0\u64cd\u4f5c\uff08\u5f3a\u5236\u5199\u5165\uff09\u6765\u4fdd\u8bc1\u6570\u636e\u6b63\u786e\u5199\u5165\u5230\u786c\u76d8\u6587\u4ef6\u4e2d } catch ( IOException e ){ e . printStackTrace (); } } \u90a3\u4e48\u5982\u679c\u662f\u6211\u53ea\u60f3\u5728\u6587\u4ef6\u5c3e\u90e8\u8fdb\u884c\u8ffd\u52a0\u5199\u5165\u6570\u636e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" , true )) { outputStream . write ( \"lb\" . getBytes ()); //\u73b0\u5728\u53ea\u4f1a\u8fdb\u884c\u8ffd\u52a0\u5199\u5165\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u66ff\u6362\u539f\u6587\u4ef6\u5185\u5bb9 outputStream . flush (); } catch ( IOException e ){ e . printStackTrace (); } } \u5229\u7528\u8f93\u5165\u6d41\u548c\u8f93\u51fa\u6d41\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u6587\u4ef6\u7684\u62f7\u8d1d\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" ); FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { //\u53ef\u4ee5\u5199\u5165\u591a\u4e2a byte [] bytes = new byte [ 10 ] ; //\u4f7f\u7528\u957f\u5ea6\u4e3a10\u7684byte[]\u505a\u4f20\u8f93\u5a92\u4ecb int tmp ; //\u5b58\u50a8\u672c\u5730\u8bfb\u53d6\u5b57\u8282\u6570 while (( tmp = inputStream . read ( bytes )) != - 1 ){ //\u76f4\u5230\u8bfb\u53d6\u5b8c\u6210\u4e3a\u6b62 outputStream . write ( bytes , 0 , tmp ); //\u5199\u5165\u5bf9\u5e94\u957f\u5ea6\u7684\u6570\u636e\u5230\u8f93\u51fa\u6d41 } } catch ( IOException e ){ e . printStackTrace (); } } \u6587\u4ef6\u5b57\u7b26\u6d41 \u5b57\u7b26\u6d41\u4e0d\u540c\u4e8e\u5b57\u8282\uff0c\u5b57\u7b26\u6d41\u662f\u4ee5\u4e00\u4e2a\u5177\u4f53\u7684\u5b57\u7b26\u8fdb\u884c\u8bfb\u53d6\uff0c\u56e0\u6b64\u5b83\u53ea\u9002\u5408\u8bfb\u7eaf\u6587\u672c\u7684\u6587\u4ef6\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u6587\u4ef6\u4e0d\u9002\u7528\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try ( FileReader reader = new FileReader ( \"test.txt\" )){ reader . skip ( 1 ); //\u73b0\u5728\u8df3\u8fc7\u7684\u662f\u4e00\u4e2a\u5b57\u7b26 System . out . println (( char ) reader . read ()); //\u73b0\u5728\u662f\u6309\u5b57\u7b26\u8fdb\u884c\u8bfb\u53d6\uff0c\u800c\u4e0d\u662f\u5b57\u8282\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u5230\u4e2d\u6587\u5b57\u7b26 } catch ( IOException e ){ e . printStackTrace (); } } \u540c\u7406\uff0c\u5b57\u7b26\u6d41\u53ea\u652f\u6301 char[] \u7c7b\u578b\u4f5c\u4e3a\u5b58\u50a8\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { try ( FileReader reader = new FileReader ( \"test.txt\" )){ char [] str = new char [ 10 ] ; reader . read ( str ); System . out . println ( str ); //\u76f4\u63a5\u8bfb\u53d6\u5230char[]\u4e2d } catch ( IOException e ){ e . printStackTrace (); } } \u65e2\u7136\u6709\u4e86Reader\u80af\u5b9a\u4e5f\u6709Writer\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { try ( FileWriter writer = new FileWriter ( \"output.txt\" )){ writer . getEncoding (); //\u652f\u6301\u83b7\u53d6\u7f16\u7801\uff08\u4e0d\u540c\u7684\u6587\u672c\u6587\u4ef6\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u7f16\u7801\u7c7b\u578b\uff09 writer . write ( '\u725b' ); writer . append ( '\u725b' ); //\u5176\u5b9e\u529f\u80fd\u548cwrite\u4e00\u6837 writer . flush (); //\u5237\u65b0 } catch ( IOException e ){ e . printStackTrace (); } } \u6211\u4eec\u53d1\u73b0\u4e0d\u4ec5\u6709 write() \u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a append() \u65b9\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4ed6\u4eec\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u770b\u6e90\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * Appends the specified character to this writer. * * <p> An invocation of this method of the form <tt>out.append(c)</tt> * behaves in exactly the same way as the invocation * * <pre> * out.write(c) </pre> * * @param c * The 16-bit character to append * * @return This writer * * @throws IOException * If an I/O error occurs * * @since 1.5 */ public Writer append ( char c ) throws IOException { write ( c ); return this ; } append\u652f\u6301\u50cfStringBuilder\u90a3\u6837\u7684\u94fe\u5f0f\u8c03\u7528\uff0c\u8fd4\u56de\u7684\u662fWriter\u5bf9\u8c61\u672c\u8eab\u3002 \u7ec3\u4e60 \uff1a\u5c1d\u8bd5\u4e00\u4e0b\u7528Reader\u548cWriter\u6765\u62f7\u8d1d\u7eaf\u6587\u672c\u6587\u4ef6 File\u7c7b File\u7c7b\u4e13\u95e8\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u6587\u4ef6\u6216\u6587\u4ef6\u5939\uff0c\u53ea\u4e0d\u8fc7\u5b83\u53ea\u662f\u4ee3\u8868\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f46\u5e76\u4e0d\u662f\u8fd9\u4e2a\u6587\u4ef6\u672c\u8eab\u3002\u901a\u8fc7File\u5bf9\u8c61\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7ba1\u7406\u548c\u64cd\u4f5c\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\u3002 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { File file = new File ( \"test.txt\" ); //\u76f4\u63a5\u521b\u5efa\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84 System . out . println ( file . exists ()); //\u6b64\u6587\u4ef6\u662f\u5426\u5b58\u5728 System . out . println ( file . length ()); //\u83b7\u53d6\u6587\u4ef6\u7684\u5927\u5c0f System . out . println ( file . isDirectory ()); //\u662f\u5426\u4e3a\u4e00\u4e2a\u6587\u4ef6\u5939 System . out . println ( file . canRead ()); //\u662f\u5426\u53ef\u8bfb System . out . println ( file . canWrite ()); //\u662f\u5426\u53ef\u5199 System . out . println ( file . canExecute ()); //\u662f\u5426\u53ef\u6267\u884c } \u901a\u8fc7File\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u80fd\u5feb\u901f\u5f97\u5230\u6587\u4ef6\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5982\u679c\u662f\u6587\u4ef6\u5939\uff0c\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6587\u4ef6\u5939\u5185\u90e8\u7684\u6587\u4ef6\u5217\u8868\u7b49\u5185\u5bb9\uff1a 1 2 3 4 5 File file = new File ( \"/\" ); System . out . println ( Arrays . toString ( file . list ())); //\u5feb\u901f\u83b7\u53d6\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\u540d\u79f0\u5217\u8868 for ( File f : file . listFiles ()){ //\u6240\u6709\u5b50\u6587\u4ef6\u7684File\u5bf9\u8c61 System . out . println ( f . getAbsolutePath ()); //\u83b7\u53d6\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 } \u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bfb\u53d6\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06File\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5b57\u8282\u6d41\u6216\u662f\u5b57\u7b26\u6d41\uff1a 1 2 3 4 5 6 File file = new File ( \"test.txt\" ); try ( FileInputStream inputStream = new FileInputStream ( file )){ //\u76f4\u63a5\u505a\u53c2\u6570 System . out . println ( inputStream . available ()); } catch ( IOException e ){ e . printStackTrace (); } \u7ec3\u4e60 \uff1a\u5c1d\u8bd5\u62f7\u8d1d\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u5939 \u7f13\u51b2\u6d41 \u867d\u7136\u666e\u901a\u7684\u6587\u4ef6\u6d41\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u975e\u5e38\u4fbf\u6377\uff0c\u4f46\u662f\u6bcf\u6b21\u90fd\u9700\u8981\u4ece\u5916\u90e8I/O\u8bbe\u5907\u53bb\u83b7\u53d6\u6570\u636e\uff0c\u7531\u4e8e\u5916\u90e8I/O\u8bbe\u5907\u7684\u901f\u5ea6\u4e00\u822c\u90fd\u8fbe\u4e0d\u5230\u5185\u5b58\u7684\u8bfb\u53d6\u901f\u5ea6\uff0c\u5f88\u6709\u53ef\u80fd\u9020\u6210\u7a0b\u5e8f\u53cd\u5e94\u8fdf\u949d\uff0c\u56e0\u6b64\u6027\u80fd\u8fd8\u4e0d\u591f\u9ad8\uff0c\u800c\u7f13\u51b2\u6d41\u6b63\u5982\u5176\u540d\u79f0\u4e00\u6837\uff0c\u5b83\u80fd\u591f\u63d0\u4f9b\u4e00\u4e2a\u7f13\u51b2\uff0c\u63d0\u524d\u5c06\u90e8\u5206\u5185\u5bb9\u5b58\u5165\u5185\u5b58\uff08\u7f13\u51b2\u533a\uff09\u5728\u4e0b\u6b21\u8bfb\u53d6\u65f6\uff0c\u5982\u679c\u7f13\u51b2\u533a\u4e2d\u5b58\u5728\u6b64\u6570\u636e\uff0c\u5219\u65e0\u9700\u518d\u53bb\u8bf7\u6c42\u5916\u90e8\u8bbe\u5907\u3002\u540c\u7406\uff0c\u5f53\u5411\u5916\u90e8\u8bbe\u5907\u5199\u5165\u6570\u636e\u65f6\uff0c\u4e5f\u662f\u7531\u7f13\u51b2\u533a\u5904\u7406\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5411\u5916\u90e8\u8bbe\u5907\u5199\u5165\u3002 \u7f13\u51b2\u5b57\u8282\u6d41 \u8981\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u5b57\u8282\u6d41\uff0c\u53ea\u9700\u8981\u5c06\u539f\u672c\u7684\u6d41\u4f5c\u4e3a\u6784\u9020\u53c2\u6570\u4f20\u5165BufferedInputStream\u5373\u53ef\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( BufferedInputStream bufferedInputStream = new BufferedInputStream ( new FileInputStream ( \"test.txt\" ))){ //\u4f20\u5165FileInputStream System . out . println (( char ) bufferedInputStream . read ()); //\u64cd\u4f5c\u548c\u539f\u6765\u7684\u6d41\u662f\u4e00\u6837\u7684 } catch ( IOException e ){ e . printStackTrace (); } } \u5b9e\u9645\u4e0a\u8fdb\u884cI/O\u64cd\u4f5c\u7684\u5e76\u4e0d\u662fBufferedInputStream\uff0c\u800c\u662f\u6211\u4eec\u4f20\u5165\u7684FileInputStream\uff0c\u800cBufferedInputStream\u867d\u7136\u6709\u7740\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fdb\u884c\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\u7136\u540e\u518d\u8c03\u7528FileInputStream\u7684\u540c\u540d\u65b9\u6cd5\uff0c\u8fd9\u6837\u7684\u5199\u6cd5\u79f0\u4e3a \u88c5\u9970\u8005\u6a21\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 public void close () throws IOException { byte [] buffer ; while ( ( buffer = buf ) != null ) { if ( bufUpdater . compareAndSet ( this , buffer , null )) { //CAS\u65e0\u9501\u7b97\u6cd5\uff0c\u5e76\u53d1\u4f1a\u7528\u5230\uff0c\u6682\u65f6\u4e0d\u7ba1 InputStream input = in ; in = null ; if ( input != null ) input . close (); return ; } // Else retry in case a new buf was CASed in fill() } } \u5b9e\u9645\u4e0a\u8fd9\u79cd\u6a21\u5f0f\u662f\u7236\u7c7bFilterInputStream\u63d0\u4f9b\u7684\u89c4\u8303\uff0c\u540e\u9762\u6211\u4eec\u8fd8\u4f1a\u8bb2\u5230\u66f4\u591aFilterInputStream\u7684\u5b50\u7c7b\u3002 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728BufferedInputStream\u4e2d\u8fd8\u5b58\u5728\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u7f13\u5b58\u7684\u6570\u7ec4\uff1a 1 2 3 4 5 6 /** * The internal buffer array where the data is stored. When necessary, * it may be replaced by another array of * a different size. */ protected volatile byte buf [] ; I/O\u64cd\u4f5c\u4e00\u822c\u4e0d\u80fd\u91cd\u590d\u8bfb\u53d6\u5185\u5bb9\uff08\u6bd4\u5982\u952e\u76d8\u53d1\u9001\u7684\u4fe1\u53f7\uff0c\u4e3b\u673a\u63a5\u6536\u4e86\u5c31\u6ca1\u4e86\uff09\uff0c\u800c\u7f13\u51b2\u6d41\u63d0\u4f9b\u4e86\u7f13\u51b2\u673a\u5236\uff0c\u4e00\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u88ab\u6682\u65f6\u4fdd\u5b58\uff0cBufferedInputStream\u652f\u6301 reset() \u548c mark() \u64cd\u4f5c\uff0c\u9996\u5148\u6211\u4eec\u6765\u770b\u770b mark() \u65b9\u6cd5\u7684\u4ecb\u7ecd\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /** * Marks the current position in this input stream. A subsequent * call to the <code>reset</code> method repositions this stream at * the last marked position so that subsequent reads re-read the same bytes. * <p> * The <code>readlimit</code> argument tells this input stream to * allow that many bytes to be read before the mark position gets * invalidated. * <p> * This method simply performs <code>in.mark(readlimit)</code>. * * @param readlimit the maximum limit of bytes that can be read before * the mark position becomes invalid. * @see java.io.FilterInputStream#in * @see java.io.FilterInputStream#reset() */ public synchronized void mark ( int readlimit ) { in . mark ( readlimit ); } \u5f53\u8c03\u7528 mark() \u4e4b\u540e\uff0c\u8f93\u5165\u6d41\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fdd\u7559\u4e4b\u540e\u8bfb\u53d6\u7684 readlimit \u6570\u91cf\u7684\u5185\u5bb9\uff0c\u5f53\u8bfb\u53d6\u7684\u5185\u5bb9\u6570\u91cf\u8d85\u8fc7 readlimit \u5219\u4e4b\u540e\u7684\u5185\u5bb9\u4e0d\u4f1a\u88ab\u4fdd\u7559\uff0c\u5f53\u8c03\u7528 reset() \u4e4b\u540e\uff0c\u4f1a\u4f7f\u5f97\u5f53\u524d\u7684\u8bfb\u53d6\u4f4d\u7f6e\u56de\u5230 mark() \u8c03\u7528\u65f6\u7684\u4f4d\u7f6e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( BufferedInputStream bufferedInputStream = new BufferedInputStream ( new FileInputStream ( \"test.txt\" ))){ bufferedInputStream . mark ( 1 ); //\u53ea\u4fdd\u7559\u4e4b\u540e\u76841\u4e2a\u5b57\u7b26 System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); bufferedInputStream . reset (); //\u56de\u5230mark\u65f6\u7684\u4f4d\u7f6e System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); } catch ( IOException e ) { e . printStackTrace (); } } \u6211\u4eec\u53d1\u73b0\u867d\u7136\u540e\u9762\u7684\u90e8\u5206\u6ca1\u6709\u4fdd\u5b58\uff0c\u4f46\u662f\u4f9d\u7136\u80fd\u591f\u6b63\u5e38\u8bfb\u53d6\uff0c\u5176\u5b9e mark() \u540e\u4fdd\u5b58\u7684\u8bfb\u53d6\u5185\u5bb9\u662f\u53d6 readlimit \u548cBufferedInputStream\u7c7b\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u4e24\u8005\u4e2d\u7684\u6700\u5927\u503c\uff0c\u800c\u5e76\u975e\u5b8c\u5168\u7531 readlimit \u786e\u5b9a\u3002\u56e0\u6b64\u6211\u4eec\u9650\u5236\u4e00\u4e0b\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u518d\u6765\u89c2\u5bdf\u4e00\u4e0b\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( BufferedInputStream bufferedInputStream = new BufferedInputStream ( new FileInputStream ( \"test.txt\" ), 1 )){ //\u5c06\u7f13\u51b2\u533a\u5927\u5c0f\u8bbe\u7f6e\u4e3a1 bufferedInputStream . mark ( 1 ); //\u53ea\u4fdd\u7559\u4e4b\u540e\u76841\u4e2a\u5b57\u7b26 System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); //\u5df2\u7ecf\u8d85\u8fc7\u4e86readlimit\uff0c\u7ee7\u7eed\u8bfb\u53d6\u4f1a\u5bfc\u81f4mark\u5931\u6548 bufferedInputStream . reset (); //mark\u5df2\u7ecf\u5931\u6548\uff0c\u65e0\u6cd5reset() System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); } catch ( IOException e ) { e . printStackTrace (); } } \u4e86\u89e3\u5b8c\u4e86BufferedInputStream\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u770b\u770bBufferedOutputStream\uff0c\u5176\u5b9e\u548cBufferedInputStream\u539f\u7406\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u53cd\u5411\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try ( BufferedOutputStream outputStream = new BufferedOutputStream ( new FileOutputStream ( \"output.txt\" ))){ outputStream . write ( \"lbwnb\" . getBytes ()); outputStream . flush (); } catch ( IOException e ) { e . printStackTrace (); } } \u64cd\u4f5c\u548cFileOutputStream\u4e00\u81f4\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u4ecb\u7ecd\u4e86\u3002 \u7f13\u51b2\u5b57\u7b26\u6d41 \u7f13\u5b58\u5b57\u7b26\u6d41\u548c\u7f13\u51b2\u5b57\u8282\u6d41\u4e00\u6837\uff0c\u4e5f\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u7f13\u51b2\u533a\uff0cBufferedReader\u6784\u9020\u65f6\u9700\u8981\u4f20\u5165\u4e00\u4e2aReader\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ System . out . println (( char ) reader . read ()); } catch ( IOException e ) { e . printStackTrace (); } } \u4f7f\u7528\u548creader\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5185\u90e8\u4e5f\u5305\u542b\u4e00\u4e2a\u7f13\u5b58\u6570\u7ec4\uff1a 1 private char cb [] ; \u76f8\u6bd4Reader\u66f4\u65b9\u4fbf\u7684\u662f\uff0c\u5b83\u652f\u6301\u6309\u884c\u8bfb\u53d6\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ System . out . println ( reader . readLine ()); //\u6309\u884c\u8bfb\u53d6 } catch ( IOException e ) { e . printStackTrace (); } } \u8bfb\u53d6\u540e\u76f4\u63a5\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5f53\u7136\uff0c\u5b83\u8fd8\u80fd\u628a\u6bcf\u4e00\u884c\u5185\u5bb9\u4f9d\u6b21\u8f6c\u6362\u4e3a\u96c6\u5408\u7c7b\u63d0\u5230\u7684Stream\u6d41\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ reader . lines () . limit ( 2 ) . distinct () . sorted () . forEach ( System . out :: println ); } catch ( IOException e ) { e . printStackTrace (); } } \u5b83\u540c\u6837\u4e5f\u652f\u6301 mark() \u548c reset() \u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ reader . mark ( 1 ); System . out . println (( char ) reader . read ()); reader . reset (); System . out . println (( char ) reader . read ()); } catch ( IOException e ) { e . printStackTrace (); } } BufferedReader\u5904\u7406\u7eaf\u6587\u672c\u6587\u4ef6\u65f6\u5c31\u66f4\u52a0\u65b9\u4fbf\u4e86\uff0cBufferedWriter\u5728\u5904\u7406\u65f6\u4e5f\u540c\u6837\u65b9\u4fbf\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { try ( BufferedWriter reader = new BufferedWriter ( new FileWriter ( \"output.txt\" ))){ reader . newLine (); //\u4f7f\u7528newLine\u8fdb\u884c\u6362\u884c reader . write ( \"\u6c49\u5821\u505a\u6ef4\u5f73\u4e8d\u4e0d\u5f73\u4e8d\" ); //\u53ef\u4ee5\u76f4\u63a5\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32 reader . flush (); //\u6e05\u7a7a\u7f13\u51b2\u533a } catch ( IOException e ) { e . printStackTrace (); } } \u8f6c\u6362\u6d41 \u6709\u65f6\u4f1a\u9047\u5230\u8fd9\u6837\u4e00\u4e2a\u5f88\u9ebb\u70e6\u7684\u95ee\u9898\uff1a\u6211\u8fd9\u91cc\u8bfb\u53d6\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u662f\u4e00\u4e2a\u4e2a\u5b57\u7b26\uff0c\u4f46\u662f\u6211\u53ea\u80fd\u5f80\u4e00\u4e2aOutputStream\u91cc\u8f93\u51fa\uff0c\u4f46\u662fOutputStream\u53c8\u53ea\u652f\u6301byte\u7c7b\u578b\uff0c\u5982\u679c\u8981\u5f80\u91cc\u9762\u5199\u5165\u5185\u5bb9\uff0c\u8fdb\u884c\u6570\u636e\u8f6c\u6362\u5c31\u4f1a\u5f88\u9ebb\u70e6\uff0c\u90a3\u4e48\u80fd\u5426\u6709\u66f4\u52a0\u7b80\u4fbf\u7684\u65b9\u5f0f\u6765\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u5462\uff1f 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( OutputStreamWriter writer = new OutputStreamWriter ( new FileOutputStream ( \"test.txt\" ))){ //\u867d\u7136\u7ed9\u5b9a\u7684\u662fFileOutputStream\uff0c\u4f46\u662f\u73b0\u5728\u652f\u6301\u4ee5Writer\u7684\u65b9\u5f0f\u8fdb\u884c\u5199\u5165 writer . write ( \"lbwnb\" ); //\u4ee5\u64cd\u4f5cWriter\u7684\u6837\u5b50\u5199\u5165OutputStream } catch ( IOException e ){ e . printStackTrace (); } } \u540c\u6837\u7684\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u62ff\u5230\u4e86\u4e00\u4e2aInputStream\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u6309\u5b57\u7b26\u7684\u65b9\u5f0f\u8bfb\u53d6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528InputStreamReader\u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( InputStreamReader reader = new InputStreamReader ( new FileInputStream ( \"test.txt\" ))){ //\u867d\u7136\u7ed9\u5b9a\u7684\u662fFileInputStream\uff0c\u4f46\u662f\u73b0\u5728\u652f\u6301\u4ee5Reader\u7684\u65b9\u5f0f\u8fdb\u884c\u8bfb\u53d6 System . out . println (( char ) reader . read ()); } catch ( IOException e ){ e . printStackTrace (); } } InputStreamReader\u548cOutputStreamWriter\u672c\u8d28\u4e5f\u662fReader\u548cWriter\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u653e\u5165BufferedReader\u6765\u5b9e\u73b0\u66f4\u52a0\u65b9\u4fbf\u7684\u64cd\u4f5c\u3002 \u6253\u5370\u6d41 \u6253\u5370\u6d41\u5176\u5b9e\u6211\u4eec\u4ece\u4e00\u5f00\u59cb\u5c31\u5728\u4f7f\u7528\u4e86\uff0c\u6bd4\u5982 System.out \u5c31\u662f\u4e00\u4e2aPrintStream\uff0cPrintStream\u4e5f\u7ee7\u627f\u81eaFilterOutputStream\u7c7b\u56e0\u6b64\u4f9d\u7136\u662f\u88c5\u9970\u6211\u4eec\u4f20\u5165\u7684\u8f93\u51fa\u6d41\uff0c\u4f46\u662f\u5b83\u5b58\u5728\u81ea\u52a8\u5237\u65b0\u673a\u5236\uff0c\u4f8b\u5982\u5f53\u5411PrintStream\u6d41\u4e2d\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u540e\u81ea\u52a8\u8c03\u7528 flush() \u65b9\u6cd5\u3002PrintStream\u4e5f\u6c38\u8fdc\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u4f7f\u7528\u5185\u90e8\u68c0\u67e5\u673a\u5236 checkError() \u65b9\u6cd5\u8fdb\u884c\u9519\u8bef\u68c0\u67e5\u3002\u6700\u65b9\u4fbf\u7684\u662f\uff0c\u5b83\u80fd\u591f\u683c\u5f0f\u5316\u4efb\u610f\u7684\u7c7b\u578b\uff0c\u5c06\u5b83\u4eec\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5199\u5165\u5230\u8f93\u51fa\u6d41\u3002 1 public final static PrintStream out = null ; \u53ef\u4ee5\u770b\u5230 System.out \u4e5f\u662fPrintStream\uff0c\u4e0d\u8fc7\u9ed8\u8ba4\u662f\u5411\u63a7\u5236\u53f0\u6253\u5370\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u5b83\u5411\u6587\u4ef6\u4e2d\u6253\u5370\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( PrintStream stream = new PrintStream ( new FileOutputStream ( \"test.txt\" ))){ stream . println ( \"lbwnb\" ); //\u5176\u5b9eSystem.out\u5c31\u662f\u4e00\u4e2aPrintStream } catch ( IOException e ){ e . printStackTrace (); } } \u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u7684 println \u65b9\u6cd5\u5c31\u662fPrintStream\u4e2d\u7684\u65b9\u6cd5\uff0c\u5b83\u4f1a\u76f4\u63a5\u6253\u5370\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u662f\u8c03\u7528\u5bf9\u8c61\u7684 toString() \u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\uff0c\u653e\u5165\u7f13\u51b2\u533a\u518d\u7ecf\u8fc7\u8f6c\u6362\u6d41\u8f93\u51fa\u5230\u7ed9\u5b9a\u7684\u8f93\u51fa\u6d41\u4e0a\u3002 \u56e0\u6b64\u5b9e\u9645\u4e0a\u5185\u90e8\u8fd8\u5305\u542b\u8fd9\u4e24\u4e2a\u5185\u5bb9\uff1a 1 2 3 4 5 6 /** * Track both the text- and character-output streams, so that their buffers * can be flushed without flushing the entire stream. */ private BufferedWriter textOut ; private OutputStreamWriter charOut ; \u4e0e\u6b64\u76f8\u540c\u7684\u8fd8\u6709\u4e00\u4e2aPrintWriter\uff0c\u4e0d\u8fc7\u4ed6\u4eec\u7684\u529f\u80fd\u57fa\u672c\u4e00\u81f4\uff0cPrintWriter\u7684\u6784\u9020\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aWriter\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u505a\u8fc7\u591a\u9610\u8ff0\u4e86\u3002 \u6570\u636e\u6d41 \u6570\u636e\u6d41DataInputStream\u4e5f\u662fFilterInputStream\u7684\u5b50\u7c7b\uff0c\u540c\u6837\u91c7\u7528\u88c5\u9970\u8005\u6a21\u5f0f\uff0c\u6700\u5927\u7684\u4e0d\u540c\u662f\u5b83\u652f\u6301\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u76f4\u63a5\u8bfb\u53d6\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( DataInputStream dataInputStream = new DataInputStream ( new FileInputStream ( \"test.txt\" ))){ System . out . println ( dataInputStream . readBoolean ()); //\u76f4\u63a5\u5c06\u6570\u636e\u8bfb\u53d6\u4e3a\u4efb\u610f\u57fa\u672c\u6570\u636e\u7c7b\u578b } catch ( IOException e ) { e . printStackTrace (); } } \u7528\u4e8e\u5199\u5165\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( DataOutputStream dataOutputStream = new DataOutputStream ( new FileOutputStream ( \"output.txt\" ))){ dataOutputStream . writeBoolean ( false ); } catch ( IOException e ) { e . printStackTrace (); } } \u6ce8\u610f\uff0c\u5199\u5165\u7684\u662f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u5199\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528DataInputStream\u53ef\u4ee5\u8bfb\u53d6\uff0c\u4e00\u822c\u4ed6\u4eec\u662f\u914d\u5408\u4e00\u8d77\u4f7f\u7528\u7684\u3002 \u5bf9\u8c61\u6d41 \u65e2\u7136\u57fa\u672c\u6570\u636e\u7c7b\u578b\u80fd\u591f\u8bfb\u53d6\u548c\u5199\u5165\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u80fd\u5426\u5c06\u5bf9\u8c61\u4e5f\u652f\u6301\u5462\uff1fObjectOutputStream\u4e0d\u4ec5\u652f\u6301\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u901a\u8fc7\u5bf9\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u4ee5\u67d0\u79cd\u683c\u5f0f\u4fdd\u5b58\u5bf9\u8c61\uff0c\u6765\u652f\u6301\u5bf9\u8c61\u7c7b\u578b\u7684IO\uff0c\u6ce8\u610f\uff1a\u5b83\u4e0d\u662f\u7ee7\u627f\u81eaFilterInputStream\u7684\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public static void main ( String [] args ) { try ( ObjectOutputStream outputStream = new ObjectOutputStream ( new FileOutputStream ( \"output.txt\" )); ObjectInputStream inputStream = new ObjectInputStream ( new FileInputStream ( \"output.txt\" ))){ People people = new People ( \"lbw\" ); outputStream . writeObject ( people ); outputStream . flush (); people = ( People ) inputStream . readObject (); System . out . println ( people . name ); } catch ( IOException | ClassNotFoundException e ) { e . printStackTrace (); } } static class People implements Serializable { //\u5fc5\u987b\u5b9e\u73b0Serializable\u63a5\u53e3\u624d\u80fd\u88ab\u5e8f\u5217\u5316 String name ; public People ( String name ){ this . name = name ; } } \u5728\u6211\u4eec\u540e\u7eed\u7684\u64cd\u4f5c\u4e2d\uff0c\u6709\u53ef\u80fd\u4f1a\u4f7f\u5f97\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e9b\u7ed3\u6784\u53d1\u751f\u53d8\u5316\uff0c\u800c\u539f\u6765\u4fdd\u5b58\u7684\u6570\u636e\u53ea\u9002\u7528\u4e8e\u4e4b\u524d\u7248\u672c\u7684\u8fd9\u4e2a\u7c7b\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u533a\u5206\u7c7b\u7684\u4e0d\u540c\u7248\u672c\uff1a 1 2 3 4 5 6 7 8 9 static class People implements Serializable { private static final long serialVersionUID = 123456 ; //\u5728\u5e8f\u5217\u5316\u65f6\uff0c\u4f1a\u88ab\u81ea\u52a8\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5b83\u4ee3\u8868\u5f53\u524d\u7c7b\u7684\u7248\u672c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u7248\u672c\u3002 String name ; public People ( String name ){ this . name = name ; } } \u5f53\u53d1\u751f\u7248\u672c\u4e0d\u5339\u914d\u65f6\uff0c\u4f1a\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\u4e3a\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 java . io . InvalidClassException : com . test . Main$People ; local class incompatible : stream classdesc serialVersionUID = 123456 , local class serialVersionUID = 1234567 at java . io . ObjectStreamClass . initNonProxy ( ObjectStreamClass . java : 699 ) at java . io . ObjectInputStream . readNonProxyDesc ( ObjectInputStream . java : 2003 ) at java . io . ObjectInputStream . readClassDesc ( ObjectInputStream . java : 1850 ) at java . io . ObjectInputStream . readOrdinaryObject ( ObjectInputStream . java : 2160 ) at java . io . ObjectInputStream . readObject0 ( ObjectInputStream . java : 1667 ) at java . io . ObjectInputStream . readObject ( ObjectInputStream . java : 503 ) at java . io . ObjectInputStream . readObject ( ObjectInputStream . java : 461 ) at com . test . Main . main ( Main . java : 27 ) \u5982\u679c\u6211\u4eec\u4e0d\u5e0c\u671b\u67d0\u4e9b\u5c5e\u6027\u53c2\u4e0e\u5230\u5e8f\u5217\u5316\u4e2d\u8fdb\u884c\u4fdd\u5b58\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0 transient \u5173\u952e\u5b57\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public static void main ( String [] args ) { try ( ObjectOutputStream outputStream = new ObjectOutputStream ( new FileOutputStream ( \"output.txt\" )); ObjectInputStream inputStream = new ObjectInputStream ( new FileInputStream ( \"output.txt\" ))){ People people = new People ( \"lbw\" ); outputStream . writeObject ( people ); outputStream . flush (); people = ( People ) inputStream . readObject (); System . out . println ( people . name ); //\u867d\u7136\u80fd\u5f97\u5230\u5bf9\u8c61\uff0c\u4f46\u662fname\u5c5e\u6027\u5e76\u6ca1\u6709\u4fdd\u5b58\uff0c\u56e0\u6b64\u4e3anull } catch ( IOException | ClassNotFoundException e ) { e . printStackTrace (); } } static class People implements Serializable { private static final long serialVersionUID = 1234567 ; transient String name ; public People ( String name ){ this . name = name ; } } \u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u4e00\u4e9bJDK\u5185\u90e8\u7684\u6e90\u7801\u4e2d\uff0c\u4e5f\u5b58\u5728\u5927\u91cf\u7684transient\u5173\u952e\u5b57\uff0c\u4f7f\u5f97\u67d0\u4e9b\u5c5e\u6027\u4e0d\u53c2\u4e0e\u5e8f\u5217\u5316\uff0c\u53d6\u6d88\u8fd9\u4e9b\u4e0d\u5fc5\u8981\u4fdd\u5b58\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u8282\u7701\u6570\u636e\u7a7a\u95f4\u5360\u7528\u4ee5\u53ca\u51cf\u5c11\u5e8f\u5217\u5316\u65f6\u95f4\u3002 Java I/O\u7f16\u7a0b\u5b9e\u6218 \u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf \u8981\u6c42\u5b9e\u73b0\u4e00\u4e2a\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\uff08\u63a7\u5236\u53f0\uff09\uff0c\u652f\u6301\u4ee5\u4e0b\u529f\u80fd\uff1a\u4fdd\u5b58\u4e66\u7c4d\u4fe1\u606f\uff08\u8981\u6c42\u6301\u4e45\u5316\uff09\uff0c\u67e5\u8be2\u3001\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u4e66\u7c4d\u4fe1\u606f\u3002","title":"Java I/O"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#java-io","text":"\u6ce8\u610f\uff1a \u8fd9\u5757\u4f1a\u6d89\u53ca\u5230 \u64cd\u4f5c\u7cfb\u7edf \u548c \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406 \u76f8\u5173\u5185\u5bb9\u3002 I/O\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u8f93\u5165\u8f93\u51fa\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u6709I/O\u5462\uff1f\u5176\u5b9eI/O\u65e0\u65f6\u65e0\u523b\u90fd\u5728\u6211\u4eec\u7684\u8eab\u8fb9\uff0c\u6bd4\u5982\u8bfb\u53d6\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\uff0c\u7f51\u7edc\u6587\u4ef6\u4f20\u8f93\uff0c\u9f20\u6807\u952e\u76d8\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u662f\u63a5\u53d7\u5355\u7247\u673a\u53d1\u56de\u7684\u6570\u636e\uff0c\u800c\u80fd\u591f\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u8bbe\u5907\u5c31\u662fI/O\u8bbe\u5907\u3002 \u6211\u4eec\u53ef\u4ee5\u5927\u81f4\u770b\u4e00\u4e0b\u6574\u4e2a\u8ba1\u7b97\u673a\u7684\u603b\u7ebf\u7ed3\u6784\uff1a \u5e38\u89c1\u7684I/O\u8bbe\u5907\u4e00\u822c\u662f\u9f20\u6807\u3001\u952e\u76d8\u8fd9\u7c7b\u901a\u8fc7USB\u8fdb\u884c\u4f20\u8f93\u7684\u5916\u8bbe\u6216\u8005\u662f\u901a\u8fc7Sata\u63a5\u53e3\u6216\u662fM.2\u8fde\u63a5\u7684\u786c\u76d8\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8bbe\u5907\u662f\u7531CPU\u53d1\u51fa\u6307\u4ee4\u901a\u8fc7\u5357\u6865\u82af\u7247\u95f4\u63a5\u8fdb\u884c\u63a7\u5236\uff0c\u800c\u4e0d\u662f\u7531CPU\u76f4\u63a5\u64cd\u4f5c\u3002 \u800c\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\uff0c\u60f3\u8981\u8bfb\u53d6\u8fd9\u4e9b\u5916\u90e8\u8fde\u63a5\u7684I/O\u8bbe\u5907\u4e2d\u7684\u5185\u5bb9\uff0c\u5c31\u9700\u8981\u5c06\u6570\u636e\u4f20\u8f93\u5230\u5185\u5b58\u4e2d\u3002\u800c\u9700\u8981\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u5355\u5355\u51ed\u501f\u4e00\u4e2a\u5c0f\u7684\u7a0b\u5e8f\u662f\u65e0\u6cd5\u505a\u5230\u7684\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\uff08\u5982\uff1aWindows/Linux/MacOS\uff09\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u63a7\u5236\u548c\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90\u7684\u8f6f\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8bfb\u53d6\u4e00\u4e2aIO\u8bbe\u5907\u7684\u5185\u5bb9\u65f6\uff0c\u53ef\u4ee5\u5411\u64cd\u4f5c\u7cfb\u7edf\u53d1\u51fa\u8bf7\u6c42\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u5e2e\u52a9\u6211\u4eec\u6765\u548c\u5e95\u5c42\u7684\u786c\u4ef6\u4ea4\u4e92\u4ee5\u5b8c\u6210\u6211\u4eec\u7684\u8bfb\u53d6/\u5199\u5165\u8bf7\u6c42\u3002\u4ece\u8bfb\u53d6\u786c\u76d8\u6587\u4ef6\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u7740\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u4e5f\u5c31\u662f\u6587\u4ef6\u5728\u786c\u76d8\u4e2d\u7684\u5b58\u50a8\u6392\u5217\u65b9\u5f0f\uff0c\u5982Windows\u5c31\u662fNTFS\u3001MacOS\u5c31\u662fAPFS\uff09\uff0c\u786c\u76d8\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u4e2a0\u548c1\u8fd9\u6837\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u81f3\u4e8e0\u548c1\u5982\u4f55\u6392\u5217\uff0c\u5404\u81ea\u53c8\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff0c\u5c31\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u7684\u6587\u4ef6\u7cfb\u7edf\u6765\u51b3\u5b9a\u7684\u3002\u4ece\u7f51\u7edc\u901a\u4fe1\u89d2\u5ea6\u6765\u8bf4\uff0c\u7f51\u7edc\u4fe1\u53f7\u901a\u8fc7\u7f51\u5361\u7b49\u8bbe\u5907\u7ffb\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u4fe1\u53f7\uff0c\u518d\u4ea4\u7ed9\u7cfb\u7edf\u8fdb\u884c\u8bfb\u53d6\uff0c\u6700\u540e\u518d\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u7ed9\u5230\u7a0b\u5e8f\u3002 JDK\u63d0\u4f9b\u4e86\u4e00\u5957\u7528\u4e8eIO\u64cd\u4f5c\u7684\u6846\u67b6\uff0c\u6839\u636e\u6d41\u7684\u4f20\u8f93\u65b9\u5411\u548c\u8bfb\u53d6\u5355\u4f4d\uff0c\u5206\u4e3a\u5b57\u8282\u6d41InputStream\u548cOutputStream\u4ee5\u53ca\u5b57\u7b26\u6d41Reader\u548cWriter\uff0c\u5f53\u7136\uff0c\u8fd9\u91cc\u7684Stream\u5e76\u4e0d\u662f\u524d\u9762\u96c6\u5408\u6846\u67b6\u8ba4\u8bc6\u7684Stream\uff0c\u8fd9\u91cc\u7684\u6d41\u6307\u7684\u662f\u6570\u636e\u6d41\uff0c\u901a\u8fc7\u6d41\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e00\u76f4\u4ece\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u5c3d\u5934\uff0c\u6216\u662f\u4e0d\u65ad\u5411\u5176\u4e2d\u5199\u5165\u6570\u636e\uff0c\u76f4\u5230\u6211\u4eec\u5199\u5165\u5b8c\u6210\u3002\u800c\u8fd9\u7c7bIO\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684BIO\uff0c \u5b57\u8282\u6d41\u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a byte \u7684\u5927\u5c0f\uff0c\u800c\u5b57\u7b26\u6d41\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a char \u7684\u5927\u5c0f\uff08\u5728\u8bfb\u53d6\u7eaf\u6587\u672c\u6587\u4ef6\u7684\u65f6\u5019\u66f4\u52a0\u9002\u5408\uff09\uff0c\u6709\u5173\u8fd9\u4e24\u79cd\u6d41\uff0c\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u8fd9\u4e2a\u7ae0\u8282\u6211\u4eec\u9700\u8981\u5b66\u4e6016\u4e2a\u5173\u952e\u7684\u6d41\u3002","title":"Java I/O"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_1","text":"\u8981\u5b66\u4e60\u548c\u4f7f\u7528IO\uff0c\u9996\u5148\u5c31\u8981\u4ece\u6700\u6613\u4e8e\u7406\u89e3\u7684\u8bfb\u53d6\u6587\u4ef6\u5f00\u59cb\u8bf4\u8d77\u3002","title":"\u6587\u4ef6\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_2","text":"\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0bFileInputStream\uff0c\u901a\u8fc7\u5b83\u6765\u83b7\u53d6\u6587\u4ef6\u7684\u8f93\u5165\u6d41\u3002 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try { FileInputStream inputStream = new FileInputStream ( \"\u8def\u5f84\" ); //\u8def\u5f84\u652f\u6301\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84 } catch ( FileNotFoundException e ) { e . printStackTrace (); } } \u76f8\u5bf9\u8def\u5f84\u662f\u5728\u5f53\u524d\u8fd0\u884c\u7684\u8def\u5f84\u4e0b\u5bfb\u627e\u6587\u4ef6\uff0c\u800c\u7edd\u5bf9\u8def\u5f84\uff0c\u662f\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\u5bfb\u627e\u3002\u8def\u5f84\u5206\u5272\u7b26\u652f\u6301\u4f7f\u7528 / \u6216\u662f \\\\ \uff0c\u4f46\u662f\u4e0d\u80fd\u5199\u4e3a \\ \u56e0\u4e3a\u5b83\u662f\u8f6c\u4e49\u5b57\u7b26\uff01 \u5728\u4f7f\u7528\u5b8c\u6210\u4e00\u4e2a\u6d41\u4e4b\u540e\uff0c\u5fc5\u987b\u5173\u95ed\u8fd9\u4e2a\u6d41\u6765\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u91ca\u653e\uff0c\u5426\u5219\u8d44\u6e90\u4f1a\u88ab\u4e00\u76f4\u5360\u7528\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { FileInputStream inputStream = null ; //\u5b9a\u4e49\u53ef\u4ee5\u5148\u653e\u5728try\u5916\u90e8 try { inputStream = new FileInputStream ( \"\u8def\u5f84\" ); } catch ( FileNotFoundException e ) { e . printStackTrace (); } finally { try { //\u5efa\u8bae\u5728finally\u4e2d\u8fdb\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u662f\u4efb\u4f55\u60c5\u51b5\u90fd\u5fc5\u987b\u8981\u6267\u884c\u7684\uff01 if ( inputStream != null ) inputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } } } \u867d\u7136\u8fd9\u6837\u7684\u5199\u6cd5\u624d\u662f\u6700\u4fdd\u9669\u7684\uff0c\u4f46\u662f\u663e\u5f97\u8fc7\u4e8e\u7e41\u7410\u4e86\uff0c\u5c24\u5176\u662ffinally\u4e2d\u518d\u6b21\u5d4c\u5957\u4e86\u4e00\u4e2atry-catch\u5757\uff0c\u56e0\u6b64\u5728JDK1.7\u65b0\u589e\u4e86try-with-resource\u8bed\u6cd5\uff0c\u7528\u4e8e\u7b80\u5316\u8fd9\u6837\u7684\u5199\u6cd5\uff08\u672c\u8d28\u4e0a\u8fd8\u662f\u548c\u8fd9\u6837\u7684\u64cd\u4f5c\u4e00\u81f4\uff0c\u53ea\u662f\u6362\u4e86\u4e2a\u5199\u6cd5\uff09 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { //\u6ce8\u610f\uff0c\u8fd9\u79cd\u8bed\u6cd5\u53ea\u652f\u6301\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\u7684\u7c7b\uff01 try ( FileInputStream inputStream = new FileInputStream ( \"\u8def\u5f84\" )) { //\u76f4\u63a5\u5728try()\u4e2d\u5b9a\u4e49\u8981\u5728\u5b8c\u6210\u4e4b\u540e\u91ca\u653e\u7684\u8d44\u6e90 } catch ( IOException e ) { //\u8fd9\u91cc\u53d8\u6210IOException\u662f\u56e0\u4e3a\u8c03\u7528close()\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c\u800cFileNotFoundException\u662f\u7ee7\u627f\u81eaIOException\u7684 e . printStackTrace (); } //\u65e0\u9700\u518d\u7f16\u5199finally\u8bed\u53e5\u5757\uff0c\u56e0\u4e3a\u5728\u6700\u540e\u81ea\u52a8\u5e2e\u6211\u4eec\u8c03\u7528\u4e86close() } \u4e4b\u540e\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u90fd\u4f7f\u7528\u6b64\u8bed\u6cd5\u8fdb\u884c\u6559\u5b66\u3002 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { //test.txt\uff1aa try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { //\u4f7f\u7528read()\u65b9\u6cd5\u8fdb\u884c\u5b57\u7b26\u8bfb\u53d6 System . out . println (( char ) inputStream . read ()); //\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff08\u82f1\u6587\u5b57\u6bcd\u53ea\u53601\u5b57\u8282\uff0c\u4e2d\u6587\u53602\u5b57\u8282\uff09 System . out . println ( inputStream . read ()); //\u552f\u4e00\u4e00\u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u5df2\u7ecf\u8bfb\u5b8c\u4e86\uff0c\u518d\u6b21\u8bfb\u53d6\u8fd4\u56de-1\u8868\u793a\u6ca1\u6709\u5185\u5bb9\u4e86 } catch ( IOException e ){ e . printStackTrace (); } } \u4f7f\u7528read\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u6ce8\u610f\uff0c\u6d41\u7684\u5185\u5bb9\u662f\u6709\u9650\u7684\uff0c\u8bfb\u53d6\u4e00\u4e2a\u5c11\u4e00\u4e2a\uff01\u6211\u4eec\u5982\u679c\u60f3\u4e00\u6b21\u6027\u5168\u90e8\u8bfb\u53d6\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2awhile\u5faa\u73af\u6765\u5b8c\u6210\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { //test.txt\uff1aabcd try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { int tmp ; while (( tmp = inputStream . read ()) != - 1 ){ //\u901a\u8fc7while\u5faa\u73af\u6765\u4e00\u6b21\u6027\u8bfb\u5b8c\u5185\u5bb9 System . out . println (( char ) tmp ); } } catch ( IOException e ){ e . printStackTrace (); } } \u4f7f\u7528\u65b9\u6cd5\u80fd\u67e5\u770b\u5f53\u524d\u53ef\u8bfb\u7684\u5269\u4f59\u5b57\u8282\u6570\u91cf\uff08\u6ce8\u610f\uff1a\u5e76\u4e0d\u4e00\u5b9a\u771f\u5b9e\u7684\u6570\u636e\u91cf\u5c31\u662f\u8fd9\u4e48\u591a\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edcI/O\u64cd\u4f5c\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u9884\u4f30\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6682\u65f6\u80fd\u4e00\u6b21\u6027\u8bfb\u53d6\u7684\u6570\u91cf\uff09 1 2 3 4 5 try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { System . out . println ( inputStream . available ()); //\u67e5\u770b\u5269\u4f59\u6570\u91cf } catch ( IOException e ){ e . printStackTrace (); } \u5f53\u7136\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8bfb\u53d6\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u90a3\u80fd\u5426\u4e00\u6b21\u6027\u5168\u90e8\u8bfb\u53d6\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u9884\u7f6e\u4e00\u4e2a\u5408\u9002\u5bb9\u91cf\u7684byte[]\u6570\u7ec4\u6765\u5b58\u653e\u3002 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { //test.txt\uff1aabcd try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { byte [] bytes = new byte [ inputStream . available () ] ; //\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u597d\u5408\u9002\u5bb9\u91cf\u7684byte\u6570\u7ec4\u6765\u5b58\u653e System . out . println ( inputStream . read ( bytes )); //\u4e00\u6b21\u6027\u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff08\u8fd4\u56de\u503c\u662f\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff09 System . out . println ( new String ( bytes )); //\u901a\u8fc7String(byte[])\u6784\u9020\u65b9\u6cd5\u5f97\u5230\u5b57\u7b26\u4e32 } catch ( IOException e ){ e . printStackTrace (); } } \u4e5f\u53ef\u4ee5\u63a7\u5236\u8981\u8bfb\u53d6\u6570\u91cf\uff1a 1 System . out . println ( inputStream . read ( bytes , 1 , 2 )); //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4ece\u7ed9\u5b9a\u6570\u7ec4\u7684\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u653e\u5165\u5185\u5bb9\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u8bfb\u53d6\u6d41\u4e2d\u7684\u5b57\u8282\u6570 \u6ce8\u610f \uff1a\u4e00\u6b21\u6027\u8bfb\u53d6\u540c\u5355\u4e2a\u8bfb\u53d6\u4e00\u6837\uff0c\u5f53\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u53ef\u8bfb\u65f6\uff0c\u4f9d\u7136\u4f1a\u8fd4\u56de-1 \u901a\u8fc7 skip() \u65b9\u6cd5\u53ef\u4ee5\u8df3\u8fc7\u6307\u5b9a\u6570\u91cf\u7684\u5b57\u8282\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { //test.txt\uff1aabcd try ( FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { System . out . println ( inputStream . skip ( 1 )); System . out . println (( char ) inputStream . read ()); //\u8df3\u8fc7\u4e86\u4e00\u4e2a\u5b57\u8282 } catch ( IOException e ){ e . printStackTrace (); } } \u6ce8\u610f\uff1aFileInputStream\u662f\u4e0d\u652f\u6301 reset() \u7684\uff0c\u867d\u7136\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u91cc\u5148\u4e0d\u63d0\u53ca\u3002 \u65e2\u7136\u6709\u8f93\u5165\u6d41\uff0c\u90a3\u4e48\u6587\u4ef6\u8f93\u51fa\u6d41\u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { //\u8f93\u51fa\u6d41\u4e5f\u9700\u8981\u5728\u6700\u540e\u8c03\u7528close()\u65b9\u6cd5\uff0c\u5e76\u4e14\u540c\u6837\u652f\u6301try-with-resource try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" )) { //\u6ce8\u610f\uff1a\u82e5\u6b64\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u6587\u4ef6\uff01 } catch ( IOException e ){ e . printStackTrace (); } } \u8f93\u51fa\u6d41\u6ca1\u6709 read() \u64cd\u4f5c\u800c\u662f write() \u64cd\u4f5c\uff0c\u4f7f\u7528\u65b9\u6cd5\u540c\u8f93\u5165\u6d41\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u73b0\u5728\u7684\u65b9\u5411\u53d8\u4e3a\u6211\u4eec\u5411\u6587\u4ef6\u91cc\u5199\u5165\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" )) { outputStream . write ( 'c' ); //\u540cread\u4e00\u6837\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u5165\u5185\u5bb9 outputStream . write ( \"lbwnb\" . getBytes ()); //\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199\u5165byte[] outputStream . write ( \"lbwnb\" . getBytes (), 0 , 1 ); //\u540c\u4e0a\u8f93\u5165\u6d41 outputStream . flush (); //\u5efa\u8bae\u5728\u6700\u540e\u6267\u884c\u4e00\u6b21\u5237\u65b0\u64cd\u4f5c\uff08\u5f3a\u5236\u5199\u5165\uff09\u6765\u4fdd\u8bc1\u6570\u636e\u6b63\u786e\u5199\u5165\u5230\u786c\u76d8\u6587\u4ef6\u4e2d } catch ( IOException e ){ e . printStackTrace (); } } \u90a3\u4e48\u5982\u679c\u662f\u6211\u53ea\u60f3\u5728\u6587\u4ef6\u5c3e\u90e8\u8fdb\u884c\u8ffd\u52a0\u5199\u5165\u6570\u636e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" , true )) { outputStream . write ( \"lb\" . getBytes ()); //\u73b0\u5728\u53ea\u4f1a\u8fdb\u884c\u8ffd\u52a0\u5199\u5165\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u66ff\u6362\u539f\u6587\u4ef6\u5185\u5bb9 outputStream . flush (); } catch ( IOException e ){ e . printStackTrace (); } } \u5229\u7528\u8f93\u5165\u6d41\u548c\u8f93\u51fa\u6d41\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u6587\u4ef6\u7684\u62f7\u8d1d\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( FileOutputStream outputStream = new FileOutputStream ( \"output.txt\" ); FileInputStream inputStream = new FileInputStream ( \"test.txt\" )) { //\u53ef\u4ee5\u5199\u5165\u591a\u4e2a byte [] bytes = new byte [ 10 ] ; //\u4f7f\u7528\u957f\u5ea6\u4e3a10\u7684byte[]\u505a\u4f20\u8f93\u5a92\u4ecb int tmp ; //\u5b58\u50a8\u672c\u5730\u8bfb\u53d6\u5b57\u8282\u6570 while (( tmp = inputStream . read ( bytes )) != - 1 ){ //\u76f4\u5230\u8bfb\u53d6\u5b8c\u6210\u4e3a\u6b62 outputStream . write ( bytes , 0 , tmp ); //\u5199\u5165\u5bf9\u5e94\u957f\u5ea6\u7684\u6570\u636e\u5230\u8f93\u51fa\u6d41 } } catch ( IOException e ){ e . printStackTrace (); } }","title":"\u6587\u4ef6\u5b57\u8282\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_3","text":"\u5b57\u7b26\u6d41\u4e0d\u540c\u4e8e\u5b57\u8282\uff0c\u5b57\u7b26\u6d41\u662f\u4ee5\u4e00\u4e2a\u5177\u4f53\u7684\u5b57\u7b26\u8fdb\u884c\u8bfb\u53d6\uff0c\u56e0\u6b64\u5b83\u53ea\u9002\u5408\u8bfb\u7eaf\u6587\u672c\u7684\u6587\u4ef6\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u6587\u4ef6\u4e0d\u9002\u7528\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try ( FileReader reader = new FileReader ( \"test.txt\" )){ reader . skip ( 1 ); //\u73b0\u5728\u8df3\u8fc7\u7684\u662f\u4e00\u4e2a\u5b57\u7b26 System . out . println (( char ) reader . read ()); //\u73b0\u5728\u662f\u6309\u5b57\u7b26\u8fdb\u884c\u8bfb\u53d6\uff0c\u800c\u4e0d\u662f\u5b57\u8282\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u5230\u4e2d\u6587\u5b57\u7b26 } catch ( IOException e ){ e . printStackTrace (); } } \u540c\u7406\uff0c\u5b57\u7b26\u6d41\u53ea\u652f\u6301 char[] \u7c7b\u578b\u4f5c\u4e3a\u5b58\u50a8\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { try ( FileReader reader = new FileReader ( \"test.txt\" )){ char [] str = new char [ 10 ] ; reader . read ( str ); System . out . println ( str ); //\u76f4\u63a5\u8bfb\u53d6\u5230char[]\u4e2d } catch ( IOException e ){ e . printStackTrace (); } } \u65e2\u7136\u6709\u4e86Reader\u80af\u5b9a\u4e5f\u6709Writer\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { try ( FileWriter writer = new FileWriter ( \"output.txt\" )){ writer . getEncoding (); //\u652f\u6301\u83b7\u53d6\u7f16\u7801\uff08\u4e0d\u540c\u7684\u6587\u672c\u6587\u4ef6\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u7f16\u7801\u7c7b\u578b\uff09 writer . write ( '\u725b' ); writer . append ( '\u725b' ); //\u5176\u5b9e\u529f\u80fd\u548cwrite\u4e00\u6837 writer . flush (); //\u5237\u65b0 } catch ( IOException e ){ e . printStackTrace (); } } \u6211\u4eec\u53d1\u73b0\u4e0d\u4ec5\u6709 write() \u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a append() \u65b9\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4ed6\u4eec\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u770b\u6e90\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * Appends the specified character to this writer. * * <p> An invocation of this method of the form <tt>out.append(c)</tt> * behaves in exactly the same way as the invocation * * <pre> * out.write(c) </pre> * * @param c * The 16-bit character to append * * @return This writer * * @throws IOException * If an I/O error occurs * * @since 1.5 */ public Writer append ( char c ) throws IOException { write ( c ); return this ; } append\u652f\u6301\u50cfStringBuilder\u90a3\u6837\u7684\u94fe\u5f0f\u8c03\u7528\uff0c\u8fd4\u56de\u7684\u662fWriter\u5bf9\u8c61\u672c\u8eab\u3002 \u7ec3\u4e60 \uff1a\u5c1d\u8bd5\u4e00\u4e0b\u7528Reader\u548cWriter\u6765\u62f7\u8d1d\u7eaf\u6587\u672c\u6587\u4ef6","title":"\u6587\u4ef6\u5b57\u7b26\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#file","text":"File\u7c7b\u4e13\u95e8\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u6587\u4ef6\u6216\u6587\u4ef6\u5939\uff0c\u53ea\u4e0d\u8fc7\u5b83\u53ea\u662f\u4ee3\u8868\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f46\u5e76\u4e0d\u662f\u8fd9\u4e2a\u6587\u4ef6\u672c\u8eab\u3002\u901a\u8fc7File\u5bf9\u8c61\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7ba1\u7406\u548c\u64cd\u4f5c\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\u3002 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { File file = new File ( \"test.txt\" ); //\u76f4\u63a5\u521b\u5efa\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84 System . out . println ( file . exists ()); //\u6b64\u6587\u4ef6\u662f\u5426\u5b58\u5728 System . out . println ( file . length ()); //\u83b7\u53d6\u6587\u4ef6\u7684\u5927\u5c0f System . out . println ( file . isDirectory ()); //\u662f\u5426\u4e3a\u4e00\u4e2a\u6587\u4ef6\u5939 System . out . println ( file . canRead ()); //\u662f\u5426\u53ef\u8bfb System . out . println ( file . canWrite ()); //\u662f\u5426\u53ef\u5199 System . out . println ( file . canExecute ()); //\u662f\u5426\u53ef\u6267\u884c } \u901a\u8fc7File\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u80fd\u5feb\u901f\u5f97\u5230\u6587\u4ef6\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5982\u679c\u662f\u6587\u4ef6\u5939\uff0c\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6587\u4ef6\u5939\u5185\u90e8\u7684\u6587\u4ef6\u5217\u8868\u7b49\u5185\u5bb9\uff1a 1 2 3 4 5 File file = new File ( \"/\" ); System . out . println ( Arrays . toString ( file . list ())); //\u5feb\u901f\u83b7\u53d6\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\u540d\u79f0\u5217\u8868 for ( File f : file . listFiles ()){ //\u6240\u6709\u5b50\u6587\u4ef6\u7684File\u5bf9\u8c61 System . out . println ( f . getAbsolutePath ()); //\u83b7\u53d6\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 } \u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bfb\u53d6\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06File\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5b57\u8282\u6d41\u6216\u662f\u5b57\u7b26\u6d41\uff1a 1 2 3 4 5 6 File file = new File ( \"test.txt\" ); try ( FileInputStream inputStream = new FileInputStream ( file )){ //\u76f4\u63a5\u505a\u53c2\u6570 System . out . println ( inputStream . available ()); } catch ( IOException e ){ e . printStackTrace (); } \u7ec3\u4e60 \uff1a\u5c1d\u8bd5\u62f7\u8d1d\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u5939","title":"File\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_4","text":"\u867d\u7136\u666e\u901a\u7684\u6587\u4ef6\u6d41\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u975e\u5e38\u4fbf\u6377\uff0c\u4f46\u662f\u6bcf\u6b21\u90fd\u9700\u8981\u4ece\u5916\u90e8I/O\u8bbe\u5907\u53bb\u83b7\u53d6\u6570\u636e\uff0c\u7531\u4e8e\u5916\u90e8I/O\u8bbe\u5907\u7684\u901f\u5ea6\u4e00\u822c\u90fd\u8fbe\u4e0d\u5230\u5185\u5b58\u7684\u8bfb\u53d6\u901f\u5ea6\uff0c\u5f88\u6709\u53ef\u80fd\u9020\u6210\u7a0b\u5e8f\u53cd\u5e94\u8fdf\u949d\uff0c\u56e0\u6b64\u6027\u80fd\u8fd8\u4e0d\u591f\u9ad8\uff0c\u800c\u7f13\u51b2\u6d41\u6b63\u5982\u5176\u540d\u79f0\u4e00\u6837\uff0c\u5b83\u80fd\u591f\u63d0\u4f9b\u4e00\u4e2a\u7f13\u51b2\uff0c\u63d0\u524d\u5c06\u90e8\u5206\u5185\u5bb9\u5b58\u5165\u5185\u5b58\uff08\u7f13\u51b2\u533a\uff09\u5728\u4e0b\u6b21\u8bfb\u53d6\u65f6\uff0c\u5982\u679c\u7f13\u51b2\u533a\u4e2d\u5b58\u5728\u6b64\u6570\u636e\uff0c\u5219\u65e0\u9700\u518d\u53bb\u8bf7\u6c42\u5916\u90e8\u8bbe\u5907\u3002\u540c\u7406\uff0c\u5f53\u5411\u5916\u90e8\u8bbe\u5907\u5199\u5165\u6570\u636e\u65f6\uff0c\u4e5f\u662f\u7531\u7f13\u51b2\u533a\u5904\u7406\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5411\u5916\u90e8\u8bbe\u5907\u5199\u5165\u3002","title":"\u7f13\u51b2\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_5","text":"\u8981\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u5b57\u8282\u6d41\uff0c\u53ea\u9700\u8981\u5c06\u539f\u672c\u7684\u6d41\u4f5c\u4e3a\u6784\u9020\u53c2\u6570\u4f20\u5165BufferedInputStream\u5373\u53ef\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( BufferedInputStream bufferedInputStream = new BufferedInputStream ( new FileInputStream ( \"test.txt\" ))){ //\u4f20\u5165FileInputStream System . out . println (( char ) bufferedInputStream . read ()); //\u64cd\u4f5c\u548c\u539f\u6765\u7684\u6d41\u662f\u4e00\u6837\u7684 } catch ( IOException e ){ e . printStackTrace (); } } \u5b9e\u9645\u4e0a\u8fdb\u884cI/O\u64cd\u4f5c\u7684\u5e76\u4e0d\u662fBufferedInputStream\uff0c\u800c\u662f\u6211\u4eec\u4f20\u5165\u7684FileInputStream\uff0c\u800cBufferedInputStream\u867d\u7136\u6709\u7740\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fdb\u884c\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\u7136\u540e\u518d\u8c03\u7528FileInputStream\u7684\u540c\u540d\u65b9\u6cd5\uff0c\u8fd9\u6837\u7684\u5199\u6cd5\u79f0\u4e3a \u88c5\u9970\u8005\u6a21\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 public void close () throws IOException { byte [] buffer ; while ( ( buffer = buf ) != null ) { if ( bufUpdater . compareAndSet ( this , buffer , null )) { //CAS\u65e0\u9501\u7b97\u6cd5\uff0c\u5e76\u53d1\u4f1a\u7528\u5230\uff0c\u6682\u65f6\u4e0d\u7ba1 InputStream input = in ; in = null ; if ( input != null ) input . close (); return ; } // Else retry in case a new buf was CASed in fill() } } \u5b9e\u9645\u4e0a\u8fd9\u79cd\u6a21\u5f0f\u662f\u7236\u7c7bFilterInputStream\u63d0\u4f9b\u7684\u89c4\u8303\uff0c\u540e\u9762\u6211\u4eec\u8fd8\u4f1a\u8bb2\u5230\u66f4\u591aFilterInputStream\u7684\u5b50\u7c7b\u3002 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728BufferedInputStream\u4e2d\u8fd8\u5b58\u5728\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u7f13\u5b58\u7684\u6570\u7ec4\uff1a 1 2 3 4 5 6 /** * The internal buffer array where the data is stored. When necessary, * it may be replaced by another array of * a different size. */ protected volatile byte buf [] ; I/O\u64cd\u4f5c\u4e00\u822c\u4e0d\u80fd\u91cd\u590d\u8bfb\u53d6\u5185\u5bb9\uff08\u6bd4\u5982\u952e\u76d8\u53d1\u9001\u7684\u4fe1\u53f7\uff0c\u4e3b\u673a\u63a5\u6536\u4e86\u5c31\u6ca1\u4e86\uff09\uff0c\u800c\u7f13\u51b2\u6d41\u63d0\u4f9b\u4e86\u7f13\u51b2\u673a\u5236\uff0c\u4e00\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u88ab\u6682\u65f6\u4fdd\u5b58\uff0cBufferedInputStream\u652f\u6301 reset() \u548c mark() \u64cd\u4f5c\uff0c\u9996\u5148\u6211\u4eec\u6765\u770b\u770b mark() \u65b9\u6cd5\u7684\u4ecb\u7ecd\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /** * Marks the current position in this input stream. A subsequent * call to the <code>reset</code> method repositions this stream at * the last marked position so that subsequent reads re-read the same bytes. * <p> * The <code>readlimit</code> argument tells this input stream to * allow that many bytes to be read before the mark position gets * invalidated. * <p> * This method simply performs <code>in.mark(readlimit)</code>. * * @param readlimit the maximum limit of bytes that can be read before * the mark position becomes invalid. * @see java.io.FilterInputStream#in * @see java.io.FilterInputStream#reset() */ public synchronized void mark ( int readlimit ) { in . mark ( readlimit ); } \u5f53\u8c03\u7528 mark() \u4e4b\u540e\uff0c\u8f93\u5165\u6d41\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fdd\u7559\u4e4b\u540e\u8bfb\u53d6\u7684 readlimit \u6570\u91cf\u7684\u5185\u5bb9\uff0c\u5f53\u8bfb\u53d6\u7684\u5185\u5bb9\u6570\u91cf\u8d85\u8fc7 readlimit \u5219\u4e4b\u540e\u7684\u5185\u5bb9\u4e0d\u4f1a\u88ab\u4fdd\u7559\uff0c\u5f53\u8c03\u7528 reset() \u4e4b\u540e\uff0c\u4f1a\u4f7f\u5f97\u5f53\u524d\u7684\u8bfb\u53d6\u4f4d\u7f6e\u56de\u5230 mark() \u8c03\u7528\u65f6\u7684\u4f4d\u7f6e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( BufferedInputStream bufferedInputStream = new BufferedInputStream ( new FileInputStream ( \"test.txt\" ))){ bufferedInputStream . mark ( 1 ); //\u53ea\u4fdd\u7559\u4e4b\u540e\u76841\u4e2a\u5b57\u7b26 System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); bufferedInputStream . reset (); //\u56de\u5230mark\u65f6\u7684\u4f4d\u7f6e System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); } catch ( IOException e ) { e . printStackTrace (); } } \u6211\u4eec\u53d1\u73b0\u867d\u7136\u540e\u9762\u7684\u90e8\u5206\u6ca1\u6709\u4fdd\u5b58\uff0c\u4f46\u662f\u4f9d\u7136\u80fd\u591f\u6b63\u5e38\u8bfb\u53d6\uff0c\u5176\u5b9e mark() \u540e\u4fdd\u5b58\u7684\u8bfb\u53d6\u5185\u5bb9\u662f\u53d6 readlimit \u548cBufferedInputStream\u7c7b\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u4e24\u8005\u4e2d\u7684\u6700\u5927\u503c\uff0c\u800c\u5e76\u975e\u5b8c\u5168\u7531 readlimit \u786e\u5b9a\u3002\u56e0\u6b64\u6211\u4eec\u9650\u5236\u4e00\u4e0b\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u518d\u6765\u89c2\u5bdf\u4e00\u4e0b\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( BufferedInputStream bufferedInputStream = new BufferedInputStream ( new FileInputStream ( \"test.txt\" ), 1 )){ //\u5c06\u7f13\u51b2\u533a\u5927\u5c0f\u8bbe\u7f6e\u4e3a1 bufferedInputStream . mark ( 1 ); //\u53ea\u4fdd\u7559\u4e4b\u540e\u76841\u4e2a\u5b57\u7b26 System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); //\u5df2\u7ecf\u8d85\u8fc7\u4e86readlimit\uff0c\u7ee7\u7eed\u8bfb\u53d6\u4f1a\u5bfc\u81f4mark\u5931\u6548 bufferedInputStream . reset (); //mark\u5df2\u7ecf\u5931\u6548\uff0c\u65e0\u6cd5reset() System . out . println (( char ) bufferedInputStream . read ()); System . out . println (( char ) bufferedInputStream . read ()); } catch ( IOException e ) { e . printStackTrace (); } } \u4e86\u89e3\u5b8c\u4e86BufferedInputStream\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u770b\u770bBufferedOutputStream\uff0c\u5176\u5b9e\u548cBufferedInputStream\u539f\u7406\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u53cd\u5411\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { try ( BufferedOutputStream outputStream = new BufferedOutputStream ( new FileOutputStream ( \"output.txt\" ))){ outputStream . write ( \"lbwnb\" . getBytes ()); outputStream . flush (); } catch ( IOException e ) { e . printStackTrace (); } } \u64cd\u4f5c\u548cFileOutputStream\u4e00\u81f4\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u4ecb\u7ecd\u4e86\u3002","title":"\u7f13\u51b2\u5b57\u8282\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_6","text":"\u7f13\u5b58\u5b57\u7b26\u6d41\u548c\u7f13\u51b2\u5b57\u8282\u6d41\u4e00\u6837\uff0c\u4e5f\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u7f13\u51b2\u533a\uff0cBufferedReader\u6784\u9020\u65f6\u9700\u8981\u4f20\u5165\u4e00\u4e2aReader\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ System . out . println (( char ) reader . read ()); } catch ( IOException e ) { e . printStackTrace (); } } \u4f7f\u7528\u548creader\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5185\u90e8\u4e5f\u5305\u542b\u4e00\u4e2a\u7f13\u5b58\u6570\u7ec4\uff1a 1 private char cb [] ; \u76f8\u6bd4Reader\u66f4\u65b9\u4fbf\u7684\u662f\uff0c\u5b83\u652f\u6301\u6309\u884c\u8bfb\u53d6\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ System . out . println ( reader . readLine ()); //\u6309\u884c\u8bfb\u53d6 } catch ( IOException e ) { e . printStackTrace (); } } \u8bfb\u53d6\u540e\u76f4\u63a5\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5f53\u7136\uff0c\u5b83\u8fd8\u80fd\u628a\u6bcf\u4e00\u884c\u5185\u5bb9\u4f9d\u6b21\u8f6c\u6362\u4e3a\u96c6\u5408\u7c7b\u63d0\u5230\u7684Stream\u6d41\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ reader . lines () . limit ( 2 ) . distinct () . sorted () . forEach ( System . out :: println ); } catch ( IOException e ) { e . printStackTrace (); } } \u5b83\u540c\u6837\u4e5f\u652f\u6301 mark() \u548c reset() \u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { try ( BufferedReader reader = new BufferedReader ( new FileReader ( \"test.txt\" ))){ reader . mark ( 1 ); System . out . println (( char ) reader . read ()); reader . reset (); System . out . println (( char ) reader . read ()); } catch ( IOException e ) { e . printStackTrace (); } } BufferedReader\u5904\u7406\u7eaf\u6587\u672c\u6587\u4ef6\u65f6\u5c31\u66f4\u52a0\u65b9\u4fbf\u4e86\uff0cBufferedWriter\u5728\u5904\u7406\u65f6\u4e5f\u540c\u6837\u65b9\u4fbf\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { try ( BufferedWriter reader = new BufferedWriter ( new FileWriter ( \"output.txt\" ))){ reader . newLine (); //\u4f7f\u7528newLine\u8fdb\u884c\u6362\u884c reader . write ( \"\u6c49\u5821\u505a\u6ef4\u5f73\u4e8d\u4e0d\u5f73\u4e8d\" ); //\u53ef\u4ee5\u76f4\u63a5\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32 reader . flush (); //\u6e05\u7a7a\u7f13\u51b2\u533a } catch ( IOException e ) { e . printStackTrace (); } }","title":"\u7f13\u51b2\u5b57\u7b26\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_7","text":"\u6709\u65f6\u4f1a\u9047\u5230\u8fd9\u6837\u4e00\u4e2a\u5f88\u9ebb\u70e6\u7684\u95ee\u9898\uff1a\u6211\u8fd9\u91cc\u8bfb\u53d6\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u662f\u4e00\u4e2a\u4e2a\u5b57\u7b26\uff0c\u4f46\u662f\u6211\u53ea\u80fd\u5f80\u4e00\u4e2aOutputStream\u91cc\u8f93\u51fa\uff0c\u4f46\u662fOutputStream\u53c8\u53ea\u652f\u6301byte\u7c7b\u578b\uff0c\u5982\u679c\u8981\u5f80\u91cc\u9762\u5199\u5165\u5185\u5bb9\uff0c\u8fdb\u884c\u6570\u636e\u8f6c\u6362\u5c31\u4f1a\u5f88\u9ebb\u70e6\uff0c\u90a3\u4e48\u80fd\u5426\u6709\u66f4\u52a0\u7b80\u4fbf\u7684\u65b9\u5f0f\u6765\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u5462\uff1f 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( OutputStreamWriter writer = new OutputStreamWriter ( new FileOutputStream ( \"test.txt\" ))){ //\u867d\u7136\u7ed9\u5b9a\u7684\u662fFileOutputStream\uff0c\u4f46\u662f\u73b0\u5728\u652f\u6301\u4ee5Writer\u7684\u65b9\u5f0f\u8fdb\u884c\u5199\u5165 writer . write ( \"lbwnb\" ); //\u4ee5\u64cd\u4f5cWriter\u7684\u6837\u5b50\u5199\u5165OutputStream } catch ( IOException e ){ e . printStackTrace (); } } \u540c\u6837\u7684\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u62ff\u5230\u4e86\u4e00\u4e2aInputStream\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u6309\u5b57\u7b26\u7684\u65b9\u5f0f\u8bfb\u53d6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528InputStreamReader\u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( InputStreamReader reader = new InputStreamReader ( new FileInputStream ( \"test.txt\" ))){ //\u867d\u7136\u7ed9\u5b9a\u7684\u662fFileInputStream\uff0c\u4f46\u662f\u73b0\u5728\u652f\u6301\u4ee5Reader\u7684\u65b9\u5f0f\u8fdb\u884c\u8bfb\u53d6 System . out . println (( char ) reader . read ()); } catch ( IOException e ){ e . printStackTrace (); } } InputStreamReader\u548cOutputStreamWriter\u672c\u8d28\u4e5f\u662fReader\u548cWriter\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u653e\u5165BufferedReader\u6765\u5b9e\u73b0\u66f4\u52a0\u65b9\u4fbf\u7684\u64cd\u4f5c\u3002","title":"\u8f6c\u6362\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_8","text":"\u6253\u5370\u6d41\u5176\u5b9e\u6211\u4eec\u4ece\u4e00\u5f00\u59cb\u5c31\u5728\u4f7f\u7528\u4e86\uff0c\u6bd4\u5982 System.out \u5c31\u662f\u4e00\u4e2aPrintStream\uff0cPrintStream\u4e5f\u7ee7\u627f\u81eaFilterOutputStream\u7c7b\u56e0\u6b64\u4f9d\u7136\u662f\u88c5\u9970\u6211\u4eec\u4f20\u5165\u7684\u8f93\u51fa\u6d41\uff0c\u4f46\u662f\u5b83\u5b58\u5728\u81ea\u52a8\u5237\u65b0\u673a\u5236\uff0c\u4f8b\u5982\u5f53\u5411PrintStream\u6d41\u4e2d\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u540e\u81ea\u52a8\u8c03\u7528 flush() \u65b9\u6cd5\u3002PrintStream\u4e5f\u6c38\u8fdc\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u4f7f\u7528\u5185\u90e8\u68c0\u67e5\u673a\u5236 checkError() \u65b9\u6cd5\u8fdb\u884c\u9519\u8bef\u68c0\u67e5\u3002\u6700\u65b9\u4fbf\u7684\u662f\uff0c\u5b83\u80fd\u591f\u683c\u5f0f\u5316\u4efb\u610f\u7684\u7c7b\u578b\uff0c\u5c06\u5b83\u4eec\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5199\u5165\u5230\u8f93\u51fa\u6d41\u3002 1 public final static PrintStream out = null ; \u53ef\u4ee5\u770b\u5230 System.out \u4e5f\u662fPrintStream\uff0c\u4e0d\u8fc7\u9ed8\u8ba4\u662f\u5411\u63a7\u5236\u53f0\u6253\u5370\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u5b83\u5411\u6587\u4ef6\u4e2d\u6253\u5370\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( PrintStream stream = new PrintStream ( new FileOutputStream ( \"test.txt\" ))){ stream . println ( \"lbwnb\" ); //\u5176\u5b9eSystem.out\u5c31\u662f\u4e00\u4e2aPrintStream } catch ( IOException e ){ e . printStackTrace (); } } \u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u7684 println \u65b9\u6cd5\u5c31\u662fPrintStream\u4e2d\u7684\u65b9\u6cd5\uff0c\u5b83\u4f1a\u76f4\u63a5\u6253\u5370\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u662f\u8c03\u7528\u5bf9\u8c61\u7684 toString() \u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\uff0c\u653e\u5165\u7f13\u51b2\u533a\u518d\u7ecf\u8fc7\u8f6c\u6362\u6d41\u8f93\u51fa\u5230\u7ed9\u5b9a\u7684\u8f93\u51fa\u6d41\u4e0a\u3002 \u56e0\u6b64\u5b9e\u9645\u4e0a\u5185\u90e8\u8fd8\u5305\u542b\u8fd9\u4e24\u4e2a\u5185\u5bb9\uff1a 1 2 3 4 5 6 /** * Track both the text- and character-output streams, so that their buffers * can be flushed without flushing the entire stream. */ private BufferedWriter textOut ; private OutputStreamWriter charOut ; \u4e0e\u6b64\u76f8\u540c\u7684\u8fd8\u6709\u4e00\u4e2aPrintWriter\uff0c\u4e0d\u8fc7\u4ed6\u4eec\u7684\u529f\u80fd\u57fa\u672c\u4e00\u81f4\uff0cPrintWriter\u7684\u6784\u9020\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aWriter\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u505a\u8fc7\u591a\u9610\u8ff0\u4e86\u3002","title":"\u6253\u5370\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_9","text":"\u6570\u636e\u6d41DataInputStream\u4e5f\u662fFilterInputStream\u7684\u5b50\u7c7b\uff0c\u540c\u6837\u91c7\u7528\u88c5\u9970\u8005\u6a21\u5f0f\uff0c\u6700\u5927\u7684\u4e0d\u540c\u662f\u5b83\u652f\u6301\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u76f4\u63a5\u8bfb\u53d6\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( DataInputStream dataInputStream = new DataInputStream ( new FileInputStream ( \"test.txt\" ))){ System . out . println ( dataInputStream . readBoolean ()); //\u76f4\u63a5\u5c06\u6570\u636e\u8bfb\u53d6\u4e3a\u4efb\u610f\u57fa\u672c\u6570\u636e\u7c7b\u578b } catch ( IOException e ) { e . printStackTrace (); } } \u7528\u4e8e\u5199\u5165\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { try ( DataOutputStream dataOutputStream = new DataOutputStream ( new FileOutputStream ( \"output.txt\" ))){ dataOutputStream . writeBoolean ( false ); } catch ( IOException e ) { e . printStackTrace (); } } \u6ce8\u610f\uff0c\u5199\u5165\u7684\u662f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u5199\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528DataInputStream\u53ef\u4ee5\u8bfb\u53d6\uff0c\u4e00\u822c\u4ed6\u4eec\u662f\u914d\u5408\u4e00\u8d77\u4f7f\u7528\u7684\u3002","title":"\u6570\u636e\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_10","text":"\u65e2\u7136\u57fa\u672c\u6570\u636e\u7c7b\u578b\u80fd\u591f\u8bfb\u53d6\u548c\u5199\u5165\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u80fd\u5426\u5c06\u5bf9\u8c61\u4e5f\u652f\u6301\u5462\uff1fObjectOutputStream\u4e0d\u4ec5\u652f\u6301\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u901a\u8fc7\u5bf9\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u4ee5\u67d0\u79cd\u683c\u5f0f\u4fdd\u5b58\u5bf9\u8c61\uff0c\u6765\u652f\u6301\u5bf9\u8c61\u7c7b\u578b\u7684IO\uff0c\u6ce8\u610f\uff1a\u5b83\u4e0d\u662f\u7ee7\u627f\u81eaFilterInputStream\u7684\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public static void main ( String [] args ) { try ( ObjectOutputStream outputStream = new ObjectOutputStream ( new FileOutputStream ( \"output.txt\" )); ObjectInputStream inputStream = new ObjectInputStream ( new FileInputStream ( \"output.txt\" ))){ People people = new People ( \"lbw\" ); outputStream . writeObject ( people ); outputStream . flush (); people = ( People ) inputStream . readObject (); System . out . println ( people . name ); } catch ( IOException | ClassNotFoundException e ) { e . printStackTrace (); } } static class People implements Serializable { //\u5fc5\u987b\u5b9e\u73b0Serializable\u63a5\u53e3\u624d\u80fd\u88ab\u5e8f\u5217\u5316 String name ; public People ( String name ){ this . name = name ; } } \u5728\u6211\u4eec\u540e\u7eed\u7684\u64cd\u4f5c\u4e2d\uff0c\u6709\u53ef\u80fd\u4f1a\u4f7f\u5f97\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e9b\u7ed3\u6784\u53d1\u751f\u53d8\u5316\uff0c\u800c\u539f\u6765\u4fdd\u5b58\u7684\u6570\u636e\u53ea\u9002\u7528\u4e8e\u4e4b\u524d\u7248\u672c\u7684\u8fd9\u4e2a\u7c7b\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u533a\u5206\u7c7b\u7684\u4e0d\u540c\u7248\u672c\uff1a 1 2 3 4 5 6 7 8 9 static class People implements Serializable { private static final long serialVersionUID = 123456 ; //\u5728\u5e8f\u5217\u5316\u65f6\uff0c\u4f1a\u88ab\u81ea\u52a8\u6dfb\u52a0\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5b83\u4ee3\u8868\u5f53\u524d\u7c7b\u7684\u7248\u672c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u7248\u672c\u3002 String name ; public People ( String name ){ this . name = name ; } } \u5f53\u53d1\u751f\u7248\u672c\u4e0d\u5339\u914d\u65f6\uff0c\u4f1a\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\u4e3a\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 java . io . InvalidClassException : com . test . Main$People ; local class incompatible : stream classdesc serialVersionUID = 123456 , local class serialVersionUID = 1234567 at java . io . ObjectStreamClass . initNonProxy ( ObjectStreamClass . java : 699 ) at java . io . ObjectInputStream . readNonProxyDesc ( ObjectInputStream . java : 2003 ) at java . io . ObjectInputStream . readClassDesc ( ObjectInputStream . java : 1850 ) at java . io . ObjectInputStream . readOrdinaryObject ( ObjectInputStream . java : 2160 ) at java . io . ObjectInputStream . readObject0 ( ObjectInputStream . java : 1667 ) at java . io . ObjectInputStream . readObject ( ObjectInputStream . java : 503 ) at java . io . ObjectInputStream . readObject ( ObjectInputStream . java : 461 ) at com . test . Main . main ( Main . java : 27 ) \u5982\u679c\u6211\u4eec\u4e0d\u5e0c\u671b\u67d0\u4e9b\u5c5e\u6027\u53c2\u4e0e\u5230\u5e8f\u5217\u5316\u4e2d\u8fdb\u884c\u4fdd\u5b58\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0 transient \u5173\u952e\u5b57\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public static void main ( String [] args ) { try ( ObjectOutputStream outputStream = new ObjectOutputStream ( new FileOutputStream ( \"output.txt\" )); ObjectInputStream inputStream = new ObjectInputStream ( new FileInputStream ( \"output.txt\" ))){ People people = new People ( \"lbw\" ); outputStream . writeObject ( people ); outputStream . flush (); people = ( People ) inputStream . readObject (); System . out . println ( people . name ); //\u867d\u7136\u80fd\u5f97\u5230\u5bf9\u8c61\uff0c\u4f46\u662fname\u5c5e\u6027\u5e76\u6ca1\u6709\u4fdd\u5b58\uff0c\u56e0\u6b64\u4e3anull } catch ( IOException | ClassNotFoundException e ) { e . printStackTrace (); } } static class People implements Serializable { private static final long serialVersionUID = 1234567 ; transient String name ; public People ( String name ){ this . name = name ; } } \u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u4e00\u4e9bJDK\u5185\u90e8\u7684\u6e90\u7801\u4e2d\uff0c\u4e5f\u5b58\u5728\u5927\u91cf\u7684transient\u5173\u952e\u5b57\uff0c\u4f7f\u5f97\u67d0\u4e9b\u5c5e\u6027\u4e0d\u53c2\u4e0e\u5e8f\u5217\u5316\uff0c\u53d6\u6d88\u8fd9\u4e9b\u4e0d\u5fc5\u8981\u4fdd\u5b58\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u8282\u7701\u6570\u636e\u7a7a\u95f4\u5360\u7528\u4ee5\u53ca\u51cf\u5c11\u5e8f\u5217\u5316\u65f6\u95f4\u3002","title":"\u5bf9\u8c61\u6d41"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#java-io_1","text":"","title":"Java I/O\u7f16\u7a0b\u5b9e\u6218"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/#_11","text":"\u8981\u6c42\u5b9e\u73b0\u4e00\u4e2a\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\uff08\u63a7\u5236\u53f0\uff09\uff0c\u652f\u6301\u4ee5\u4e0b\u529f\u80fd\uff1a\u4fdd\u5b58\u4e66\u7c4d\u4fe1\u606f\uff08\u8981\u6c42\u6301\u4e45\u5316\uff09\uff0c\u67e5\u8be2\u3001\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u4e66\u7c4d\u4fe1\u606f\u3002","title":"\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/","text":"Java\u591a\u7ebf\u7a0b \u6ce8\u610f\uff1a \u672c\u7ae0\u8282\u4f1a\u6d89\u53ca\u5230 \u64cd\u4f5c\u7cfb\u7edf \u76f8\u5173\u77e5\u8bc6\u3002 \u5728\u4e86\u89e3\u591a\u7ebf\u7a0b\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b \u64cd\u4f5c\u7cfb\u7edf \u4e2d\u63d0\u5230\u7684\u8fdb\u7a0b\u6982\u5ff5\uff1a \u8fdb\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u5b9e\u4f53\uff0c\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff08\u6bd4\u5982\u6211\u4eec\u8fd0\u884cQQ\u3001\u6d4f\u89c8\u5668\u3001LOL\u3001\u7f51\u6613\u4e91\u97f3\u4e50\u7b49\u8f6f\u4ef6\uff09\uff0c\u90fd\u6709\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\uff0cCPU\u4e00\u4e2a\u6838\u5fc3\u540c\u65f6\u53ea\u80fd\u5904\u7406\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5f53\u51fa\u73b0\u591a\u4e2a\u8fdb\u7a0b\u9700\u8981\u540c\u65f6\u8fd0\u884c\u65f6\uff0cCPU\u4e00\u822c\u901a\u8fc7 \u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6 \u7b97\u6cd5\uff0c\u6765\u5b9e\u73b0\u591a\u4e2a\u8fdb\u7a0b\u7684\u540c\u65f6\u8fd0\u884c\u3002 \u5728\u65e9\u671f\u7684\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u548c\u72ec\u7acb\u8fd0\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4e5f\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u5e0c\u671b\u4e24\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff0c\u5c31\u5fc5\u987b\u8fd0\u884c\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u7531\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u5c31\u53d8\u5f97\u975e\u5e38\u9ebb\u70e6\uff08\u6bd4\u5982\u8981\u5171\u4eab\u67d0\u4e9b\u6570\u636e\uff09\u800c\u4e14\u6267\u884c\u4e0d\u540c\u8fdb\u7a0b\u4f1a\u4ea7\u751f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u975e\u5e38\u8017\u65f6\uff0c\u90a3\u4e48\u80fd\u5426\u5b9e\u73b0\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u5c31\u80fd\u591f\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u5462\uff1f \u540e\u6765\uff0c\u7ebf\u7a0b\u6a2a\u7a7a\u51fa\u4e16\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u4e2d\u4e00\u4e2a\u5355\u4e00\u7684\u987a\u5e8f\u63a7\u5236\u6d41\u7a0b\uff0c\u73b0\u5728\u7ebf\u7a0b\u624d\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\uff0c\u5404\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e5f\u5c31\u662f\u6240\u5728\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u901f\u5ea6\u4e5f\u9ad8\u4e8e\u8fdb\u7a0b\u3002 \u5728Java\u4e2d\uff0c\u6211\u4eec\u4ece\u5f00\u59cb\uff0c\u4e00\u76f4\u4ee5\u6765\u7f16\u5199\u7684\u90fd\u662f\u5355\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\uff08\u8fd0\u884c main() \u65b9\u6cd5\u7684\u5185\u5bb9\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u80fd\u540c\u65f6\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\uff08\u65e0\u8bba\u4f60\u662f\u8c03\u7528\u65b9\u6cd5\u3001\u8fd8\u662f\u8fdb\u884c\u8ba1\u7b97\uff0c\u59cb\u7ec8\u90fd\u662f\u4f9d\u6b21\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u540c\u6b65\u7684\uff09\uff0c\u800c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u4e24\u4e2a\u65b9\u6cd5 \u540c\u65f6 \u5728\u8fd0\u884c\u6216\u8005\u662f\u4e24\u4e2a\u8ba1\u7b97\u540c\u65f6\u5728\u8fdb\u884c\uff0c\u4e5f\u5c31\u662f\u5f02\u6b65\u7684\uff09\uff0c\u5c31\u9700\u8981\u7528\u5230Java\u591a\u7ebf\u7a0b\u6846\u67b6\u3002\u5b9e\u9645\u4e0a\u4e00\u4e2aJava\u7a0b\u5e8f\u542f\u52a8\u540e\uff0c\u4f1a\u521b\u5efa\u5f88\u591a\u7ebf\u7a0b\uff0c\u4e0d\u4ec5\u4ec5\u53ea\u8fd0\u884c\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { ThreadMXBean bean = ManagementFactory . getThreadMXBean (); long [] ids = bean . getAllThreadIds (); ThreadInfo [] infos = bean . getThreadInfo ( ids ); for ( ThreadInfo info : infos ) { System . out . println ( info . getThreadName ()); } } \u5173\u4e8e\u9664\u4e86main\u7ebf\u7a0b\u9ed8\u8ba4\u4ee5\u5916\u7684\u7ebf\u7a0b\uff0c\u6d89\u53ca\u5230JVM\u76f8\u5173\u5e95\u5c42\u539f\u7406\uff0c\u5728\u8fd9\u91cc\u4e0d\u505a\u8bb2\u89e3\uff0c\u4e86\u89e3\u5c31\u884c\u3002 \u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u542f\u52a8 \u901a\u8fc7\u521b\u5efaThread\u5bf9\u8c61\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0cThread\u6784\u9020\u65b9\u6cd5\u4e2d\u9700\u8981\u4f20\u5165\u4e00\u4e2aRunnable\u63a5\u53e3\u7684\u5b9e\u73b0\uff08\u5176\u5b9e\u5c31\u662f\u7f16\u5199\u8981\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7684\u5185\u5bb9\u903b\u8f91\uff09\u540c\u65f6Runnable\u53ea\u6709\u4e00\u4e2a\u672a\u5b9e\u73b0\u65b9\u6cd5\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @FunctionalInterface public interface Runnable { /** * When an object implementing interface <code>Runnable</code> is used * to create a thread, starting the thread causes the object's * <code>run</code> method to be called in that separately executing * thread. * <p> * The general contract of the method <code>run</code> is that it may * take any action whatsoever. * * @see java.lang.Thread#run() */ public abstract void run (); } \u521b\u5efa\u597d\u540e\uff0c\u901a\u8fc7\u8c03\u7528 start() \u65b9\u6cd5\u6765\u8fd0\u884c\u6b64\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { Thread t = new Thread (() -> { //\u76f4\u63a5\u7f16\u5199\u903b\u8f91 System . out . println ( \"\u6211\u662f\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff01\" ); }); t . start (); //\u8c03\u7528\u6b64\u65b9\u6cd5\u6765\u5f00\u59cb\u6267\u884c\u6b64\u7ebf\u7a0b } \u53ef\u80fd\u4e0a\u9762\u7684\u4f8b\u5b50\u770b\u8d77\u6765\u548c\u666e\u901a\u7684\u5355\u7ebf\u7a0b\u6ca1\u4e24\u6837\uff0c\u90a3\u6211\u4eec\u5148\u6765\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u6211\u662f\u7ebf\u7a0b\uff1a\" + Thread . currentThread (). getName ()); System . out . println ( \"\u6211\u6b63\u5728\u8ba1\u7b97 0-10000 \u4e4b\u95f4\u6240\u6709\u6570\u7684\u548c...\" ); int sum = 0 ; for ( int i = 0 ; i <= 10000 ; i ++ ) { sum += i ; } System . out . println ( \"\u7ed3\u679c\uff1a\" + sum ); }); t . start (); System . out . println ( \"\u6211\u662f\u4e3b\u7ebf\u7a0b\uff01\" ); } \u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u5e76\u4e0d\u662f\u6309\u7167\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4e86\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5206\u522b\u4f4d\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u4ed6\u4eec\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff01\u5982\u679c\u4f60\u8fd8\u662f\u89c9\u5f97\u5f88\u7591\u60d1\uff0c\u6211\u4eec\u63a5\u7740\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"\u6211\u662f\u4e00\u53f7\u7ebf\u7a0b\uff1a\" + i ); } }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"\u6211\u662f\u4e8c\u53f7\u7ebf\u7a0b\uff1a\" + i ); } }); t1 . start (); t2 . start (); } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6253\u5370\u5b9e\u9645\u4e0a\u662f\u5728\u4ea4\u66ff\u8fdb\u884c\u7684\uff0c\u4e5f\u8bc1\u660e\u4e86\u4ed6\u4eec\u662f\u5728\u540c\u65f6\u8fd0\u884c\uff01 \u6ce8\u610f \uff1a\u6211\u4eec\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2arun\u65b9\u6cd5\uff0c\u4e5f\u80fd\u6267\u884c\u7ebf\u7a0b\u91cc\u9762\u5b9a\u4e49\u7684\u5185\u5bb9\uff0c\u4f46\u662frun\u662f\u76f4\u63a5\u5728\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\uff0c\u5e76\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff01 \u5b9e\u9645\u4e0a\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5dee\u4e0d\u591a\uff0c\u4e5f\u4f1a\u7b49\u5f85\u83b7\u53d6CPU\u8d44\u6e90\uff0c\u4e00\u65e6\u83b7\u53d6\u5230\uff0c\u5c31\u5f00\u59cb\u6309\u987a\u5e8f\u6267\u884c\u6211\u4eec\u7ed9\u5b9a\u7684\u7a0b\u5e8f\uff0c\u5f53\u9700\u8981\u7b49\u5f85\u5916\u90e8IO\u64cd\u4f5c\uff08\u6bd4\u5982Scanner\u83b7\u53d6\u8f93\u5165\u7684\u6587\u672c\uff09\uff0c\u5c31\u4f1a\u6682\u65f6\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u7b49\u5f85\u901a\u77e5\uff0c\u6216\u662f\u8c03\u7528 sleep() \u65b9\u6cd5\u6765\u8ba9\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) throws InterruptedException { System . out . println ( \"l\" ); Thread . sleep ( 1000 ); //\u4f11\u7720\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c1000ms = 1s System . out . println ( \"b\" ); Thread . sleep ( 1000 ); System . out . println ( \"w\" ); Thread . sleep ( 1000 ); System . out . println ( \"nb!\" ); } \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 stop() \u65b9\u6cd5\u6765\u5f3a\u884c\u7ec8\u6b62\u6b64\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) throws InterruptedException { Thread t = new Thread (() -> { Thread me = Thread . currentThread (); //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61 for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"\u6253\u5370:\" + i ); if ( i == 20 ) me . stop (); //\u6b64\u65b9\u6cd5\u4f1a\u76f4\u63a5\u7ec8\u6b62\u6b64\u7ebf\u7a0b } }); t . start (); } \u867d\u7136 stop() \u65b9\u6cd5\u80fd\u591f\u7ec8\u6b62\u6b64\u7ebf\u7a0b\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u6709\u5173\u7ebf\u7a0b\u4e2d\u65ad\u76f8\u5173\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7ee7\u7eed\u4e86\u89e3\u3002 \u601d\u8003 \uff1a\u731c\u731c\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u6211\u4eec\u53d1\u73b0\uff0cvalue\u6700\u540e\u7684\u503c\u5e76\u4e0d\u662f\u6211\u4eec\u7406\u60f3\u7684\u7ed3\u679c\uff0c\u6709\u5173\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff0c\u5728\u6211\u4eec\u5b66\u4e60\u5230\u7ebf\u7a0b\u9501\u7684\u65f6\u5019\uff0c\u518d\u6765\u63a2\u8ba8\u3002 \u7ebf\u7a0b\u7684\u4f11\u7720\u548c\u4e2d\u65ad \u6211\u4eec\u524d\u9762\u63d0\u5230\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u4e0b\uff0c\u7ebf\u7a0b\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff1a \u5f53CPU\u7ed9\u4e88\u7684\u8fd0\u884c\u65f6\u95f4\u7ed3\u675f\u65f6\uff0c\u4f1a\u4ece\u8fd0\u884c\u72b6\u6001\u56de\u5230\u5c31\u7eea\uff08\u53ef\u8fd0\u884c\uff09\u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u83b7\u5f97CPU\u8d44\u6e90\u3002 \u5f53\u7ebf\u7a0b\u8fdb\u5165\u4f11\u7720 / \u963b\u585e(\u5982\u7b49\u5f85IO\u8bf7\u6c42) / \u624b\u52a8\u8c03\u7528 wait() \u65b9\u6cd5\u65f6\uff0c\u4f1a\u4f7f\u5f97\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53\u7b49\u5f85\u72b6\u6001\u7ed3\u675f\u540e\u4f1a\u56de\u5230\u5c31\u7eea\u72b6\u6001\u3002 \u5f53\u7ebf\u7a0b\u51fa\u73b0\u5f02\u5e38\u6216\u9519\u8bef / \u88ab stop() \u65b9\u6cd5\u5f3a\u884c\u505c\u6b62 / \u6240\u6709\u4ee3\u7801\u6267\u884c\u7ed3\u675f\u65f6\uff0c\u4f1a\u4f7f\u5f97\u7ebf\u7a0b\u7684\u8fd0\u884c\u7ec8\u6b62\u3002 \u800c\u8fd9\u4e2a\u90e8\u5206\u6211\u4eec\u7740\u91cd\u4e86\u89e3\u4e00\u4e0b\u7ebf\u7a0b\u7684\u4f11\u7720\u548c\u4e2d\u65ad\uff0c\u9996\u5148\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u5982\u4f55\u4f7f\u5f97\u7ebf\u7a0b\u8fdb\u5982\u4f11\u7720\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Thread t = new Thread (() -> { try { System . out . println ( \"l\" ); Thread . sleep ( 1000 ); //sleep\u65b9\u6cd5\u662fThread\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u5b83\u53ea\u4f5c\u7528\u4e8e\u5f53\u524d\u7ebf\u7a0b\uff08\u5b83\u77e5\u9053\u5f53\u524d\u7ebf\u7a0b\u662f\u54ea\u4e2a\uff09 System . out . println ( \"b\" ); //\u8c03\u7528sleep\u540e\uff0c\u7ebf\u7a0b\u4f1a\u76f4\u63a5\u8fdb\u5165\u5230\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u65f6\u95f4\u7ed3\u675f } catch ( InterruptedException e ) { e . printStackTrace (); } }); t . start (); } \u901a\u8fc7\u8c03\u7528 sleep() \u65b9\u6cd5\u6765\u5c06\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u4f11\u7720\uff0c\u4f7f\u5f97\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6b64\u65b9\u6cd5\u663e\u793a\u58f0\u660e\u4e86\u4f1a\u629b\u51fa\u4e00\u4e2aInterruptedException\u5f02\u5e38\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f02\u5e38\u5728\u4ec0\u4e48\u65f6\u5019\u4f1a\u53d1\u751f\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public static void main ( String [] args ) { Thread t = new Thread (() -> { try { Thread . sleep ( 10000 ); //\u4f11\u772010\u79d2 } catch ( InterruptedException e ) { e . printStackTrace (); } }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . interrupt (); //\u8c03\u7528t\u7684interrupt\u65b9\u6cd5 } catch ( InterruptedException e ) { e . printStackTrace (); } } \u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2aThread\u5bf9\u8c61\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2a interrupt() \u65b9\u6cd5\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u540e\uff0c\u4f1a\u7ed9\u6307\u5b9a\u7ebf\u7a0b\u6dfb\u52a0\u4e00\u4e2a\u4e2d\u65ad\u6807\u8bb0\u4ee5\u544a\u77e5\u7ebf\u7a0b\u9700\u8981\u7acb\u5373\u505c\u6b62\u8fd0\u884c\u6216\u662f\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u7531\u7ebf\u7a0b\u6765\u54cd\u5e94\u6b64\u4e2d\u65ad\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684 stop() \u65b9\u6cd5\u662f\u5f3a\u5236\u7ec8\u6b62\u7ebf\u7a0b\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u867d\u7136\u7b80\u5355\u7c97\u66b4\uff0c\u4f46\u662f\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u4e0d\u80fd\u5b8c\u5168\u91ca\u653e\uff0c\u800c\u7c7b\u4f3c\u8fd9\u6837\u7684\u53d1\u9001\u901a\u77e5\u6765\u544a\u77e5\u7ebf\u7a0b\u9700\u8981\u4e2d\u65ad\uff0c\u8ba9\u7ebf\u7a0b\u81ea\u884c\u5904\u7406\u540e\u7eed\uff0c\u4f1a\u66f4\u52a0\u5408\u7406\u4e00\u4e9b\uff0c\u4e5f\u662f\u66f4\u52a0\u63a8\u8350\u7684\u505a\u6cd5\u3002\u6211\u4eec\u6765\u770b\u770binterrupt\u7684\u7528\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); while ( true ){ //\u65e0\u9650\u5faa\u73af if ( Thread . currentThread (). isInterrupted ()){ //\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e2d\u65ad\u6807\u5fd7 break ; //\u54cd\u5e94\u4e2d\u65ad } } System . out . println ( \"\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u4e86\uff01\" ); }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . interrupt (); //\u8c03\u7528t\u7684interrupt\u65b9\u6cd5 } catch ( InterruptedException e ) { e . printStackTrace (); } } \u901a\u8fc7 isInterrupted() \u53ef\u4ee5\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u5b58\u5728\u4e2d\u65ad\u6807\u5fd7\uff0c\u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u5916\u90e8\u5e0c\u671b\u5f53\u524d\u7ebf\u7a0b\u7acb\u5373\u505c\u6b62\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u7ed9\u5f53\u524d\u7ebf\u7a0b\u53d1\u9001\u4e00\u4e2a\u5176\u4ed6\u7684\u4fe1\u53f7\uff0c\u5982\u679c\u6211\u4eec\u5e76\u4e0d\u662f\u5e0c\u671b\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\u5c31\u662f\u7ed3\u675f\u7a0b\u5e8f\uff0c\u800c\u662f\u901a\u77e5\u7a0b\u5e8f\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\u540e\uff0c\u590d\u4f4d\u4e2d\u65ad\u6807\u8bb0\uff0c\u7136\u540e\u7ee7\u7eed\u505a\u6211\u4eec\u7684\u4e8b\u60c5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); while ( true ){ if ( Thread . currentThread (). isInterrupted ()){ //\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e2d\u65ad\u6807\u5fd7 System . out . println ( \"\u53d1\u73b0\u4e2d\u65ad\u4fe1\u53f7\uff0c\u590d\u4f4d\uff0c\u7ee7\u7eed\u8fd0\u884c...\" ); Thread . interrupted (); //\u590d\u4f4d\u4e2d\u65ad\u6807\u8bb0\uff08\u8fd4\u56de\u503c\u662f\u5f53\u524d\u662f\u5426\u6709\u4e2d\u65ad\u6807\u8bb0\uff0c\u8fd9\u91cc\u4e0d\u7528\u7ba1\uff09 } } }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . interrupt (); //\u8c03\u7528t\u7684interrupt\u65b9\u6cd5 } catch ( InterruptedException e ) { e . printStackTrace (); } } \u590d\u4f4d\u4e2d\u65ad\u6807\u8bb0\u540e\uff0c\u4f1a\u7acb\u5373\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\u3002\u90a3\u4e48\uff0c\u5982\u679c\u73b0\u5728\u6211\u4eec\u60f3\u6682\u505c\u7ebf\u7a0b\u5462\uff1f\u6211\u4eec\u5e0c\u671b\u7ebf\u7a0b\u6682\u65f6\u505c\u4e0b\uff0c\u6bd4\u5982\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u540e\uff0c\u518d\u7ee7\u7eed\u8fd0\u884c\uff0c\u90a3\u8fd9\u6837\u7684\u64cd\u4f5c\u600e\u4e48\u5b9e\u73b0\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); Thread . currentThread (). suspend (); //\u6682\u505c\u6b64\u7ebf\u7a0b System . out . println ( \"\u7ebf\u7a0b\u7ee7\u7eed\u8fd0\u884c\uff01\" ); }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . resume (); //\u6062\u590d\u6b64\u7ebf\u7a0b } catch ( InterruptedException e ) { e . printStackTrace (); } } \u867d\u7136\u8fd9\u6837\u5f88\u65b9\u4fbf\u5730\u63a7\u5236\u4e86\u7ebf\u7a0b\u7684\u6682\u505c\u72b6\u6001\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e0d\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u5b83\u5f88\u5bb9\u6613\u5bfc\u81f4\u6b7b\u9501\uff01\u6709\u5173\u4e3a\u4ec0\u4e48\u88ab\u5f03\u7528\u7684\u539f\u56e0\uff0c\u6211\u4eec\u4f1a\u5728\u7ebf\u7a0b\u9501\u7ee7\u7eed\u63a2\u8ba8\u3002 \u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7 \u5b9e\u9645\u4e0a\uff0cJava\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u5e76\u4e0d\u662f\u5e73\u5747\u5206\u914dCPU\u65f6\u95f4\u7684\uff0c\u4e3a\u4e86\u4f7f\u5f97\u7ebf\u7a0b\u8d44\u6e90\u5206\u914d\u66f4\u52a0\u5408\u7406\uff0cJava\u91c7\u7528\u7684\u662f\u62a2\u5360\u5f0f\u8c03\u5ea6\u65b9\u5f0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\uff0c\u4f18\u5148\u4f7f\u7528CPU\u8d44\u6e90\uff01\u6211\u4eec\u5e0c\u671bCPU\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u53bb\u5904\u7406\u66f4\u91cd\u8981\u7684\u4efb\u52a1\uff0c\u800c\u4e0d\u592a\u91cd\u8981\u7684\u4efb\u52a1\uff0c\u5219\u53ef\u4ee5\u5148\u8ba9\u51fa\u4e00\u90e8\u5206\u8d44\u6e90\u3002\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u4e00\u822c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a MIN_PRIORITY \u6700\u4f4e\u4f18\u5148\u7ea7 MAX_PRIORITY \u6700\u9ad8\u4f18\u5148\u7ea7 NOM_PRIORITY \u5e38\u89c4\u4f18\u5148\u7ea7 1 2 3 4 5 6 7 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); }); t . start (); t . setPriority ( Thread . MIN_PRIORITY ); //\u901a\u8fc7\u4f7f\u7528setPriority\u65b9\u6cd5\u6765\u8bbe\u5b9a\u4f18\u5148\u7ea7 } \u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\uff0c\u83b7\u5f97CPU\u8d44\u6e90\u7684\u6982\u7387\u4f1a\u8d8a\u5927\uff0c\u5e76\u4e0d\u662f\u8bf4\u4e00\u5b9a\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\u8d8a\u5148\u6267\u884c\uff01 \u7ebf\u7a0b\u7684\u793c\u8ba9\u548c\u52a0\u5165 \u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u5de5\u4f5c\u4e0d\u91cd\u8981\u65f6\uff0c\u5c06CPU\u8d44\u6e90\u8ba9\u4f4d\u7ed9\u5176\u4ed6\u7ebf\u7a0b\uff0c\u901a\u8fc7\u4f7f\u7528 yield() \u65b9\u6cd5\u6765\u5c06\u5f53\u524d\u8d44\u6e90\u8ba9\u4f4d\u7ed9\u5176\u4ed6\u540c\u4f18\u5148\u7ea7\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b1\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { if ( i % 5 == 0 ) { System . out . println ( \"\u8ba9\u4f4d\uff01\" ); Thread . yield (); } System . out . println ( \"1\u6253\u5370\uff1a\" + i ); } System . out . println ( \"\u7ebf\u7a0b1\u7ed3\u675f\uff01\" ); }); Thread t2 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b2\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"2\u6253\u5370\uff1a\" + i ); } }); t1 . start (); t2 . start (); } \u89c2\u5bdf\u7ed3\u679c\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8ba9\u4f4d\u4e4b\u540e\uff0c\u5c3d\u53ef\u80fd\u591a\u7684\u5728\u6267\u884c\u7ebf\u7a0b2\u7684\u5185\u5bb9\u3002 \u5f53\u6211\u4eec\u5e0c\u671b\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u540e\u518d\u7ee7\u7eed\u8fdb\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 join() \u65b9\u6cd5\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u52a0\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b1\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"1\u6253\u5370\uff1a\" + i ); } System . out . println ( \"\u7ebf\u7a0b1\u7ed3\u675f\uff01\" ); }); Thread t2 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b2\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"2\u6253\u5370\uff1a\" + i ); if ( i == 10 ){ try { System . out . println ( \"\u7ebf\u7a0b1\u52a0\u5165\u5230\u6b64\u7ebf\u7a0b\uff01\" ); t1 . join (); //\u5728i==10\u65f6\uff0c\u8ba9\u7ebf\u7a0b1\u52a0\u5165\uff0c\u5148\u5b8c\u6210\u7ebf\u7a0b1\u7684\u5185\u5bb9\uff0c\u5728\u7ee7\u7eed\u5f53\u524d\u5185\u5bb9 } catch ( InterruptedException e ) { e . printStackTrace (); } } } }); t1 . start (); t2 . start (); } \u6211\u4eec\u53d1\u73b0\uff0c\u7ebf\u7a0b1\u52a0\u5165\u540e\uff0c\u7ebf\u7a0b2\u7b49\u5f85\u7ebf\u7a0b1\u5f85\u6267\u884c\u7684\u5185\u5bb9\u5168\u90e8\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u7ee7\u7eed\u6267\u884c\u7684\u7ebf\u7a0b2\u5185\u5bb9\u3002\u6ce8\u610f\uff0c\u7ebf\u7a0b\u7684\u52a0\u5165\u53ea\u662f\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5b8c\u6210\uff0c\u5e76\u4e0d\u662f\u5c06\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u548c\u5f53\u524d\u7ebf\u7a0b\u5408\u5e76\uff01\u6211\u4eec\u6765\u770b\u770b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \"\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( Thread . currentThread (). getName () + \"\u6253\u5370\uff1a\" + i ); } System . out . println ( \"\u7ebf\u7a0b1\u7ed3\u675f\uff01\" ); }); Thread t2 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b2\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"2\u6253\u5370\uff1a\" + i ); if ( i == 10 ){ try { System . out . println ( \"\u7ebf\u7a0b1\u52a0\u5165\u5230\u6b64\u7ebf\u7a0b\uff01\" ); t1 . join (); //\u5728i==10\u65f6\uff0c\u8ba9\u7ebf\u7a0b1\u52a0\u5165\uff0c\u5148\u5b8c\u6210\u7ebf\u7a0b1\u7684\u5185\u5bb9\uff0c\u5728\u7ee7\u7eed\u5f53\u524d\u5185\u5bb9 } catch ( InterruptedException e ) { e . printStackTrace (); } } } }); t1 . start (); t2 . start (); } \u5b9e\u9645\u4e0a\uff0ct2\u7ebf\u7a0b\u53ea\u662f\u6682\u65f6\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53t1\u6267\u884c\u7ed3\u675f\u65f6\uff0ct2\u624d\u5f00\u59cb\u7ee7\u7eed\u6267\u884c\uff0c\u53ea\u662f\u5728\u6548\u679c\u4e0a\u770b\u8d77\u6765\u597d\u50cf\u662f\u4e24\u4e2a\u7ebf\u7a0b\u5408\u5e76\u4e3a\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u800c\u5df2\u3002 \u7ebf\u7a0b\u9501\u548c\u7ebf\u7a0b\u540c\u6b65 \u5728\u5f00\u59cb\u8bb2\u89e3\u7ebf\u7a0b\u540c\u6b65\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e0b\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0bJava\u7684\u5185\u5b58\u7ba1\u7406\uff1a \u7ebf\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u53d8\u91cf\uff08\u6bd4\u5982\u4e4b\u524d\u60ac\u5ff5\u4e2d\u7684value\u53d8\u91cf\uff09\u5b58\u50a8\u5728\u4e3b\u5185\u5b58\uff08main memory\uff09\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u5de5\u4f5c\u5185\u5b58\uff08\u672c\u5730\u5185\u5b58\uff09\uff0c\u5de5\u4f5c\u5185\u5b58\u4e2d\u5b58\u50a8\u4e86\u8be5\u7ebf\u7a0b\u4ee5\u8bfb/\u5199\u5171\u4eab\u53d8\u91cf\u7684\u526f\u672c\u3002\u5b83\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5728 \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406 \u4e2d\u5b66\u4e60\u7684\u591a\u5904\u7406\u5668\u9ad8\u901f\u7f13\u5b58\u673a\u5236\uff1a \u9ad8\u901f\u7f13\u5b58\u901a\u8fc7\u4fdd\u5b58\u5185\u5b58\u4e2d\u6570\u636e\u7684\u526f\u672c\u6765\u63d0\u4f9b\u66f4\u52a0\u5feb\u901f\u7684\u6570\u636e\u8bbf\u95ee\uff0c\u4f46\u662f\u5982\u679c\u591a\u4e2a\u5904\u7406\u5668\u7684\u8fd0\u7b97\u4efb\u52a1\u90fd\u6d89\u53ca\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5404\u81ea\u7684\u9ad8\u901f\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u5728\u5199\u56de\u4e3b\u5185\u5b58\u65f6\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u8fd9\u5c31\u662f\u5f15\u5165\u9ad8\u901f\u7f13\u5b58\u5f15\u53d1\u7684\u65b0\u95ee\u9898\uff0c\u79f0\u4e4b\u4e3a\uff1a\u7f13\u5b58\u4e00\u81f4\u6027\u3002 \u5b9e\u9645\u4e0a\uff0cJava\u7684\u5185\u5b58\u6a21\u578b\u4e5f\u662f\u8fd9\u6837\u7c7b\u4f3c\u8bbe\u8ba1\u7684\uff0c\u5f53\u6211\u4eec\u540c\u65f6\u53bb\u64cd\u4f5c\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\u65f6\uff0c\u5982\u679c\u4ec5\u4ec5\u662f\u8bfb\u53d6\u8fd8\u597d\uff0c\u4f46\u662f\u5982\u679c\u540c\u65f6\u5199\u5165\u5185\u5bb9\uff0c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff01\u597d\u6bd4\u8bf4\u4e00\u4e2a\u94f6\u884c\uff0c\u5982\u679c\u6211\u548c\u6211\u7684\u670b\u53cb\u540c\u65f6\u5728\u94f6\u884c\u53d6\u6211\u8d26\u6237\u91cc\u9762\u7684\u94b1\uff0c\u96be\u9053\u53d61000\u8fd8\u53ef\u80fd\u54102000\u51fa\u6765\u5417\uff1f\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u52a0\u5b89\u5168\u7684\u673a\u5236\u6765\u7ef4\u6301\u79e9\u5e8f\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027\uff01 \u60ac\u5ff5\u7834\u6848 \u6211\u4eec\u518d\u6765\u56de\u987e\u4e00\u4e0b\u4e4b\u524d\u7559\u7ed9\u5927\u5bb6\u7684\u60ac\u5ff5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u5b9e\u9645\u4e0a\uff0c\u5f53\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u53d6value\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u540c\u65f6\u62ff\u5230\u540c\u6837\u7684\u503c\uff0c\u800c\u8fdb\u884c\u81ea\u589e\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e5f\u662f\u540c\u6837\u7684\u503c\uff0c\u518d\u5199\u56de\u4e3b\u5185\u5b58\u540e\uff0c\u672c\u6765\u5e94\u8be5\u8fdb\u884c2\u6b21\u81ea\u589e\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u53ea\u6267\u884c\u4e86\u4e00\u6b21\uff01 \u90a3\u4e48\u8981\u53bb\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u91c7\u53d6\u67d0\u79cd\u540c\u6b65\u673a\u5236\uff0c\u6765\u9650\u5236\u4e0d\u540c\u7ebf\u7a0b\u5bf9\u4e8e\u5171\u4eab\u53d8\u91cf\u7684\u8bbf\u95ee\uff01\u6211\u4eec\u5e0c\u671b\u7684\u662f\u4fdd\u8bc1\u5171\u4eab\u53d8\u91cfvalue\u81ea\u589e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff08\u539f\u5b50\u6027\u662f\u6307\u4e00\u4e2a\u64cd\u4f5c\u6216\u591a\u4e2a\u64cd\u4f5c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u4e14\u6267\u884c\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u88ab\u4efb\u4f55\u56e0\u7d20\u6253\u65ad\uff0c\u5305\u62ec\u5176\u4ed6\u7ebf\u7a0b\uff0c\u8981\u4e48\u5c31\u90fd\u4e0d\u6267\u884c\uff09 \u7ebf\u7a0b\u9501 \u901a\u8fc7synchronized\u5173\u952e\u5b57\u6765\u521b\u9020\u4e00\u4e2a\u7ebf\u7a0b\u9501\uff0c\u9996\u5148\u6211\u4eec\u6765\u8ba4\u8bc6\u4e00\u4e0bsynchronized\u4ee3\u7801\u5757\uff0c\u5b83\u9700\u8981\u5728\u62ec\u53f7\u4e2d\u586b\u5165\u4e00\u4e2a\u5185\u5bb9\uff0c\u5fc5\u987b\u662f\u4e00\u4e2a\u5bf9\u8c61\u6216\u662f\u4e00\u4e2a\u7c7b\uff0c\u6211\u4eec\u5728value\u81ea\u589e\u64cd\u4f5c\u5916\u5957\u4e0a\u540c\u6b65\u4ee3\u7801\u5757\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( Main . class ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( Main . class ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u6211\u4eec\u53d1\u73b0\uff0c\u73b0\u5728\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9\u4e86\uff0c\u56e0\u4e3a\u5728\u540c\u6b65\u4ee3\u7801\u5757\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u62ff\u5230\u4e86\u6211\u4eec\u4f20\u5165\u5bf9\u8c61\u6216\u7c7b\u7684\u9501\uff08\u4f20\u5165\u7684\u5982\u679c\u662f\u5bf9\u8c61\uff0c\u5c31\u662f\u5bf9\u8c61\u9501\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u4ee3\u8868\u4e0d\u540c\u7684\u5bf9\u8c61\u9501\uff0c\u5982\u679c\u662f\u7c7b\uff0c\u5c31\u662f\u7c7b\u9501\uff0c\u7c7b\u9501\u53ea\u6709\u4e00\u4e2a\uff0c\u5b9e\u9645\u4e0a\u7c7b\u9501\u4e5f\u662f\u5bf9\u8c61\u9501\uff0c\u662fClass\u7c7b\u5b9e\u4f8b\uff0c\u4f46\u662fClass\u7c7b\u5b9e\u4f8b\u540c\u6837\u7684\u7c7b\u65e0\u8bba\u600e\u4e48\u83b7\u53d6\u90fd\u662f\u540c\u4e00\u4e2a\uff09\uff0c\u4f46\u662f\u6ce8\u610f\u4e24\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u4f7f\u7528\u540c\u4e00\u628a\u9501\uff01 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u5230\u540c\u6b65\u4ee3\u7801\u5757\u65f6\uff0c\u4f1a\u83b7\u53d6\u5230\u5f53\u524d\u7684\u9501\uff0c\u800c\u8fd9\u65f6\u5982\u679c\u5176\u4ed6\u4f7f\u7528\u540c\u6837\u7684\u9501\u7684\u540c\u6b65\u4ee3\u7801\u5757\u4e5f\u60f3\u6267\u884c\u5185\u5bb9\uff0c\u5c31\u5fc5\u987b\u7b49\u5f85\u5f53\u524d\u540c\u6b65\u4ee3\u7801\u5757\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6bd5\uff0c\u5728\u6267\u884c\u5b8c\u6bd5\u540e\u4f1a\u81ea\u52a8\u91ca\u653e\u8fd9\u628a\u9501\uff0c\u800c\u5176\u4ed6\u7684\u7ebf\u7a0b\u624d\u80fd\u62ff\u5230\u8fd9\u628a\u9501\u5e76\u5f00\u59cb\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u91cc\u9762\u7684\u5185\u5bb9\u3002\uff08\u5b9e\u9645\u4e0asynchronized\u662f\u4e00\u79cd\u60b2\u89c2\u9501\uff0c\u968f\u65f6\u90fd\u8ba4\u4e3a\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u540e\u9762\u6709\u673a\u4f1a\u6211\u4eec\u8fd8\u4f1a\u8bb2\u5230\u4e50\u89c2\u9501\uff0c\u5982CAS\u7b97\u6cd5\uff09 \u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u5bf9\u8c61\u7684\u9501\uff0c\u90a3\u4e48\u8fd8\u80fd\u987a\u5229\u8fdb\u884c\u5417\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Main main1 = new Main (); Main main2 = new Main (); Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( main1 ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( main2 ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u5f53\u5bf9\u8c61\u4e0d\u540c\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u4e0d\u540c\u7684\u9501\uff0c\u56e0\u6b64\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u81ea\u589e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c\u6700\u540e\u4e5f\u5f97\u4e0d\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002 synchronized\u5173\u952e\u5b57\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u65b9\u6cd5\u4e0a\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\u4e5f\u4f1a\u83b7\u53d6\u9501\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 private static int value = 0 ; private static synchronized void add (){ value ++ ; } public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) add (); System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) add (); System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u9501\u4e0d\u7528\u4f60\u53bb\u7ed9\uff0c\u5982\u679c\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u7684\u7c7b\u9501\uff0c\u800c\u5982\u679c\u662f\u666e\u901a\u6210\u5458\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u7684\u5bf9\u8c61\u9501\u3002\u901a\u8fc7\u7075\u6d3b\u7684\u4f7f\u7528synchronized\u5c31\u80fd\u5f88\u597d\u5730\u89e3\u51b3\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u95ee\u9898\u4e86\uff01 \u6b7b\u9501 \u5176\u5b9e\u6b7b\u9501\u7684\u6982\u5ff5\u5728 \u64cd\u4f5c\u7cfb\u7edf \u4e2d\u4e5f\u6709\u63d0\u53ca\uff0c\u5b83\u662f\u6307\u4e24\u4e2a\u7ebf\u7a0b\u76f8\u4e92\u6301\u6709\u5bf9\u65b9\u9700\u8981\u7684\u9501\uff0c\u4f46\u662f\u53c8\u8fdf\u8fdf\u4e0d\u91ca\u653e\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5361\u4f4f\uff1a \u6211\u4eec\u53d1\u73b0\uff0c\u7ebf\u7a0bA\u548c\u7ebf\u7a0bB\u90fd\u9700\u8981\u5bf9\u65b9\u7684\u9501\uff0c\u4f46\u662f\u53c8\u88ab\u5bf9\u65b9\u7262\u7262\u628a\u63e1\uff0c\u7531\u4e8e\u7ebf\u7a0b\u88ab\u65e0\u9650\u671f\u5730\u963b\u585e\uff0c\u56e0\u6b64\u7a0b\u5e8f\u4e0d\u53ef\u80fd\u6b63\u5e38\u7ec8\u6b62\u3002\u6211\u4eec\u6765\u770b\u770b\u4ee5\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5f97\u5230\u4ec0\u4e48\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public static void main ( String [] args ) throws InterruptedException { Object o1 = new Object (); Object o2 = new Object (); Thread t1 = new Thread (() -> { synchronized ( o1 ){ try { Thread . sleep ( 1000 ); synchronized ( o2 ){ System . out . println ( \"\u7ebf\u7a0b1\" ); } } catch ( InterruptedException e ) { e . printStackTrace (); } } }); Thread t2 = new Thread (() -> { synchronized ( o2 ){ try { Thread . sleep ( 1000 ); synchronized ( o1 ){ System . out . println ( \"\u7ebf\u7a0b2\" ); } } catch ( InterruptedException e ) { e . printStackTrace (); } } }); t1 . start (); t2 . start (); } \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u53bb\u68c0\u6d4b\u6b7b\u9501\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5229\u7528jstack\u547d\u4ee4\u6765\u68c0\u6d4b\u6b7b\u9501\uff0c\u9996\u5148\u5229\u7528jps\u627e\u5230\u6211\u4eec\u7684java\u8fdb\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 nagocoler@NagodeMacBook-Pro ~ % jps 51592 Launcher 51690 Jps 14955 51693 Main nagocoler@NagodeMacBook-Pro ~ % jstack 51693 ... Java stack information for the threads listed above: =================================================== \"Thread-1\" : at com.test.Main.lambda $main$1 ( Main.java:46 ) - waiting to lock <0x000000076ad27fc0> ( a java.lang.Object ) - locked <0x000000076ad27fd0> ( a java.lang.Object ) at com.test.Main $$ Lambda $2 /1867750575.run ( Unknown Source ) at java.lang.Thread.run ( Thread.java:748 ) \"Thread-0\" : at com.test.Main.lambda $main$0 ( Main.java:34 ) - waiting to lock <0x000000076ad27fd0> ( a java.lang.Object ) - locked <0x000000076ad27fc0> ( a java.lang.Object ) at com.test.Main $$ Lambda $1 /396873410.run ( Unknown Source ) at java.lang.Thread.run ( Thread.java:748 ) Found 1 deadlock. jstack\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u6b7b\u9501\uff0c\u5e76\u6253\u5370\u51fa\u4e86\u76f8\u5173\u7ebf\u7a0b\u7684\u6808\u8ffd\u8e2a\u4fe1\u606f\u3002 \u4e0d\u63a8\u8350\u4f7f\u7528 suspend() \u53bb\u6302\u8d77\u7ebf\u7a0b\u7684\u539f\u56e0\uff0c\u662f\u56e0\u4e3a suspend() \u5728\u4f7f\u7ebf\u7a0b\u6682\u505c\u7684\u540c\u65f6\uff0c\u5e76\u4e0d\u4f1a\u53bb\u91ca\u653e\u4efb\u4f55\u9501\u8d44\u6e90\u3002\u5176\u4ed6\u7ebf\u7a0b\u90fd\u65e0\u6cd5\u8bbf\u95ee\u88ab\u5b83\u5360\u7528\u7684\u9501\u3002\u76f4\u5230\u5bf9\u5e94\u7684\u7ebf\u7a0b\u6267\u884c resume() \u65b9\u6cd5\u540e\uff0c\u88ab\u6302\u8d77\u7684\u7ebf\u7a0b\u624d\u80fd\u7ee7\u7eed\uff0c\u4ece\u800c\u5176\u5b83\u88ab\u963b\u585e\u5728\u8fd9\u4e2a\u9501\u7684\u7ebf\u7a0b\u624d\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u4f46\u662f\uff0c\u5982\u679c resume() \u64cd\u4f5c\u51fa\u73b0\u5728 suspend() \u4e4b\u524d\u6267\u884c\uff0c\u90a3\u4e48\u7ebf\u7a0b\u5c06\u4e00\u76f4\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u540c\u65f6\u4e00\u76f4\u5360\u7528\u9501\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u6b7b\u9501\u3002 wait\u548cnotify\u65b9\u6cd5 \u5176\u5b9e\u6211\u4eec\u4e4b\u524d\u53ef\u80fd\u5c31\u53d1\u73b0\u4e86\uff0cObject\u7c7b\u8fd8\u6709\u4e09\u4e2a\u65b9\u6cd5\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u4f7f\u7528\u8fc7\uff0c\u5206\u522b\u662f wait() \u3001 notify() \u4ee5\u53ca notifyAll() \uff0c\u4ed6\u4eec\u5176\u5b9e\u662f\u9700\u8981\u914d\u5408synchronized\u6765\u4f7f\u7528\u7684\uff0c\u53ea\u6709\u5728\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public static void main ( String [] args ) throws InterruptedException { Object o1 = new Object (); Thread t1 = new Thread (() -> { synchronized ( o1 ){ try { System . out . println ( \"\u5f00\u59cb\u7b49\u5f85\" ); o1 . wait (); //\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u5e76\u91ca\u653e\u9501 System . out . println ( \"\u7b49\u5f85\u7ed3\u675f\uff01\" ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }); Thread t2 = new Thread (() -> { synchronized ( o1 ){ System . out . println ( \"\u5f00\u59cb\u5524\u9192\uff01\" ); o1 . notify (); //\u5524\u9192\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( i ); } //\u5524\u9192\u540e\u4f9d\u7136\u9700\u8981\u7b49\u5f85\u8fd9\u91cc\u7684\u9501\u91ca\u653e\u4e4b\u524d\u7b49\u5f85\u7684\u7ebf\u7a0b\u624d\u80fd\u7ee7\u7eed } }); t1 . start (); Thread . sleep ( 1000 ); t2 . start (); } \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u8c61\u7684 wait() \u65b9\u6cd5\u4f1a\u6682\u65f6\u4f7f\u5f97\u6b64\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u540c\u65f6\u4f1a\u91ca\u653e\u5f53\u524d\u4ee3\u7801\u5757\u6301\u6709\u7684\u9501\uff0c\u8fd9\u65f6\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u53d6\u5230\u6b64\u5bf9\u8c61\u7684\u9501\uff0c\u5f53\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u5bf9\u8c61\u7684 notify() \u65b9\u6cd5\u540e\uff0c\u4f1a\u5524\u9192\u521a\u624d\u53d8\u6210\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff08\u8fd9\u65f6\u5e76\u6ca1\u6709\u7acb\u5373\u91ca\u653e\u9501\uff09\u3002\u6ce8\u610f\uff0c\u5fc5\u987b\u662f\u5728\u6301\u6709\u9501\uff08\u540c\u6b65\u4ee3\u7801\u5757\u5185\u90e8\uff09\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff01 notifyAll\u5176\u5b9e\u548cnotify\u4e00\u6837\uff0c\u4e5f\u662f\u7528\u4e8e\u5524\u9192\uff0c\u4f46\u662f\u524d\u8005\u662f\u5524\u9192\u6240\u6709\u8c03\u7528 wait() \u540e\u5904\u4e8e\u7b49\u5f85\u7684\u7ebf\u7a0b\uff0c\u800c\u540e\u8005\u662f\u770b\u8fd0\u6c14\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002 ThreadLocal\u7684\u4f7f\u7528 \u65e2\u7136\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58\uff0c\u90a3\u4e48\u80fd\u5426\u53ea\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58\u4e2d\u521b\u5efa\u53d8\u91cf\u4ec5\u4f9b\u7ebf\u7a0b\u81ea\u5df1\u4f7f\u7528\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u662fThreadLocal\u7c7b\uff0c\u6765\u521b\u5efa\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\uff0c\u5b83\u5c06\u6211\u4eec\u7684\u53d8\u91cf\u503c\u5b58\u50a8\u5728\u5185\u90e8\uff08\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u53d8\u91cf\uff09\uff0c\u4e0d\u540c\u7684\u53d8\u91cf\u8bbf\u95ee\u5230ThreadLocal\u5bf9\u8c61\u65f6\uff0c\u90fd\u53ea\u80fd\u83b7\u53d6\u5230\u81ea\u5df1\u7ebf\u7a0b\u6240\u5c5e\u7684\u53d8\u91cf\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws InterruptedException { ThreadLocal < String > local = new ThreadLocal <> (); //\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u5b58\u50a8\u7c7b\u578b\u4e3a\u6211\u4eec\u8981\u5b58\u653e\u7684\u53d8\u91cf\u7c7b\u578b Thread t1 = new Thread (() -> { local . set ( \"lbwnb\" ); //\u5c06\u53d8\u91cf\u7684\u503c\u7ed9\u4e88ThreadLocal System . out . println ( \"\u53d8\u91cf\u503c\u5df2\u8bbe\u5b9a\uff01\" ); System . out . println ( local . get ()); //\u5c1d\u8bd5\u83b7\u53d6ThreadLocal\u4e2d\u5b58\u653e\u7684\u53d8\u91cf }); Thread t2 = new Thread (() -> { System . out . println ( local . get ()); //\u5c1d\u8bd5\u83b7\u53d6ThreadLocal\u4e2d\u5b58\u653e\u7684\u53d8\u91cf }); t1 . start (); Thread . sleep ( 3000 ); //\u95f4\u9694\u4e09\u79d2 t2 . start (); } \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5f00\u542f\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u53bb\u8bbf\u95eeThreadLocal\u5bf9\u8c61\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u653e\u7684\u5185\u5bb9\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u53d6\uff0c\u4f46\u662f\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u65e0\u6cd5\u83b7\u53d6\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u5165\u540e\uff0c\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u4e5f\u5b58\u653e\uff0c\u662f\u5426\u4f1a\u8986\u76d6\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u653e\u7684\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public static void main ( String [] args ) throws InterruptedException { ThreadLocal < String > local = new ThreadLocal <> (); //\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u5b58\u50a8\u7c7b\u578b\u4e3a\u6211\u4eec\u8981\u5b58\u653e\u7684\u53d8\u91cf\u7c7b\u578b Thread t1 = new Thread (() -> { local . set ( \"lbwnb\" ); //\u5c06\u53d8\u91cf\u7684\u503c\u7ed9\u4e88ThreadLocal System . out . println ( \"\u7ebf\u7a0b1\u53d8\u91cf\u503c\u5df2\u8bbe\u5b9a\uff01\" ); try { Thread . sleep ( 2000 ); //\u95f4\u96942\u79d2 } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"\u7ebf\u7a0b1\u8bfb\u53d6\u53d8\u91cf\u503c\uff1a\" ); System . out . println ( local . get ()); //\u5c1d\u8bd5\u83b7\u53d6ThreadLocal\u4e2d\u5b58\u653e\u7684\u53d8\u91cf }); Thread t2 = new Thread (() -> { local . set ( \"yyds\" ); //\u5c06\u53d8\u91cf\u7684\u503c\u7ed9\u4e88ThreadLocal System . out . println ( \"\u7ebf\u7a0b2\u53d8\u91cf\u503c\u5df2\u8bbe\u5b9a\uff01\" ); }); t1 . start (); Thread . sleep ( 1000 ); //\u95f4\u96941\u79d2 t2 . start (); } \u6211\u4eec\u53d1\u73b0\uff0c\u5373\u4f7f\u7ebf\u7a0b2\u91cd\u65b0\u8bbe\u5b9a\u4e86\u503c\uff0c\u4e5f\u6ca1\u6709\u5f71\u54cd\u5230\u7ebf\u7a0b1\u5b58\u653e\u7684\u503c\uff0c\u6240\u4ee5\u8bf4\uff0c\u4e0d\u540c\u7ebf\u7a0b\u5411ThreadLocal\u5b58\u653e\u6570\u636e\uff0c\u53ea\u4f1a\u5b58\u653e\u5728\u7ebf\u7a0b\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e2d\uff0c\u800c\u4e0d\u4f1a\u76f4\u63a5\u5b58\u653e\u5230\u4e3b\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u5404\u4e2a\u7ebf\u7a0b\u76f4\u63a5\u5b58\u653e\u7684\u5185\u5bb9\u4e92\u4e0d\u5e72\u6270\u3002 \u6211\u4eec\u53d1\u73b0\u5728\u7ebf\u7a0b\u4e2d\u521b\u5efa\u7684\u5b50\u7ebf\u7a0b\uff0c\u65e0\u6cd5\u83b7\u5f97\u7236\u7ebf\u7a0b\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { ThreadLocal < String > local = new ThreadLocal <> (); Thread t = new Thread (() -> { local . set ( \"lbwnb\" ); new Thread (() -> { System . out . println ( local . get ()); }). start (); }); t . start (); } \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528InheritableThreadLocal\u6765\u89e3\u51b3\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { ThreadLocal < String > local = new InheritableThreadLocal <> (); Thread t = new Thread (() -> { local . set ( \"lbwnb\" ); new Thread (() -> { System . out . println ( local . get ()); }). start (); }); t . start (); } \u5728InheritableThreadLocal\u5b58\u653e\u7684\u5185\u5bb9\uff0c\u4f1a\u81ea\u52a8\u5411\u5b50\u7ebf\u7a0b\u4f20\u9012\u3002 \u5b9a\u65f6\u5668 \u6211\u4eec\u6709\u65f6\u5019\u4f1a\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff0c\u6211\u5e0c\u671b\u5b9a\u65f6\u6267\u884c\u4efb\u52a1\uff0c\u6bd4\u59823\u79d2\u540e\u6267\u884c\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Thread.sleep() \u6765\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public static void main ( String [] args ) { new TimerTask (() -> System . out . println ( \"\u6211\u662f\u5b9a\u65f6\u4efb\u52a1\uff01\" ), 3000 ). start (); //\u521b\u5efa\u5e76\u542f\u52a8\u6b64\u5b9a\u65f6\u4efb\u52a1 } static class TimerTask { Runnable task ; long time ; public TimerTask ( Runnable runnable , long time ){ this . task = runnable ; this . time = time ; } public void start (){ new Thread (() -> { try { Thread . sleep ( time ); task . run (); //\u4f11\u7720\u540e\u518d\u8fd0\u884c } catch ( InterruptedException e ) { e . printStackTrace (); } }). start (); } } \u6211\u4eec\u901a\u8fc7\u81ea\u884c\u5c01\u88c5\u4e00\u4e2aTimerTask\u7c7b\uff0c\u5e76\u5728\u542f\u52a8\u65f6\uff0c\u5148\u4f11\u77203\u79d2\u949f\uff0c\u518d\u6267\u884c\u6211\u4eec\u4f20\u5165\u7684\u5185\u5bb9\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5e0c\u671b\uff0c\u80fd\u5426\u5faa\u73af\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\u5462\uff1f\u6bd4\u5982\u6211\u5e0c\u671b\u6bcf\u96941\u79d2\u949f\u6267\u884c\u4e00\u6b21\u4ee3\u7801\uff0c\u8fd9\u6837\u8be5\u600e\u4e48\u505a\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public static void main ( String [] args ) { new TimerLoopTask (() -> System . out . println ( \"\u6211\u662f\u5b9a\u65f6\u4efb\u52a1\uff01\" ), 3000 ). start (); //\u521b\u5efa\u5e76\u542f\u52a8\u6b64\u5b9a\u65f6\u4efb\u52a1 } static class TimerLoopTask { Runnable task ; long loopTime ; public TimerLoopTask ( Runnable runnable , long loopTime ){ this . task = runnable ; this . loopTime = loopTime ; } public void start (){ new Thread (() -> { try { while ( true ){ //\u65e0\u9650\u5faa\u73af\u6267\u884c Thread . sleep ( loopTime ); task . run (); //\u4f11\u7720\u540e\u518d\u8fd0\u884c } } catch ( InterruptedException e ) { e . printStackTrace (); } }). start (); } } \u73b0\u5728\u6211\u4eec\u5c06\u5355\u6b21\u6267\u884c\u653e\u5165\u5230\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e2d\uff0c\u8fd9\u6837\u5c31\u80fd\u4e00\u76f4\u6267\u884c\u4e86\uff0c\u5e76\u4e14\u6309\u7167\u6211\u4eec\u7684\u95f4\u9694\u65f6\u95f4\u8fdb\u884c\u3002 \u4f46\u662f\u7ec8\u7a76\u662f\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\uff0c\u53ef\u80fd\u5f88\u591a\u65b9\u9762\u8fd8\u6ca1\u8003\u8651\u5230\uff0cJava\u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5957\u81ea\u5df1\u7684\u6846\u67b6\u7528\u4e8e\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Timer timer = new Timer (); //\u521b\u5efa\u5b9a\u65f6\u5668\u5bf9\u8c61 timer . schedule ( new TimerTask () { //\u6ce8\u610f\u8fd9\u4e2a\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u662f\u63a5\u53e3\uff0c\u65e0\u6cd5\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\u7b80\u5316\uff0c\u53ea\u80fd\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b @Override public void run () { System . out . println ( Thread . currentThread (). getName ()); //\u6253\u5370\u5f53\u524d\u7ebf\u7a0b\u540d\u79f0 } }, 1000 ); //\u6267\u884c\u4e00\u4e2a\u5ef6\u65f6\u4efb\u52a1 } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2aTimer\u7c7b\u6765\u8ba9\u5b83\u8fdb\u884c\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6b64\u5bf9\u8c61\u6765\u521b\u5efa\u4efb\u610f\u7c7b\u578b\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c\u5305\u5ef6\u65f6\u4efb\u52a1\u3001\u5faa\u73af\u5b9a\u65f6\u4efb\u52a1\u7b49\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u867d\u7136\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u7684\u7a0b\u5e8f\u5e76\u6ca1\u6709\u505c\u6b62\uff0c\u8fd9\u662f\u56e0\u4e3aTimer\u5185\u5b58\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\u548c\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Timer { /** * The timer task queue. This data structure is shared with the timer * thread. The timer produces tasks, via its various schedule calls, * and the timer thread consumes, executing timer tasks as appropriate, * and removing them from the queue when they're obsolete. */ private final TaskQueue queue = new TaskQueue (); /** * The timer thread. */ private final TimerThread thread = new TimerThread ( queue ); ... } TimerThread\u7ee7\u627f\u81eaThread\uff0c\u662f\u4e00\u4e2a\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\uff0c\u5728\u6784\u9020\u65f6\u81ea\u52a8\u542f\u52a8\uff1a 1 2 3 4 public Timer ( String name ) { thread . setName ( name ); thread . start (); } \u800c\u5b83\u7684run\u65b9\u6cd5\u4f1a\u5faa\u73af\u5730\u8bfb\u53d6\u961f\u5217\u4e2d\u662f\u5426\u8fd8\u6709\u4efb\u52a1\uff0c\u5982\u679c\u6709\u4efb\u52a1\u4f9d\u6b21\u6267\u884c\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u6682\u65f6\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public void run () { try { mainLoop (); } finally { // Someone killed this Thread, behave as if Timer cancelled synchronized ( queue ) { newTasksMayBeScheduled = false ; queue . clear (); // Eliminate obsolete references } } } /** * The main timer loop. (See class comment.) */ private void mainLoop () { try { TimerTask task ; boolean taskFired ; synchronized ( queue ) { // Wait for queue to become non-empty while ( queue . isEmpty () && newTasksMayBeScheduled ) //\u5f53\u961f\u5217\u4e3a\u7a7a\u540c\u65f6\u6ca1\u6709\u88ab\u5173\u95ed\u65f6\uff0c\u4f1a\u8c03\u7528wait()\u65b9\u6cd5\u6682\u65f6\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53\u6709\u65b0\u7684\u4efb\u52a1\u65f6\uff0c\u4f1a\u88ab\u5524\u9192\u3002 queue . wait (); if ( queue . isEmpty ()) break ; //\u5f53\u88ab\u5524\u9192\u540e\u90fd\u6ca1\u6709\u4efb\u52a1\u65f6\uff0c\u5c31\u4f1a\u7ed3\u675f\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u7ed3\u675f\u5de5\u4f5c\u7ebf\u7a0b ... } newTasksMayBeScheduled \u5b9e\u9645\u4e0a\u5c31\u662f\u6807\u8bb0\u5f53\u524d\u5b9a\u65f6\u5668\u662f\u5426\u5173\u95ed\uff0c\u5f53\u5b83\u4e3afalse\u65f6\uff0c\u8868\u793a\u5df2\u7ecf\u4e0d\u4f1a\u518d\u6709\u65b0\u7684\u4efb\u52a1\u5230\u6765\uff0c\u4e5f\u5c31\u662f\u5173\u95ed\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 cancel() \u65b9\u6cd5\u6765\u5173\u95ed\u5b83\u7684\u5de5\u4f5c\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 public void cancel () { synchronized ( queue ) { thread . newTasksMayBeScheduled = false ; queue . clear (); queue . notify (); //\u5524\u9192wait\u4f7f\u5f97\u5de5\u4f5c\u7ebf\u7a0b\u7ed3\u675f } } \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4f7f\u7528\u5b8c\u6210\u540e\uff0c\u8c03\u7528Timer\u7684 cancel() \u65b9\u6cd5\u4ee5\u6b63\u5e38\u9000\u51fa\u6211\u4eec\u7684\u7a0b\u5e8f\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { Timer timer = new Timer (); timer . schedule ( new TimerTask () { @Override public void run () { System . out . println ( Thread . currentThread (). getName ()); timer . cancel (); //\u7ed3\u675f } }, 1000 ); } \u5b88\u62a4\u7ebf\u7a0b \u4e0d\u8981\u628a\u5b88\u62a4\u8fdb\u7a0b\u548c\u5b88\u62a4\u7ebf\u7a0b\u76f8\u63d0\u5e76\u8bba\uff01\u5b88\u62a4\u8fdb\u7a0b\u5728\u540e\u53f0\u8fd0\u884c\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u548c\u7528\u6237\u4ea4\u4e92\uff0c\u672c\u8d28\u548c\u666e\u901a\u8fdb\u7a0b\u7c7b\u4f3c\u3002\u800c\u5b88\u62a4\u7ebf\u7a0b\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u5f53\u5176\u4ed6\u6240\u6709\u7684\u975e\u5b88\u62a4\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u662f\u81ea\u52a8\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cJava\u4e2d\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u81ea\u52a8\u7ed3\u675f\uff0c\u56e0\u6b64\u5b88\u62a4\u7ebf\u7a0b\u4e0d\u9002\u5408\u8fdb\u884cIO\u64cd\u4f5c\uff0c\u53ea\u9002\u5408\u6253\u6253\u6742\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main ( String [] args ) throws InterruptedException { Thread t = new Thread (() -> { while ( true ){ try { System . out . println ( \"\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u4e2d...\" ); Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }); t . setDaemon ( true ); //\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff08\u5fc5\u987b\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u4e2d\u9014\u662f\u4e0d\u5141\u8bb8\u8f6c\u6362\u7684\uff09 t . start (); for ( int i = 0 ; i < 5 ; i ++ ) { Thread . sleep ( 1000 ); } } \u5728\u5b88\u62a4\u7ebf\u7a0b\u4e2d\u4ea7\u751f\u7684\u65b0\u7ebf\u7a0b\u4e5f\u662f\u5b88\u62a4\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public static void main ( String [] args ) throws InterruptedException { Thread t = new Thread (() -> { Thread it = new Thread (() -> { while ( true ){ try { System . out . println ( \"\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u4e2d...\" ); Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }); it . start (); }); t . setDaemon ( true ); //\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff08\u5fc5\u987b\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u4e2d\u9014\u662f\u4e0d\u5141\u8bb8\u8f6c\u6362\u7684\uff09 t . start (); for ( int i = 0 ; i < 5 ; i ++ ) { Thread . sleep ( 1000 ); } } \u518d\u8c08\u96c6\u5408\u7c7b\u5e76\u884c\u65b9\u6cd5 \u5176\u5b9e\u6211\u4eec\u4e4b\u524d\u5728\u8bb2\u89e3\u96c6\u5408\u7c7b\u7684\u6839\u63a5\u53e3\u65f6\uff0c\u5c31\u53d1\u73b0\u6709\u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5\uff1a 1 2 3 default Stream < E > parallelStream () { return StreamSupport . stream ( spliterator (), true ); } \u5e76\u884c\u6d41\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u591a\u7ebf\u7a0b\u6267\u884c\u7684\u6d41\uff0c\u5b83\u901a\u8fc7\u9ed8\u8ba4\u7684ForkJoinPool\u5b9e\u73b0\uff08\u8fd9\u91cc\u4e0d\u8bb2\u89e3\u539f\u7406\uff09\uff0c\u5b83\u53ef\u4ee5\u63d0\u9ad8\u4f60\u7684\u591a\u7ebf\u7a0b\u4efb\u52a1\u7684\u901f\u5ea6\u3002 1 2 3 4 5 6 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> ( Arrays . asList ( 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 )); list . parallelStream () //\u83b7\u5f97\u5e76\u884c\u6d41 . forEach ( i -> System . out . println ( Thread . currentThread (). getName () + \" -> \" + i )); } \u6211\u4eec\u53d1\u73b0\uff0cforEach\u64cd\u4f5c\u7684\u987a\u5e8f\uff0c\u5e76\u4e0d\u662f\u6211\u4eec\u5b9e\u9645List\u4e2d\u7684\u987a\u5e8f\uff0c\u540c\u65f6\u6bcf\u6b21\u6253\u5370\u4e5f\u662f\u4e0d\u540c\u7684\u7ebf\u7a0b\u5728\u6267\u884c\uff01\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 forEachOrdered() \u65b9\u6cd5\u6765\u4f7f\u7528\u5355\u7ebf\u7a0b\u7ef4\u6301\u539f\u672c\u7684\u987a\u5e8f\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> ( Arrays . asList ( 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 )); list . parallelStream () //\u83b7\u5f97\u5e76\u884c\u6d41 . forEachOrdered ( System . out :: println ); } \u6211\u4eec\u4e4b\u524d\u8fd8\u53d1\u73b0\uff0c\u5728Arrays\u6570\u7ec4\u5de5\u5177\u7c7b\u4e2d\uff0c\u4e5f\u5305\u542b\u5927\u91cf\u7684\u5e76\u884c\u65b9\u6cd5\uff1a 1 2 3 4 5 public static void main ( String [] args ) { int [] arr = new int [] { 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 }; Arrays . parallelSort ( arr ); //\u4f7f\u7528\u591a\u7ebf\u7a0b\u8fdb\u884c\u5e76\u884c\u6392\u5e8f\uff0c\u6548\u7387\u66f4\u9ad8 System . out . println ( Arrays . toString ( arr )); } \u66f4\u591a\u5730\u4f7f\u7528\u5e76\u884c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u66f4\u52a0\u5145\u5206\u5730\u53d1\u6325\u73b0\u4ee3\u8ba1\u7b97\u673a\u591a\u6838\u5fc3\u7684\u4f18\u52bf\uff0c\u4f46\u662f\u540c\u65f6\u9700\u8981\u6ce8\u610f\u591a\u7ebf\u7a0b\u4ea7\u751f\u7684\u5f02\u6b65\u95ee\u9898\uff01 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { int [] arr = new int [] { 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 }; Arrays . parallelSetAll ( arr , i -> { System . out . println ( Thread . currentThread (). getName ()); return arr [ i ] ; }); System . out . println ( Arrays . toString ( arr )); } \u901a\u8fc7\u5bf9Java\u591a\u7ebf\u7a0b\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u5c31\u5177\u5907\u4e86\u5229\u7528\u591a\u7ebf\u7a0b\u89e3\u51b3\u95ee\u9898\u7684\u601d\u7ef4\uff01 Java\u591a\u7ebf\u7a0b\u7f16\u7a0b\u5b9e\u6218 \u8fd9\u662f\u6574\u4e2a\u6559\u7a0b\u6700\u540e\u4e00\u4e2a\u7f16\u7a0b\u5b9e\u6218\u5185\u5bb9\u4e86\uff0c\u4e0b\u4e00\u7ae0\u8282\u4e3a \u53cd\u5c04 \u4e00\u822c\u5f00\u53d1\u8005\u4f7f\u7528\u6bd4\u8f83\u5c11\uff0c\u5c5e\u4e8e\u9009\u5b66\u5185\u5bb9\uff0c\u4e0d\u7f16\u6392\u7f16\u7a0b\u5b9e\u6218\u8bfe\u7a0b\u3002 \u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005 \u6240\u8c13\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\uff0c\u662f\u901a\u8fc7\u4e00\u4e2a\u5bb9\u5668\u6765\u89e3\u51b3\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5f3a\u8026\u5408\u95ee\u9898\u3002\u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u751f\u4ea7\u8005\u5728\u4e0d\u65ad\u7684\u751f\u4ea7\uff0c\u6d88\u8d39\u8005\u4e5f\u5728\u4e0d\u65ad\u7684\u6d88\u8d39\uff0c\u53ef\u662f\u6d88\u8d39\u8005\u6d88\u8d39\u7684\u4ea7\u54c1\u662f\u751f\u4ea7\u8005\u751f\u4ea7\u7684\uff0c\u8fd9\u5c31\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u4e2d\u95f4\u5bb9\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5bb9\u5668\u60f3\u8c61\u6210\u662f\u4e00\u4e2a\u8d27\u67b6\uff0c\u5f53\u8d27\u67b6\u7a7a\u7684\u65f6\u5019\uff0c\u751f\u4ea7\u8005\u8981\u751f\u4ea7\u4ea7\u54c1\uff0c\u6b64\u65f6\u6d88\u8d39\u8005\u5728\u7b49\u5f85\u751f\u4ea7\u8005\u5f80\u8d27\u67b6\u4e0a\u751f\u4ea7\u4ea7\u54c1\uff0c\u800c\u5f53\u8d27\u67b6\u6709\u8d27\u7269\u7684\u65f6\u5019\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u4ece\u8d27\u67b6\u4e0a\u62ff\u8d70\u5546\u54c1\uff0c\u751f\u4ea7\u8005\u6b64\u65f6\u7b49\u5f85\u8d27\u67b6\u51fa\u73b0\u7a7a\u4f4d\uff0c\u8fdb\u800c\u8865\u8d27\uff0c\u8fd9\u6837\u4e0d\u65ad\u7684\u5faa\u73af\u3002 \u901a\u8fc7\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u6765\u6a21\u62df\u4e00\u4e2a\u9910\u5385\u76842\u4e2a\u53a8\u5e08\u548c3\u4e2a\u987e\u5ba2\uff0c\u5047\u8bbe\u53a8\u5e08\u7092\u51fa\u4e00\u4e2a\u83dc\u7684\u65f6\u95f4\u4e3a3\u79d2\uff0c\u987e\u5ba2\u5403\u6389\u83dc\u54c1\u7684\u65f6\u95f4\u4e3a4\u79d2\u3002","title":"Java\u591a\u7ebf\u7a0b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#java","text":"\u6ce8\u610f\uff1a \u672c\u7ae0\u8282\u4f1a\u6d89\u53ca\u5230 \u64cd\u4f5c\u7cfb\u7edf \u76f8\u5173\u77e5\u8bc6\u3002 \u5728\u4e86\u89e3\u591a\u7ebf\u7a0b\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b \u64cd\u4f5c\u7cfb\u7edf \u4e2d\u63d0\u5230\u7684\u8fdb\u7a0b\u6982\u5ff5\uff1a \u8fdb\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u5b9e\u4f53\uff0c\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff08\u6bd4\u5982\u6211\u4eec\u8fd0\u884cQQ\u3001\u6d4f\u89c8\u5668\u3001LOL\u3001\u7f51\u6613\u4e91\u97f3\u4e50\u7b49\u8f6f\u4ef6\uff09\uff0c\u90fd\u6709\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\uff0cCPU\u4e00\u4e2a\u6838\u5fc3\u540c\u65f6\u53ea\u80fd\u5904\u7406\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5f53\u51fa\u73b0\u591a\u4e2a\u8fdb\u7a0b\u9700\u8981\u540c\u65f6\u8fd0\u884c\u65f6\uff0cCPU\u4e00\u822c\u901a\u8fc7 \u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6 \u7b97\u6cd5\uff0c\u6765\u5b9e\u73b0\u591a\u4e2a\u8fdb\u7a0b\u7684\u540c\u65f6\u8fd0\u884c\u3002 \u5728\u65e9\u671f\u7684\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u548c\u72ec\u7acb\u8fd0\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4e5f\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u5e0c\u671b\u4e24\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff0c\u5c31\u5fc5\u987b\u8fd0\u884c\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u7531\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u5c31\u53d8\u5f97\u975e\u5e38\u9ebb\u70e6\uff08\u6bd4\u5982\u8981\u5171\u4eab\u67d0\u4e9b\u6570\u636e\uff09\u800c\u4e14\u6267\u884c\u4e0d\u540c\u8fdb\u7a0b\u4f1a\u4ea7\u751f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u975e\u5e38\u8017\u65f6\uff0c\u90a3\u4e48\u80fd\u5426\u5b9e\u73b0\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u5c31\u80fd\u591f\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u5462\uff1f \u540e\u6765\uff0c\u7ebf\u7a0b\u6a2a\u7a7a\u51fa\u4e16\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u4e2d\u4e00\u4e2a\u5355\u4e00\u7684\u987a\u5e8f\u63a7\u5236\u6d41\u7a0b\uff0c\u73b0\u5728\u7ebf\u7a0b\u624d\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\uff0c\u5404\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e5f\u5c31\u662f\u6240\u5728\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u901f\u5ea6\u4e5f\u9ad8\u4e8e\u8fdb\u7a0b\u3002 \u5728Java\u4e2d\uff0c\u6211\u4eec\u4ece\u5f00\u59cb\uff0c\u4e00\u76f4\u4ee5\u6765\u7f16\u5199\u7684\u90fd\u662f\u5355\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\uff08\u8fd0\u884c main() \u65b9\u6cd5\u7684\u5185\u5bb9\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u80fd\u540c\u65f6\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\uff08\u65e0\u8bba\u4f60\u662f\u8c03\u7528\u65b9\u6cd5\u3001\u8fd8\u662f\u8fdb\u884c\u8ba1\u7b97\uff0c\u59cb\u7ec8\u90fd\u662f\u4f9d\u6b21\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u540c\u6b65\u7684\uff09\uff0c\u800c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u4e24\u4e2a\u65b9\u6cd5 \u540c\u65f6 \u5728\u8fd0\u884c\u6216\u8005\u662f\u4e24\u4e2a\u8ba1\u7b97\u540c\u65f6\u5728\u8fdb\u884c\uff0c\u4e5f\u5c31\u662f\u5f02\u6b65\u7684\uff09\uff0c\u5c31\u9700\u8981\u7528\u5230Java\u591a\u7ebf\u7a0b\u6846\u67b6\u3002\u5b9e\u9645\u4e0a\u4e00\u4e2aJava\u7a0b\u5e8f\u542f\u52a8\u540e\uff0c\u4f1a\u521b\u5efa\u5f88\u591a\u7ebf\u7a0b\uff0c\u4e0d\u4ec5\u4ec5\u53ea\u8fd0\u884c\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { ThreadMXBean bean = ManagementFactory . getThreadMXBean (); long [] ids = bean . getAllThreadIds (); ThreadInfo [] infos = bean . getThreadInfo ( ids ); for ( ThreadInfo info : infos ) { System . out . println ( info . getThreadName ()); } } \u5173\u4e8e\u9664\u4e86main\u7ebf\u7a0b\u9ed8\u8ba4\u4ee5\u5916\u7684\u7ebf\u7a0b\uff0c\u6d89\u53ca\u5230JVM\u76f8\u5173\u5e95\u5c42\u539f\u7406\uff0c\u5728\u8fd9\u91cc\u4e0d\u505a\u8bb2\u89e3\uff0c\u4e86\u89e3\u5c31\u884c\u3002","title":"Java\u591a\u7ebf\u7a0b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_1","text":"\u901a\u8fc7\u521b\u5efaThread\u5bf9\u8c61\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0cThread\u6784\u9020\u65b9\u6cd5\u4e2d\u9700\u8981\u4f20\u5165\u4e00\u4e2aRunnable\u63a5\u53e3\u7684\u5b9e\u73b0\uff08\u5176\u5b9e\u5c31\u662f\u7f16\u5199\u8981\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7684\u5185\u5bb9\u903b\u8f91\uff09\u540c\u65f6Runnable\u53ea\u6709\u4e00\u4e2a\u672a\u5b9e\u73b0\u65b9\u6cd5\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @FunctionalInterface public interface Runnable { /** * When an object implementing interface <code>Runnable</code> is used * to create a thread, starting the thread causes the object's * <code>run</code> method to be called in that separately executing * thread. * <p> * The general contract of the method <code>run</code> is that it may * take any action whatsoever. * * @see java.lang.Thread#run() */ public abstract void run (); } \u521b\u5efa\u597d\u540e\uff0c\u901a\u8fc7\u8c03\u7528 start() \u65b9\u6cd5\u6765\u8fd0\u884c\u6b64\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { Thread t = new Thread (() -> { //\u76f4\u63a5\u7f16\u5199\u903b\u8f91 System . out . println ( \"\u6211\u662f\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff01\" ); }); t . start (); //\u8c03\u7528\u6b64\u65b9\u6cd5\u6765\u5f00\u59cb\u6267\u884c\u6b64\u7ebf\u7a0b } \u53ef\u80fd\u4e0a\u9762\u7684\u4f8b\u5b50\u770b\u8d77\u6765\u548c\u666e\u901a\u7684\u5355\u7ebf\u7a0b\u6ca1\u4e24\u6837\uff0c\u90a3\u6211\u4eec\u5148\u6765\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u6211\u662f\u7ebf\u7a0b\uff1a\" + Thread . currentThread (). getName ()); System . out . println ( \"\u6211\u6b63\u5728\u8ba1\u7b97 0-10000 \u4e4b\u95f4\u6240\u6709\u6570\u7684\u548c...\" ); int sum = 0 ; for ( int i = 0 ; i <= 10000 ; i ++ ) { sum += i ; } System . out . println ( \"\u7ed3\u679c\uff1a\" + sum ); }); t . start (); System . out . println ( \"\u6211\u662f\u4e3b\u7ebf\u7a0b\uff01\" ); } \u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u5e76\u4e0d\u662f\u6309\u7167\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4e86\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5206\u522b\u4f4d\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u4ed6\u4eec\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff01\u5982\u679c\u4f60\u8fd8\u662f\u89c9\u5f97\u5f88\u7591\u60d1\uff0c\u6211\u4eec\u63a5\u7740\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"\u6211\u662f\u4e00\u53f7\u7ebf\u7a0b\uff1a\" + i ); } }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"\u6211\u662f\u4e8c\u53f7\u7ebf\u7a0b\uff1a\" + i ); } }); t1 . start (); t2 . start (); } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6253\u5370\u5b9e\u9645\u4e0a\u662f\u5728\u4ea4\u66ff\u8fdb\u884c\u7684\uff0c\u4e5f\u8bc1\u660e\u4e86\u4ed6\u4eec\u662f\u5728\u540c\u65f6\u8fd0\u884c\uff01 \u6ce8\u610f \uff1a\u6211\u4eec\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2arun\u65b9\u6cd5\uff0c\u4e5f\u80fd\u6267\u884c\u7ebf\u7a0b\u91cc\u9762\u5b9a\u4e49\u7684\u5185\u5bb9\uff0c\u4f46\u662frun\u662f\u76f4\u63a5\u5728\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\uff0c\u5e76\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff01 \u5b9e\u9645\u4e0a\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5dee\u4e0d\u591a\uff0c\u4e5f\u4f1a\u7b49\u5f85\u83b7\u53d6CPU\u8d44\u6e90\uff0c\u4e00\u65e6\u83b7\u53d6\u5230\uff0c\u5c31\u5f00\u59cb\u6309\u987a\u5e8f\u6267\u884c\u6211\u4eec\u7ed9\u5b9a\u7684\u7a0b\u5e8f\uff0c\u5f53\u9700\u8981\u7b49\u5f85\u5916\u90e8IO\u64cd\u4f5c\uff08\u6bd4\u5982Scanner\u83b7\u53d6\u8f93\u5165\u7684\u6587\u672c\uff09\uff0c\u5c31\u4f1a\u6682\u65f6\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u7b49\u5f85\u901a\u77e5\uff0c\u6216\u662f\u8c03\u7528 sleep() \u65b9\u6cd5\u6765\u8ba9\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) throws InterruptedException { System . out . println ( \"l\" ); Thread . sleep ( 1000 ); //\u4f11\u7720\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c1000ms = 1s System . out . println ( \"b\" ); Thread . sleep ( 1000 ); System . out . println ( \"w\" ); Thread . sleep ( 1000 ); System . out . println ( \"nb!\" ); } \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 stop() \u65b9\u6cd5\u6765\u5f3a\u884c\u7ec8\u6b62\u6b64\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) throws InterruptedException { Thread t = new Thread (() -> { Thread me = Thread . currentThread (); //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61 for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"\u6253\u5370:\" + i ); if ( i == 20 ) me . stop (); //\u6b64\u65b9\u6cd5\u4f1a\u76f4\u63a5\u7ec8\u6b62\u6b64\u7ebf\u7a0b } }); t . start (); } \u867d\u7136 stop() \u65b9\u6cd5\u80fd\u591f\u7ec8\u6b62\u6b64\u7ebf\u7a0b\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u6709\u5173\u7ebf\u7a0b\u4e2d\u65ad\u76f8\u5173\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7ee7\u7eed\u4e86\u89e3\u3002 \u601d\u8003 \uff1a\u731c\u731c\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u6211\u4eec\u53d1\u73b0\uff0cvalue\u6700\u540e\u7684\u503c\u5e76\u4e0d\u662f\u6211\u4eec\u7406\u60f3\u7684\u7ed3\u679c\uff0c\u6709\u5173\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff0c\u5728\u6211\u4eec\u5b66\u4e60\u5230\u7ebf\u7a0b\u9501\u7684\u65f6\u5019\uff0c\u518d\u6765\u63a2\u8ba8\u3002","title":"\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u542f\u52a8"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_2","text":"\u6211\u4eec\u524d\u9762\u63d0\u5230\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u4e0b\uff0c\u7ebf\u7a0b\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff1a \u5f53CPU\u7ed9\u4e88\u7684\u8fd0\u884c\u65f6\u95f4\u7ed3\u675f\u65f6\uff0c\u4f1a\u4ece\u8fd0\u884c\u72b6\u6001\u56de\u5230\u5c31\u7eea\uff08\u53ef\u8fd0\u884c\uff09\u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u83b7\u5f97CPU\u8d44\u6e90\u3002 \u5f53\u7ebf\u7a0b\u8fdb\u5165\u4f11\u7720 / \u963b\u585e(\u5982\u7b49\u5f85IO\u8bf7\u6c42) / \u624b\u52a8\u8c03\u7528 wait() \u65b9\u6cd5\u65f6\uff0c\u4f1a\u4f7f\u5f97\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53\u7b49\u5f85\u72b6\u6001\u7ed3\u675f\u540e\u4f1a\u56de\u5230\u5c31\u7eea\u72b6\u6001\u3002 \u5f53\u7ebf\u7a0b\u51fa\u73b0\u5f02\u5e38\u6216\u9519\u8bef / \u88ab stop() \u65b9\u6cd5\u5f3a\u884c\u505c\u6b62 / \u6240\u6709\u4ee3\u7801\u6267\u884c\u7ed3\u675f\u65f6\uff0c\u4f1a\u4f7f\u5f97\u7ebf\u7a0b\u7684\u8fd0\u884c\u7ec8\u6b62\u3002 \u800c\u8fd9\u4e2a\u90e8\u5206\u6211\u4eec\u7740\u91cd\u4e86\u89e3\u4e00\u4e0b\u7ebf\u7a0b\u7684\u4f11\u7720\u548c\u4e2d\u65ad\uff0c\u9996\u5148\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u5982\u4f55\u4f7f\u5f97\u7ebf\u7a0b\u8fdb\u5982\u4f11\u7720\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Thread t = new Thread (() -> { try { System . out . println ( \"l\" ); Thread . sleep ( 1000 ); //sleep\u65b9\u6cd5\u662fThread\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u5b83\u53ea\u4f5c\u7528\u4e8e\u5f53\u524d\u7ebf\u7a0b\uff08\u5b83\u77e5\u9053\u5f53\u524d\u7ebf\u7a0b\u662f\u54ea\u4e2a\uff09 System . out . println ( \"b\" ); //\u8c03\u7528sleep\u540e\uff0c\u7ebf\u7a0b\u4f1a\u76f4\u63a5\u8fdb\u5165\u5230\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u65f6\u95f4\u7ed3\u675f } catch ( InterruptedException e ) { e . printStackTrace (); } }); t . start (); } \u901a\u8fc7\u8c03\u7528 sleep() \u65b9\u6cd5\u6765\u5c06\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u4f11\u7720\uff0c\u4f7f\u5f97\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6b64\u65b9\u6cd5\u663e\u793a\u58f0\u660e\u4e86\u4f1a\u629b\u51fa\u4e00\u4e2aInterruptedException\u5f02\u5e38\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f02\u5e38\u5728\u4ec0\u4e48\u65f6\u5019\u4f1a\u53d1\u751f\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public static void main ( String [] args ) { Thread t = new Thread (() -> { try { Thread . sleep ( 10000 ); //\u4f11\u772010\u79d2 } catch ( InterruptedException e ) { e . printStackTrace (); } }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . interrupt (); //\u8c03\u7528t\u7684interrupt\u65b9\u6cd5 } catch ( InterruptedException e ) { e . printStackTrace (); } } \u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2aThread\u5bf9\u8c61\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2a interrupt() \u65b9\u6cd5\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u540e\uff0c\u4f1a\u7ed9\u6307\u5b9a\u7ebf\u7a0b\u6dfb\u52a0\u4e00\u4e2a\u4e2d\u65ad\u6807\u8bb0\u4ee5\u544a\u77e5\u7ebf\u7a0b\u9700\u8981\u7acb\u5373\u505c\u6b62\u8fd0\u884c\u6216\u662f\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u7531\u7ebf\u7a0b\u6765\u54cd\u5e94\u6b64\u4e2d\u65ad\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684 stop() \u65b9\u6cd5\u662f\u5f3a\u5236\u7ec8\u6b62\u7ebf\u7a0b\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u867d\u7136\u7b80\u5355\u7c97\u66b4\uff0c\u4f46\u662f\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u4e0d\u80fd\u5b8c\u5168\u91ca\u653e\uff0c\u800c\u7c7b\u4f3c\u8fd9\u6837\u7684\u53d1\u9001\u901a\u77e5\u6765\u544a\u77e5\u7ebf\u7a0b\u9700\u8981\u4e2d\u65ad\uff0c\u8ba9\u7ebf\u7a0b\u81ea\u884c\u5904\u7406\u540e\u7eed\uff0c\u4f1a\u66f4\u52a0\u5408\u7406\u4e00\u4e9b\uff0c\u4e5f\u662f\u66f4\u52a0\u63a8\u8350\u7684\u505a\u6cd5\u3002\u6211\u4eec\u6765\u770b\u770binterrupt\u7684\u7528\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); while ( true ){ //\u65e0\u9650\u5faa\u73af if ( Thread . currentThread (). isInterrupted ()){ //\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e2d\u65ad\u6807\u5fd7 break ; //\u54cd\u5e94\u4e2d\u65ad } } System . out . println ( \"\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u4e86\uff01\" ); }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . interrupt (); //\u8c03\u7528t\u7684interrupt\u65b9\u6cd5 } catch ( InterruptedException e ) { e . printStackTrace (); } } \u901a\u8fc7 isInterrupted() \u53ef\u4ee5\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u5b58\u5728\u4e2d\u65ad\u6807\u5fd7\uff0c\u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u5916\u90e8\u5e0c\u671b\u5f53\u524d\u7ebf\u7a0b\u7acb\u5373\u505c\u6b62\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u7ed9\u5f53\u524d\u7ebf\u7a0b\u53d1\u9001\u4e00\u4e2a\u5176\u4ed6\u7684\u4fe1\u53f7\uff0c\u5982\u679c\u6211\u4eec\u5e76\u4e0d\u662f\u5e0c\u671b\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\u5c31\u662f\u7ed3\u675f\u7a0b\u5e8f\uff0c\u800c\u662f\u901a\u77e5\u7a0b\u5e8f\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\u540e\uff0c\u590d\u4f4d\u4e2d\u65ad\u6807\u8bb0\uff0c\u7136\u540e\u7ee7\u7eed\u505a\u6211\u4eec\u7684\u4e8b\u60c5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); while ( true ){ if ( Thread . currentThread (). isInterrupted ()){ //\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e2d\u65ad\u6807\u5fd7 System . out . println ( \"\u53d1\u73b0\u4e2d\u65ad\u4fe1\u53f7\uff0c\u590d\u4f4d\uff0c\u7ee7\u7eed\u8fd0\u884c...\" ); Thread . interrupted (); //\u590d\u4f4d\u4e2d\u65ad\u6807\u8bb0\uff08\u8fd4\u56de\u503c\u662f\u5f53\u524d\u662f\u5426\u6709\u4e2d\u65ad\u6807\u8bb0\uff0c\u8fd9\u91cc\u4e0d\u7528\u7ba1\uff09 } } }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . interrupt (); //\u8c03\u7528t\u7684interrupt\u65b9\u6cd5 } catch ( InterruptedException e ) { e . printStackTrace (); } } \u590d\u4f4d\u4e2d\u65ad\u6807\u8bb0\u540e\uff0c\u4f1a\u7acb\u5373\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\u3002\u90a3\u4e48\uff0c\u5982\u679c\u73b0\u5728\u6211\u4eec\u60f3\u6682\u505c\u7ebf\u7a0b\u5462\uff1f\u6211\u4eec\u5e0c\u671b\u7ebf\u7a0b\u6682\u65f6\u505c\u4e0b\uff0c\u6bd4\u5982\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u540e\uff0c\u518d\u7ee7\u7eed\u8fd0\u884c\uff0c\u90a3\u8fd9\u6837\u7684\u64cd\u4f5c\u600e\u4e48\u5b9e\u73b0\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); Thread . currentThread (). suspend (); //\u6682\u505c\u6b64\u7ebf\u7a0b System . out . println ( \"\u7ebf\u7a0b\u7ee7\u7eed\u8fd0\u884c\uff01\" ); }); t . start (); try { Thread . sleep ( 3000 ); //\u4f11\u77203\u79d2\uff0c\u4e00\u5b9a\u6bd4\u7ebf\u7a0bt\u5148\u9192\u6765 t . resume (); //\u6062\u590d\u6b64\u7ebf\u7a0b } catch ( InterruptedException e ) { e . printStackTrace (); } } \u867d\u7136\u8fd9\u6837\u5f88\u65b9\u4fbf\u5730\u63a7\u5236\u4e86\u7ebf\u7a0b\u7684\u6682\u505c\u72b6\u6001\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e0d\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u5b83\u5f88\u5bb9\u6613\u5bfc\u81f4\u6b7b\u9501\uff01\u6709\u5173\u4e3a\u4ec0\u4e48\u88ab\u5f03\u7528\u7684\u539f\u56e0\uff0c\u6211\u4eec\u4f1a\u5728\u7ebf\u7a0b\u9501\u7ee7\u7eed\u63a2\u8ba8\u3002","title":"\u7ebf\u7a0b\u7684\u4f11\u7720\u548c\u4e2d\u65ad"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_3","text":"\u5b9e\u9645\u4e0a\uff0cJava\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u5e76\u4e0d\u662f\u5e73\u5747\u5206\u914dCPU\u65f6\u95f4\u7684\uff0c\u4e3a\u4e86\u4f7f\u5f97\u7ebf\u7a0b\u8d44\u6e90\u5206\u914d\u66f4\u52a0\u5408\u7406\uff0cJava\u91c7\u7528\u7684\u662f\u62a2\u5360\u5f0f\u8c03\u5ea6\u65b9\u5f0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\uff0c\u4f18\u5148\u4f7f\u7528CPU\u8d44\u6e90\uff01\u6211\u4eec\u5e0c\u671bCPU\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u53bb\u5904\u7406\u66f4\u91cd\u8981\u7684\u4efb\u52a1\uff0c\u800c\u4e0d\u592a\u91cd\u8981\u7684\u4efb\u52a1\uff0c\u5219\u53ef\u4ee5\u5148\u8ba9\u51fa\u4e00\u90e8\u5206\u8d44\u6e90\u3002\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u4e00\u822c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a MIN_PRIORITY \u6700\u4f4e\u4f18\u5148\u7ea7 MAX_PRIORITY \u6700\u9ad8\u4f18\u5148\u7ea7 NOM_PRIORITY \u5e38\u89c4\u4f18\u5148\u7ea7 1 2 3 4 5 6 7 public static void main ( String [] args ) { Thread t = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff01\" ); }); t . start (); t . setPriority ( Thread . MIN_PRIORITY ); //\u901a\u8fc7\u4f7f\u7528setPriority\u65b9\u6cd5\u6765\u8bbe\u5b9a\u4f18\u5148\u7ea7 } \u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\uff0c\u83b7\u5f97CPU\u8d44\u6e90\u7684\u6982\u7387\u4f1a\u8d8a\u5927\uff0c\u5e76\u4e0d\u662f\u8bf4\u4e00\u5b9a\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\u8d8a\u5148\u6267\u884c\uff01","title":"\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_4","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u5de5\u4f5c\u4e0d\u91cd\u8981\u65f6\uff0c\u5c06CPU\u8d44\u6e90\u8ba9\u4f4d\u7ed9\u5176\u4ed6\u7ebf\u7a0b\uff0c\u901a\u8fc7\u4f7f\u7528 yield() \u65b9\u6cd5\u6765\u5c06\u5f53\u524d\u8d44\u6e90\u8ba9\u4f4d\u7ed9\u5176\u4ed6\u540c\u4f18\u5148\u7ea7\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b1\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { if ( i % 5 == 0 ) { System . out . println ( \"\u8ba9\u4f4d\uff01\" ); Thread . yield (); } System . out . println ( \"1\u6253\u5370\uff1a\" + i ); } System . out . println ( \"\u7ebf\u7a0b1\u7ed3\u675f\uff01\" ); }); Thread t2 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b2\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"2\u6253\u5370\uff1a\" + i ); } }); t1 . start (); t2 . start (); } \u89c2\u5bdf\u7ed3\u679c\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8ba9\u4f4d\u4e4b\u540e\uff0c\u5c3d\u53ef\u80fd\u591a\u7684\u5728\u6267\u884c\u7ebf\u7a0b2\u7684\u5185\u5bb9\u3002 \u5f53\u6211\u4eec\u5e0c\u671b\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u540e\u518d\u7ee7\u7eed\u8fdb\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 join() \u65b9\u6cd5\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u52a0\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b1\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"1\u6253\u5370\uff1a\" + i ); } System . out . println ( \"\u7ebf\u7a0b1\u7ed3\u675f\uff01\" ); }); Thread t2 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b2\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"2\u6253\u5370\uff1a\" + i ); if ( i == 10 ){ try { System . out . println ( \"\u7ebf\u7a0b1\u52a0\u5165\u5230\u6b64\u7ebf\u7a0b\uff01\" ); t1 . join (); //\u5728i==10\u65f6\uff0c\u8ba9\u7ebf\u7a0b1\u52a0\u5165\uff0c\u5148\u5b8c\u6210\u7ebf\u7a0b1\u7684\u5185\u5bb9\uff0c\u5728\u7ee7\u7eed\u5f53\u524d\u5185\u5bb9 } catch ( InterruptedException e ) { e . printStackTrace (); } } } }); t1 . start (); t2 . start (); } \u6211\u4eec\u53d1\u73b0\uff0c\u7ebf\u7a0b1\u52a0\u5165\u540e\uff0c\u7ebf\u7a0b2\u7b49\u5f85\u7ebf\u7a0b1\u5f85\u6267\u884c\u7684\u5185\u5bb9\u5168\u90e8\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u7ee7\u7eed\u6267\u884c\u7684\u7ebf\u7a0b2\u5185\u5bb9\u3002\u6ce8\u610f\uff0c\u7ebf\u7a0b\u7684\u52a0\u5165\u53ea\u662f\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5b8c\u6210\uff0c\u5e76\u4e0d\u662f\u5c06\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u548c\u5f53\u524d\u7ebf\u7a0b\u5408\u5e76\uff01\u6211\u4eec\u6765\u770b\u770b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public static void main ( String [] args ) { Thread t1 = new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \"\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( Thread . currentThread (). getName () + \"\u6253\u5370\uff1a\" + i ); } System . out . println ( \"\u7ebf\u7a0b1\u7ed3\u675f\uff01\" ); }); Thread t2 = new Thread (() -> { System . out . println ( \"\u7ebf\u7a0b2\u5f00\u59cb\u8fd0\u884c\uff01\" ); for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( \"2\u6253\u5370\uff1a\" + i ); if ( i == 10 ){ try { System . out . println ( \"\u7ebf\u7a0b1\u52a0\u5165\u5230\u6b64\u7ebf\u7a0b\uff01\" ); t1 . join (); //\u5728i==10\u65f6\uff0c\u8ba9\u7ebf\u7a0b1\u52a0\u5165\uff0c\u5148\u5b8c\u6210\u7ebf\u7a0b1\u7684\u5185\u5bb9\uff0c\u5728\u7ee7\u7eed\u5f53\u524d\u5185\u5bb9 } catch ( InterruptedException e ) { e . printStackTrace (); } } } }); t1 . start (); t2 . start (); } \u5b9e\u9645\u4e0a\uff0ct2\u7ebf\u7a0b\u53ea\u662f\u6682\u65f6\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53t1\u6267\u884c\u7ed3\u675f\u65f6\uff0ct2\u624d\u5f00\u59cb\u7ee7\u7eed\u6267\u884c\uff0c\u53ea\u662f\u5728\u6548\u679c\u4e0a\u770b\u8d77\u6765\u597d\u50cf\u662f\u4e24\u4e2a\u7ebf\u7a0b\u5408\u5e76\u4e3a\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u800c\u5df2\u3002","title":"\u7ebf\u7a0b\u7684\u793c\u8ba9\u548c\u52a0\u5165"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_5","text":"\u5728\u5f00\u59cb\u8bb2\u89e3\u7ebf\u7a0b\u540c\u6b65\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e0b\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0bJava\u7684\u5185\u5b58\u7ba1\u7406\uff1a \u7ebf\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u53d8\u91cf\uff08\u6bd4\u5982\u4e4b\u524d\u60ac\u5ff5\u4e2d\u7684value\u53d8\u91cf\uff09\u5b58\u50a8\u5728\u4e3b\u5185\u5b58\uff08main memory\uff09\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u5de5\u4f5c\u5185\u5b58\uff08\u672c\u5730\u5185\u5b58\uff09\uff0c\u5de5\u4f5c\u5185\u5b58\u4e2d\u5b58\u50a8\u4e86\u8be5\u7ebf\u7a0b\u4ee5\u8bfb/\u5199\u5171\u4eab\u53d8\u91cf\u7684\u526f\u672c\u3002\u5b83\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5728 \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406 \u4e2d\u5b66\u4e60\u7684\u591a\u5904\u7406\u5668\u9ad8\u901f\u7f13\u5b58\u673a\u5236\uff1a \u9ad8\u901f\u7f13\u5b58\u901a\u8fc7\u4fdd\u5b58\u5185\u5b58\u4e2d\u6570\u636e\u7684\u526f\u672c\u6765\u63d0\u4f9b\u66f4\u52a0\u5feb\u901f\u7684\u6570\u636e\u8bbf\u95ee\uff0c\u4f46\u662f\u5982\u679c\u591a\u4e2a\u5904\u7406\u5668\u7684\u8fd0\u7b97\u4efb\u52a1\u90fd\u6d89\u53ca\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5404\u81ea\u7684\u9ad8\u901f\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u5728\u5199\u56de\u4e3b\u5185\u5b58\u65f6\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u8fd9\u5c31\u662f\u5f15\u5165\u9ad8\u901f\u7f13\u5b58\u5f15\u53d1\u7684\u65b0\u95ee\u9898\uff0c\u79f0\u4e4b\u4e3a\uff1a\u7f13\u5b58\u4e00\u81f4\u6027\u3002 \u5b9e\u9645\u4e0a\uff0cJava\u7684\u5185\u5b58\u6a21\u578b\u4e5f\u662f\u8fd9\u6837\u7c7b\u4f3c\u8bbe\u8ba1\u7684\uff0c\u5f53\u6211\u4eec\u540c\u65f6\u53bb\u64cd\u4f5c\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\u65f6\uff0c\u5982\u679c\u4ec5\u4ec5\u662f\u8bfb\u53d6\u8fd8\u597d\uff0c\u4f46\u662f\u5982\u679c\u540c\u65f6\u5199\u5165\u5185\u5bb9\uff0c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff01\u597d\u6bd4\u8bf4\u4e00\u4e2a\u94f6\u884c\uff0c\u5982\u679c\u6211\u548c\u6211\u7684\u670b\u53cb\u540c\u65f6\u5728\u94f6\u884c\u53d6\u6211\u8d26\u6237\u91cc\u9762\u7684\u94b1\uff0c\u96be\u9053\u53d61000\u8fd8\u53ef\u80fd\u54102000\u51fa\u6765\u5417\uff1f\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u52a0\u5b89\u5168\u7684\u673a\u5236\u6765\u7ef4\u6301\u79e9\u5e8f\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027\uff01","title":"\u7ebf\u7a0b\u9501\u548c\u7ebf\u7a0b\u540c\u6b65"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_6","text":"\u6211\u4eec\u518d\u6765\u56de\u987e\u4e00\u4e0b\u4e4b\u524d\u7559\u7ed9\u5927\u5bb6\u7684\u60ac\u5ff5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) value ++ ; System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u5b9e\u9645\u4e0a\uff0c\u5f53\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u53d6value\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u540c\u65f6\u62ff\u5230\u540c\u6837\u7684\u503c\uff0c\u800c\u8fdb\u884c\u81ea\u589e\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e5f\u662f\u540c\u6837\u7684\u503c\uff0c\u518d\u5199\u56de\u4e3b\u5185\u5b58\u540e\uff0c\u672c\u6765\u5e94\u8be5\u8fdb\u884c2\u6b21\u81ea\u589e\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u53ea\u6267\u884c\u4e86\u4e00\u6b21\uff01 \u90a3\u4e48\u8981\u53bb\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u91c7\u53d6\u67d0\u79cd\u540c\u6b65\u673a\u5236\uff0c\u6765\u9650\u5236\u4e0d\u540c\u7ebf\u7a0b\u5bf9\u4e8e\u5171\u4eab\u53d8\u91cf\u7684\u8bbf\u95ee\uff01\u6211\u4eec\u5e0c\u671b\u7684\u662f\u4fdd\u8bc1\u5171\u4eab\u53d8\u91cfvalue\u81ea\u589e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff08\u539f\u5b50\u6027\u662f\u6307\u4e00\u4e2a\u64cd\u4f5c\u6216\u591a\u4e2a\u64cd\u4f5c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u4e14\u6267\u884c\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u88ab\u4efb\u4f55\u56e0\u7d20\u6253\u65ad\uff0c\u5305\u62ec\u5176\u4ed6\u7ebf\u7a0b\uff0c\u8981\u4e48\u5c31\u90fd\u4e0d\u6267\u884c\uff09","title":"\u60ac\u5ff5\u7834\u6848"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_7","text":"\u901a\u8fc7synchronized\u5173\u952e\u5b57\u6765\u521b\u9020\u4e00\u4e2a\u7ebf\u7a0b\u9501\uff0c\u9996\u5148\u6211\u4eec\u6765\u8ba4\u8bc6\u4e00\u4e0bsynchronized\u4ee3\u7801\u5757\uff0c\u5b83\u9700\u8981\u5728\u62ec\u53f7\u4e2d\u586b\u5165\u4e00\u4e2a\u5185\u5bb9\uff0c\u5fc5\u987b\u662f\u4e00\u4e2a\u5bf9\u8c61\u6216\u662f\u4e00\u4e2a\u7c7b\uff0c\u6211\u4eec\u5728value\u81ea\u589e\u64cd\u4f5c\u5916\u5957\u4e0a\u540c\u6b65\u4ee3\u7801\u5757\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( Main . class ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( Main . class ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u6211\u4eec\u53d1\u73b0\uff0c\u73b0\u5728\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9\u4e86\uff0c\u56e0\u4e3a\u5728\u540c\u6b65\u4ee3\u7801\u5757\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u62ff\u5230\u4e86\u6211\u4eec\u4f20\u5165\u5bf9\u8c61\u6216\u7c7b\u7684\u9501\uff08\u4f20\u5165\u7684\u5982\u679c\u662f\u5bf9\u8c61\uff0c\u5c31\u662f\u5bf9\u8c61\u9501\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u4ee3\u8868\u4e0d\u540c\u7684\u5bf9\u8c61\u9501\uff0c\u5982\u679c\u662f\u7c7b\uff0c\u5c31\u662f\u7c7b\u9501\uff0c\u7c7b\u9501\u53ea\u6709\u4e00\u4e2a\uff0c\u5b9e\u9645\u4e0a\u7c7b\u9501\u4e5f\u662f\u5bf9\u8c61\u9501\uff0c\u662fClass\u7c7b\u5b9e\u4f8b\uff0c\u4f46\u662fClass\u7c7b\u5b9e\u4f8b\u540c\u6837\u7684\u7c7b\u65e0\u8bba\u600e\u4e48\u83b7\u53d6\u90fd\u662f\u540c\u4e00\u4e2a\uff09\uff0c\u4f46\u662f\u6ce8\u610f\u4e24\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u4f7f\u7528\u540c\u4e00\u628a\u9501\uff01 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u5230\u540c\u6b65\u4ee3\u7801\u5757\u65f6\uff0c\u4f1a\u83b7\u53d6\u5230\u5f53\u524d\u7684\u9501\uff0c\u800c\u8fd9\u65f6\u5982\u679c\u5176\u4ed6\u4f7f\u7528\u540c\u6837\u7684\u9501\u7684\u540c\u6b65\u4ee3\u7801\u5757\u4e5f\u60f3\u6267\u884c\u5185\u5bb9\uff0c\u5c31\u5fc5\u987b\u7b49\u5f85\u5f53\u524d\u540c\u6b65\u4ee3\u7801\u5757\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6bd5\uff0c\u5728\u6267\u884c\u5b8c\u6bd5\u540e\u4f1a\u81ea\u52a8\u91ca\u653e\u8fd9\u628a\u9501\uff0c\u800c\u5176\u4ed6\u7684\u7ebf\u7a0b\u624d\u80fd\u62ff\u5230\u8fd9\u628a\u9501\u5e76\u5f00\u59cb\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u91cc\u9762\u7684\u5185\u5bb9\u3002\uff08\u5b9e\u9645\u4e0asynchronized\u662f\u4e00\u79cd\u60b2\u89c2\u9501\uff0c\u968f\u65f6\u90fd\u8ba4\u4e3a\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u540e\u9762\u6709\u673a\u4f1a\u6211\u4eec\u8fd8\u4f1a\u8bb2\u5230\u4e50\u89c2\u9501\uff0c\u5982CAS\u7b97\u6cd5\uff09 \u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u5bf9\u8c61\u7684\u9501\uff0c\u90a3\u4e48\u8fd8\u80fd\u987a\u5229\u8fdb\u884c\u5417\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 private static int value = 0 ; public static void main ( String [] args ) throws InterruptedException { Main main1 = new Main (); Main main2 = new Main (); Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( main1 ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) { synchronized ( main2 ){ value ++ ; } } System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u5f53\u5bf9\u8c61\u4e0d\u540c\u65f6\uff0c\u83b7\u53d6\u5230\u7684\u662f\u4e0d\u540c\u7684\u9501\uff0c\u56e0\u6b64\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u81ea\u589e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c\u6700\u540e\u4e5f\u5f97\u4e0d\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002 synchronized\u5173\u952e\u5b57\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u65b9\u6cd5\u4e0a\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\u4e5f\u4f1a\u83b7\u53d6\u9501\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 private static int value = 0 ; private static synchronized void add (){ value ++ ; } public static void main ( String [] args ) throws InterruptedException { Thread t1 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) add (); System . out . println ( \"\u7ebf\u7a0b1\u5b8c\u6210\" ); }); Thread t2 = new Thread (() -> { for ( int i = 0 ; i < 10000 ; i ++ ) add (); System . out . println ( \"\u7ebf\u7a0b2\u5b8c\u6210\" ); }); t1 . start (); t2 . start (); Thread . sleep ( 1000 ); //\u4e3b\u7ebf\u7a0b\u505c\u6b621\u79d2\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 System . out . println ( value ); } \u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u9501\u4e0d\u7528\u4f60\u53bb\u7ed9\uff0c\u5982\u679c\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u7684\u7c7b\u9501\uff0c\u800c\u5982\u679c\u662f\u666e\u901a\u6210\u5458\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u7684\u5bf9\u8c61\u9501\u3002\u901a\u8fc7\u7075\u6d3b\u7684\u4f7f\u7528synchronized\u5c31\u80fd\u5f88\u597d\u5730\u89e3\u51b3\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u95ee\u9898\u4e86\uff01","title":"\u7ebf\u7a0b\u9501"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_8","text":"\u5176\u5b9e\u6b7b\u9501\u7684\u6982\u5ff5\u5728 \u64cd\u4f5c\u7cfb\u7edf \u4e2d\u4e5f\u6709\u63d0\u53ca\uff0c\u5b83\u662f\u6307\u4e24\u4e2a\u7ebf\u7a0b\u76f8\u4e92\u6301\u6709\u5bf9\u65b9\u9700\u8981\u7684\u9501\uff0c\u4f46\u662f\u53c8\u8fdf\u8fdf\u4e0d\u91ca\u653e\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5361\u4f4f\uff1a \u6211\u4eec\u53d1\u73b0\uff0c\u7ebf\u7a0bA\u548c\u7ebf\u7a0bB\u90fd\u9700\u8981\u5bf9\u65b9\u7684\u9501\uff0c\u4f46\u662f\u53c8\u88ab\u5bf9\u65b9\u7262\u7262\u628a\u63e1\uff0c\u7531\u4e8e\u7ebf\u7a0b\u88ab\u65e0\u9650\u671f\u5730\u963b\u585e\uff0c\u56e0\u6b64\u7a0b\u5e8f\u4e0d\u53ef\u80fd\u6b63\u5e38\u7ec8\u6b62\u3002\u6211\u4eec\u6765\u770b\u770b\u4ee5\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5f97\u5230\u4ec0\u4e48\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public static void main ( String [] args ) throws InterruptedException { Object o1 = new Object (); Object o2 = new Object (); Thread t1 = new Thread (() -> { synchronized ( o1 ){ try { Thread . sleep ( 1000 ); synchronized ( o2 ){ System . out . println ( \"\u7ebf\u7a0b1\" ); } } catch ( InterruptedException e ) { e . printStackTrace (); } } }); Thread t2 = new Thread (() -> { synchronized ( o2 ){ try { Thread . sleep ( 1000 ); synchronized ( o1 ){ System . out . println ( \"\u7ebf\u7a0b2\" ); } } catch ( InterruptedException e ) { e . printStackTrace (); } } }); t1 . start (); t2 . start (); } \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u53bb\u68c0\u6d4b\u6b7b\u9501\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5229\u7528jstack\u547d\u4ee4\u6765\u68c0\u6d4b\u6b7b\u9501\uff0c\u9996\u5148\u5229\u7528jps\u627e\u5230\u6211\u4eec\u7684java\u8fdb\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 nagocoler@NagodeMacBook-Pro ~ % jps 51592 Launcher 51690 Jps 14955 51693 Main nagocoler@NagodeMacBook-Pro ~ % jstack 51693 ... Java stack information for the threads listed above: =================================================== \"Thread-1\" : at com.test.Main.lambda $main$1 ( Main.java:46 ) - waiting to lock <0x000000076ad27fc0> ( a java.lang.Object ) - locked <0x000000076ad27fd0> ( a java.lang.Object ) at com.test.Main $$ Lambda $2 /1867750575.run ( Unknown Source ) at java.lang.Thread.run ( Thread.java:748 ) \"Thread-0\" : at com.test.Main.lambda $main$0 ( Main.java:34 ) - waiting to lock <0x000000076ad27fd0> ( a java.lang.Object ) - locked <0x000000076ad27fc0> ( a java.lang.Object ) at com.test.Main $$ Lambda $1 /396873410.run ( Unknown Source ) at java.lang.Thread.run ( Thread.java:748 ) Found 1 deadlock. jstack\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u6b7b\u9501\uff0c\u5e76\u6253\u5370\u51fa\u4e86\u76f8\u5173\u7ebf\u7a0b\u7684\u6808\u8ffd\u8e2a\u4fe1\u606f\u3002 \u4e0d\u63a8\u8350\u4f7f\u7528 suspend() \u53bb\u6302\u8d77\u7ebf\u7a0b\u7684\u539f\u56e0\uff0c\u662f\u56e0\u4e3a suspend() \u5728\u4f7f\u7ebf\u7a0b\u6682\u505c\u7684\u540c\u65f6\uff0c\u5e76\u4e0d\u4f1a\u53bb\u91ca\u653e\u4efb\u4f55\u9501\u8d44\u6e90\u3002\u5176\u4ed6\u7ebf\u7a0b\u90fd\u65e0\u6cd5\u8bbf\u95ee\u88ab\u5b83\u5360\u7528\u7684\u9501\u3002\u76f4\u5230\u5bf9\u5e94\u7684\u7ebf\u7a0b\u6267\u884c resume() \u65b9\u6cd5\u540e\uff0c\u88ab\u6302\u8d77\u7684\u7ebf\u7a0b\u624d\u80fd\u7ee7\u7eed\uff0c\u4ece\u800c\u5176\u5b83\u88ab\u963b\u585e\u5728\u8fd9\u4e2a\u9501\u7684\u7ebf\u7a0b\u624d\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u4f46\u662f\uff0c\u5982\u679c resume() \u64cd\u4f5c\u51fa\u73b0\u5728 suspend() \u4e4b\u524d\u6267\u884c\uff0c\u90a3\u4e48\u7ebf\u7a0b\u5c06\u4e00\u76f4\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u540c\u65f6\u4e00\u76f4\u5360\u7528\u9501\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u6b7b\u9501\u3002","title":"\u6b7b\u9501"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#waitnotify","text":"\u5176\u5b9e\u6211\u4eec\u4e4b\u524d\u53ef\u80fd\u5c31\u53d1\u73b0\u4e86\uff0cObject\u7c7b\u8fd8\u6709\u4e09\u4e2a\u65b9\u6cd5\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u4f7f\u7528\u8fc7\uff0c\u5206\u522b\u662f wait() \u3001 notify() \u4ee5\u53ca notifyAll() \uff0c\u4ed6\u4eec\u5176\u5b9e\u662f\u9700\u8981\u914d\u5408synchronized\u6765\u4f7f\u7528\u7684\uff0c\u53ea\u6709\u5728\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public static void main ( String [] args ) throws InterruptedException { Object o1 = new Object (); Thread t1 = new Thread (() -> { synchronized ( o1 ){ try { System . out . println ( \"\u5f00\u59cb\u7b49\u5f85\" ); o1 . wait (); //\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u5e76\u91ca\u653e\u9501 System . out . println ( \"\u7b49\u5f85\u7ed3\u675f\uff01\" ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }); Thread t2 = new Thread (() -> { synchronized ( o1 ){ System . out . println ( \"\u5f00\u59cb\u5524\u9192\uff01\" ); o1 . notify (); //\u5524\u9192\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b for ( int i = 0 ; i < 50 ; i ++ ) { System . out . println ( i ); } //\u5524\u9192\u540e\u4f9d\u7136\u9700\u8981\u7b49\u5f85\u8fd9\u91cc\u7684\u9501\u91ca\u653e\u4e4b\u524d\u7b49\u5f85\u7684\u7ebf\u7a0b\u624d\u80fd\u7ee7\u7eed } }); t1 . start (); Thread . sleep ( 1000 ); t2 . start (); } \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u8c61\u7684 wait() \u65b9\u6cd5\u4f1a\u6682\u65f6\u4f7f\u5f97\u6b64\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u540c\u65f6\u4f1a\u91ca\u653e\u5f53\u524d\u4ee3\u7801\u5757\u6301\u6709\u7684\u9501\uff0c\u8fd9\u65f6\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u53d6\u5230\u6b64\u5bf9\u8c61\u7684\u9501\uff0c\u5f53\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u5bf9\u8c61\u7684 notify() \u65b9\u6cd5\u540e\uff0c\u4f1a\u5524\u9192\u521a\u624d\u53d8\u6210\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff08\u8fd9\u65f6\u5e76\u6ca1\u6709\u7acb\u5373\u91ca\u653e\u9501\uff09\u3002\u6ce8\u610f\uff0c\u5fc5\u987b\u662f\u5728\u6301\u6709\u9501\uff08\u540c\u6b65\u4ee3\u7801\u5757\u5185\u90e8\uff09\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff01 notifyAll\u5176\u5b9e\u548cnotify\u4e00\u6837\uff0c\u4e5f\u662f\u7528\u4e8e\u5524\u9192\uff0c\u4f46\u662f\u524d\u8005\u662f\u5524\u9192\u6240\u6709\u8c03\u7528 wait() \u540e\u5904\u4e8e\u7b49\u5f85\u7684\u7ebf\u7a0b\uff0c\u800c\u540e\u8005\u662f\u770b\u8fd0\u6c14\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002","title":"wait\u548cnotify\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#threadlocal","text":"\u65e2\u7136\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58\uff0c\u90a3\u4e48\u80fd\u5426\u53ea\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58\u4e2d\u521b\u5efa\u53d8\u91cf\u4ec5\u4f9b\u7ebf\u7a0b\u81ea\u5df1\u4f7f\u7528\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u662fThreadLocal\u7c7b\uff0c\u6765\u521b\u5efa\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\uff0c\u5b83\u5c06\u6211\u4eec\u7684\u53d8\u91cf\u503c\u5b58\u50a8\u5728\u5185\u90e8\uff08\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u53d8\u91cf\uff09\uff0c\u4e0d\u540c\u7684\u53d8\u91cf\u8bbf\u95ee\u5230ThreadLocal\u5bf9\u8c61\u65f6\uff0c\u90fd\u53ea\u80fd\u83b7\u53d6\u5230\u81ea\u5df1\u7ebf\u7a0b\u6240\u5c5e\u7684\u53d8\u91cf\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) throws InterruptedException { ThreadLocal < String > local = new ThreadLocal <> (); //\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u5b58\u50a8\u7c7b\u578b\u4e3a\u6211\u4eec\u8981\u5b58\u653e\u7684\u53d8\u91cf\u7c7b\u578b Thread t1 = new Thread (() -> { local . set ( \"lbwnb\" ); //\u5c06\u53d8\u91cf\u7684\u503c\u7ed9\u4e88ThreadLocal System . out . println ( \"\u53d8\u91cf\u503c\u5df2\u8bbe\u5b9a\uff01\" ); System . out . println ( local . get ()); //\u5c1d\u8bd5\u83b7\u53d6ThreadLocal\u4e2d\u5b58\u653e\u7684\u53d8\u91cf }); Thread t2 = new Thread (() -> { System . out . println ( local . get ()); //\u5c1d\u8bd5\u83b7\u53d6ThreadLocal\u4e2d\u5b58\u653e\u7684\u53d8\u91cf }); t1 . start (); Thread . sleep ( 3000 ); //\u95f4\u9694\u4e09\u79d2 t2 . start (); } \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5f00\u542f\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u53bb\u8bbf\u95eeThreadLocal\u5bf9\u8c61\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u653e\u7684\u5185\u5bb9\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u53d6\uff0c\u4f46\u662f\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u65e0\u6cd5\u83b7\u53d6\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u5165\u540e\uff0c\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u4e5f\u5b58\u653e\uff0c\u662f\u5426\u4f1a\u8986\u76d6\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u653e\u7684\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public static void main ( String [] args ) throws InterruptedException { ThreadLocal < String > local = new ThreadLocal <> (); //\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u5b58\u50a8\u7c7b\u578b\u4e3a\u6211\u4eec\u8981\u5b58\u653e\u7684\u53d8\u91cf\u7c7b\u578b Thread t1 = new Thread (() -> { local . set ( \"lbwnb\" ); //\u5c06\u53d8\u91cf\u7684\u503c\u7ed9\u4e88ThreadLocal System . out . println ( \"\u7ebf\u7a0b1\u53d8\u91cf\u503c\u5df2\u8bbe\u5b9a\uff01\" ); try { Thread . sleep ( 2000 ); //\u95f4\u96942\u79d2 } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"\u7ebf\u7a0b1\u8bfb\u53d6\u53d8\u91cf\u503c\uff1a\" ); System . out . println ( local . get ()); //\u5c1d\u8bd5\u83b7\u53d6ThreadLocal\u4e2d\u5b58\u653e\u7684\u53d8\u91cf }); Thread t2 = new Thread (() -> { local . set ( \"yyds\" ); //\u5c06\u53d8\u91cf\u7684\u503c\u7ed9\u4e88ThreadLocal System . out . println ( \"\u7ebf\u7a0b2\u53d8\u91cf\u503c\u5df2\u8bbe\u5b9a\uff01\" ); }); t1 . start (); Thread . sleep ( 1000 ); //\u95f4\u96941\u79d2 t2 . start (); } \u6211\u4eec\u53d1\u73b0\uff0c\u5373\u4f7f\u7ebf\u7a0b2\u91cd\u65b0\u8bbe\u5b9a\u4e86\u503c\uff0c\u4e5f\u6ca1\u6709\u5f71\u54cd\u5230\u7ebf\u7a0b1\u5b58\u653e\u7684\u503c\uff0c\u6240\u4ee5\u8bf4\uff0c\u4e0d\u540c\u7ebf\u7a0b\u5411ThreadLocal\u5b58\u653e\u6570\u636e\uff0c\u53ea\u4f1a\u5b58\u653e\u5728\u7ebf\u7a0b\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e2d\uff0c\u800c\u4e0d\u4f1a\u76f4\u63a5\u5b58\u653e\u5230\u4e3b\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u5404\u4e2a\u7ebf\u7a0b\u76f4\u63a5\u5b58\u653e\u7684\u5185\u5bb9\u4e92\u4e0d\u5e72\u6270\u3002 \u6211\u4eec\u53d1\u73b0\u5728\u7ebf\u7a0b\u4e2d\u521b\u5efa\u7684\u5b50\u7ebf\u7a0b\uff0c\u65e0\u6cd5\u83b7\u5f97\u7236\u7ebf\u7a0b\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { ThreadLocal < String > local = new ThreadLocal <> (); Thread t = new Thread (() -> { local . set ( \"lbwnb\" ); new Thread (() -> { System . out . println ( local . get ()); }). start (); }); t . start (); } \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528InheritableThreadLocal\u6765\u89e3\u51b3\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { ThreadLocal < String > local = new InheritableThreadLocal <> (); Thread t = new Thread (() -> { local . set ( \"lbwnb\" ); new Thread (() -> { System . out . println ( local . get ()); }). start (); }); t . start (); } \u5728InheritableThreadLocal\u5b58\u653e\u7684\u5185\u5bb9\uff0c\u4f1a\u81ea\u52a8\u5411\u5b50\u7ebf\u7a0b\u4f20\u9012\u3002","title":"ThreadLocal\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_9","text":"\u6211\u4eec\u6709\u65f6\u5019\u4f1a\u6709\u8fd9\u6837\u7684\u9700\u6c42\uff0c\u6211\u5e0c\u671b\u5b9a\u65f6\u6267\u884c\u4efb\u52a1\uff0c\u6bd4\u59823\u79d2\u540e\u6267\u884c\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Thread.sleep() \u6765\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public static void main ( String [] args ) { new TimerTask (() -> System . out . println ( \"\u6211\u662f\u5b9a\u65f6\u4efb\u52a1\uff01\" ), 3000 ). start (); //\u521b\u5efa\u5e76\u542f\u52a8\u6b64\u5b9a\u65f6\u4efb\u52a1 } static class TimerTask { Runnable task ; long time ; public TimerTask ( Runnable runnable , long time ){ this . task = runnable ; this . time = time ; } public void start (){ new Thread (() -> { try { Thread . sleep ( time ); task . run (); //\u4f11\u7720\u540e\u518d\u8fd0\u884c } catch ( InterruptedException e ) { e . printStackTrace (); } }). start (); } } \u6211\u4eec\u901a\u8fc7\u81ea\u884c\u5c01\u88c5\u4e00\u4e2aTimerTask\u7c7b\uff0c\u5e76\u5728\u542f\u52a8\u65f6\uff0c\u5148\u4f11\u77203\u79d2\u949f\uff0c\u518d\u6267\u884c\u6211\u4eec\u4f20\u5165\u7684\u5185\u5bb9\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5e0c\u671b\uff0c\u80fd\u5426\u5faa\u73af\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\u5462\uff1f\u6bd4\u5982\u6211\u5e0c\u671b\u6bcf\u96941\u79d2\u949f\u6267\u884c\u4e00\u6b21\u4ee3\u7801\uff0c\u8fd9\u6837\u8be5\u600e\u4e48\u505a\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public static void main ( String [] args ) { new TimerLoopTask (() -> System . out . println ( \"\u6211\u662f\u5b9a\u65f6\u4efb\u52a1\uff01\" ), 3000 ). start (); //\u521b\u5efa\u5e76\u542f\u52a8\u6b64\u5b9a\u65f6\u4efb\u52a1 } static class TimerLoopTask { Runnable task ; long loopTime ; public TimerLoopTask ( Runnable runnable , long loopTime ){ this . task = runnable ; this . loopTime = loopTime ; } public void start (){ new Thread (() -> { try { while ( true ){ //\u65e0\u9650\u5faa\u73af\u6267\u884c Thread . sleep ( loopTime ); task . run (); //\u4f11\u7720\u540e\u518d\u8fd0\u884c } } catch ( InterruptedException e ) { e . printStackTrace (); } }). start (); } } \u73b0\u5728\u6211\u4eec\u5c06\u5355\u6b21\u6267\u884c\u653e\u5165\u5230\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e2d\uff0c\u8fd9\u6837\u5c31\u80fd\u4e00\u76f4\u6267\u884c\u4e86\uff0c\u5e76\u4e14\u6309\u7167\u6211\u4eec\u7684\u95f4\u9694\u65f6\u95f4\u8fdb\u884c\u3002 \u4f46\u662f\u7ec8\u7a76\u662f\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\uff0c\u53ef\u80fd\u5f88\u591a\u65b9\u9762\u8fd8\u6ca1\u8003\u8651\u5230\uff0cJava\u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5957\u81ea\u5df1\u7684\u6846\u67b6\u7528\u4e8e\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Timer timer = new Timer (); //\u521b\u5efa\u5b9a\u65f6\u5668\u5bf9\u8c61 timer . schedule ( new TimerTask () { //\u6ce8\u610f\u8fd9\u4e2a\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u662f\u63a5\u53e3\uff0c\u65e0\u6cd5\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\u7b80\u5316\uff0c\u53ea\u80fd\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b @Override public void run () { System . out . println ( Thread . currentThread (). getName ()); //\u6253\u5370\u5f53\u524d\u7ebf\u7a0b\u540d\u79f0 } }, 1000 ); //\u6267\u884c\u4e00\u4e2a\u5ef6\u65f6\u4efb\u52a1 } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2aTimer\u7c7b\u6765\u8ba9\u5b83\u8fdb\u884c\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6b64\u5bf9\u8c61\u6765\u521b\u5efa\u4efb\u610f\u7c7b\u578b\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c\u5305\u5ef6\u65f6\u4efb\u52a1\u3001\u5faa\u73af\u5b9a\u65f6\u4efb\u52a1\u7b49\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u867d\u7136\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u7684\u7a0b\u5e8f\u5e76\u6ca1\u6709\u505c\u6b62\uff0c\u8fd9\u662f\u56e0\u4e3aTimer\u5185\u5b58\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\u548c\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Timer { /** * The timer task queue. This data structure is shared with the timer * thread. The timer produces tasks, via its various schedule calls, * and the timer thread consumes, executing timer tasks as appropriate, * and removing them from the queue when they're obsolete. */ private final TaskQueue queue = new TaskQueue (); /** * The timer thread. */ private final TimerThread thread = new TimerThread ( queue ); ... } TimerThread\u7ee7\u627f\u81eaThread\uff0c\u662f\u4e00\u4e2a\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\uff0c\u5728\u6784\u9020\u65f6\u81ea\u52a8\u542f\u52a8\uff1a 1 2 3 4 public Timer ( String name ) { thread . setName ( name ); thread . start (); } \u800c\u5b83\u7684run\u65b9\u6cd5\u4f1a\u5faa\u73af\u5730\u8bfb\u53d6\u961f\u5217\u4e2d\u662f\u5426\u8fd8\u6709\u4efb\u52a1\uff0c\u5982\u679c\u6709\u4efb\u52a1\u4f9d\u6b21\u6267\u884c\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u6682\u65f6\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public void run () { try { mainLoop (); } finally { // Someone killed this Thread, behave as if Timer cancelled synchronized ( queue ) { newTasksMayBeScheduled = false ; queue . clear (); // Eliminate obsolete references } } } /** * The main timer loop. (See class comment.) */ private void mainLoop () { try { TimerTask task ; boolean taskFired ; synchronized ( queue ) { // Wait for queue to become non-empty while ( queue . isEmpty () && newTasksMayBeScheduled ) //\u5f53\u961f\u5217\u4e3a\u7a7a\u540c\u65f6\u6ca1\u6709\u88ab\u5173\u95ed\u65f6\uff0c\u4f1a\u8c03\u7528wait()\u65b9\u6cd5\u6682\u65f6\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53\u6709\u65b0\u7684\u4efb\u52a1\u65f6\uff0c\u4f1a\u88ab\u5524\u9192\u3002 queue . wait (); if ( queue . isEmpty ()) break ; //\u5f53\u88ab\u5524\u9192\u540e\u90fd\u6ca1\u6709\u4efb\u52a1\u65f6\uff0c\u5c31\u4f1a\u7ed3\u675f\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u7ed3\u675f\u5de5\u4f5c\u7ebf\u7a0b ... } newTasksMayBeScheduled \u5b9e\u9645\u4e0a\u5c31\u662f\u6807\u8bb0\u5f53\u524d\u5b9a\u65f6\u5668\u662f\u5426\u5173\u95ed\uff0c\u5f53\u5b83\u4e3afalse\u65f6\uff0c\u8868\u793a\u5df2\u7ecf\u4e0d\u4f1a\u518d\u6709\u65b0\u7684\u4efb\u52a1\u5230\u6765\uff0c\u4e5f\u5c31\u662f\u5173\u95ed\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 cancel() \u65b9\u6cd5\u6765\u5173\u95ed\u5b83\u7684\u5de5\u4f5c\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 public void cancel () { synchronized ( queue ) { thread . newTasksMayBeScheduled = false ; queue . clear (); queue . notify (); //\u5524\u9192wait\u4f7f\u5f97\u5de5\u4f5c\u7ebf\u7a0b\u7ed3\u675f } } \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4f7f\u7528\u5b8c\u6210\u540e\uff0c\u8c03\u7528Timer\u7684 cancel() \u65b9\u6cd5\u4ee5\u6b63\u5e38\u9000\u51fa\u6211\u4eec\u7684\u7a0b\u5e8f\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { Timer timer = new Timer (); timer . schedule ( new TimerTask () { @Override public void run () { System . out . println ( Thread . currentThread (). getName ()); timer . cancel (); //\u7ed3\u675f } }, 1000 ); }","title":"\u5b9a\u65f6\u5668"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_10","text":"\u4e0d\u8981\u628a\u5b88\u62a4\u8fdb\u7a0b\u548c\u5b88\u62a4\u7ebf\u7a0b\u76f8\u63d0\u5e76\u8bba\uff01\u5b88\u62a4\u8fdb\u7a0b\u5728\u540e\u53f0\u8fd0\u884c\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u548c\u7528\u6237\u4ea4\u4e92\uff0c\u672c\u8d28\u548c\u666e\u901a\u8fdb\u7a0b\u7c7b\u4f3c\u3002\u800c\u5b88\u62a4\u7ebf\u7a0b\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u5f53\u5176\u4ed6\u6240\u6709\u7684\u975e\u5b88\u62a4\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u662f\u81ea\u52a8\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cJava\u4e2d\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u81ea\u52a8\u7ed3\u675f\uff0c\u56e0\u6b64\u5b88\u62a4\u7ebf\u7a0b\u4e0d\u9002\u5408\u8fdb\u884cIO\u64cd\u4f5c\uff0c\u53ea\u9002\u5408\u6253\u6253\u6742\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main ( String [] args ) throws InterruptedException { Thread t = new Thread (() -> { while ( true ){ try { System . out . println ( \"\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u4e2d...\" ); Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }); t . setDaemon ( true ); //\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff08\u5fc5\u987b\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u4e2d\u9014\u662f\u4e0d\u5141\u8bb8\u8f6c\u6362\u7684\uff09 t . start (); for ( int i = 0 ; i < 5 ; i ++ ) { Thread . sleep ( 1000 ); } } \u5728\u5b88\u62a4\u7ebf\u7a0b\u4e2d\u4ea7\u751f\u7684\u65b0\u7ebf\u7a0b\u4e5f\u662f\u5b88\u62a4\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public static void main ( String [] args ) throws InterruptedException { Thread t = new Thread (() -> { Thread it = new Thread (() -> { while ( true ){ try { System . out . println ( \"\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u4e2d...\" ); Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }); it . start (); }); t . setDaemon ( true ); //\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff08\u5fc5\u987b\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u4e2d\u9014\u662f\u4e0d\u5141\u8bb8\u8f6c\u6362\u7684\uff09 t . start (); for ( int i = 0 ; i < 5 ; i ++ ) { Thread . sleep ( 1000 ); } }","title":"\u5b88\u62a4\u7ebf\u7a0b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_11","text":"\u5176\u5b9e\u6211\u4eec\u4e4b\u524d\u5728\u8bb2\u89e3\u96c6\u5408\u7c7b\u7684\u6839\u63a5\u53e3\u65f6\uff0c\u5c31\u53d1\u73b0\u6709\u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5\uff1a 1 2 3 default Stream < E > parallelStream () { return StreamSupport . stream ( spliterator (), true ); } \u5e76\u884c\u6d41\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u591a\u7ebf\u7a0b\u6267\u884c\u7684\u6d41\uff0c\u5b83\u901a\u8fc7\u9ed8\u8ba4\u7684ForkJoinPool\u5b9e\u73b0\uff08\u8fd9\u91cc\u4e0d\u8bb2\u89e3\u539f\u7406\uff09\uff0c\u5b83\u53ef\u4ee5\u63d0\u9ad8\u4f60\u7684\u591a\u7ebf\u7a0b\u4efb\u52a1\u7684\u901f\u5ea6\u3002 1 2 3 4 5 6 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> ( Arrays . asList ( 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 )); list . parallelStream () //\u83b7\u5f97\u5e76\u884c\u6d41 . forEach ( i -> System . out . println ( Thread . currentThread (). getName () + \" -> \" + i )); } \u6211\u4eec\u53d1\u73b0\uff0cforEach\u64cd\u4f5c\u7684\u987a\u5e8f\uff0c\u5e76\u4e0d\u662f\u6211\u4eec\u5b9e\u9645List\u4e2d\u7684\u987a\u5e8f\uff0c\u540c\u65f6\u6bcf\u6b21\u6253\u5370\u4e5f\u662f\u4e0d\u540c\u7684\u7ebf\u7a0b\u5728\u6267\u884c\uff01\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 forEachOrdered() \u65b9\u6cd5\u6765\u4f7f\u7528\u5355\u7ebf\u7a0b\u7ef4\u6301\u539f\u672c\u7684\u987a\u5e8f\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> ( Arrays . asList ( 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 )); list . parallelStream () //\u83b7\u5f97\u5e76\u884c\u6d41 . forEachOrdered ( System . out :: println ); } \u6211\u4eec\u4e4b\u524d\u8fd8\u53d1\u73b0\uff0c\u5728Arrays\u6570\u7ec4\u5de5\u5177\u7c7b\u4e2d\uff0c\u4e5f\u5305\u542b\u5927\u91cf\u7684\u5e76\u884c\u65b9\u6cd5\uff1a 1 2 3 4 5 public static void main ( String [] args ) { int [] arr = new int [] { 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 }; Arrays . parallelSort ( arr ); //\u4f7f\u7528\u591a\u7ebf\u7a0b\u8fdb\u884c\u5e76\u884c\u6392\u5e8f\uff0c\u6548\u7387\u66f4\u9ad8 System . out . println ( Arrays . toString ( arr )); } \u66f4\u591a\u5730\u4f7f\u7528\u5e76\u884c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u66f4\u52a0\u5145\u5206\u5730\u53d1\u6325\u73b0\u4ee3\u8ba1\u7b97\u673a\u591a\u6838\u5fc3\u7684\u4f18\u52bf\uff0c\u4f46\u662f\u540c\u65f6\u9700\u8981\u6ce8\u610f\u591a\u7ebf\u7a0b\u4ea7\u751f\u7684\u5f02\u6b65\u95ee\u9898\uff01 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { int [] arr = new int [] { 1 , 4 , 5 , 2 , 9 , 3 , 6 , 0 }; Arrays . parallelSetAll ( arr , i -> { System . out . println ( Thread . currentThread (). getName ()); return arr [ i ] ; }); System . out . println ( Arrays . toString ( arr )); } \u901a\u8fc7\u5bf9Java\u591a\u7ebf\u7a0b\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u5c31\u5177\u5907\u4e86\u5229\u7528\u591a\u7ebf\u7a0b\u89e3\u51b3\u95ee\u9898\u7684\u601d\u7ef4\uff01","title":"\u518d\u8c08\u96c6\u5408\u7c7b\u5e76\u884c\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#java_1","text":"\u8fd9\u662f\u6574\u4e2a\u6559\u7a0b\u6700\u540e\u4e00\u4e2a\u7f16\u7a0b\u5b9e\u6218\u5185\u5bb9\u4e86\uff0c\u4e0b\u4e00\u7ae0\u8282\u4e3a \u53cd\u5c04 \u4e00\u822c\u5f00\u53d1\u8005\u4f7f\u7528\u6bd4\u8f83\u5c11\uff0c\u5c5e\u4e8e\u9009\u5b66\u5185\u5bb9\uff0c\u4e0d\u7f16\u6392\u7f16\u7a0b\u5b9e\u6218\u8bfe\u7a0b\u3002","title":"Java\u591a\u7ebf\u7a0b\u7f16\u7a0b\u5b9e\u6218"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/#_12","text":"\u6240\u8c13\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\uff0c\u662f\u901a\u8fc7\u4e00\u4e2a\u5bb9\u5668\u6765\u89e3\u51b3\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5f3a\u8026\u5408\u95ee\u9898\u3002\u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u751f\u4ea7\u8005\u5728\u4e0d\u65ad\u7684\u751f\u4ea7\uff0c\u6d88\u8d39\u8005\u4e5f\u5728\u4e0d\u65ad\u7684\u6d88\u8d39\uff0c\u53ef\u662f\u6d88\u8d39\u8005\u6d88\u8d39\u7684\u4ea7\u54c1\u662f\u751f\u4ea7\u8005\u751f\u4ea7\u7684\uff0c\u8fd9\u5c31\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u4e2d\u95f4\u5bb9\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5bb9\u5668\u60f3\u8c61\u6210\u662f\u4e00\u4e2a\u8d27\u67b6\uff0c\u5f53\u8d27\u67b6\u7a7a\u7684\u65f6\u5019\uff0c\u751f\u4ea7\u8005\u8981\u751f\u4ea7\u4ea7\u54c1\uff0c\u6b64\u65f6\u6d88\u8d39\u8005\u5728\u7b49\u5f85\u751f\u4ea7\u8005\u5f80\u8d27\u67b6\u4e0a\u751f\u4ea7\u4ea7\u54c1\uff0c\u800c\u5f53\u8d27\u67b6\u6709\u8d27\u7269\u7684\u65f6\u5019\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u4ece\u8d27\u67b6\u4e0a\u62ff\u8d70\u5546\u54c1\uff0c\u751f\u4ea7\u8005\u6b64\u65f6\u7b49\u5f85\u8d27\u67b6\u51fa\u73b0\u7a7a\u4f4d\uff0c\u8fdb\u800c\u8865\u8d27\uff0c\u8fd9\u6837\u4e0d\u65ad\u7684\u5faa\u73af\u3002 \u901a\u8fc7\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u6765\u6a21\u62df\u4e00\u4e2a\u9910\u5385\u76842\u4e2a\u53a8\u5e08\u548c3\u4e2a\u987e\u5ba2\uff0c\u5047\u8bbe\u53a8\u5e08\u7092\u51fa\u4e00\u4e2a\u83dc\u7684\u65f6\u95f4\u4e3a3\u79d2\uff0c\u987e\u5ba2\u5403\u6389\u83dc\u54c1\u7684\u65f6\u95f4\u4e3a4\u79d2\u3002","title":"\u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/","text":"Java\u6cdb\u578b\u4e0e\u96c6\u5408\u7c7b \u5728\u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86\u6700\u91cd\u8981\u7684\u7c7b\u548c\u5bf9\u8c61\uff0c\u4e86\u89e3\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u601d\u60f3\uff0c\u6ce8\u610f\uff0c\u975e\u5e38\u91cd\u8981\uff0c\u9762\u5411\u5bf9\u8c61\u662f\u5fc5\u987b\u8981\u6df1\u5165\u7406\u89e3\u548c\u638c\u63e1\u7684\u5185\u5bb9\uff0c\u4e0d\u80fd\u8349\u8349\u7ed3\u675f\u3002\u5728\u672c\u7ae0\u8282\uff0c\u6211\u4eec\u4f1a\u7ee7\u7eed\u6df1\u5165\u4e86\u89e3\uff0c\u4ece\u6211\u4eec\u7684\u6cdb\u578b\u5f00\u59cb\uff0c\u518d\u5230\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6700\u540e\u518d\u5f00\u59cb\u6211\u4eec\u7684\u96c6\u5408\u7c7b\u5b66\u4e60\u3002 \u8d70\u8fdb\u6cdb\u578b \u4e3a\u4e86\u7edf\u8ba1\u5b66\u751f\u6210\u7ee9\uff0c\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2aScore\u5bf9\u8c61\uff0c\u5305\u62ec\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u53f7\u3001\u8bfe\u7a0b\u6210\u7ee9\uff0c\u4f46\u662f\u6210\u7ee9\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u4ee5 \u4f18\u79c0\u3001\u826f\u597d\u3001\u5408\u683c \u6765\u4f5c\u4e3a\u7ed3\u679c\uff0c\u8fd8\u6709\u4e00\u79cd\u5c31\u662f 60.0\u300175.5\u300192.5 \u8fd9\u6837\u7684\u6570\u5b57\u5206\u6570\uff0c\u90a3\u4e48\u73b0\u5728\u8be5\u5982\u4f55\u53bb\u8bbe\u8ba1\u8fd9\u6837\u7684\u4e00\u4e2aScore\u7c7b\u5462\uff1f\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u6210\u7ee9\u53ef\u80fd\u662f String \u7c7b\u578b\uff0c\u4e5f\u53ef\u80fd\u662f Integer \u7c7b\u578b\uff0c\u5982\u4f55\u624d\u80fd\u5f88\u597d\u7684\u53bb\u5b58\u53ef\u80fd\u51fa\u73b0\u7684\u4e24\u79cd\u7c7b\u578b\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 public class Score { String name ; String id ; Object score ; //\u56e0\u4e3aObject\u662f\u6240\u6709\u7c7b\u578b\u7684\u7236\u7c7b\uff0c\u56e0\u6b64\u65e2\u53ef\u4ee5\u5b58\u653eInteger\u4e5f\u80fd\u5b58\u653eString public Score ( String name , String id , Object score ) { this . name = name ; this . id = id ; this . score = score ; } } \u4ee5\u4e0a\u7684\u65b9\u6cd5\u867d\u7136\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u591a\u79cd\u7c7b\u578b\u5b58\u50a8\u95ee\u9898\uff0c\u4f46\u662fObject\u7c7b\u578b\u5728\u7f16\u8bd1\u9636\u6bb5\u5e76\u4e0d\u5177\u6709\u826f\u597d\u7684\u7c7b\u578b\u5224\u65ad\u80fd\u529b\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u4ee5\u4e0b\u7684\u60c5\u51b5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Score score = new Score ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); //\u662fString\u7c7b\u578b\u7684 //.... Integer number = ( Integer ) score . score ; //\u83b7\u53d6\u6210\u7ee9\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u867d\u7136\u5e76\u4e0d\u662f\u4e00\u5f00\u59cb\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u7f16\u8bd1\u4e0d\u4f1a\u62a5\u9519 } //\u8fd0\u884c\u65f6\u51fa\u73b0\u5f02\u5e38\uff01 Exception in thread \"main\" java . lang . ClassCastException : java . lang . String cannot be cast to java . lang . Integer at com . test . Main . main ( Main . java : 14 ) \u4f7f\u7528Object\u7c7b\u578b\u4f5c\u4e3a\u5f15\u7528\uff0c\u53d6\u503c\u53ea\u80fd\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u663e\u7136\u65e0\u6cd5\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u7c7b\u578b\u662f\u5426\u5b89\u5168\uff0c\u9879\u76ee\u4e2d\u4ee3\u7801\u91cf\u975e\u5e38\u4e4b\u5927\uff0c\u8fdb\u884c\u7c7b\u578b\u6bd4\u8f83\u53c8\u4f1a\u5bfc\u81f4\u989d\u5916\u7684\u5f00\u9500\u548c\u589e\u52a0\u4ee3\u7801\u91cf\uff0c\u5982\u679c\u4e0d\u7ecf\u6bd4\u8f83\u5c31\u5f88\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u4ee3\u7801\u7684\u5065\u58ee\u6027\u6709\u6240\u6b20\u7f3a\uff01\uff08\u6b64\u65b9\u6cd5\u867d\u7136\u53ef\u884c\uff0c\u4f46\u5e76\u4e0d\u662f\u6700\u597d\u7684\u65b9\u6cd5\uff09 \u4e3a\u4e86\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\uff0cJDK1.5\u65b0\u589e\u4e86\u6cdb\u578b\uff0c\u5b83\u80fd\u591f\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u68c0\u67e5\u7c7b\u578b\u5b89\u5168\uff0c\u5927\u5927\u63d0\u5347\u5f00\u53d1\u6548\u7387\u3002 1 2 3 4 5 6 7 8 9 10 11 public class Score < T > { //\u5c06Score\u8f6c\u53d8\u4e3a\u6cdb\u578b\u7c7b<T> String name ; String id ; T score ; //T\u4e3a\u6cdb\u578b\uff0c\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u7c7b\u578b\u81ea\u52a8\u53d8\u6210\u5bf9\u5e94\u7c7b\u578b public Score ( String name , String id , T score ) { //\u63d0\u4f9b\u7684score\u7c7b\u578b\u5373\u4e3aT\u4ee3\u8868\u7684\u7c7b\u578b this . name = name ; this . id = id ; this . score = score ; } } 1 2 3 4 5 6 public static void main ( String [] args ) { //\u76f4\u63a5\u786e\u5b9aScore\u7684\u7c7b\u578b\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6210\u7ee9 Score < String > score = new Score < String > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); Integer i = score . score ; //\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u56e0\u4e3a\u6210\u5458\u53d8\u91cfscore\u7c7b\u578b\u88ab\u5b9a\u4e3aString\uff01 } \u6cdb\u578b\u5c06\u6570\u636e\u7c7b\u578b\u7684\u786e\u5b9a\u63a7\u5236\u5728\u4e86\u7f16\u8bd1\u9636\u6bb5\uff0c\u5728\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\u5c31\u80fd\u660e\u786e\u6cdb\u578b\u7684\u7c7b\u578b\uff01\u5982\u679c\u7c7b\u578b\u4e0d\u7b26\u5408\uff0c\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff01 \u6cdb\u578b\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff08\u5e76\u4e0d\u662fJVM\u6240\u652f\u6301\u7684\u8bed\u6cd5\uff0c\u7f16\u8bd1\u540e\u4f1a\u8f6c\u6210\u7f16\u8bd1\u5668\u652f\u6301\u7684\u8bed\u6cd5\uff0c\u6bd4\u5982\u4e4b\u524d\u7684foreach\u5c31\u662f\uff09\uff0c\u5728\u7f16\u8bd1\u540e\u4f1a\u88ab\u64e6\u9664\uff0c\u53d8\u56de\u4e0a\u9762\u7684Object\u7c7b\u578b\u8c03\u7528\uff0c\u4f46\u662f\u7c7b\u578b\u8f6c\u6362\u7531\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u81ea\u5df1\u8fdb\u884c\u8f6c\u6362\uff08\u5b89\u5168\uff09 1 2 3 4 5 //\u53cd\u7f16\u8bd1\u540e\u7684\u4ee3\u7801 public static void main ( String [] args ) { Score score = new Score ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); String i = ( String ) score . score ; //\u5176\u5b9e\u4f9d\u7136\u4f1a\u53d8\u4e3a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u662f\u8fd9\u662f\u7531\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\u7684 } \u50cf\u8fd9\u6837\u5728\u7f16\u8bd1\u540e\u6cdb\u578b\u7684\u5185\u5bb9\u6d88\u5931\u8f6c\u53d8\u4e3aObject\u7684\u60c5\u51b5\u79f0\u4e3a \u7c7b\u578b\u64e6\u9664 \uff08\u91cd\u8981\uff0c\u9700\u8981\u5b8c\u5168\u7406\u89e3\uff09\uff0c\u6240\u4ee5\u6cdb\u578b\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u7c7b\u578b\u7684\u4e00\u79cd\u8bed\u6cd5\u800c\u5df2\uff0c\u5e76\u4e0d\u662fJVM\u6240\u652f\u6301\u7684\u3002 \u7efc\u4e0a\uff0c\u6cdb\u578b\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u7c7b\u578b\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u7c7b\u578b\u3002 \u6cdb\u578b\u7684\u4f7f\u7528 \u6cdb\u578b\u7c7b \u4e0a\u4e00\u8282\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u6cdb\u578b\u7c7b\u7684\u5b9a\u4e49\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u666e\u901a\u7684\u7c7b\u591a\u4e86\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u5728\u4f7f\u7528\u65f6\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u6cdb\u578b\u7c7b\u578b\u3002\u6cdb\u578b\u7684\u540d\u79f0\u4e00\u822c\u53d6\u5355\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u6bd4\u5982T\u4ee3\u8868Type\uff0c\u4e5f\u5c31\u662f \u7c7b\u578b \u7684\u82f1\u6587\u5355\u8bcd\u9996\u5b57\u6bcd\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6570\u5b57\u548c\u5176\u4ed6\u7684\u5b57\u7b26\u3002 1 2 3 4 5 6 7 8 9 10 11 public class Score < T > { //\u5c06Score\u8f6c\u53d8\u4e3a\u6cdb\u578b\u7c7b<T> String name ; String id ; T score ; //T\u4e3a\u6cdb\u578b\uff0c\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u7c7b\u578b\u81ea\u52a8\u53d8\u6210\u5bf9\u5e94\u7c7b\u578b public Score ( String name , String id , T score ) { //\u63d0\u4f9b\u7684score\u7c7b\u578b\u5373\u4e3aT\u4ee3\u8868\u7684\u7c7b\u578b this . name = name ; this . id = id ; this . score = score ; } } \u5728\u4e00\u4e2a\u666e\u901a\u7c7b\u578b\u4e2d\u5b9a\u4e49\u6cdb\u578b\uff0c\u6cdb\u578bT\u79f0\u4e3a \u53c2\u6570\u5316\u7c7b\u578b \uff0c\u5728\u5b9a\u4e49\u6cdb\u578b\u7c7b\u7684\u5f15\u7528\u65f6\uff0c\u9700\u8981\u660e\u786e\u6307\u51fa\u7c7b\u578b\uff1a 1 Score < String > score = new Score < String > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); \u6b64\u65f6\u7c7b\u4e2d\u7684\u6cdb\u578bT\u5df2\u7ecf\u88ab\u66ff\u6362\u4e3aString\u4e86\uff0c\u5728\u6211\u4eec\u83b7\u53d6\u6b64\u5bf9\u8c61\u7684\u6cdb\u578b\u5c5e\u6027\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u544a\u8bc9\u6211\u4eec\u7c7b\u578b\uff1a 1 Integer i = score . score ; //\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u56e0\u4e3a\u6210\u5458\u53d8\u91cfscore\u660e\u786e\u4e3aString\u7c7b\u578b \u6ce8\u610f\uff0c\u6cdb\u578b\u53ea\u80fd\u7528\u4e8e\u5bf9\u8c61\u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u975e\u9759\u6001\u7684\u6210\u5458\u53d8\u91cf\u624d\u80fd\u4f7f\u7528\uff1a 1 static T score ; //\u9519\u8bef\uff0c\u4e0d\u80fd\u5728\u9759\u6001\u6210\u5458\u4e0a\u5b9a\u4e49 \u7531\u6b64\u53ef\u89c1\uff0c\u6cdb\u578b\u662f\u53ea\u6709\u5728\u521b\u5efa\u5bf9\u8c61\u540e\u7f16\u8bd1\u5668\u624d\u80fd\u660e\u786e\u6cdb\u578b\u7c7b\u578b\uff0c\u800c\u9759\u6001\u7c7b\u578b\u662f\u7c7b\u6240\u5177\u6709\u7684\u5c5e\u6027\uff0c\u4e0d\u8db3\u4ee5\u4f7f\u5f97\u7f16\u8bd1\u5668\u5b8c\u6210\u7c7b\u578b\u63a8\u65ad\u3002 \u6cdb\u578b\u65e0\u6cd5\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u57fa\u672c\u7c7b\u578b\uff0c\u53ea\u80fd\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u8fdb\u884c\u66ff\u6362\uff01 1 Score < double > score = new Score < double > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 90.5 ); //\u7f16\u8bd1\u4e0d\u901a\u8fc7 \u90a3\u4e48\u4e3a\u4ec0\u4e48\u6cdb\u578b\u65e0\u6cd5\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u5462\uff1f\u56de\u60f3\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u7c7b\u578b\u64e6\u9664\uff0c\u5176\u5b9e\u5c31\u5f88\u597d\u7406\u89e3\u4e86\u3002\u7531\u4e8eJVM\u6ca1\u6709\u6cdb\u578b\u6982\u5ff5\uff0c\u56e0\u6b64\u6cdb\u578b\u6700\u540e\u8fd8\u662f\u4f1a\u88ab\u7f16\u8bd1\u5668\u7f16\u8bd1\u4e3aObject\uff0c\u5e76\u91c7\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u5f62\u5f0f\u8fdb\u884c\u7c7b\u578b\u5339\u914d\uff0c\u800c\u6211\u4eec\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u4e4b\u95f4\u65e0\u6cd5\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u6765\u5904\u7406\u3002 \u7c7b\u7684\u6cdb\u578b\u65b9\u6cd5 \u6cdb\u578b\u65b9\u6cd5\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u672a\u77e5\u7684\u7c7b\u578b\u6765\u4f7f\u7528\u5373\u53ef\uff1a 1 2 3 4 5 6 7 public T getScore () { //\u82e5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u6cdb\u578b\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8fdb\u884c\u63a8\u65ad return score ; } public void setScore ( T score ) { //\u82e5\u65b9\u6cd5\u7684\u5f62\u5f0f\u53c2\u6570\u4e3a\u6cdb\u578b\uff0c\u90a3\u4e48\u5b9e\u53c2\u53ea\u80fd\u662f\u5b9a\u4e49\u65f6\u7684\u7c7b\u578b this . score = score ; } 1 2 Score < String > score = new Score < String > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); score . setScore ( 10 ); //\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u56e0\u4e3a\u53ea\u63a5\u53d7String\u7c7b\u578b \u540c\u6837\u5730\uff0c\u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u7c7b\u5b9a\u4e49\u7684\u6cdb\u578b\uff08\u6ce8\u610f\u662f\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\uff0c\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\uff09 \u81ea\u5b9a\u4e49\u6cdb\u578b\u65b9\u6cd5 \u90a3\u4e48\u5982\u679c\u6211\u60f3\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4f7f\u7528\u6cdb\u578b\u5462\uff1f\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u4e4b\u524d\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u6cdb\u578b\uff0c\u56e0\u4e3a\u4e4b\u524d\u6211\u4eec\u7684\u6cdb\u578b\u5b9a\u4e49\u662f\u5728\u7c7b\u4e0a\u7684\uff0c\u53ea\u6709\u660e\u786e\u5177\u4f53\u7684\u7c7b\u578b\u624d\u80fd\u5f00\u59cb\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u5bf9\u8c61\u65f6\u5b8c\u6210\u7c7b\u578b\u786e\u5b9a\uff0c\u4f46\u662f\u9759\u6001\u65b9\u6cd5\u4e0d\u9700\u8981\u4f9d\u9644\u4e8e\u5bf9\u8c61\uff0c\u90a3\u4e48\u53ea\u80fd\u5728\u4f7f\u7528\u65f6\u518d\u6765\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\uff0c\u4f46\u662f\u9700\u8981\u5355\u72ec\u5b9a\u4e49\uff1a 1 2 3 public static < E > void test ( E e ){ //\u5728\u65b9\u6cd5\u5b9a\u4e49\u524d\u58f0\u660e\u6cdb\u578b System . out . println ( e ); } \u540c\u7406\uff0c\u6210\u5458\u65b9\u6cd5\u4e5f\u80fd\u81ea\u884c\u5b9a\u4e49\u6cdb\u578b\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u518d\u8fdb\u884c\u7c7b\u578b\u786e\u5b9a\uff1a 1 2 3 public < E > void test ( E e ){ System . out . println ( e ); } \u5176\u5b9e\uff0c\u65e0\u8bba\u662f\u6cdb\u578b\u7c7b\u8fd8\u662f\u6cdb\u578b\u65b9\u6cd5\uff0c\u518d\u4f7f\u7528\u65f6\u4e00\u5b9a\u8981\u80fd\u591f\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\uff0c\u660e\u786e\u7c7b\u578b\u624d\u884c\u3002 \u6ce8\u610f\u4e00\u5b9a\u8981\u533a\u5206\u7c7b\u5b9a\u4e49\u7684\u6cdb\u578b\u548c\u65b9\u6cd5\u524d\u5b9a\u4e49\u7684\u6cdb\u578b\uff01 \u6cdb\u578b\u5f15\u7528 \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2a\u6cdb\u578b\u7c7b\u7684\u5f15\u7528\u65f6\uff0c\u9700\u8981\u5728\u540e\u9762\u6307\u51fa\u6b64\u7c7b\u578b\uff1a 1 Score < Integer > score ; //\u58f0\u660e\u6cdb\u578b\u4e3aInteger\u7c7b\u578b \u5982\u679c\u4e0d\u5e0c\u671b\u6307\u5b9a\u7c7b\u578b\uff0c\u6216\u662f\u5e0c\u671b\u6b64\u5f15\u7528\u7c7b\u578b\u53ef\u4ee5\u5f15\u7528\u4efb\u610f\u6cdb\u578b\u7684 Score \u7c7b\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 ? \u901a\u914d\u7b26\uff0c\u6765\u8868\u793a\u81ea\u52a8\u5339\u914d\u4efb\u610f\u7684\u53ef\u7528\u7c7b\u578b\uff1a 1 Score <?> score ; //score\u53ef\u4ee5\u5f15\u7528\u4efb\u610f\u7684Score\u7c7b\u578b\u5bf9\u8c61\u4e86\uff01 \u90a3\u4e48\u4f7f\u7528\u901a\u914d\u7b26\u4e4b\u540e\uff0c\u5f97\u5230\u7684\u6cdb\u578b\u6210\u5458\u53d8\u91cf\u4f1a\u662f\u4ec0\u4e48\u7c7b\u578b\u5462\uff1f 1 Object o = score . getScore (); //\u53ea\u80fd\u53d8\u4e3aObject \u56e0\u4e3a\u4f7f\u7528\u4e86\u901a\u914d\u7b26\uff0c\u7f16\u8bd1\u5668\u5c31\u65e0\u6cd5\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u539f\u59cb\u7c7b\u578b\u3002 \u5728\u5b66\u4e60\u4e86\u6cdb\u578b\u7684\u754c\u9650\u540e\uff0c\u6211\u4eec\u8fd8\u4f1a\u7ee7\u7eed\u4e86\u89e3\u901a\u914d\u7b26\u7684\u4f7f\u7528\u3002 \u6cdb\u578b\u7684\u754c\u9650 \u73b0\u5728\u6709\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u73b0\u5728\u6ca1\u6709String\u7c7b\u578b\u7684\u6210\u7ee9\u4e86\uff0c\u4f46\u662f\u6210\u7ee9\u4f9d\u7136\u53ef\u80fd\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u80fd\u662f\u5c0f\u6570\uff0c\u8fd9\u65f6\u6211\u4eec\u4e0d\u5e0c\u671b\u7528\u6237\u5c06\u6cdb\u578b\u6307\u5b9a\u4e3a\u9664\u6570\u5b57\u7c7b\u578b\u5916\u7684\u5176\u4ed6\u7c7b\u578b\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230\u6cdb\u578b\u7684\u4e0a\u754c\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Score < T extends Number > { //\u8bbe\u5b9a\u6cdb\u578b\u4e0a\u754c\uff0c\u5fc5\u987b\u662fNumber\u7684\u5b50\u7c7b private final String name ; private final String id ; private T score ; public Score ( String name , String id , T score ) { this . name = name ; this . id = id ; this . score = score ; } public T getScore () { return score ; } } \u901a\u8fc7 extends \u5173\u952e\u5b57\u8fdb\u884c\u4e0a\u754c\u9650\u5b9a\uff0c\u53ea\u6709\u6307\u5b9a\u7c7b\u578b\u6216\u6307\u5b9a\u7c7b\u578b\u7684\u5b50\u7c7b\u624d\u80fd\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\u3002 \u540c\u6837\u7684\uff0c\u6cdb\u578b\u901a\u914d\u7b26\u4e5f\u652f\u6301\u6cdb\u578b\u7684\u754c\u9650\uff1a 1 Score <? extends Number > score ; //\u9650\u5b9a\u4e3a\u5339\u914dNumber\u53ca\u5176\u5b50\u7c7b\u7684\u7c7b\u578b \u540c\u7406\uff0c\u65e2\u7136\u6cdb\u578b\u6709\u4e0a\u9650\uff0c\u90a3\u4e48\u4e5f\u6709\u4e0b\u9650\uff1a 1 Score <? super Integer > score ; //\u9650\u5b9a\u4e3a\u5339\u914dInteger\u53ca\u5176\u7236\u7c7b \u901a\u8fc7 super \u5173\u952e\u5b57\u8fdb\u884c\u4e0b\u754c\u9650\u5b9a\uff0c\u53ea\u6709\u6307\u5b9a\u7c7b\u578b\u6216\u6307\u5b9a\u7c7b\u578b\u7684\u7236\u7c7b\u624d\u80fd\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\u3002 \u56fe\u89e3\u5982\u4e0b\uff1a \u90a3\u4e48\u9650\u5b9a\u4e86\u4e0a\u754c\u540e\uff0c\u6211\u4eec\u518d\u6765\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6cdb\u578b\u6210\u5458\uff0c\u4f1a\u53d8\u6210\u4ec0\u4e48\u7c7b\u578b\u5462\uff1f 1 2 Score <? extends Number > score = new Score <> ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 10 ); Number o = score . getScore (); //\u5f97\u5230\u7684\u7ed3\u679c\u4e3a\u4e0a\u754c\u7c7b\u578b \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u6211\u4eec\u6307\u5b9a\u4e86\u4e0a\u754c\u540e\uff0c\u7f16\u8bd1\u5668\u5c31\u5c06\u8303\u56f4\u4ece\u539f\u59cb\u7c7b\u578b Object \u63d0\u5347\u5230\u6211\u4eec\u6307\u5b9a\u7684\u4e0a\u754c Number \uff0c\u4f46\u662f\u4f9d\u7136\u65e0\u6cd5\u660e\u786e\u5177\u4f53\u7c7b\u578b\u3002\u601d\u8003\uff1a\u90a3\u5982\u679c\u5b9a\u4e49\u4e0b\u9650\u5462\uff1f \u90a3\u4e48\u65e2\u7136\u6211\u4eec\u53ef\u4ee5\u7ed9\u6cdb\u578b\u7c7b\u9650\u5b9a\u4e0a\u754c\uff0c\u73b0\u5728\u6211\u4eec\u6765\u770b\u7f16\u8bd1\u540e\u7ed3\u679c\u5462\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 //\u4f7f\u7528javap -l \u8fdb\u884c\u53cd\u7f16\u8bd1 public class com . test . Score < T extends java . lang . Number > { public com . test . Score ( java . lang . String , java . lang . String , T ); LineNumberTable : line 8 : 0 line 9 : 4 line 10 : 9 line 11 : 14 line 12 : 19 LocalVariableTable : Start Length Slot Name Signature 0 20 0 this Lcom / test / Score ; 0 20 1 name Ljava / lang / String ; 0 20 2 id Ljava / lang / String ; 0 20 3 score Ljava / lang / Number ; //\u53ef\u4ee5\u770b\u5230score\u7684\u7c7b\u578b\u76f4\u63a5\u88ab\u7f16\u8bd1\u4e3aNumber\u7c7b public T getScore (); LineNumberTable : line 15 : 0 LocalVariableTable : Start Length Slot Name Signature 0 5 0 this Lcom / test / Score ; } \u56e0\u6b64\uff0c\u4e00\u65e6\u786e\u7acb\u4e0a\u9650\u540e\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u7c7b\u578b\u63d0\u5347\u5230\u4e0a\u9650\u7c7b\u578b\u3002 \u94bb\u77f3\u8fd0\u7b97\u7b26 \u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u521b\u5efa\u6cdb\u578b\u5bf9\u8c61\u90fd\u9700\u8981\u5728\u524d\u540e\u90fd\u6807\u660e\u7c7b\u578b\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u540e\u9762\u7684\u7c7b\u578b\u58f0\u660e\u662f\u53ef\u4ee5\u53bb\u6389\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u4f20\u5165\u53c2\u6570\u65f6\u6216\u5b9a\u4e49\u6cdb\u578b\u7c7b\u7684\u5f15\u7528\u65f6\uff0c\u5c31\u5df2\u7ecf\u660e\u786e\u4e86\u7c7b\u578b\uff0c\u56e0\u6b64JDK1.7\u63d0\u4f9b\u4e86\u94bb\u77f3\u8fd0\u7b97\u7b26\u6765\u7b80\u5316\u4ee3\u7801\uff1a 1 2 3 Score < Integer > score = new Score < Integer > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 10 ); //1.7\u4e4b\u524d Score < Integer > score = new Score <> ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 10 ); //1.7\u4e4b\u540e \u6cdb\u578b\u4e0e\u591a\u6001 \u6cdb\u578b\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u53ef\u4ee5\u5b9a\u4e49\u5728\u7c7b\u4e0a\uff0c\u540c\u65f6\u4e5f\u80fd\u5b9a\u4e49\u5728\u63a5\u53e3\u4e0a\uff1a 1 2 3 4 public interface ScoreInterface < T > { T getScore (); void setScore ( T t ); } \u5f53\u5b9e\u73b0\u6b64\u63a5\u53e3\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5728\u5b9e\u73b0\u7c7b\u660e\u786e\u6cdb\u578b\u7c7b\u578b\u6216\u662f\u7ee7\u7eed\u4f7f\u7528\u6b64\u6cdb\u578b\uff0c\u8ba9\u5177\u4f53\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u786e\u5b9a\u7c7b\u578b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Score < T > implements ScoreInterface < T > { //\u5c06Score\u8f6c\u53d8\u4e3a\u6cdb\u578b\u7c7b<T> private final String name ; private final String id ; private T score ; public Score ( String name , String id , T score ) { this . name = name ; this . id = id ; this . score = score ; } public T getScore () { return score ; } @Override public void setScore ( T score ) { this . score = score ; } } 1 2 3 4 5 6 7 8 9 10 11 12 public class StringScore implements ScoreInterface < String > { //\u5728\u5b9e\u73b0\u65f6\u660e\u786e\u7c7b\u578b @Override public String getScore () { return null ; } @Override public void setScore ( String s ) { } } \u62bd\u8c61\u7c7b\u540c\u7406\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u6f14\u793a\u4e86\u3002 \u591a\u6001\u7c7b\u578b\u64e6\u9664 \u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u65e2\u7136\u7ee7\u627f\u540e\u660e\u786e\u4e86\u6cdb\u578b\u7c7b\u578b\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48 @Override \u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\u5462\uff0c\u91cd\u5199\u7684\u6761\u4ef6\u662f\u9700\u8981\u548c\u7236\u7c7b\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u5f62\u5f0f\u53c2\u6570\u4e00\u81f4\uff0c\u800c\u6cdb\u578b\u9ed8\u8ba4\u7684\u539f\u59cb\u7c7b\u578b\u662fObject\u7c7b\u578b\uff0c\u5b50\u7c7b\u660e\u786e\u540e\u53d8\u4e3aNumber\u7c7b\u578b\uff0c\u8fd9\u663e\u7136\u4e0d\u6ee1\u8db3\u91cd\u5199\u7684\u6761\u4ef6\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u4f9d\u7136\u80fd\u7f16\u8bd1\u901a\u8fc7\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class A < T > { private T t ; public T get (){ return t ; } public void set ( T t ){ this . t = t ; } } class B extends A < Number > { private Number n ; @Override public Number get (){ //\u8fd9\u5e76\u4e0d\u6ee1\u8db3\u91cd\u5199\u7684\u8981\u6c42\uff0c\u56e0\u4e3a\u53ea\u80fd\u91cd\u5199\u7236\u7c7b\u540c\u6837\u8fd4\u56de\u503c\u548c\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u5374\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff01 return t ; } @Override public void set ( Number t ){ this . t = t ; } } \u901a\u8fc7\u53cd\u7f16\u8bd1\u8fdb\u884c\u89c2\u5bdf\uff0c\u5b9e\u9645\u4e0a\u662f\u7f16\u8bd1\u5668\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u4e24\u4e2a\u6865\u63a5\u65b9\u6cd5\u7528\u4e8e\u652f\u6301\u91cd\u5199\uff1a 1 2 3 4 5 6 7 8 9 @Override public Object get (){ return this . get (); //\u8c03\u7528\u8fd4\u56deNumber\u7684\u90a3\u4e2a\u65b9\u6cd5 } @Override public void set ( Object t ){ this . set (( Number ) t ); //\u8c03\u7528\u53c2\u6570\u662fNumber\u7684\u90a3\u4e2a\u65b9\u6cd5 } \u6570\u636e\u7ed3\u6784\u57fa\u7840 \u8b66\u544a\uff01\u672c\u7ae0\u6700\u96be\u7684\u90e8\u5206\uff01 \u5b66\u4e60\u96c6\u5408\u7c7b\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u6709\u6700\u5173\u952e\u7684\u5185\u5bb9\u9700\u8981\u5b66\u4e60\uff0c\u540c\u7b2c\u4e00\u7ae0\u4e00\u6837\uff0c\u81ea\u5e95\u5411\u4e0a\u624d\u662f\u6700\u4f73\u7684\u5b66\u4e60\u65b9\u5411\uff0c\u6bd4\u8d77\u76f4\u63a5\u5e26\u5927\u5bb6\u8ba4\u8bc6\u96c6\u5408\u7c7b\uff0c\u4e0d\u5982\u5148\u4e86\u89e3\u4e00\u4e0b\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u6709\u4e86\u89e3\u4e86\u6570\u636e\u7ed3\u6784\u57fa\u7840\uff0c\u624d\u80fd\u66f4\u597d\u5730\u5b66\u4e60\u96c6\u5408\u7c7b\uff0c\u540c\u65f6\uff0c\u6570\u636e\u7ed3\u6784\u4e5f\u662f\u4f60\u4ee5\u540e\u6df1\u5165\u5b66\u4e60JDK\u6e90\u7801\u7684\u5fc5\u5907\u6761\u4ef6\uff01\uff08\u5b66\u4e60\u4e0d\u8981\u5feb\u9910\u5f0f\uff01\uff09\u5f53\u7136\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u8bb2\u89e3Java\uff0c\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u94fa\u57ab\u4f5c\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u4f1a\u8bb2\u89e3\u5173\u952e\u7684\u90e8\u5206\uff0c\u5176\u4ed6\u90e8\u5206\u53ef\u4ee5\u4e0b\u53bb\u81ea\u884c\u4e86\u89e3\u3002 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u6570\u636e\u7ed3\u6784\u662f\u4e00\u79cd\u6570\u636e\u7ec4\u7ec7\u3001\u7ba1\u7406\u548c\u5b58\u50a8\u7684\u683c\u5f0f,\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u5bf9\u6570\u636e\u9ad8\u6548\u7684\u8bbf\u95ee\u548c\u4fee\u6539\u3002\u66f4\u51c6\u786e\u5730\u8bf4,\u6570\u636e\u7ed3\u6784\u662f\u6570\u636e\u503c\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u4f53\u73b0\u6570\u636e\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u5e94\u7528\u7684\u51fd\u6570\u6216\u64cd\u4f5c\u3002 \u901a\u4fd7\u5730\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u53bb\u5b66\u4e60\u5728\u8ba1\u7b97\u673a\u4e2d\u5982\u4f55\u53bb\u66f4\u597d\u5730\u7ba1\u7406\u6211\u4eec\u7684\u6570\u636e\uff0c\u624d\u80fd\u8ba9\u6211\u4eec\u5bf9\u6211\u4eec\u7684\u6570\u636e\u63a7\u5236\u66f4\u52a0\u7075\u6d3b\uff01 \u7ebf\u6027\u8868 \u7ebf\u6027\u8868\u662f\u6700\u57fa\u672c\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u662f\u8868\u793a\u4e00\u7ec4\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u6709\u9650\u5e8f\u5217\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u4e0e\u6570\u7ec4\u8fdb\u884c\u53c2\u8003\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u662f\u6570\u7ec4\uff0c\u7ebf\u6027\u8868\u662f\u4e00\u79cd\u8868\u7ed3\u6784\uff0c\u5b83\u80fd\u591f\u652f\u6301\u6570\u636e\u7684\u63d2\u5165\u3001\u5220\u9664\u3001\u66f4\u65b0\u3001\u67e5\u8be2\u7b49\uff0c\u540c\u65f6\u6570\u7ec4\u53ef\u4ee5\u968f\u610f\u5b58\u653e\u5728\u6570\u7ec4\u4e2d\u4efb\u610f\u4f4d\u7f6e\uff0c\u800c\u7ebf\u6027\u8868\u53ea\u80fd\u4f9d\u6b21\u6709\u5e8f\u6392\u5217\uff0c\u4e0d\u80fd\u51fa\u73b0\u7a7a\u9699\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u8bbe\u8ba1\u3002 \u987a\u5e8f\u8868 \u5c06\u6570\u636e\u4f9d\u6b21\u5b58\u50a8\u5728\u8fde\u7eed\u7684\u6574\u5757\u7269\u7406\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\u79f0\u4e3a \u987a\u5e8f\u5b58\u50a8\u7ed3\u6784 \uff0c\u800c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u7684\u7ebf\u6027\u8868\uff0c\u6211\u4eec\u79f0\u4e3a \u987a\u5e8f\u8868 \u3002 \u540c\u6837\u7684\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e2a\u4f53\u90fd\u88ab\u79f0\u4e3a \u5143\u7d20 \uff0c\u5143\u7d20\u5de6\u8fb9\u7684\u5143\u7d20\uff08\u4e0a\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u79f0\u4e3a \u524d\u9a71 \uff0c\u540c\u7406\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\uff08\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u79f0\u4e3a \u540e\u9a71 \u3002 \u6211\u4eec\u8bbe\u8ba1\u7ebf\u6027\u8868\u7684\u76ee\u6807\u5c31\u662f\u4e3a\u4e86\u53bb\u66f4\u597d\u5730\u7ba1\u7406\u6211\u4eec\u7684\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u6570\u7ec4\uff0c\u6765\u8fdb\u884c\u5c01\u88c5\uff0c\u5b9e\u73b0\u589e\u5220\u6539\u67e5\uff01\u65e2\u7136\u8981\u5b58\u50a8\u4e00\u7ec4\u6570\u636e\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u5c31\u80fd\u591f\u5bb9\u7eb3\u4e00\u7ec4\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002 \u76ee\u6807\uff1a\u4ee5\u6570\u7ec4\u4e3a\u5e95\u5c42\uff0c\u7f16\u5199\u4ee5\u4e0b\u62bd\u8c61\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /** * \u7ebf\u6027\u8868\u62bd\u8c61\u7c7b * @param <E> \u5b58\u50a8\u7684\u5143\u7d20(Element)\u7c7b\u578b */ public abstract class AbstractList < E > { /** * \u83b7\u53d6\u8868\u7684\u957f\u5ea6 * @return \u987a\u5e8f\u8868\u7684\u957f\u5ea6 */ public abstract int size (); /** * \u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 * @param e \u5143\u7d20 * @param index \u8981\u6dfb\u52a0\u7684\u4f4d\u7f6e(\u7d22\u5f15) */ public abstract void add ( E e , int index ); /** * \u79fb\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20 * @param index \u4f4d\u7f6e * @return \u79fb\u9664\u7684\u5143\u7d20 */ public abstract E remove ( int index ); /** * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20 * @param index \u4f4d\u7f6e * @return \u5143\u7d20 */ public abstract E get ( int index ); } \u94fe\u8868 \u6570\u636e\u5206\u6563\u7684\u5b58\u50a8\u5728\u7269\u7406\u7a7a\u95f4\u4e2d\uff0c\u901a\u8fc7\u4e00\u6839\u7ebf\u4fdd\u5b58\u7740\u5b83\u4eec\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\u79f0\u4e3a \u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 \u5b9e\u9645\u4e0a\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5b58\u653e\u4e00\u4e2a\u5143\u7d20\u548c\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u5f15\u7528\uff08C\u8bed\u8a00\u91cc\u9762\u662f\u6307\u9488\uff0cJava\u4e2d\u5c31\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee3\u8868\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u5bf9\u8c61\uff09 \u5229\u7528\u8fd9\u79cd\u601d\u60f3\uff0c\u6211\u4eec\u518d\u6765\u5c1d\u8bd5\u5b9e\u73b0\u4e0a\u9762\u7684\u62bd\u8c61\u7c7b\uff0c\u4ece\u5b9e\u9645\u7684\u4ee3\u7801\u4e2d\u611f\u53d7\uff01 \u6bd4\u8f83\uff1a\u987a\u5e8f\u8868\u548c\u94fe\u8868\u7684\u4f18\u5f02\uff1f \u987a\u5e8f\u8868\u4f18\u7f3a\u70b9\uff1a \u8bbf\u95ee\u901f\u5ea6\u5feb\uff0c\u968f\u673a\u8bbf\u95ee\u6027\u80fd\u9ad8 \u63d2\u5165\u548c\u5220\u9664\u7684\u6548\u7387\u4f4e\u4e0b\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\u9700\u8981\u53d8\u66f4\u6574\u4e2a\u8868 \u4e0d\u6613\u6269\u5145\uff0c\u9700\u8981\u590d\u5236\u5e76\u91cd\u65b0\u521b\u5efa\u6570\u7ec4 \u94fe\u8868\u4f18\u7f3a\u70b9\uff1a \u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u9ad8\uff0c\u53ea\u9700\u8981\u6539\u53d8\u8fde\u63a5\u70b9\u7684\u6307\u5411\u5373\u53ef \u52a8\u6001\u6269\u5145\u5bb9\u91cf\uff0c\u65e0\u9700\u62c5\u5fc3\u5bb9\u91cf\u95ee\u9898 \u8bbf\u95ee\u5143\u7d20\u9700\u8981\u4f9d\u6b21\u5bfb\u627e\uff0c\u968f\u673a\u8bbf\u95ee\u5143\u7d20\u6548\u7387\u4f4e\u4e0b \u94fe\u8868\u53ea\u80fd\u6307\u5411\u540e\u9762\uff0c\u80fd\u4e0d\u80fd\u6307\u5411\u524d\u9762\u5462\uff1f\u53cc\u5411\u94fe\u8868\uff01 \u6808\u548c\u961f\u5217\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u7ebf\u6027\u8868\u52a0\u4ee5\u7ea6\u675f\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982\u679c\u524d\u9762\u7684\u7ebf\u6027\u8868\u7684\u638c\u63e1\u5df2\u7ecfok\uff0c\u90a3\u4e48\u6808\u548c\u961f\u5217\u5c31\u975e\u5e38\u8f7b\u677e\u4e86\uff01 \u6808 \u6808\u9075\u5faa\u5148\u5165\u540e\u51fa\u539f\u5219\uff0c\u53ea\u80fd\u5728\u7ebf\u6027\u8868\u7684\u4e00\u7aef\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6808\u770b\u505a\u4e00\u4e2a\u676f\u5b50\uff0c\u676f\u5b50\u53ea\u6709\u4e00\u4e2a\u53e3\u8fdb\u51fa\uff0c\u6700\u4f4e\u5904\u7684\u5143\u7d20\u53ea\u80fd\u7b49\u5230\u4e0a\u9762\u7684\u5143\u7d20\u79bb\u5f00\u676f\u5b50\u540e\uff0c\u624d\u80fd\u79bb\u5f00\u3002 \u5411\u6808\u4e2d\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u79f0\u4e3a \u5165\u6808\uff08\u538b\u6808\uff09 \uff0c\u79fb\u9664\u6808\u9876\u5143\u7d20\u79f0\u4e3a \u51fa\u6808 \uff0c\u6211\u4eec\u9700\u8981\u5c1d\u8bd5\u5b9e\u73b0\u4ee5\u4e0b\u62bd\u8c61\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * \u62bd\u8c61\u7c7b\u578b\u6808\uff0c\u5f85\u5b9e\u73b0 * @param <E> \u5143\u7d20\u7c7b\u578b */ public abstract class AbstractStack < E > { /** * \u51fa\u6808\u64cd\u4f5c * @return \u6808\u9876\u5143\u7d20 */ public abstract E pop (); /** * \u5165\u6808\u64cd\u4f5c * @param e \u5143\u7d20 */ public abstract void push ( E e ); } \u5176\u5b9e\uff0c\u6211\u4eec\u7684JVM\u5728\u5904\u7406\u65b9\u6cd5\u8c03\u7528\u65f6\uff0c\u4e5f\u662f\u4e00\u4e2a\u6808\u64cd\u4f5c\uff1a \u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u73a9\u4e0d\u597d\u9012\u5f52\uff0c\u5c31\u4f1a\u50cf\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Main { public static void main ( String [] args ) { go (); } private static void go (){ go (); } } Exception in thread \"main\" java . lang . StackOverflowError at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) ... \u6808\u7684\u6df1\u5ea6\u662f\u6709\u9650\u5236\u7684\uff0c\u5982\u679c\u8fbe\u5230\u9650\u5236\uff0c\u5c06\u4f1a\u51fa\u73b0 StackOverflowError \u9519\u8bef\uff08\u6ce8\u610f\u662f\u9519\u8bef\uff01\u8bf4\u660e\u662fJVM\u51fa\u73b0\u4e86\u95ee\u9898\uff09 \u961f\u5217 \u961f\u5217\u540c\u6837\u4e5f\u662f\u53d7\u9650\u5236\u7684\u7ebf\u6027\u8868\uff0c\u4e0d\u8fc7\u961f\u5217\u5c31\u50cf\u6211\u4eec\u6392\u961f\u4e00\u6837\uff0c\u53ea\u80fd\u4ece\u961f\u5c3e\u5f00\u59cb\u6392\uff0c\u4ece\u961f\u9996\u51fa\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u5b9e\u73b0\u4ee5\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * * @param <E> */ public abstract class AbstractQueue < E > { /** * \u8fdb\u961f\u64cd\u4f5c * @param e \u5143\u7d20 */ public abstract void offer ( E e ); /** * \u51fa\u961f\u64cd\u4f5c * @return \u5143\u7d20 */ public abstract E poll (); } \u4e8c\u53c9\u6811 \u672c\u7248\u5757\u4e3b\u8981\u5b66\u4e60\u7684\u662f\u4e8c\u53c9\u6811\uff0c\u6811\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u7684\u590d\u6742\u3002 \u6811 \u6211\u4eec\u524d\u9762\u5df2\u7ecf\u5b66\u4e60\u8fc7\u94fe\u8868\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u94fe\u8868\u662f\u5355\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u76f8\u8fde\uff0c\u4e5f\u5c31\u662f\u4e00\u79cd\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u800c\u6811\u5219\u662f\u4e00\u4e2a\u7ed3\u70b9\u8fde\u63a5\u591a\u4e2a\u7ed3\u70b9\uff0c\u4e5f\u5c31\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002 \u4e00\u4e2a\u7ed3\u70b9\u53ef\u4ee5\u6709N\u4e2a\u5b50\u7ed3\u70b9\uff0c\u5c31\u50cf\u4e0a\u56fe\u4e00\u6837\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u68f5\u6811\u3002\u800c\u4f4d\u4e8e\u6700\u9876\u7aef\u7684\u7ed3\u70b9\uff08\u6ca1\u6709\u7236\u7ed3\u70b9\uff09\u6211\u4eec\u79f0\u4e3a \u6839\u7ed3\u70b9 \uff0c\u800c\u7ed3\u70b9\u62e5\u6709\u7684\u5b50\u8282\u70b9\u6570\u91cf\u79f0\u4e3a \u5ea6 \uff0c\u6bcf\u5411\u4e0b\u4e00\u7ea7\u79f0\u4e3a\u4e00\u4e2a \u5c42\u6b21 \uff0c\u6811\u4e2d\u51fa\u73b0\u7684\u6700\u5927\u5c42\u6b21\u79f0\u4e3a\u6811\u7684 \u6df1\u5ea6(\u9ad8\u5ea6) \u3002 \u4e8c\u53c9\u6811 \u4e8c\u53c9\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6700\u591a\u6709\u4e24\u9897\u5b50\u6811\uff0c\u6240\u4ee5\u4e8c\u53c9\u6811\u4e2d\u4e0d\u5b58\u5728\u5ea6\u5927\u4e8e2\u7684\u7ed3\u70b9\uff0c\u4f4d\u4e8e\u4e24\u8fb9\u7684\u5b50\u7ed3\u70b9\u79f0\u4e3a\u5de6\u53f3\u5b50\u6811\uff08\u6ce8\u610f\uff0c\u5de6\u53f3\u5b50\u6811\u662f\u660e\u786e\u533a\u5206\u7684\uff0c\u662f\u5de6\u5c31\u662f\u5de6\uff0c\u662f\u53f3\u5c31\u662f\u53f3\uff09 \u6570\u5b66\u6027\u8d28\uff1a \u5728\u4e8c\u53c9\u6811\u7684\u7b2ci\u5c42\u4e0a\u6700\u591a\u67092^(i-1) \u4e2a\u8282\u70b9\u3002 \u4e8c\u53c9\u6811\u4e2d\u5982\u679c\u6df1\u5ea6\u4e3ak\uff0c\u90a3\u4e48\u6700\u591a\u67092^k-1\u4e2a\u8282\u70b9\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u4e8c\u53c9\u6811\u7ed3\u70b9\u7c7b\uff1a 1 2 3 4 5 public class TreeNode < E > { public E e ; //\u5f53\u524d\u7ed3\u70b9\u6570\u636e public TreeNode < E > left ; //\u5de6\u5b50\u6811 public TreeNode < E > right ; //\u53f3\u5b50\u6811 } \u4e8c\u53c9\u6811\u7684\u904d\u5386 \u987a\u5e8f\u8868\u7684\u904d\u5386\u5176\u5b9e\u5c31\u662f\u4f9d\u6b21\u6709\u5e8f\u53bb\u8bbf\u95ee\u8868\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u50cf\u4e8c\u53c9\u6811\u8fd9\u6837\u7684\u590d\u6742\u7ed3\u6784\uff0c\u6211\u4eec\u6709\u56db\u79cd\u904d\u5386\u65b9\u5f0f\uff0c\u4ed6\u4eec\u662f\uff1a\u524d\u5e8f\u904d\u5386\u3001\u4e2d\u5e8f\u904d\u5386\u3001\u540e\u5e8f\u904d\u5386\u4ee5\u53ca\u5c42\u5e8f\u904d\u5386\uff0c\u672c\u7248\u5757\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u524d\u4e09\u79cd\u904d\u5386\u65b9\u5f0f\uff1a \u524d\u5e8f\u904d\u5386 \uff1a\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u51fa\u53d1\uff0c\u5230\u8fbe\u7ed3\u70b9\u65f6\u5c31\u76f4\u63a5\u8f93\u51fa\u7ed3\u70b9\u6570\u636e\uff0c\u6309\u7167\u5148\u5411\u5de6\u5728\u5411\u53f3\u7684\u65b9\u5411\u8bbf\u95ee\u3002ABCDEF \u4e2d\u5e8f\u904d\u5386 \uff1a\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u51fa\u53d1\uff0c\u4f18\u5148\u8f93\u51fa\u5de6\u5b50\u6811\u7684\u8282\u70b9\u7684\u6570\u636e\uff0c\u518d\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u672c\u8eab\uff0c\u6700\u540e\u624d\u662f\u53f3\u5b50\u6811\u3002CBDAEF \u540e\u5e8f\u904d\u5386 \uff1a\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u51fa\u53d1\uff0c\u4f18\u5148\u904d\u5386\u5176\u5de6\u5b50\u6811\uff0c\u518d\u904d\u5386\u53f3\u5b50\u6811\uff0c\u6700\u540e\u5728\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u672c\u8eab\u3002CDBFEA \u6ee1\u4e8c\u53c9\u6811\u548c\u5b8c\u5168\u4e8c\u53c9\u6811 \u6ee1\u4e8c\u53c9\u6811\u548c\u5b8c\u5168\u4e8c\u53c9\u6811\u5176\u5b9e\u5c31\u662f\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u4e8c\u53c9\u6811\uff0c\u6ee1\u4e8c\u53c9\u6811\u5de6\u53f3\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b8c\u5168\u628a\u6bcf\u4e00\u4e2a\u5c42\u7ea7\u90fd\u7ed9\u52a0\u6ee1\u4e86\u7ed3\u70b9\u3002\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u5b83\u7684\u6700\u4e0b\u5c42\u53f6\u5b50\u8282\u70b9\u53ef\u4ee5\u4e0d\u6ee1\uff0c\u4f46\u662f\u6700\u4e0b\u5c42\u7684\u53f6\u5b50\u8282\u70b9\u5fc5\u987b\u9760\u5de6\u6392\u5e03\u3002 \u5176\u5b9e\u6ee1\u4e8c\u53c9\u6811\u548c\u5b8c\u5168\u4e8c\u53c9\u6811\u5c31\u662f\u6709\u4e00\u5b9a\u89c4\u5f8b\u7684\u4e8c\u53c9\u6811\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u5feb\u901f\u67e5\u627e \u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u597d\u5730\u5e2e\u6211\u4eec\u7ba1\u7406\u4e86\u6570\u636e\uff0c\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u67e5\u627e\u67d0\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u66f4\u52a0\u9ad8\u6548\u7684\u53bb\u5b8c\u6210\u5462\uff1f \u54c8\u5e0c\u8868 \u901a\u8fc7\u524d\u9762\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u987a\u5e8f\u8868\u867d\u7136\u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u4f46\u662f\u63d2\u5165\u5220\u9664\u6709\u4e25\u91cd\u8868\u66f4\u65b0\u7684\u95ee\u9898\uff0c\u800c\u94fe\u8868\u867d\u7136\u5f25\u8865\u4e86\u66f4\u65b0\u95ee\u9898\uff0c\u4f46\u662f\u67e5\u8be2\u6548\u7387\u5b9e\u5728\u662f\u592a\u4f4e\u4e86\uff0c\u80fd\u5426\u6709\u4e00\u79cd\u6298\u4e2d\u65b9\u6848\uff1f\u54c8\u5e0c\u8868\uff01 \u4e0d\u77e5\u5927\u5bb6\u5728\u4e4b\u524d\u7684\u5b66\u4e60\u4e2d\u662f\u5426\u53d1\u73b0\uff0c\u6211\u4eec\u7684Object\u7c7b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a hashcode() \u7684\u65b9\u6cd5\uff1f\u800c\u8fd9\u4e2a\u65b9\u6cd5\u5462\uff0c\u5c31\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u652f\u6301\u54c8\u5e0c\u8868\u7684\u5b9e\u73b0\u3002 hashcode() \u9ed8\u8ba4\u5f97\u5230\u7684\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u7684hashCode\u90fd\u4e0d\u4e00\u6837\u3002 \u54c8\u5e0c\u8868\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u5b58\u653e\u94fe\u8868\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u662f\u5982\u4f55\u53bb\u5b58\u50a8\u6570\u636e\u7684\u5462\uff1f\u6211\u4eec\u5148\u6765\u770b\u770b\u957f\u5565\u6837\uff1a \u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5934\u7ed3\u70b9\uff0c\u7528\u4e8e\u4fdd\u5b58\u6570\u636e\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u6570\u636e\u5e94\u8be5\u653e\u5728\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u5462\uff1f\u901a\u8fc7hash\u7b97\u6cd5\uff0c\u6211\u4eec\u80fd\u591f\u77ac\u95f4\u5f97\u5230\u5143\u7d20\u5e94\u8be5\u653e\u7f6e\u7684\u4f4d\u7f6e\u3002 1 2 3 4 //\u5047\u8bbehash\u8868\u957f\u5ea6\u4e3a16\uff0chash\u7b97\u6cd5\u4e3a\uff1a private int hash ( int hashcode ){ return hashcode % 16 ; } \u8bbe\u60f3\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u8ba1\u7b97\u51fa\u6765\u7684hash\u503c\u548c\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u76f8\u540c\u4e86\u5462\uff1f\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u79f0\u4e3a hash\u78b0\u649e \uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u5c06\u6bcf\u4e00\u4e2a\u8868\u5143\u7d20\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u7684\u539f\u56e0\uff0c\u4e00\u65e6\u53d1\u73b0\u91cd\u590d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u540e\u7ee7\u7eed\u6dfb\u52a0\u8282\u70b9\u3002 \u5f53\u7136\uff0c\u4ee5\u4e0a\u7684hash\u8868\u7ed3\u6784\u53ea\u662f\u4e00\u79cd\u8bbe\u8ba1\u65b9\u6848\uff0c\u5728\u9762\u5bf9\u5927\u989d\u6570\u636e\u65f6\uff0c\u662f\u4e0d\u591f\u7528\u7684\uff0c\u5728JDK1.8\u4e2d\uff0c\u96c6\u5408\u7c7b\u4f7f\u7528\u7684\u662f\u6570\u7ec4+\u4e8c\u53c9\u6811\u7684\u5f62\u5f0f\u89e3\u51b3\u7684\uff08\u8fd9\u91cc\u7684\u4e8c\u53c9\u6811\u662f\u7ecf\u8fc7\u52a0\u5f3a\u7684\u4e8c\u53c9\u6811\uff0c\u4e0d\u662f\u524d\u9762\u8bb2\u5f97\u7b80\u5355\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u4e0b\u4e00\u8282\u5c31\u4f1a\u5f00\u59cb\u8bb2\uff09 \u4e8c\u53c9\u6392\u5e8f\u6811 \u6211\u4eec\u524d\u9762\u5b66\u4e60\u7684\u4e8c\u53c9\u6811\u6548\u7387\u662f\u4e0d\u591f\u7684\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u79cd\u6548\u7387\u66f4\u9ad8\u7684\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\uff0c\u57fa\u4e8e\u4e8c\u53c9\u6811\u7684\u6539\u8fdb\uff0c\u63d0\u51fa\u4e86\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u53ef\u4ee5\u770b\u5230\u7ed3\u6784\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a \u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u4e00\u5b9a\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff0c\u4e00\u5b9a\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a \u4e8c\u53c9\u6392\u5e8f\u6811 \u3002\u5229\u7528\u4e8c\u5206\u641c\u7d22\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u67e5\u627e\u67d0\u4e2a\u8282\u70b9\uff01 \u5e73\u8861\u4e8c\u53c9\u6811 \u5728\u4e86\u89e3\u4e86\u4e8c\u53c9\u67e5\u627e\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6839\u8282\u70b9\u4e3a10\uff0c\u73b0\u5728\u52a0\u5165\u5230\u7ed3\u70b9\u7684\u503c\u4ece9\u5f00\u59cb\uff0c\u4f9d\u6b21\u51cf\u5c0f\u52301\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8868\u5c31\u4f1a\u5f88\u5947\u602a\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a \u663e\u7136\uff0c\u5f53\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u6392\u5217\u5230\u4e00\u8fb9\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u67e5\u627e\u6548\u7387\u4f1a\u76f4\u63a5\u9000\u5316\u4e3a\u6700\u539f\u59cb\u7684\u4e8c\u53c9\u6811\uff01\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ef4\u6301\u4e8c\u53c9\u6811\u7684\u5e73\u8861\uff0c\u624d\u80fd\u7ef4\u6301\u539f\u6709\u7684\u67e5\u627e\u6548\u7387\u3002 \u73b0\u5728\u6211\u4eec\u5bf9\u4e8c\u53c9\u6392\u5e8f\u6811\u52a0\u4ee5\u7ea6\u675f\uff0c\u8981\u6c42\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff0c\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a \u5e73\u8861\u4e8c\u53c9\u6811 \uff0c\u540c\u65f6\u8981\u6c42\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u8fd9\u6837\uff0c\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u4e00\u8fb9\u7684\u75af\u72c2\u589e\u52a0\u5bfc\u81f4\u5931\u8861\u3002\u6211\u4eec\u6765\u770b\u770b\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a \u5de6\u5de6\u5931\u8861 \u53f3\u53f3\u5931\u8861 \u5de6\u53f3\u5931\u8861 \u53f3\u5de6\u5931\u8861 \u901a\u8fc7\u4ee5\u4e0a\u56db\u79cd\u60c5\u51b5\u7684\u5904\u7406\uff0c\u6700\u7ec8\u5f97\u5230\u7ef4\u62a4\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u7b97\u6cd5\u3002 \u7ea2\u9ed1\u6811 \u7ea2\u9ed1\u6811\u4e5f\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u540c\u5e73\u8861\u4e8c\u53c9\u6811\u4e00\u6837\uff0c\u7ea2\u9ed1\u6811\u4e5f\u662f\u4e00\u79cd\u7ef4\u62a4\u5e73\u8861\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u4f46\u662f\u6ca1\u6709\u5e73\u8861\u4e8c\u53c9\u6811\u90a3\u6837\u4e25\u683c\uff08\u5e73\u8861\u4e8c\u53c9\u6811\u6bcf\u6b21\u63d2\u5165\u65b0\u7ed3\u70b9\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5927\u91cf\u7684\u65cb\u8f6c\uff0c\u800c\u7ea2\u9ed1\u6811\u4fdd\u8bc1\u4e0d\u8d85\u8fc7\u4e09\u6b21\uff09\uff0c\u7ea2\u9ed1\u6811\u964d\u4f4e\u4e86\u5bf9\u4e8e\u65cb\u8f6c\u7684\u8981\u6c42\uff0c\u56e0\u6b64\u6548\u7387\u6709\u4e00\u5b9a\u7684\u63d0\u5347\u540c\u65f6\u5b9e\u73b0\u8d77\u6765\u4e5f\u66f4\u52a0\u7b80\u5355\u3002\u4f46\u662f\u7ea2\u9ed1\u6811\u7684\u6548\u7387\u5374\u9ad8\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u7ea2\u9ed1\u6811\u4e5f\u662fJDK1.8\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\uff01 \u7ea2\u9ed1\u6811\u7684\u7279\u6027: \uff081\uff09\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u9ed1\u8272\uff0c\u6216\u8005\u662f\u7ea2\u8272\u3002 \uff082\uff09\u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 \uff083\uff09\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4e24\u8fb9\u4e5f\u9700\u8981\u8868\u793a\uff08\u867d\u7136\u6ca1\u6709\uff0c\u4f46\u662fnull\u4e5f\u9700\u8981\u8868\u793a\u51fa\u6765\uff09\u662f\u9ed1\u8272\u3002 \uff084\uff09\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002 \uff085\uff09\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8282\u70b9\u3002 \u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u8282\u70b9\uff0c\u662f\u5982\u4f55\u63d2\u5165\u5230\u7ea2\u9ed1\u6811\u4e2d\u7684\uff1a \u57fa\u672c\u7684 \u63d2\u5165\u89c4\u5219\u548c\u5e73\u8861\u4e8c\u53c9\u6811\u4e00\u6837\uff0c\u4f46\u662f\u5728\u63d2\u5165\u540e\uff1a \u5c06\u65b0\u63d2\u5165\u7684\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u8272 \u5982\u679c X \u662f\u6839\u7ed3\u70b9(root)\uff0c\u5219\u6807\u8bb0\u4e3a\u9ed1\u8272 \u5982\u679c X \u7684 parent \u4e0d\u662f\u9ed1\u8272\uff0c\u540c\u65f6 X \u4e5f\u4e0d\u662f root: 3.1 \u5982\u679c X \u7684 uncle (\u53d4\u53d4) \u662f\u7ea2\u8272 3.1.1 \u5c06 parent \u548c uncle \u6807\u8bb0\u4e3a\u9ed1\u8272 3.1.2 \u5c06 grand parent (\u7956\u7236) \u6807\u8bb0\u4e3a\u7ea2\u8272 3.1.3 \u8ba9 X \u8282\u70b9\u7684\u989c\u8272\u4e0e X \u7956\u7236\u7684\u989c\u8272\u76f8\u540c\uff0c\u7136\u540e\u91cd\u590d\u6b65\u9aa4 2\u30013 3.2 \u5982\u679c X \u7684 uncle (\u53d4\u53d4) \u662f\u9ed1\u8272\uff0c\u6211\u4eec\u8981\u5206\u56db\u79cd\u60c5\u51b5\u5904\u7406 3.2.1 \u5de6\u5de6 (P \u662f G \u7684\u5de6\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u5de6\u5b69\u5b50) 3.2.2 \u5de6\u53f3 (P \u662f G \u7684\u5de6\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u53f3\u5b69\u5b50) 3.2.3 \u53f3\u53f3 (P \u662f G \u7684\u53f3\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u53f3\u5b69\u5b50) 3.2.4 \u53f3\u5de6 (P \u662f G \u7684\u53f3\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u5de6\u5b69\u5b50) \u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5904\u7406\u5c31\u548c\u6211\u4eec\u7684\u5e73\u8861\u4e8c\u53c9\u6811\u4e00\u6837\u4e86 \u8ba4\u8bc6\u96c6\u5408\u7c7b \u96c6\u5408\u8868\u793a\u4e00\u7ec4\u5bf9\u8c61\uff0c\u79f0\u4e3a\u5176\u5143\u7d20\u3002\u4e00\u4e9b\u96c6\u5408\u5141\u8bb8\u91cd\u590d\u7684\u5143\u7d20\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u5141\u8bb8\u3002\u4e00\u4e9b\u96c6\u5408\u662f\u6709\u5e8f\u7684\uff0c\u800c\u5176\u4ed6\u5219\u662f\u65e0\u5e8f\u7684\u3002 \u96c6\u5408\u7c7b\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ec4\u7ec7\u3001\u7ba1\u7406\u548c\u64cd\u4f5c\u6211\u4eec\u7684\u6570\u636e\u800c\u5b58\u5728\u7684\uff0c\u5305\u62ec\u5217\u8868\u3001\u96c6\u5408\u3001\u961f\u5217\u3001\u6620\u5c04\u7b49\u6570\u636e\u7ed3\u6784\u3002\u4ece\u8fd9\u4e00\u5757\u5f00\u59cb\uff0c\u6211\u4eec\u4f1a\u4ece\u6e90\u7801\u89d2\u5ea6\u7ed9\u5927\u5bb6\u8bb2\u89e3\uff08\u6570\u636e\u7ed3\u6784\u5f88\u91cd\u8981\uff01\uff09\uff0c\u4e0d\u4ec5\u4ec5\u662f\u6559\u4f1a\u5927\u5bb6\u5982\u4f55\u53bb\u4f7f\u7528\u3002 \u96c6\u5408\u7c7b\u6700\u9876\u5c42\u4e0d\u662f\u62bd\u8c61\u7c7b\u800c\u662f\u63a5\u53e3\uff0c\u56e0\u4e3a\u63a5\u53e3\u4ee3\u8868\u7684\u662f\u67d0\u4e2a\u529f\u80fd\uff0c\u800c\u62bd\u8c61\u7c7b\u662f\u5df2\u7ecf\u5feb\u8981\u6210\u5f62\u7684\u7c7b\u578b\uff0c\u4e0d\u540c\u7684\u96c6\u5408\u7c7b\u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u540c\u65f6\u4e00\u4e2a\u96c6\u5408\u7c7b\u53ef\u80fd\u4f1a\u540c\u65f6\u5177\u6709\u4e24\u79cd\u53ca\u4ee5\u4e0a\u529f\u80fd\uff08\u65e2\u80fd\u505a\u961f\u5217\u4e5f\u80fd\u505a\u5217\u8868\uff09\uff0c\u6240\u4ee5\u91c7\u7528\u63a5\u53e3\u4f1a\u66f4\u52a0\u5408\u9002\uff0c\u63a5\u53e3\u53ea\u9700\u5b9a\u4e49\u652f\u6301\u7684\u529f\u80fd\u5373\u53ef\u3002 \u6570\u7ec4\u4e0e\u96c6\u5408 \u76f8\u540c\u4e4b\u5904\uff1a \u5b83\u4eec\u90fd\u662f\u5bb9\u5668\uff0c\u90fd\u80fd\u591f\u5bb9\u7eb3\u4e00\u7ec4\u5143\u7d20\u3002 \u4e0d\u540c\u4e4b\u5904\uff1a \u6570\u7ec4\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u96c6\u5408\u7684\u5927\u5c0f\u662f\u53ef\u53d8\u7684\u3002 \u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u96c6\u5408\u53ea\u80fd\u5b58\u653e\u5bf9\u8c61\u3002 \u6570\u7ec4\u5b58\u653e\u7684\u7c7b\u578b\u53ea\u80fd\u662f\u4e00\u79cd\uff0c\u4f46\u96c6\u5408\u53ef\u4ee5\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u5143\u7d20\u3002 \u96c6\u5408\u6839\u63a5\u53e3Collection \u672c\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u5168\u90e8\u7684\u96c6\u5408\u57fa\u672c\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e90\u7801\u4e2d\u770b\u770b\u3002 \u6211\u4eec\u518d\u6765\u770b\u770bList\u548cSet\u4ee5\u53caQueue\u63a5\u53e3\u3002 \u96c6\u5408\u7c7b\u7684\u4f7f\u7528 List\u5217\u8868 \u9996\u5148\u4ecb\u7ecdArrayList\uff0c\u5b83\u7684\u5e95\u5c42\u662f\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u5185\u90e8\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u53ef\u6539\u53d8\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684\u7ebf\u6027\u8868\uff01\u8ddf\u6211\u4eec\u4e4b\u524d\u81ea\u5df1\u5199\u7684ArrayList\u76f8\u6bd4\uff0c\u5b83\u66f4\u52a0\u7684\u89c4\u8303\uff0c\u540c\u65f6\u7ee7\u627f\u81eaList\u63a5\u53e3\u3002 \u5148\u770b\u770bArrayList\u7684\u6e90\u7801\uff01 \u57fa\u672c\u64cd\u4f5c 1 2 List < String > list = new ArrayList <> (); //\u9ed8\u8ba4\u957f\u5ea6\u7684\u5217\u8868 List < String > listInit = new ArrayList <> ( 100 ); //\u521d\u59cb\u957f\u5ea6\u4e3a100\u7684\u5217\u8868 \u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u5143\u7d20\uff1a 1 2 3 4 5 List < String > list = new ArrayList <> (); list . add ( \"lbwnb\" ); list . add ( \"yyds\" ); list . contains ( \"yyds\" ); //\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20 System . out . println ( list ); \u79fb\u9664\u5143\u7d20\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); list . add ( \"lbwnb\" ); list . add ( \"yyds\" ); list . remove ( 0 ); //\u6309\u4e0b\u6807\u79fb\u9664\u5143\u7d20 list . remove ( \"yyds\" ); //\u79fb\u9664\u6307\u5b9a\u5143\u7d20 System . out . println ( list ); } \u4e5f\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { ArrayList < String > list = new ArrayList <> (); list . addAll ( new ArrayList <> ()); //\u5728\u5c3e\u90e8\u6279\u91cf\u6dfb\u52a0\u5143\u7d20 list . removeAll ( new ArrayList <> ()); //\u6279\u91cf\u79fb\u9664\u5143\u7d20\uff08\u53ea\u6709\u7ed9\u5b9a\u96c6\u5408\u4e2d\u5b58\u5728\u7684\u5143\u7d20\u624d\u4f1a\u88ab\u79fb\u9664\uff09 list . retainAll ( new ArrayList <> ()); //\u53ea\u4fdd\u7559\u67d0\u4e9b\u5143\u7d20 System . out . println ( list ); } \u6211\u4eec\u518d\u6765\u770bLinkedList\uff0c\u5176\u5b9e\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff01\u6211\u4eec\u6765\u770b\u770b\u6e90\u7801\u3002 \u5176\u5b9e\u4e0e\u6211\u4eec\u4e4b\u524d\u7f16\u5199\u7684LinkedList\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u5185\u90e8\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff1a 1 2 3 4 5 6 7 8 9 10 11 private static class Node < E > { E item ; Node < E > next ; Node < E > prev ; Node ( Node < E > prev , E element , Node < E > next ) { this . item = element ; this . next = next ; this . prev = prev ; } } \u5f53\u7136\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u8fd8\u5b9e\u73b0\u4e86Queue\u63a5\u53e3\uff0c\u6240\u4ee5LinkedList\u4e5f\u80fd\u88ab\u5f53\u505a\u4e00\u4e2a\u961f\u5217\u6216\u662f\u6808\u6765\u4f7f\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { LinkedList < String > list = new LinkedList <> (); list . offer ( \"A\" ); //\u5165\u961f System . out . println ( list . poll ()); //\u51fa\u961f list . push ( \"A\" ); list . push ( \"B\" ); //\u8fdb\u6808 list . push ( \"C\" ); System . out . println ( list . pop ()); System . out . println ( list . pop ()); //\u51fa\u6808 System . out . println ( list . pop ()); } \u5229\u7528\u4ee3\u7801\u5757\u6765\u5feb\u901f\u6dfb\u52a0\u5185\u5bb9 \u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86\u533f\u540d\u5185\u90e8\u7c7b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4ee3\u7801\u5757\uff0c\u6765\u5feb\u901f\u751f\u6210\u4e00\u4e2a\u81ea\u5e26\u5143\u7d20\u7684List 1 2 3 4 List < String > list = new LinkedList < String > (){{ //\u521d\u59cb\u5316\u65f6\u6dfb\u52a0 this . add ( \"A\" ); this . add ( \"B\" ); }}; \u5982\u679c\u662f\u9700\u8981\u5feb\u901f\u751f\u6210\u4e00\u4e2a\u53ea\u8bfb\u7684List\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u8bb2\u89e3Arrays\u5de5\u5177\u7c7b\u3002 \u96c6\u5408\u7684\u6392\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 List < Integer > list = new LinkedList < Integer > (){ //Java9\u624d\u652f\u6301\u533f\u540d\u5185\u90e8\u7c7b\u4f7f\u7528\u94bb\u77f3\u8fd0\u7b97\u7b26 { this . add ( 10 ); this . add ( 2 ); this . add ( 5 ); this . add ( 8 ); } }; list . sort (( a , b ) -> { //\u6392\u5e8f\u5df2\u7ecf\u7531JDK\u5b9e\u73b0\uff0c\u73b0\u5728\u53ea\u9700\u8981\u586b\u5165\u81ea\u5b9a\u4e49\u89c4\u5219\uff0c\u5b8c\u6210Comparator\u63a5\u53e3\u5b9e\u73b0 return a - b ; //\u8fd4\u56de\u503c\u5c0f\u4e8e0\uff0c\u8868\u793aa\u5e94\u8be5\u5728b\u524d\u9762\uff0c\u8fd4\u56de\u503c\u5927\u4e8e0\uff0c\u8868\u793ab\u5e94\u8be5\u5728a\u540e\u9762\uff0c\u7b49\u4e8e0\u5219\u4e0d\u8fdb\u884c\u4ea4\u6362 }); System . out . println ( list ); \u8fed\u4ee3\u5668 \u96c6\u5408\u7684\u904d\u5386 \u6240\u6709\u7684\u96c6\u5408\u7c7b\uff0c\u90fd\u652f\u6301foreach\u5faa\u73af\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { List < Integer > list = new LinkedList < Integer > (){ //Java9\u624d\u652f\u6301\u533f\u540d\u5185\u90e8\u7c7b\u4f7f\u7528\u94bb\u77f3\u8fd0\u7b97\u7b26 { this . add ( 10 ); this . add ( 2 ); this . add ( 5 ); this . add ( 8 ); } }; for ( Integer integer : list ) { System . out . println ( integer ); } } \u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528JDK1.8\u65b0\u589e\u7684forEach\u65b9\u6cd5\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2aConsumer\u63a5\u53e3\u5b9e\u73b0\uff1a 1 2 3 list . forEach ( i -> { System . out . println ( i ); }); \u4eceJDK1.8\u5f00\u59cb\uff0clambda\u8868\u8fbe\u5f0f\u5f00\u59cb\u9010\u6e10\u6210\u4e3a\u4e3b\u6d41\uff0c\u6211\u4eec\u9700\u8981\u53bb\u9002\u5e94\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u8fd9\u79cd\u8bed\u6cd5\uff0c\u5305\u62ec\u6279\u91cf\u66ff\u6362\uff0c\u4e5f\u662f\u7528\u5230\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u6765\u5b8c\u6210\u7684\u3002 1 2 3 4 5 list . replaceAll (( i ) -> { if ( i == 2 ) return 3 ; //\u5c06\u6240\u6709\u76842\u66ff\u6362\u4e3a3 else return i ; //\u4e0d\u662f2\u5c31\u4e0d\u53d8 }); System . out . println ( list ); Iterable\u548cIterator\u63a5\u53e3 \u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u5df2\u7ecf\u5f97\u77e5\uff0c\u4e0d\u540c\u7684\u7ebf\u6027\u8868\u5b9e\u73b0\uff0c\u5728\u83b7\u53d6\u5143\u7d20\u65f6\u7684\u6548\u7387\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u597d\u5730\u65b9\u5f0f\u6765\u7edf\u4e00\u4e0d\u540c\u6570\u636e\u7ed3\u6784\u7684\u904d\u5386\u3002 \u7531\u4e8eArrayList\u5bf9\u4e8e\u968f\u673a\u8bbf\u95ee\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u800cLinkedList\u5bf9\u4e8e\u987a\u5e8f\u8bbf\u95ee\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u56e0\u6b64\u5728\u4e0a\u8ff0\u7684\u4f20\u7edffor\u5faa\u73af\u904d\u5386\u64cd\u4f5c\u4e2d\uff0cArrayList\u7684\u6548\u7387\u66f4\u80dc\u4e00\u7b79\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u4f7f\u5f97LinkedList\u904d\u5386\u6548\u7387\u63d0\u5347\uff0c\u5c31\u9700\u8981\u91c7\u7528\u987a\u5e8f\u8bbf\u95ee\u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c\u6ca1\u6709\u8fed\u4ee3\u5668\u5e2e\u52a9\u6211\u4eec\u7edf\u4e00\u6807\u51c6\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u5e94\u5bf9\u591a\u79cd\u96c6\u5408\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5bf9\u5e94\u7f16\u5199\u4e0d\u540c\u7684\u904d\u5386\u7b97\u6cd5\uff0c\u5f88\u663e\u7136\u8fd9\u6837\u4f1a\u964d\u4f4e\u6211\u4eec\u7684\u5f00\u53d1\u6548\u7387\uff0c\u800c\u8fed\u4ee3\u5668\u7684\u51fa\u73b0\u5c31\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u8fed\u4ee3\u5668\u91cc\u9762\u65b9\u6cd5\uff1a 1 2 3 public interface Iterator < E > { //... } \u6bcf\u4e2a\u96c6\u5408\u7c7b\u90fd\u6709\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u901a\u8fc7 iterator() \u65b9\u6cd5\u6765\u83b7\u53d6\uff1a 1 2 3 4 5 Iterator < Integer > iterator = list . iterator (); //\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668 while ( iterator . hasNext ()){ //\u5224\u65ad\u662f\u5426\u8fd8\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20 Integer i = iterator . next (); //\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\uff08\u83b7\u53d6\u4e00\u4e2a\u5c11\u4e00\u4e2a\uff09 System . out . println ( i ); } \u8fed\u4ee3\u5668\u751f\u6210\u540e\uff0c\u9ed8\u8ba4\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u6bcf\u6b21\u8c03\u7528 next() \u65b9\u6cd5\uff0c\u90fd\u4f1a\u5c06\u6307\u9488\u540e\u79fb\uff0c\u5f53\u6307\u9488\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u8c03\u7528 hasNext() \u5c06\u4f1a\u8fd4\u56de false \uff0c\u8fed\u4ee3\u5668\u662f\u4e00\u6b21\u6027\u7684\uff0c\u7528\u5b8c\u5373\u6b62\uff0c\u5982\u679c\u9700\u8981\u518d\u6b21\u4f7f\u7528\uff0c\u9700\u8981\u8c03\u7528 iterator() \u65b9\u6cd5\u3002 1 ListIterator < Integer > iterator = list . listIterator (); //List\u8fd8\u6709\u4e00\u4e2a\u66f4\u597d\u5730\u8fed\u4ee3\u5668\u5b9e\u73b0ListIterator ListIterator \u662fList\u4e2d\u72ec\u6709\u7684\u8fed\u4ee3\u5668\uff0c\u5728\u539f\u6709\u8fed\u4ee3\u5668\u57fa\u7840\u4e0a\u65b0\u589e\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002 Set\u96c6\u5408 \u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u770b\u8fc7 Set \u63a5\u53e3\u7684\u5b9a\u4e49\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662fCollection\u4e2d\u76f4\u63a5\u7ee7\u627f\u7684\uff0c\u56e0\u6b64\uff0cSet\u652f\u6301\u7684\u529f\u80fd\u5176\u5b9e\u4e5f\u5c31\u548cCollection\u4e2d\u5b9a\u4e49\u7684\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u4f7f\u7528\u65b9\u6cd5\u4e0a\u7a0d\u6709\u4e0d\u540c\u3002 Set\u96c6\u5408\u7279\u70b9\uff1a \u4e0d\u5141\u8bb8\u51fa\u73b0\u91cd\u590d\u5143\u7d20 \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff08\u4e0d\u5141\u8bb8\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\uff09 \u9996\u5148\u8ba4\u8bc6\u4e00\u4e0bHashSet\uff0c\u5b83\u7684\u5e95\u5c42\u5c31\u662f\u91c7\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff08\u6211\u4eec\u5728\u8fd9\u91cc\u5148\u4e0d\u53bb\u63a2\u8ba8\u5b9e\u73b0\u539f\u7406\uff0c\u56e0\u4e3a\u5e95\u5c42\u5b9e\u8d28\u4e0a\u7ef4\u62a4\u7684\u662f\u4e00\u4e2aHashMap\uff0c\u6211\u4eec\u5b66\u4e60\u4e86Map\u4e4b\u540e\u518d\u6765\u8ba8\u8bba\uff09 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { HashSet < Integer > set = new HashSet <> (); set . add ( 120 ); //\u652f\u6301\u63d2\u5165\u5143\u7d20\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165 set . add ( 13 ); set . add ( 11 ); for ( Integer integer : set ) { System . out . println ( integer ); } } \u8fd0\u884c\u4e0a\u9762\u4ee3\u7801\u53d1\u73b0\uff0c\u6700\u540eSet\u96c6\u5408\u4e2d\u5b58\u5728\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u5e76\u4e0d\u662f\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3aHashSet\u5e95\u5c42\u662f\u91c7\u7528 \u54c8\u5e0c\u8868 \u6765\u5b9e\u73b0\u7684\uff0c\u5b9e\u9645\u7684\u5b58\u653e\u987a\u5e8f\u662f\u7531Hash\u7b97\u6cd5\u51b3\u5b9a\u7684\u3002 \u90a3\u4e48\u6211\u4eec\u5e0c\u671b\u6570\u636e\u6309\u7167\u6211\u4eec\u63d2\u5165\u7684\u987a\u5e8f\u8fdb\u884c\u4fdd\u5b58\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528LinkedHashSet\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { LinkedHashSet < Integer > set = new LinkedHashSet <> (); //\u4f1a\u81ea\u52a8\u4fdd\u5b58\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f set . add ( 120 ); set . add ( 13 ); set . add ( 11 ); for ( Integer integer : set ) { System . out . println ( integer ); } } LinkedHashSet\u5e95\u5c42\u7ef4\u62a4\u7684\u4e0d\u518d\u662f\u4e00\u4e2aHashMap\uff0c\u800c\u662fLinkedHashMap\uff0c\u5b83\u80fd\u591f\u5728\u63d2\u5165\u6570\u636e\u65f6\u5229\u7528\u94fe\u8868\u81ea\u52a8\u7ef4\u62a4\u987a\u5e8f\uff0c\u56e0\u6b64\u8fd9\u6837\u5c31\u80fd\u591f\u4fdd\u8bc1\u6211\u4eec\u63d2\u5165\u987a\u5e8f\u548c\u6700\u540e\u7684\u8fed\u4ee3\u987a\u5e8f\u4e00\u81f4\u4e86\u3002 \u8fd8\u6709\u4e00\u79cdSet\u53eb\u505aTreeSet\uff0c\u5b83\u4f1a\u5728\u5143\u7d20\u63d2\u5165\u65f6\u8fdb\u884c\u6392\u5e8f\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { TreeSet < Integer > set = new TreeSet <> (); set . add ( 1 ); set . add ( 3 ); set . add ( 2 ); System . out . println ( set ); } \u53ef\u4ee5\u770b\u5230\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6211\u4eec\u63d2\u5165\u987a\u5e8f\uff0c\u800c\u662f\u6309\u7167\u6570\u5b57\u7684\u5927\u5c0f\u8fdb\u884c\u6392\u5217\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { TreeSet < Integer > set = new TreeSet <> (( a , b ) -> b - a ); //\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u6307\u5b9a\u89c4\u5219\u5373\u53ef set . add ( 1 ); set . add ( 3 ); set . add ( 2 ); System . out . println ( set ); } \u73b0\u5728\u7684\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\u4e86\u3002 \u867d\u7136Set\u96c6\u5408\u53ea\u662f\u7c97\u7565\u7684\u8fdb\u884c\u4e86\u8bb2\u89e3\uff0c\u4f46\u662f\u5b66\u4e60Map\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u4f1a\u56de\u6765\u770b\u6211\u4eecSet\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u6240\u4ee5\u8bf4\u6700\u91cd\u8981\u7684\u8fd8\u662fMap\u3002\u672c\u8282\u53ea\u9700\u8981\u8bb0\u4f4fSet\u7684\u6027\u8d28\u3001\u4f7f\u7528\u5373\u53ef\u3002 Map\u6620\u5c04 \u4ec0\u4e48\u662f\u6620\u5c04 \u6211\u4eec\u5728\u9ad8\u4e2d\u9636\u6bb5\u5176\u5b9e\u5df2\u7ecf\u5b66\u4e60\u8fc7\u6620\u5c04\u4e86\uff0c\u6620\u5c04\u6307\u4e24\u4e2a\u5143\u7d20\u7684\u4e4b\u95f4\u76f8\u4e92\u201c\u5bf9\u5e94\u201d\u7684\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u5143\u7d20\u4e4b\u95f4\u662f\u4e24\u4e24\u5bf9\u5e94\u7684\uff0c\u662f\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u5728\u3002 Map\u63a5\u53e3 Map\u5c31\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u800c\u5b58\u5728\u7684\uff0c\u6211\u4eec\u901a\u8fc7\u4fdd\u5b58\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\u6620\u5c04\u5173\u7cfb\u3002 \u6211\u4eec\u5148\u6765\u770b\u770bMap\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u54ea\u4e9b\u64cd\u4f5c\u3002 HashMap\u548cLinkedHashMap HashMap\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff0c\u76f8\u6bd4List\uff0c\u5c31\u975e\u5e38\u5730\u590d\u6742\u4e86\uff0c\u5b83\u5e76\u4e0d\u662f\u7b80\u7b80\u5355\u5355\u7684\u8868\u7ed3\u6784\uff0c\u800c\u662f\u5229\u7528\u54c8\u5e0c\u8868\u5b58\u653e\u6620\u5c04\u5173\u7cfb\uff0c\u6211\u4eec\u6765\u770b\u770bHashMap\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u9996\u5148\u56de\u987e\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u54c8\u5e0c\u8868\uff0c\u5b83\u957f\u8fd9\u6837\uff1a \u54c8\u5e0c\u8868\u7684\u672c\u8d28\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u653e\u540e\u7eed\u8282\u70b9\u7684\u5934\u7ed3\u70b9\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5934\u7ed3\u70b9\uff08\u4e5f\u53ef\u4ee5\u8bf4\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff09\uff0c\u5f53\u8981\u65b0\u63d2\u5165\u4e00\u4e2a\u6570\u636e\u65f6\uff0c\u4f1a\u5148\u8ba1\u7b97\u8be5\u6570\u636e\u7684\u54c8\u5e0c\u503c\uff0c\u627e\u5230\u6570\u7ec4\u4e0b\u6807\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u94fe\u8868\u540e\u9762\u3002 \u800cHashMap\u5c31\u662f\u91c7\u7528\u7684\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6e90\u7801\u4e2d\u540c\u6837\u5b9a\u4e49\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 /** * The table, initialized on first use, and resized as * necessary. When allocated, length is always a power of two. * (We also tolerate length zero in some operations to allow * bootstrapping mechanics that are currently not needed.) */ transient Node < K , V >[] table ; \u8fd9\u4e2a\u8868\u4f1a\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521d\u59cb\u5316\uff0c\u540c\u65f6\u5728\u5fc5\u8981\u65f6\u8fdb\u884c\u6269\u5bb9\uff0c\u5e76\u4e14\u5b83\u7684\u5927\u5c0f\u6c38\u8fdc\u662f2\u7684\u500d\u6570\uff01 1 2 3 4 /** * The default initial capacity - MUST be a power of two. */ static final int DEFAULT_INITIAL_CAPACITY = 1 << 4 ; // aka 16 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u7684\u5927\u5c0f\u4e3a2\u76844\u6b21\u65b9\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u662f2\u7684\u500d\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0b\u4e00\u6b21\u589e\u957f\u4e4b\u540e\uff0c\u5927\u5c0f\u4f1a\u53d8\u62102\u76845\u6b21\u65b9\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u8868\u4e2d\u7684\u6570\u636e\u4e0d\u65ad\u589e\u52a0\u4e4b\u540e\uff0c\u94fe\u8868\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\uff0c\u8fd9\u6837\u4f1a\u4e25\u91cd\u5bfc\u81f4\u67e5\u8be2\u901f\u5ea6\u53d8\u6162\uff0c\u9996\u5148\u60f3\u5230\u529e\u6cd5\u5c31\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6570\u7ec4\u7684\u957f\u5ea6\u8fdb\u884c\u6269\u5bb9\uff0c\u6765\u5b58\u653e\u66f4\u591a\u7684\u94fe\u8868\uff0c\u90a3\u4e48\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u884c\u6269\u5bb9\u5462\uff1f 1 2 3 4 5 6 /** * The load factor for the hash table. * * @serial */ final float loadFactor ; \u6211\u4eec\u8fd8\u53d1\u73b0HashMap\u6e90\u7801\u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f \u8d1f\u8f7d\u56e0\u5b50 \uff0c\u90a3\u4e48\u5b83\u662f\u5e72\u561b\u7684\u5462\uff1f \u8d1f\u8f7d\u56e0\u5b50\u5176\u5b9e\u5c31\u662f\u7528\u6765\u8861\u91cf\u5f53\u524d\u60c5\u51b5\u662f\u5426\u9700\u8981\u8fdb\u884c\u6269\u5bb9\u7684\u6807\u51c6\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u7684\u8d1f\u8f7d\u56e0\u5b50\u662f 0.75 1 2 3 4 /** * The load factor used when none specified in constructor. */ static final float DEFAULT_LOAD_FACTOR = 0.75f ; \u90a3\u4e48\u8d1f\u8f7d\u56e0\u5b50\u662f\u600e\u4e48\u63a7\u5236\u6269\u5bb9\u7684\u5462\uff1f 0.75 \u7684\u610f\u601d\u662f\uff0c\u5728\u63d2\u5165\u65b0\u7684\u7ed3\u70b9\u540e\uff0c\u5982\u679c\u5f53\u524d\u6570\u7ec4\u7684\u5360\u7528\u7387\u8fbe\u523075%\u5219\u8fdb\u884c\u6269\u5bb9\u3002\u5728\u6269\u5bb9\u65f6\uff0c\u4f1a\u5c06\u6240\u6709\u7684\u6570\u636e\uff0c\u91cd\u65b0\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u4e0b\u6807\uff0c\u7ec4\u6210\u65b0\u7684\u54c8\u5e0c\u8868\u3002 \u4f46\u662f\u8fd9\u6837\u4f9d\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u94fe\u8868\u8fc7\u957f\u7684\u60c5\u51b5\u8fd8\u662f\u6709\u53ef\u80fd\u53d1\u751f\uff0c\u6240\u4ee5\uff0c\u4e3a\u4e86\u4ece\u6839\u6e90\u4e0a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728JDK1.8\u65f6\uff0c\u5f15\u5165\u4e86\u7ea2\u9ed1\u6811\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002 \u5f53\u94fe\u8868\u7684\u957f\u5ea6\u8fbe\u52308\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\uff0c\u8fd9\u6837\u80fd\u4f7f\u5f97\u539f\u6709\u7684\u67e5\u8be2\u6548\u7387\u5927\u5e45\u5ea6\u964d\u4f4e\uff01\u5f53\u4f7f\u7528\u7ea2\u9ed1\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\u641c\u7d22\u7684\u601d\u60f3\uff0c\u5feb\u901f\u5730\u53bb\u5bfb\u627e\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u50cf\u94fe\u8868\u4e00\u6837\u6328\u4e2a\u53bb\u770b\u3002 1 2 3 4 5 6 /** * Entry for Tree bins. Extends LinkedHashMap.Entry (which in turn * extends Node) so can be used as extension of either regular or * linked node. */ static final class TreeNode < K , V > extends LinkedHashMap . Entry < K , V > { \u9664\u4e86Node\u4ee5\u5916\uff0cHashMap\u8fd8\u6709TreeNode\uff0c\u5f88\u660e\u663e\u8fd9\u5c31\u662f\u4e3a\u4e86\u5b9e\u73b0\u7ea2\u9ed1\u6811\u800c\u8bbe\u8ba1\u7684\u5185\u90e8\u7c7b\u3002\u4e0d\u8fc7\u6211\u4eec\u53d1\u73b0\uff0cTreeNode\u5e76\u4e0d\u662f\u76f4\u63a5\u7ee7\u627fNode\uff0c\u800c\u662f\u4f7f\u7528\u4e86LinkedHashMap\u4e2d\u7684Entry\u5b9e\u73b0\uff0c\u5b83\u4fdd\u5b58\u4e86\u524d\u540e\u8282\u70b9\u7684\u987a\u5e8f\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f\uff09\u3002 1 2 3 4 5 6 7 8 9 /** * HashMap.Node subclass for normal LinkedHashMap entries. */ static class Entry < K , V > extends HashMap . Node < K , V > { Entry < K , V > before , after ; Entry ( int hash , K key , V value , Node < K , V > next ) { super ( hash , key , value , next ); } } LinkedHashMap\u662f\u76f4\u63a5\u7ee7\u627f\u81eaHashMap\uff0c\u5177\u6709HashMap\u7684\u5168\u90e8\u6027\u8d28\uff0c\u540c\u65f6\u5f97\u76ca\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u4fdd\u5b58\u4e86\u63d2\u5165\u987a\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u904d\u5386LinkedHashMap\u65f6\uff0c\u987a\u5e8f\u5c31\u540c\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f\u4e00\u81f4\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8bbf\u95ee\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u521a\u8bbf\u95ee\u8fc7\u7684\u5143\u7d20\uff0c\u4f1a\u88ab\u6392\u5230\u6700\u540e\u4e00\u4f4d\u3002 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { LinkedHashMap < Integer , String > map = new LinkedHashMap <> ( 16 , 0.75f , true ); //\u4ee5\u8bbf\u95ee\u987a\u5e8f map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); map . get ( 2 ); System . out . println ( map ); } \u89c2\u5bdf\u7ed3\u679c\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u521a\u8bbf\u95ee\u7684\u7ed3\u679c\u88ab\u6392\u5230\u4e86\u6700\u540e\u4e00\u4f4d\u3002 TreeMap TreeMap\u5176\u5b9e\u5c31\u662f\u81ea\u52a8\u7ef4\u62a4\u987a\u5e8f\u7684\u4e00\u79cdMap\uff0c\u5c31\u548c\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684TreeSet\u4e00\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * The comparator used to maintain order in this tree map, or * null if it uses the natural ordering of its keys. * * @serial */ private final Comparator <? super K > comparator ; private transient Entry < K , V > root ; /** * Node in the Tree. Doubles as a means to pass key-value pairs back to * user (see Map.Entry). */ static final class Entry < K , V > implements Map . Entry < K , V > { \u6211\u4eec\u53d1\u73b0\u5b83\u7684\u5185\u90e8\u76f4\u63a5\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7ea2\u9ed1\u6811\uff0c\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5c31\u662f\u4e00\u4e2aTree\uff0c\u56e0\u4e3a\u5b83\u9ed8\u8ba4\u5c31\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u8bf4\u76f4\u63a5\u91c7\u7528\u7ea2\u9ed1\u6811\u4f1a\u66f4\u597d\u3002\u6211\u4eec\u5728\u521b\u5efa\u65f6\uff0c\u76f4\u63a5\u7ed9\u4e88\u4e00\u4e2a\u6bd4\u8f83\u89c4\u5219\u5373\u53ef\u3002 Map\u7684\u4f7f\u7528 \u6211\u4eec\u9996\u5148\u6765\u770b\u770bMap\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); System . out . println ( map . get ( 1 )); //\u83b7\u53d6Key\u4e3a1\u7684\u503c System . out . println ( map . getOrDefault ( 0 , \"K\" )); //\u4e0d\u5b58\u5728\u5c31\u8fd4\u56deK map . remove ( 1 ); //\u79fb\u9664\u8fd9\u4e2aKey\u7684\u952e\u503c\u5bf9 } \u7531\u4e8eMap\u5e76\u672a\u5b9e\u73b0\u8fed\u4ee3\u5668\u63a5\u53e3\uff0c\u56e0\u6b64\u4e0d\u652f\u6301foreach\uff0c\u4f46\u662fJDK1.8\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86forEach\u65b9\u6cd5\u4f7f\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); map . forEach (( k , v ) -> System . out . println ( k + \"->\" + v )); for ( Map . Entry < Integer , String > entry : map . entrySet ()) { //\u4e5f\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u7684Entry\u6765foreach int key = entry . getKey (); String value = entry . getValue (); System . out . println ( key + \" -> \" + value ); } } \u6211\u4eec\u4e5f\u53ef\u4ee5\u5355\u72ec\u83b7\u53d6\u6240\u6709\u7684\u503c\u6216\u8005\u662f\u952e\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); System . out . println ( map . keySet ()); //\u76f4\u63a5\u83b7\u53d6\u6240\u6709\u7684key System . out . println ( map . values ()); //\u76f4\u63a5\u83b7\u53d6\u6240\u6709\u7684\u503c } \u518d\u8c08Set\u539f\u7406 \u901a\u8fc7\u89c2\u5bdfHashSet\u7684\u6e90\u7801\u53d1\u73b0\uff0cHashSet\u51e0\u4e4e\u90fd\u5728\u64cd\u4f5c\u5185\u90e8\u7ef4\u62a4\u7684\u4e00\u4e2aHashMap\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cHashSet\u53ea\u662f\u4e00\u4e2a\u8868\u58f3\uff0c\u800c\u5185\u90e8\u7ef4\u62a4\u7684HashMap\u624d\u662f\u7075\u9b42\uff01 1 2 // Dummy value to associate with an Object in the backing Map private static final Object PRESENT = new Object (); \u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u5176\u5b9e\u6dfb\u52a0\u7684\u662f\u4e00\u4e2a\u952e\u4e3a\u6211\u4eec\u63d2\u5165\u7684\u5143\u7d20\uff0c\u800c\u503c\u5c31\u662f PRESENT \u5e38\u91cf\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /** * Adds the specified element to this set if it is not already present. * More formally, adds the specified element <tt>e</tt> to this set if * this set contains no element <tt>e2</tt> such that * <tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>. * If this set already contains the element, the call leaves the set * unchanged and returns <tt>false</tt>. * * @param e element to be added to this set * @return <tt>true</tt> if this set did not already contain the specified * element */ public boolean add ( E e ) { return map . put ( e , PRESENT ) == null ; } \u89c2\u5bdf\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u4e5f\u51e0\u4e4e\u90fd\u662f\u5728\u7528HashMap\u505a\u4e8b\uff0c\u6240\u4ee5\u8bf4\uff0cHashSet\u5229\u7528\u4e86HashMap\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8f7b\u677e\u5730\u5c31\u5b9e\u73b0\u4e86Set\u5b9a\u4e49\u7684\u5168\u90e8\u529f\u80fd\uff01 \u518d\u6765\u770bTreeSet\uff0c\u5b9e\u9645\u4e0a\u7528\u7684\u5c31\u662f\u6211\u4eec\u7684TreeMap\uff1a 1 2 3 4 /** * The backing map. */ private transient NavigableMap < E , Object > m ; \u540c\u7406\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u9610\u8ff0\u4e86\u3002 JDK1.8\u65b0\u589e\u65b9\u6cd5\u4f7f\u7528 \u6700\u540e\uff0c\u6211\u4eec\u518d\u6765\u770b\u770bJDK1.8\u4e2d\u96c6\u5408\u7c7b\u65b0\u589e\u7684\u4e00\u4e9b\u64cd\u4f5c\uff08\u4e4b\u524d\u6ca1\u6709\u63d0\u53ca\u7684\uff09\u9996\u5148\u6765\u770b\u770b compute \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . compute ( 1 , ( k , v ) -> { //compute\u4f1a\u5c06\u6307\u5b9aKey\u7684\u503c\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\uff0c\u82e5Key\u4e0d\u5b58\u5728\uff0cv\u4f1a\u8fd4\u56denull return v + \"M\" ; //\u8fd9\u91cc\u8fd4\u56de\u539f\u6765\u7684value+M }); map . computeIfPresent ( 1 , ( k , v ) -> { //\u5f53Key\u5b58\u5728\u65f6\u5b58\u5728\u5219\u8ba1\u7b97\u5e76\u8d4b\u4e88\u65b0\u7684\u503c return v + \"M\" ; //\u8fd9\u91cc\u8fd4\u56de\u539f\u6765\u7684value+M }); System . out . println ( map ); } \u4e5f\u53ef\u4ee5\u4f7f\u7528 computeIfAbsent \uff0c\u5f53\u4e0d\u5b58\u5728Key\u65f6\uff0c\u8ba1\u7b97\u5e76\u5c06\u952e\u503c\u5bf9\u653e\u5165Map 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . computeIfAbsent ( 0 , ( k ) -> { //\u82e5\u4e0d\u5b58\u5728\u5219\u8ba1\u7b97\u5e76\u63d2\u5165\u65b0\u7684\u503c return \"M\" ; //\u8fd9\u91cc\u8fd4\u56deM }); System . out . println ( map ); } merge\u65b9\u6cd5\u7528\u4e8e\u5904\u7406\u6570\u636e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public static void main ( String [] args ) { List < Student > students = Arrays . asList ( new Student ( \"yoni\" , \"English\" , 80 ), new Student ( \"yoni\" , \"Chiness\" , 98 ), new Student ( \"yoni\" , \"Math\" , 95 ), new Student ( \"taohai.wang\" , \"English\" , 50 ), new Student ( \"taohai.wang\" , \"Chiness\" , 72 ), new Student ( \"taohai.wang\" , \"Math\" , 41 ), new Student ( \"Seely\" , \"English\" , 88 ), new Student ( \"Seely\" , \"Chiness\" , 89 ), new Student ( \"Seely\" , \"Math\" , 92 ) ); Map < String , Integer > scoreMap = new HashMap <> (); students . forEach ( student -> scoreMap . merge ( student . getName (), student . getScore (), Integer :: sum )); scoreMap . forEach (( k , v ) -> System . out . println ( \"key:\" + k + \"\u603b\u5206\" + \"value:\" + v )); } static class Student { private final String name ; private final String type ; private final int score ; public Student ( String name , String type , int score ) { this . name = name ; this . type = type ; this . score = score ; } public String getName () { return name ; } public int getScore () { return score ; } public String getType () { return type ; } } \u96c6\u5408\u7684\u5d4c\u5957 \u65e2\u7136\u96c6\u5408\u7c7b\u578b\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u662f\u6cdb\u578b\uff0c\u90a3\u4e48\u80fd\u5426\u5d4c\u5957\u5b58\u50a8\u5462\uff1f 1 2 3 4 5 6 7 public static void main ( String [] args ) { Map < String , List < Integer >> map = new HashMap <> (); //\u6bcf\u4e00\u4e2a\u6620\u5c04\u90fd\u662f \u5b57\u7b26\u4e32<->\u5217\u8868 map . put ( \"\u5361\u5e03\u5947\u8bfa\u4eca\u72b9\u5728\" , new LinkedList <> ()); map . put ( \"\u4e0d\u89c1\u5f53\u5e74\u5012\u8336\u4eba\" , new LinkedList <> ()); System . out . println ( map . keySet ()); System . out . println ( map . values ()); } \u901a\u8fc7Key\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u503c\u540e\uff0c\u5c31\u662f\u4e00\u4e2a\u5217\u8868\uff1a 1 2 map . get ( \"\u5361\u5e03\u5947\u8bfa\u4eca\u72b9\u5728\" ). add ( 10 ); System . out . println ( map . get ( \"\u5361\u5e03\u5947\u8bfa\u4eca\u72b9\u5728\" ). get ( 0 )); \u8ba9\u5957\u5a03\u7ee7\u7eed\u4e0b\u53bb\uff1a 1 2 3 public static void main ( String [] args ) { Map < Integer , Map < Integer , Map < Integer , String >>> map = new HashMap <> (); } \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528List\u6765\u5957\u5a03\u522b\u7684\uff1a 1 2 3 public static void main ( String [] args ) { List < Map < String , Set < String >>> list = new LinkedList <> (); } \u6d41Stream\u548cOptional\u7684\u4f7f\u7528 Java 8 API\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u62bd\u8c61\u79f0\u4e3a\u6d41Stream\uff0c\u53ef\u4ee5\u8ba9\u4f60\u4ee5\u4e00\u79cd\u58f0\u660e\u7684\u65b9\u5f0f\u5904\u7406\u6570\u636e\u3002Stream \u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u7528 SQL \u8bed\u53e5\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e\u7684\u76f4\u89c2\u65b9\u5f0f\u6765\u63d0\u4f9b\u4e00\u79cd\u5bf9 Java \u96c6\u5408\u8fd0\u7b97\u548c\u8868\u8fbe\u7684\u9ad8\u9636\u62bd\u8c61\u3002Stream API\u53ef\u4ee5\u6781\u5927\u63d0\u9ad8Java\u7a0b\u5e8f\u5458\u7684\u751f\u4ea7\u529b\uff0c\u8ba9\u7a0b\u5e8f\u5458\u5199\u51fa\u9ad8\u6548\u7387\u3001\u5e72\u51c0\u3001\u7b80\u6d01\u7684\u4ee3\u7801\u3002\u8fd9\u79cd\u98ce\u683c\u5c06\u8981\u5904\u7406\u7684\u5143\u7d20\u96c6\u5408\u770b\u4f5c\u4e00\u79cd\u6d41\uff0c \u6d41\u5728\u7ba1\u9053\u4e2d\u4f20\u8f93\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u7ba1\u9053\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u5904\u7406\uff0c \u6bd4\u5982\u7b5b\u9009\uff0c \u6392\u5e8f\uff0c\u805a\u5408\u7b49\u3002\u5143\u7d20\u6d41\u5728\u7ba1\u9053\u4e2d\u7ecf\u8fc7\u4e2d\u95f4\u64cd\u4f5c\uff08intermediate operation\uff09\u7684\u5904\u7406\uff0c\u6700\u540e\u7531\u6700\u7ec8\u64cd\u4f5c(terminal operation)\u5f97\u5230\u524d\u9762\u5904\u7406\u7684\u7ed3\u679c\u3002 \u5b83\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u5de5\u5382\u7684\u6d41\u6c34\u7ebf\u4e00\u6837\uff01\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2aStream\u5f53\u505a\u6d41\u6c34\u7ebf\u5904\u7406\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); list . add ( \"A\" ); list . add ( \"B\" ); list . add ( \"C\" ); //\u79fb\u9664\u4e3aB\u7684\u5143\u7d20 Iterator < String > iterator = list . iterator (); while ( iterator . hasNext ()){ if ( iterator . next (). equals ( \"B\" )) iterator . remove (); } //Stream\u64cd\u4f5c list = list //\u94fe\u5f0f\u8c03\u7528 . stream () //\u83b7\u53d6\u6d41 . filter ( e -> ! e . equals ( \"B\" )) //\u53ea\u5141\u8bb8\u6240\u6709\u4e0d\u662fB\u7684\u5143\u7d20\u901a\u8fc7\u6d41\u6c34\u7ebf . collect ( Collectors . toList ()); //\u5c06\u6d41\u6c34\u7ebf\u4e2d\u7684\u5143\u7d20\u91cd\u65b0\u6536\u96c6\u8d77\u6765\uff0c\u53d8\u56deList System . out . println ( list ); } \u53ef\u80fd\u4ece\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u8fd8\u4e0d\u80fd\u611f\u53d7\u5230\u6d41\u5904\u7406\u5e26\u6765\u7684\u4fbf\u6377\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u6765\u611f\u53d7\u4e00\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); list . add ( 3 ); list = list . stream () . distinct () //\u53bb\u91cd\uff08\u4f7f\u7528equals\u5224\u65ad\uff09 . sorted (( a , b ) -> b - a ) //\u8fdb\u884c\u5012\u5e8f\u6392\u5217 . map ( e -> e + 1 ) //\u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u6267\u884c+1\u64cd\u4f5c . limit ( 2 ) //\u53ea\u653e\u884c\u524d\u4e24\u4e2a\u5143\u7d20 . collect ( Collectors . toList ()); System . out . println ( list ); } \u5f53\u9047\u5230\u5927\u91cf\u7684\u590d\u6742\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Stream\u6765\u5feb\u901f\u7f16\u5199\u4ee3\u7801\uff0c\u8fd9\u6837\u4e0d\u4ec5\u4ee3\u7801\u91cf\u5927\u5e45\u5ea6\u51cf\u5c11\uff0c\u800c\u4e14\u903b\u8f91\u4e5f\u66f4\u52a0\u6e05\u6670\u660e\u4e86\uff08\u5982\u679c\u4f60\u5b66\u4e60\u8fc7SQL\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u66f4\u50cf\u4e00\u4e2aSql\u8bed\u53e5\uff09 \u6ce8\u610f \uff1a\u4e0d\u80fd\u8ba4\u4e3a\u6bcf\u4e00\u6b65\u662f\u76f4\u63a5\u4f9d\u6b21\u6267\u884c\u7684\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); list . add ( 3 ); list = list . stream () . distinct () //\u65ad\u70b9 . sorted (( a , b ) -> b - a ) . map ( e -> { System . out . println ( \">>> \" + e ); //\u65ad\u70b9 return e + 1 ; }) . limit ( 2 ) //\u65ad\u70b9 . collect ( Collectors . toList ()); //\u5b9e\u9645\u4e0a\uff0cstream\u4f1a\u5148\u8bb0\u5f55\u6bcf\u4e00\u6b65\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5f00\u59cb\u6267\u884c\u5185\u5bb9\uff0c\u5f53\u6574\u4e2a\u94fe\u5f0f\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u624d\u4f1a\u4f9d\u6b21\u8fdb\u884c\uff01 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7528\u4e00\u5806\u968f\u673a\u6570\u6765\u8fdb\u884c\u66f4\u591a\u6d41\u64cd\u4f5c\u7684\u6f14\u793a\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Random random = new Random (); //Random\u662f\u4e00\u4e2a\u968f\u673a\u6570\u5de5\u5177\u7c7b random . ints ( - 100 , 100 ) //\u751f\u6210-100~100\u4e4b\u95f4\u7684\uff0c\u968f\u673aint\u578b\u6570\u5b57\uff08\u672c\u8d28\u4e0a\u662f\u4e00\u4e2aIntStream\uff09 . limit ( 10 ) //\u53ea\u83b7\u53d6\u524d10\u4e2a\u6570\u5b57\uff08\u8fd9\u662f\u4e00\u4e2a\u65e0\u9650\u5236\u7684\u6d41\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u9650\u5236\uff0c\u5c06\u4f1a\u65e0\u9650\u8fdb\u884c\u4e0b\u53bb\uff01\uff09 . filter ( i -> i < 0 ) //\u53ea\u4fdd\u7559\u5c0f\u4e8e0\u7684\u6570\u5b57 . sorted () //\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f . forEach ( System . out :: println ); //\u4f9d\u6b21\u6253\u5370 } \u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u7edf\u8ba1\u5b9e\u4f8b\u6765\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u8fdb\u884c\u7edf\u8ba1\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { Random random = new Random (); //Random\u662f\u4e00\u4e2a\u968f\u673a\u6570\u5de5\u5177\u7c7b IntSummaryStatistics statistics = random . ints ( 0 , 100 ) . limit ( 100 ) . summaryStatistics (); //\u83b7\u53d6\u8bed\u6cd5\u7edf\u8ba1\u5b9e\u4f8b System . out . println ( statistics . getMax ()); //\u5feb\u901f\u83b7\u53d6\u6700\u5927\u503c System . out . println ( statistics . getCount ()); //\u83b7\u53d6\u6570\u91cf System . out . println ( statistics . getAverage ()); //\u83b7\u53d6\u5e73\u5747\u503c } \u666e\u901a\u7684List\u53ea\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6362\u5230\u65b9\u4fbf\u597d\u7528\u7684IntStream\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); list . add ( 4 ); list . stream () . mapToInt ( i -> i ) //\u5c06\u6bcf\u4e00\u4e2a\u5143\u7d20\u6620\u5c04\u4e3aInteger\u7c7b\u578b\uff08\u8fd9\u91cc\u56e0\u4e3a\u672c\u6765\u5c31\u662fInteger\uff09 . summaryStatistics (); } \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 flat \u6765\u5bf9\u6574\u4e2a\u6d41\u8fdb\u884c\u8fdb\u4e00\u6b65\u7ec6\u5206\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); list . add ( \"A,B\" ); list . add ( \"C,D\" ); list . add ( \"E,F\" ); //\u6211\u4eec\u60f3\u8ba9\u6bcf\u4e00\u4e2a\u5143\u7d20\u901a\u8fc7,\u8fdb\u884c\u5206\u5272\uff0c\u53d8\u6210\u72ec\u7acb\u76846\u4e2a\u5143\u7d20 list = list . stream () //\u751f\u6210\u6d41 . flatMap ( e -> Arrays . stream ( e . split ( \",\" ))) //\u5206\u5272\u5b57\u7b26\u4e32\u5e76\u751f\u6210\u65b0\u7684\u6d41 . collect ( Collectors . toList ()); //\u6c47\u6210\u65b0\u7684List System . out . println ( list ); //\u5f97\u5230\u7ed3\u679c } \u6211\u4eec\u4e5f\u53ef\u4ee5\u53ea\u901a\u8fc7Stream\u6765\u5b8c\u6210\u6240\u6709\u6570\u5b57\u7684\u548c\uff0c\u4f7f\u7528 reduce \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); int sum = list . stream () . reduce (( a , b ) -> a + b ) //\u8ba1\u7b97\u89c4\u5219\u4e3a\uff1aa\u662f\u4e0a\u4e00\u6b21\u8ba1\u7b97\u7684\u503c\uff0cb\u662f\u5f53\u524d\u8981\u8ba1\u7b97\u7684\u53c2\u6570\uff0c\u8fd9\u91cc\u662f\u6c42\u548c . get (); //\u6211\u4eec\u53d1\u73b0\u5f97\u5230\u7684\u662f\u4e00\u4e2aOptional\u7c7b\u5b9e\u4f8b\uff0c\u4e0d\u662f\u6211\u4eec\u8fd4\u56de\u7684\u7c7b\u578b\uff0c\u901a\u8fc7get\u65b9\u6cd5\u8fd4\u56de\u5f97\u5230\u7684\u503c System . out . println ( sum ); } \u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\uff0cStream\u4e0d\u559c\u6b22\u76f4\u63a5\u7ed9\u6211\u4eec\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u800c\u662f\u901a\u8fc7Optinal\u7684\u65b9\u5f0f\uff0c\u90a3\u4e48\u4ec0\u4e48\u662fOptional\u5462\uff1f Optional\u7c7b\u662fJava8\u4e3a\u4e86\u89e3\u51b3null\u503c\u5224\u65ad\u95ee\u9898\uff0c\u4f7f\u7528Optional\u7c7b\u53ef\u4ee5\u907f\u514d\u663e\u5f0f\u7684null\u503c\u5224\u65ad\uff08null\u7684\u9632\u5fa1\u6027\u68c0\u67e5\uff09\uff0c\u907f\u514dnull\u5bfc\u81f4\u7684NPE\uff08NullPointerException\uff09\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u5bf9\u63a7\u5236\u7684\u4e00\u4e2a\u5224\u65ad\uff0c\u4e3a\u4e86\u907f\u514d\u7a7a\u6307\u9488\u5f02\u5e38\u3002 1 2 3 4 5 6 public static void main ( String [] args ) { String str = null ; if ( str != null ){ //\u5f53str\u4e0d\u4e3a\u7a7a\u65f6\u6dfb\u52a0\u5143\u7d20\u5230List\u4e2d list . add ( str ); } } \u6709\u4e86Optional\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 2 3 4 5 public static void main ( String [] args ) { String str = null ; Optional < String > optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional optional . ifPresent ( System . out :: println ); //\u5f53\u5b58\u5728\u65f6\u518d\u6267\u884c\u65b9\u6cd5 } \u5c31\u7c7b\u4f3c\u4e8eKotlin\u4e2d\u7684\uff1a 1 2 var str : String ? = null str ? . upperCase () \u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5get\u6216\u662f\u5f53\u503c\u4e3anull\u65f6\uff0c\u83b7\u53d6\u5907\u9009\u503c\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { String str = null ; Optional optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional\uff08\u53ef\u7a7a\uff09 System . out . println ( optional . orElse ( \"lbwnb\" )); // System.out.println(optional.get()); \u8fd9\u6837\u4f1a\u76f4\u63a5\u62a5\u9519 } \u540c\u6837\u7684\uff0cOptional\u4e5f\u652f\u6301\u8fc7\u6ee4\u64cd\u4f5c\u548c\u6620\u5c04\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u662f\u5bf9\u4e8e\u5355\u5bf9\u8c61\u800c\u8a00\uff1a 1 2 3 4 5 public static void main ( String [] args ) { String str = \"A\" ; Optional optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional\uff08\u53ef\u7a7a\uff09 System . out . println ( optional . filter ( s -> s . equals ( \"B\" )). get ()); //\u88ab\u8fc7\u6ee4\u4e86\uff0c\u6b64\u65f6\u5143\u7d20\u4e3anull\uff0c\u83b7\u53d6\u65f6\u62a5\u9519 } 1 2 3 4 5 6 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); String str = \"A\" ; Optional optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional\uff08\u53ef\u7a7a\uff09 System . out . println ( optional . map ( s -> s + \"A\" ). get ()); //\u5728\u5c3e\u90e8\u8ffd\u52a0\u4e00\u4e2aA } \u5176\u4ed6\u64cd\u4f5c\u81ea\u5b66\u4e86\u89e3\u3002 Arrays\u548cCollections\u7684\u4f7f\u7528 Arrays\u662f\u4e00\u4e2a\u7528\u4e8e\u64cd\u4f5c\u6570\u7ec4\u7684\u5de5\u5177\u7c7b\uff0c\u5b83\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u5de5\u5177\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 /** * This class contains various methods for manipulating arrays (such as * sorting and searching). This class also contains a static factory * that allows arrays to be viewed as lists. <- \u6ce8\u610f\uff0c\u8fd9\u53e5\u8bdd\u5f88\u5173\u952e * * @author Josh Bloch * @author Neal Gafter * @author John Rose * @since 1.2 */ public class Arrays { \u7531\u4e8e\u64cd\u4f5c\u6570\u7ec4\u5e76\u4e0d\u50cf\u96c6\u5408\u90a3\u6837\u65b9\u4fbf\uff0c\u56e0\u6b64JDK\u63d0\u4f9b\u4e86Arrays\u7c7b\u6765\u589e\u5f3a\u5bf9\u6570\u7ec4\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; Arrays . sort ( array ); //\u76f4\u63a5\u8fdb\u884c\u6392\u5e8f\uff08\u5e95\u5c42\u539f\u7406\uff1a\u8fdb\u884c\u5224\u65ad\uff0c\u5143\u7d20\u5c11\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u5927\u91cf\u5143\u7d20\u4f7f\u7528\u53cc\u8f74\u5feb\u901f/\u5f52\u5e76\u6392\u5e8f\uff09 System . out . println ( array ); //\u7531\u4e8eint[]\u662f\u4e00\u4e2a\u5bf9\u8c61\u7c7b\u578b\uff0c\u800c\u6570\u7ec4\u9ed8\u8ba4\u662f\u6ca1\u6709\u91cd\u5199toString()\u65b9\u6cd5\uff0c\u56e0\u6b64\u65e0\u6cd5\u6253\u5370\u5230\u60f3\u8981\u7684\u7ed3\u679c System . out . println ( Arrays . toString ( array )); //\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Arrays.toString()\u6765\u50cf\u96c6\u5408\u4e00\u6837\u76f4\u63a5\u6253\u5370\u6bcf\u4e00\u4e2a\u5143\u7d20\u51fa\u6765 } 1 2 3 4 5 6 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; Arrays . sort ( array ); System . out . println ( \"\u6392\u5e8f\u540e\u7684\u7ed3\u679c\uff1a\" + Arrays . toString ( array )); System . out . println ( \"\u76ee\u6807\u5143\u7d203\u4f4d\u7f6e\u4e3a\uff1a\" + Arrays . binarySearch ( array , 3 )); //\u4e8c\u5206\u641c\u7d20\uff0c\u5fc5\u987b\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6570\u7ec4\uff01 } 1 2 3 4 5 6 7 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; Arrays . stream ( array ) //\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u6d41\u8fdb\u884c\u64cd\u4f5c . sorted () . forEach ( System . out :: println ); } 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; int [] array2 = Arrays . copyOf ( array , array . length ); //\u590d\u5236\u4e00\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u6570\u7ec4 System . out . println ( Arrays . toString ( array2 )); System . out . println ( Arrays . equals ( array , array2 )); //\u6bd4\u8f83\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u503c\u76f8\u540c Arrays . fill ( array , 0 ); //\u5c06\u6570\u7ec4\u7684\u6240\u6709\u503c\u5168\u90e8\u586b\u5145\u4e3a\u6307\u5b9a\u503c System . out . println ( Arrays . toString ( array )); Arrays . setAll ( array2 , i -> array2 [ i ] + 2 ); //\u4f9d\u6b21\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5143\u7d20\uff08\u6ce8\u610fi\u662f\u4e0b\u6807\u4f4d\u7f6e\uff09 System . out . println ( Arrays . toString ( array2 )); //\u8fd9\u91cc\u8ba1\u7b97\u8ba9\u6bcf\u4e2a\u5143\u7d20\u503c+2 } \u601d\u8003\uff1a\u5f53\u4e8c\u7ef4\u6570\u7ec4\u4f7f\u7528 Arrays.equals() \u8fdb\u884c\u6bd4\u8f83\u4ee5\u53ca Arrays.toString() \u8fdb\u884c\u6253\u5370\u65f6\uff0c\u8fd8\u4f1a\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u5417\uff1f 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Integer [][] array = {{ 1 , 5 }, { 2 , 4 }, { 7 , 3 }, { 6 }}; Integer [][] array2 = {{ 1 , 5 }, { 2 , 4 }, { 7 , 3 }, { 6 }}; System . out . println ( Arrays . toString ( array )); //\u8fd9\u6837\u8fd8\u4f1a\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u5417\uff1f System . out . println ( Arrays . equals ( array2 , array )); //\u8fd9\u6837\u8fd8\u4f1a\u5f97\u5230true\u5417\uff1f System . out . println ( Arrays . deepToString ( array )); //\u4f7f\u7528deepToString\u5c31\u80fd\u5230\u6253\u5370\u591a\u7ef4\u6570\u7ec4 System . out . println ( Arrays . deepEquals ( array2 , array )); //\u4f7f\u7528deepEquals\u5c31\u80fd\u6bd4\u8f83\u591a\u7ef4\u6570\u7ec4 } \u90a3\u4e48\uff0c\u4e00\u5f00\u59cb\u63d0\u5230\u7684\u5f53\u505aList\u8fdb\u884c\u64cd\u4f5c\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Arrays.asList() \u6765\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e00\u4e2a \u56fa\u5b9a\u957f\u5ea6\u7684List 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Integer [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; List < Integer > list = Arrays . asList ( array ); //\u4e0d\u652f\u6301\u57fa\u672c\u7c7b\u578b\u6570\u7ec4\uff0c\u5fc5\u987b\u662f\u5bf9\u8c61\u7c7b\u578b\u6570\u7ec4 Arrays . asList ( \"A\" , \"B\" , \"C\" ); //\u4e5f\u53ef\u4ee5\u9010\u4e2a\u6dfb\u52a0\uff0c\u56e0\u4e3a\u662f\u53ef\u53d8\u53c2\u6570 list . add ( 1 ); //\u6b64List\u5b9e\u73b0\u662f\u957f\u5ea6\u56fa\u5b9a\u7684\uff0c\u662fArrays\u5185\u90e8\u5355\u72ec\u5b9e\u73b0\u7684\u4e00\u4e2a\u7c7b\u578b\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u6dfb\u52a0\u64cd\u4f5c list . remove ( 0 ); //\u540c\u7406\uff0c\u4e5f\u4e0d\u652f\u6301\u79fb\u9664 list . set ( 0 , 8 ); //\u76f4\u63a5\u8bbe\u7f6e\u6307\u5b9a\u4e0b\u6807\u7684\u503c\u5c31\u53ef\u4ee5 list . sort ( Comparator . reverseOrder ()); //\u4e5f\u53ef\u4ee5\u6267\u884c\u6392\u5e8f\u64cd\u4f5c System . out . println ( list ); //\u4e5f\u53ef\u4ee5\u50cfList\u90a3\u6837\u76f4\u63a5\u6253\u5370 } \u6587\u5b57\u6e38\u620f\uff1a allows arrays to be viewed as lists \uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5f53\u505aList\u4f7f\u7528\uff0c\u672c\u8d28\u8fd8\u662f\u6570\u7ec4\uff0c\u56e0\u6b64\u6570\u7ec4\u7684\u5c5e\u6027\u4f9d\u7136\u5b58\u5728\uff01\u56e0\u6b64\u5982\u679c\u8981\u5c06\u6570\u7ec4\u5feb\u901f\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684List\uff0c\u53ef\u4ee5\u50cf\u8fd9\u6837\uff1a 1 2 3 4 public static void main ( String [] args ) { Integer [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; List < Integer > list = new ArrayList <> ( Arrays . asList ( array )); } \u901a\u8fc7\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u771f\u6b63\u7684ArrayList\u5e76\u5728\u6784\u9020\u65f6\u5c06Arrays\u7684List\u503c\u4f20\u9012\u3002 \u65e2\u7136\u6570\u7ec4\u64cd\u4f5c\u90fd\u8fd9\u4e48\u65b9\u4fbf\u4e86\uff0c\u96c6\u5408\u64cd\u4f5c\u80fd\u4e0d\u80fd\u4e5f\u5b89\u6392\u70b9\u9ad8\u7ea7\u7684\u73a9\u6cd5\u5462\uff1f\u90a3\u5fc5\u987b\u7684\uff0cJDK\u4e3a\u6211\u4eec\u51c6\u5907\u7684Collocations\u7c7b\u5c31\u662f\u4e13\u7528\u4e8e\u96c6\u5408\u7684\u5de5\u5177\u7c7b\uff1a 1 2 3 4 5 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); Collections . max ( list ); Collections . min ( list ); } \u5f53\u7136\uff0cCollections\u63d0\u4f9b\u7684\u5185\u5bb9\u76f8\u6bd4Arrays\u4f1a\u66f4\u591a\uff0c\u5e0c\u671b\u5927\u5bb6\u4e0b\u53bb\u81ea\u884c\u4e86\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u4ecb\u7ecd\u4e86\u3002 \u96c6\u5408\u7c7b\u7f16\u7a0b\u5b9e\u6218 \u53cd\u8f6c\u94fe\u8868 1 <- 3 <- 5 <- 7 <- 9 \u8f6c\u6362\u4e3a 1 <- 3 <- 5 <- 7 <- 9 \u73b0\u5728\u6709\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u5c1d\u8bd5\u5c06\u5176\u6240\u6709\u8282\u70b9\u5012\u5e8f\u6392\u5217 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class Main { public static void main ( String [] args ) { Node head = new Node ( 1 ); head . next = new Node ( 3 ); head . next . next = new Node ( 5 ); head . next . next . next = new Node ( 7 ); head . next . next . next . next = new Node ( 9 ); head = reverse ( head ); while ( head != null ){ System . out . println ( head . value + \" \" ); head = head . next ; } } public static class Node { public int value ; public Node next ; public Node ( int data ) { this . value = data ; } } public static Node reverse ( Node head ) { //\u5728\u8fd9\u91cc\u5b9e\u73b0 } } \u91cd\u5efa\u4e8c\u53c9\u6811 \u73b0\u5728\u77e5\u9053\u4e8c\u53c9\u6811\u7684\u524d\u5e8f: GDAFEMHZ\uff0c\u4ee5\u53ca\u4e2d\u5e8f: ADEFGHMZ\uff0c\u8bf7\u6839\u636e\u5df2\u77e5\u4fe1\u606f\u8fd8\u539f\u8fd9\u9897\u4e8c\u53c9\u6811\u3002 \u5b9e\u73b0\u8ba1\u7b97\u5668 \u5b9e\u73b0\u4e00\u4e2a\u8ba1\u7b97\u5668\uff0c\u8981\u6c42\u8f93\u5165\u4e00\u4e2a\u8ba1\u7b97\u516c\u5f0f\uff08\u542b\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\u7b26\uff0c\u6ca1\u6709\u8d1f\u6570\u4f46\u662f\u6709\u5c0f\u6570\uff09\uff0c\u5f97\u5230\u7ed3\u679c\uff0c\u6bd4\u5982\u8f93\u5165\uff1a1+4*3/1.321\uff0c\u5f97\u5230\u7ed3\u679c\u4e3a\uff1a2.2 \u5b57\u7b26\u4e32\u5339\u914d\uff08KMP\u7b97\u6cd5\uff09 \u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u4e3b\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u8bf7\u5224\u65ad\u4e3b\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u5b50\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u4e3b\u5b57\u7b26\u4e32\uff1aABCABCDHI\uff0c\u5b50\u5b57\u7b26\u4e32\uff1aABCD\uff0c\u56e0\u6b64\u4e3b\u5b57\u7b26\u4e32\u5305\u542b\u6b64\u5b50\u5b57\u7b26\u4e32\uff1b\u4e3b\u5b57\u7b26\u4e32\uff1aABCABCUISA\uff0c\u5b50\u5b57\u7b26\u4e32\uff1aABCD\uff0c\u5219\u4e0d\u5305\u542b\u3002","title":"Java\u6cdb\u578b\u4e0e\u96c6\u5408\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#java","text":"\u5728\u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86\u6700\u91cd\u8981\u7684\u7c7b\u548c\u5bf9\u8c61\uff0c\u4e86\u89e3\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u601d\u60f3\uff0c\u6ce8\u610f\uff0c\u975e\u5e38\u91cd\u8981\uff0c\u9762\u5411\u5bf9\u8c61\u662f\u5fc5\u987b\u8981\u6df1\u5165\u7406\u89e3\u548c\u638c\u63e1\u7684\u5185\u5bb9\uff0c\u4e0d\u80fd\u8349\u8349\u7ed3\u675f\u3002\u5728\u672c\u7ae0\u8282\uff0c\u6211\u4eec\u4f1a\u7ee7\u7eed\u6df1\u5165\u4e86\u89e3\uff0c\u4ece\u6211\u4eec\u7684\u6cdb\u578b\u5f00\u59cb\uff0c\u518d\u5230\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6700\u540e\u518d\u5f00\u59cb\u6211\u4eec\u7684\u96c6\u5408\u7c7b\u5b66\u4e60\u3002","title":"Java\u6cdb\u578b\u4e0e\u96c6\u5408\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_1","text":"\u4e3a\u4e86\u7edf\u8ba1\u5b66\u751f\u6210\u7ee9\uff0c\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2aScore\u5bf9\u8c61\uff0c\u5305\u62ec\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u53f7\u3001\u8bfe\u7a0b\u6210\u7ee9\uff0c\u4f46\u662f\u6210\u7ee9\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u4ee5 \u4f18\u79c0\u3001\u826f\u597d\u3001\u5408\u683c \u6765\u4f5c\u4e3a\u7ed3\u679c\uff0c\u8fd8\u6709\u4e00\u79cd\u5c31\u662f 60.0\u300175.5\u300192.5 \u8fd9\u6837\u7684\u6570\u5b57\u5206\u6570\uff0c\u90a3\u4e48\u73b0\u5728\u8be5\u5982\u4f55\u53bb\u8bbe\u8ba1\u8fd9\u6837\u7684\u4e00\u4e2aScore\u7c7b\u5462\uff1f\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u6210\u7ee9\u53ef\u80fd\u662f String \u7c7b\u578b\uff0c\u4e5f\u53ef\u80fd\u662f Integer \u7c7b\u578b\uff0c\u5982\u4f55\u624d\u80fd\u5f88\u597d\u7684\u53bb\u5b58\u53ef\u80fd\u51fa\u73b0\u7684\u4e24\u79cd\u7c7b\u578b\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 public class Score { String name ; String id ; Object score ; //\u56e0\u4e3aObject\u662f\u6240\u6709\u7c7b\u578b\u7684\u7236\u7c7b\uff0c\u56e0\u6b64\u65e2\u53ef\u4ee5\u5b58\u653eInteger\u4e5f\u80fd\u5b58\u653eString public Score ( String name , String id , Object score ) { this . name = name ; this . id = id ; this . score = score ; } } \u4ee5\u4e0a\u7684\u65b9\u6cd5\u867d\u7136\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u591a\u79cd\u7c7b\u578b\u5b58\u50a8\u95ee\u9898\uff0c\u4f46\u662fObject\u7c7b\u578b\u5728\u7f16\u8bd1\u9636\u6bb5\u5e76\u4e0d\u5177\u6709\u826f\u597d\u7684\u7c7b\u578b\u5224\u65ad\u80fd\u529b\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u4ee5\u4e0b\u7684\u60c5\u51b5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Score score = new Score ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); //\u662fString\u7c7b\u578b\u7684 //.... Integer number = ( Integer ) score . score ; //\u83b7\u53d6\u6210\u7ee9\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u867d\u7136\u5e76\u4e0d\u662f\u4e00\u5f00\u59cb\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u7f16\u8bd1\u4e0d\u4f1a\u62a5\u9519 } //\u8fd0\u884c\u65f6\u51fa\u73b0\u5f02\u5e38\uff01 Exception in thread \"main\" java . lang . ClassCastException : java . lang . String cannot be cast to java . lang . Integer at com . test . Main . main ( Main . java : 14 ) \u4f7f\u7528Object\u7c7b\u578b\u4f5c\u4e3a\u5f15\u7528\uff0c\u53d6\u503c\u53ea\u80fd\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u663e\u7136\u65e0\u6cd5\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u7c7b\u578b\u662f\u5426\u5b89\u5168\uff0c\u9879\u76ee\u4e2d\u4ee3\u7801\u91cf\u975e\u5e38\u4e4b\u5927\uff0c\u8fdb\u884c\u7c7b\u578b\u6bd4\u8f83\u53c8\u4f1a\u5bfc\u81f4\u989d\u5916\u7684\u5f00\u9500\u548c\u589e\u52a0\u4ee3\u7801\u91cf\uff0c\u5982\u679c\u4e0d\u7ecf\u6bd4\u8f83\u5c31\u5f88\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u4ee3\u7801\u7684\u5065\u58ee\u6027\u6709\u6240\u6b20\u7f3a\uff01\uff08\u6b64\u65b9\u6cd5\u867d\u7136\u53ef\u884c\uff0c\u4f46\u5e76\u4e0d\u662f\u6700\u597d\u7684\u65b9\u6cd5\uff09 \u4e3a\u4e86\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\uff0cJDK1.5\u65b0\u589e\u4e86\u6cdb\u578b\uff0c\u5b83\u80fd\u591f\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u68c0\u67e5\u7c7b\u578b\u5b89\u5168\uff0c\u5927\u5927\u63d0\u5347\u5f00\u53d1\u6548\u7387\u3002 1 2 3 4 5 6 7 8 9 10 11 public class Score < T > { //\u5c06Score\u8f6c\u53d8\u4e3a\u6cdb\u578b\u7c7b<T> String name ; String id ; T score ; //T\u4e3a\u6cdb\u578b\uff0c\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u7c7b\u578b\u81ea\u52a8\u53d8\u6210\u5bf9\u5e94\u7c7b\u578b public Score ( String name , String id , T score ) { //\u63d0\u4f9b\u7684score\u7c7b\u578b\u5373\u4e3aT\u4ee3\u8868\u7684\u7c7b\u578b this . name = name ; this . id = id ; this . score = score ; } } 1 2 3 4 5 6 public static void main ( String [] args ) { //\u76f4\u63a5\u786e\u5b9aScore\u7684\u7c7b\u578b\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6210\u7ee9 Score < String > score = new Score < String > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); Integer i = score . score ; //\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u56e0\u4e3a\u6210\u5458\u53d8\u91cfscore\u7c7b\u578b\u88ab\u5b9a\u4e3aString\uff01 } \u6cdb\u578b\u5c06\u6570\u636e\u7c7b\u578b\u7684\u786e\u5b9a\u63a7\u5236\u5728\u4e86\u7f16\u8bd1\u9636\u6bb5\uff0c\u5728\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\u5c31\u80fd\u660e\u786e\u6cdb\u578b\u7684\u7c7b\u578b\uff01\u5982\u679c\u7c7b\u578b\u4e0d\u7b26\u5408\uff0c\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff01 \u6cdb\u578b\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff08\u5e76\u4e0d\u662fJVM\u6240\u652f\u6301\u7684\u8bed\u6cd5\uff0c\u7f16\u8bd1\u540e\u4f1a\u8f6c\u6210\u7f16\u8bd1\u5668\u652f\u6301\u7684\u8bed\u6cd5\uff0c\u6bd4\u5982\u4e4b\u524d\u7684foreach\u5c31\u662f\uff09\uff0c\u5728\u7f16\u8bd1\u540e\u4f1a\u88ab\u64e6\u9664\uff0c\u53d8\u56de\u4e0a\u9762\u7684Object\u7c7b\u578b\u8c03\u7528\uff0c\u4f46\u662f\u7c7b\u578b\u8f6c\u6362\u7531\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u81ea\u5df1\u8fdb\u884c\u8f6c\u6362\uff08\u5b89\u5168\uff09 1 2 3 4 5 //\u53cd\u7f16\u8bd1\u540e\u7684\u4ee3\u7801 public static void main ( String [] args ) { Score score = new Score ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); String i = ( String ) score . score ; //\u5176\u5b9e\u4f9d\u7136\u4f1a\u53d8\u4e3a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u662f\u8fd9\u662f\u7531\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\u7684 } \u50cf\u8fd9\u6837\u5728\u7f16\u8bd1\u540e\u6cdb\u578b\u7684\u5185\u5bb9\u6d88\u5931\u8f6c\u53d8\u4e3aObject\u7684\u60c5\u51b5\u79f0\u4e3a \u7c7b\u578b\u64e6\u9664 \uff08\u91cd\u8981\uff0c\u9700\u8981\u5b8c\u5168\u7406\u89e3\uff09\uff0c\u6240\u4ee5\u6cdb\u578b\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u7c7b\u578b\u7684\u4e00\u79cd\u8bed\u6cd5\u800c\u5df2\uff0c\u5e76\u4e0d\u662fJVM\u6240\u652f\u6301\u7684\u3002 \u7efc\u4e0a\uff0c\u6cdb\u578b\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u7c7b\u578b\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u7c7b\u578b\u3002","title":"\u8d70\u8fdb\u6cdb\u578b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_2","text":"","title":"\u6cdb\u578b\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_3","text":"\u4e0a\u4e00\u8282\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u6cdb\u578b\u7c7b\u7684\u5b9a\u4e49\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u666e\u901a\u7684\u7c7b\u591a\u4e86\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u5728\u4f7f\u7528\u65f6\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u6cdb\u578b\u7c7b\u578b\u3002\u6cdb\u578b\u7684\u540d\u79f0\u4e00\u822c\u53d6\u5355\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u6bd4\u5982T\u4ee3\u8868Type\uff0c\u4e5f\u5c31\u662f \u7c7b\u578b \u7684\u82f1\u6587\u5355\u8bcd\u9996\u5b57\u6bcd\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6570\u5b57\u548c\u5176\u4ed6\u7684\u5b57\u7b26\u3002 1 2 3 4 5 6 7 8 9 10 11 public class Score < T > { //\u5c06Score\u8f6c\u53d8\u4e3a\u6cdb\u578b\u7c7b<T> String name ; String id ; T score ; //T\u4e3a\u6cdb\u578b\uff0c\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u7c7b\u578b\u81ea\u52a8\u53d8\u6210\u5bf9\u5e94\u7c7b\u578b public Score ( String name , String id , T score ) { //\u63d0\u4f9b\u7684score\u7c7b\u578b\u5373\u4e3aT\u4ee3\u8868\u7684\u7c7b\u578b this . name = name ; this . id = id ; this . score = score ; } } \u5728\u4e00\u4e2a\u666e\u901a\u7c7b\u578b\u4e2d\u5b9a\u4e49\u6cdb\u578b\uff0c\u6cdb\u578bT\u79f0\u4e3a \u53c2\u6570\u5316\u7c7b\u578b \uff0c\u5728\u5b9a\u4e49\u6cdb\u578b\u7c7b\u7684\u5f15\u7528\u65f6\uff0c\u9700\u8981\u660e\u786e\u6307\u51fa\u7c7b\u578b\uff1a 1 Score < String > score = new Score < String > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); \u6b64\u65f6\u7c7b\u4e2d\u7684\u6cdb\u578bT\u5df2\u7ecf\u88ab\u66ff\u6362\u4e3aString\u4e86\uff0c\u5728\u6211\u4eec\u83b7\u53d6\u6b64\u5bf9\u8c61\u7684\u6cdb\u578b\u5c5e\u6027\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u544a\u8bc9\u6211\u4eec\u7c7b\u578b\uff1a 1 Integer i = score . score ; //\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u56e0\u4e3a\u6210\u5458\u53d8\u91cfscore\u660e\u786e\u4e3aString\u7c7b\u578b \u6ce8\u610f\uff0c\u6cdb\u578b\u53ea\u80fd\u7528\u4e8e\u5bf9\u8c61\u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u975e\u9759\u6001\u7684\u6210\u5458\u53d8\u91cf\u624d\u80fd\u4f7f\u7528\uff1a 1 static T score ; //\u9519\u8bef\uff0c\u4e0d\u80fd\u5728\u9759\u6001\u6210\u5458\u4e0a\u5b9a\u4e49 \u7531\u6b64\u53ef\u89c1\uff0c\u6cdb\u578b\u662f\u53ea\u6709\u5728\u521b\u5efa\u5bf9\u8c61\u540e\u7f16\u8bd1\u5668\u624d\u80fd\u660e\u786e\u6cdb\u578b\u7c7b\u578b\uff0c\u800c\u9759\u6001\u7c7b\u578b\u662f\u7c7b\u6240\u5177\u6709\u7684\u5c5e\u6027\uff0c\u4e0d\u8db3\u4ee5\u4f7f\u5f97\u7f16\u8bd1\u5668\u5b8c\u6210\u7c7b\u578b\u63a8\u65ad\u3002 \u6cdb\u578b\u65e0\u6cd5\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u57fa\u672c\u7c7b\u578b\uff0c\u53ea\u80fd\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u8fdb\u884c\u66ff\u6362\uff01 1 Score < double > score = new Score < double > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 90.5 ); //\u7f16\u8bd1\u4e0d\u901a\u8fc7 \u90a3\u4e48\u4e3a\u4ec0\u4e48\u6cdb\u578b\u65e0\u6cd5\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u5462\uff1f\u56de\u60f3\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u7c7b\u578b\u64e6\u9664\uff0c\u5176\u5b9e\u5c31\u5f88\u597d\u7406\u89e3\u4e86\u3002\u7531\u4e8eJVM\u6ca1\u6709\u6cdb\u578b\u6982\u5ff5\uff0c\u56e0\u6b64\u6cdb\u578b\u6700\u540e\u8fd8\u662f\u4f1a\u88ab\u7f16\u8bd1\u5668\u7f16\u8bd1\u4e3aObject\uff0c\u5e76\u91c7\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u5f62\u5f0f\u8fdb\u884c\u7c7b\u578b\u5339\u914d\uff0c\u800c\u6211\u4eec\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u4e4b\u95f4\u65e0\u6cd5\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u6765\u5904\u7406\u3002","title":"\u6cdb\u578b\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_4","text":"\u6cdb\u578b\u65b9\u6cd5\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u672a\u77e5\u7684\u7c7b\u578b\u6765\u4f7f\u7528\u5373\u53ef\uff1a 1 2 3 4 5 6 7 public T getScore () { //\u82e5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u6cdb\u578b\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8fdb\u884c\u63a8\u65ad return score ; } public void setScore ( T score ) { //\u82e5\u65b9\u6cd5\u7684\u5f62\u5f0f\u53c2\u6570\u4e3a\u6cdb\u578b\uff0c\u90a3\u4e48\u5b9e\u53c2\u53ea\u80fd\u662f\u5b9a\u4e49\u65f6\u7684\u7c7b\u578b this . score = score ; } 1 2 Score < String > score = new Score < String > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , \"\u4f18\u79c0\" ); score . setScore ( 10 ); //\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u56e0\u4e3a\u53ea\u63a5\u53d7String\u7c7b\u578b \u540c\u6837\u5730\uff0c\u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u7c7b\u5b9a\u4e49\u7684\u6cdb\u578b\uff08\u6ce8\u610f\u662f\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\uff0c\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\uff09","title":"\u7c7b\u7684\u6cdb\u578b\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_5","text":"\u90a3\u4e48\u5982\u679c\u6211\u60f3\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4f7f\u7528\u6cdb\u578b\u5462\uff1f\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u4e4b\u524d\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u6cdb\u578b\uff0c\u56e0\u4e3a\u4e4b\u524d\u6211\u4eec\u7684\u6cdb\u578b\u5b9a\u4e49\u662f\u5728\u7c7b\u4e0a\u7684\uff0c\u53ea\u6709\u660e\u786e\u5177\u4f53\u7684\u7c7b\u578b\u624d\u80fd\u5f00\u59cb\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u5bf9\u8c61\u65f6\u5b8c\u6210\u7c7b\u578b\u786e\u5b9a\uff0c\u4f46\u662f\u9759\u6001\u65b9\u6cd5\u4e0d\u9700\u8981\u4f9d\u9644\u4e8e\u5bf9\u8c61\uff0c\u90a3\u4e48\u53ea\u80fd\u5728\u4f7f\u7528\u65f6\u518d\u6765\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\uff0c\u4f46\u662f\u9700\u8981\u5355\u72ec\u5b9a\u4e49\uff1a 1 2 3 public static < E > void test ( E e ){ //\u5728\u65b9\u6cd5\u5b9a\u4e49\u524d\u58f0\u660e\u6cdb\u578b System . out . println ( e ); } \u540c\u7406\uff0c\u6210\u5458\u65b9\u6cd5\u4e5f\u80fd\u81ea\u884c\u5b9a\u4e49\u6cdb\u578b\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u518d\u8fdb\u884c\u7c7b\u578b\u786e\u5b9a\uff1a 1 2 3 public < E > void test ( E e ){ System . out . println ( e ); } \u5176\u5b9e\uff0c\u65e0\u8bba\u662f\u6cdb\u578b\u7c7b\u8fd8\u662f\u6cdb\u578b\u65b9\u6cd5\uff0c\u518d\u4f7f\u7528\u65f6\u4e00\u5b9a\u8981\u80fd\u591f\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\uff0c\u660e\u786e\u7c7b\u578b\u624d\u884c\u3002 \u6ce8\u610f\u4e00\u5b9a\u8981\u533a\u5206\u7c7b\u5b9a\u4e49\u7684\u6cdb\u578b\u548c\u65b9\u6cd5\u524d\u5b9a\u4e49\u7684\u6cdb\u578b\uff01","title":"\u81ea\u5b9a\u4e49\u6cdb\u578b\u65b9\u6cd5"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_6","text":"\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2a\u6cdb\u578b\u7c7b\u7684\u5f15\u7528\u65f6\uff0c\u9700\u8981\u5728\u540e\u9762\u6307\u51fa\u6b64\u7c7b\u578b\uff1a 1 Score < Integer > score ; //\u58f0\u660e\u6cdb\u578b\u4e3aInteger\u7c7b\u578b \u5982\u679c\u4e0d\u5e0c\u671b\u6307\u5b9a\u7c7b\u578b\uff0c\u6216\u662f\u5e0c\u671b\u6b64\u5f15\u7528\u7c7b\u578b\u53ef\u4ee5\u5f15\u7528\u4efb\u610f\u6cdb\u578b\u7684 Score \u7c7b\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 ? \u901a\u914d\u7b26\uff0c\u6765\u8868\u793a\u81ea\u52a8\u5339\u914d\u4efb\u610f\u7684\u53ef\u7528\u7c7b\u578b\uff1a 1 Score <?> score ; //score\u53ef\u4ee5\u5f15\u7528\u4efb\u610f\u7684Score\u7c7b\u578b\u5bf9\u8c61\u4e86\uff01 \u90a3\u4e48\u4f7f\u7528\u901a\u914d\u7b26\u4e4b\u540e\uff0c\u5f97\u5230\u7684\u6cdb\u578b\u6210\u5458\u53d8\u91cf\u4f1a\u662f\u4ec0\u4e48\u7c7b\u578b\u5462\uff1f 1 Object o = score . getScore (); //\u53ea\u80fd\u53d8\u4e3aObject \u56e0\u4e3a\u4f7f\u7528\u4e86\u901a\u914d\u7b26\uff0c\u7f16\u8bd1\u5668\u5c31\u65e0\u6cd5\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u539f\u59cb\u7c7b\u578b\u3002 \u5728\u5b66\u4e60\u4e86\u6cdb\u578b\u7684\u754c\u9650\u540e\uff0c\u6211\u4eec\u8fd8\u4f1a\u7ee7\u7eed\u4e86\u89e3\u901a\u914d\u7b26\u7684\u4f7f\u7528\u3002","title":"\u6cdb\u578b\u5f15\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_7","text":"\u73b0\u5728\u6709\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u73b0\u5728\u6ca1\u6709String\u7c7b\u578b\u7684\u6210\u7ee9\u4e86\uff0c\u4f46\u662f\u6210\u7ee9\u4f9d\u7136\u53ef\u80fd\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u80fd\u662f\u5c0f\u6570\uff0c\u8fd9\u65f6\u6211\u4eec\u4e0d\u5e0c\u671b\u7528\u6237\u5c06\u6cdb\u578b\u6307\u5b9a\u4e3a\u9664\u6570\u5b57\u7c7b\u578b\u5916\u7684\u5176\u4ed6\u7c7b\u578b\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230\u6cdb\u578b\u7684\u4e0a\u754c\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Score < T extends Number > { //\u8bbe\u5b9a\u6cdb\u578b\u4e0a\u754c\uff0c\u5fc5\u987b\u662fNumber\u7684\u5b50\u7c7b private final String name ; private final String id ; private T score ; public Score ( String name , String id , T score ) { this . name = name ; this . id = id ; this . score = score ; } public T getScore () { return score ; } } \u901a\u8fc7 extends \u5173\u952e\u5b57\u8fdb\u884c\u4e0a\u754c\u9650\u5b9a\uff0c\u53ea\u6709\u6307\u5b9a\u7c7b\u578b\u6216\u6307\u5b9a\u7c7b\u578b\u7684\u5b50\u7c7b\u624d\u80fd\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\u3002 \u540c\u6837\u7684\uff0c\u6cdb\u578b\u901a\u914d\u7b26\u4e5f\u652f\u6301\u6cdb\u578b\u7684\u754c\u9650\uff1a 1 Score <? extends Number > score ; //\u9650\u5b9a\u4e3a\u5339\u914dNumber\u53ca\u5176\u5b50\u7c7b\u7684\u7c7b\u578b \u540c\u7406\uff0c\u65e2\u7136\u6cdb\u578b\u6709\u4e0a\u9650\uff0c\u90a3\u4e48\u4e5f\u6709\u4e0b\u9650\uff1a 1 Score <? super Integer > score ; //\u9650\u5b9a\u4e3a\u5339\u914dInteger\u53ca\u5176\u7236\u7c7b \u901a\u8fc7 super \u5173\u952e\u5b57\u8fdb\u884c\u4e0b\u754c\u9650\u5b9a\uff0c\u53ea\u6709\u6307\u5b9a\u7c7b\u578b\u6216\u6307\u5b9a\u7c7b\u578b\u7684\u7236\u7c7b\u624d\u80fd\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\u3002 \u56fe\u89e3\u5982\u4e0b\uff1a \u90a3\u4e48\u9650\u5b9a\u4e86\u4e0a\u754c\u540e\uff0c\u6211\u4eec\u518d\u6765\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6cdb\u578b\u6210\u5458\uff0c\u4f1a\u53d8\u6210\u4ec0\u4e48\u7c7b\u578b\u5462\uff1f 1 2 Score <? extends Number > score = new Score <> ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 10 ); Number o = score . getScore (); //\u5f97\u5230\u7684\u7ed3\u679c\u4e3a\u4e0a\u754c\u7c7b\u578b \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u6211\u4eec\u6307\u5b9a\u4e86\u4e0a\u754c\u540e\uff0c\u7f16\u8bd1\u5668\u5c31\u5c06\u8303\u56f4\u4ece\u539f\u59cb\u7c7b\u578b Object \u63d0\u5347\u5230\u6211\u4eec\u6307\u5b9a\u7684\u4e0a\u754c Number \uff0c\u4f46\u662f\u4f9d\u7136\u65e0\u6cd5\u660e\u786e\u5177\u4f53\u7c7b\u578b\u3002\u601d\u8003\uff1a\u90a3\u5982\u679c\u5b9a\u4e49\u4e0b\u9650\u5462\uff1f \u90a3\u4e48\u65e2\u7136\u6211\u4eec\u53ef\u4ee5\u7ed9\u6cdb\u578b\u7c7b\u9650\u5b9a\u4e0a\u754c\uff0c\u73b0\u5728\u6211\u4eec\u6765\u770b\u7f16\u8bd1\u540e\u7ed3\u679c\u5462\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 //\u4f7f\u7528javap -l \u8fdb\u884c\u53cd\u7f16\u8bd1 public class com . test . Score < T extends java . lang . Number > { public com . test . Score ( java . lang . String , java . lang . String , T ); LineNumberTable : line 8 : 0 line 9 : 4 line 10 : 9 line 11 : 14 line 12 : 19 LocalVariableTable : Start Length Slot Name Signature 0 20 0 this Lcom / test / Score ; 0 20 1 name Ljava / lang / String ; 0 20 2 id Ljava / lang / String ; 0 20 3 score Ljava / lang / Number ; //\u53ef\u4ee5\u770b\u5230score\u7684\u7c7b\u578b\u76f4\u63a5\u88ab\u7f16\u8bd1\u4e3aNumber\u7c7b public T getScore (); LineNumberTable : line 15 : 0 LocalVariableTable : Start Length Slot Name Signature 0 5 0 this Lcom / test / Score ; } \u56e0\u6b64\uff0c\u4e00\u65e6\u786e\u7acb\u4e0a\u9650\u540e\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u7c7b\u578b\u63d0\u5347\u5230\u4e0a\u9650\u7c7b\u578b\u3002","title":"\u6cdb\u578b\u7684\u754c\u9650"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_8","text":"\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u521b\u5efa\u6cdb\u578b\u5bf9\u8c61\u90fd\u9700\u8981\u5728\u524d\u540e\u90fd\u6807\u660e\u7c7b\u578b\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u540e\u9762\u7684\u7c7b\u578b\u58f0\u660e\u662f\u53ef\u4ee5\u53bb\u6389\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u4f20\u5165\u53c2\u6570\u65f6\u6216\u5b9a\u4e49\u6cdb\u578b\u7c7b\u7684\u5f15\u7528\u65f6\uff0c\u5c31\u5df2\u7ecf\u660e\u786e\u4e86\u7c7b\u578b\uff0c\u56e0\u6b64JDK1.7\u63d0\u4f9b\u4e86\u94bb\u77f3\u8fd0\u7b97\u7b26\u6765\u7b80\u5316\u4ee3\u7801\uff1a 1 2 3 Score < Integer > score = new Score < Integer > ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 10 ); //1.7\u4e4b\u524d Score < Integer > score = new Score <> ( \"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u57fa\u7840\" , \"EP074512\" , 10 ); //1.7\u4e4b\u540e","title":"\u94bb\u77f3\u8fd0\u7b97\u7b26"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_9","text":"\u6cdb\u578b\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u53ef\u4ee5\u5b9a\u4e49\u5728\u7c7b\u4e0a\uff0c\u540c\u65f6\u4e5f\u80fd\u5b9a\u4e49\u5728\u63a5\u53e3\u4e0a\uff1a 1 2 3 4 public interface ScoreInterface < T > { T getScore (); void setScore ( T t ); } \u5f53\u5b9e\u73b0\u6b64\u63a5\u53e3\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5728\u5b9e\u73b0\u7c7b\u660e\u786e\u6cdb\u578b\u7c7b\u578b\u6216\u662f\u7ee7\u7eed\u4f7f\u7528\u6b64\u6cdb\u578b\uff0c\u8ba9\u5177\u4f53\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u786e\u5b9a\u7c7b\u578b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Score < T > implements ScoreInterface < T > { //\u5c06Score\u8f6c\u53d8\u4e3a\u6cdb\u578b\u7c7b<T> private final String name ; private final String id ; private T score ; public Score ( String name , String id , T score ) { this . name = name ; this . id = id ; this . score = score ; } public T getScore () { return score ; } @Override public void setScore ( T score ) { this . score = score ; } } 1 2 3 4 5 6 7 8 9 10 11 12 public class StringScore implements ScoreInterface < String > { //\u5728\u5b9e\u73b0\u65f6\u660e\u786e\u7c7b\u578b @Override public String getScore () { return null ; } @Override public void setScore ( String s ) { } } \u62bd\u8c61\u7c7b\u540c\u7406\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u6f14\u793a\u4e86\u3002","title":"\u6cdb\u578b\u4e0e\u591a\u6001"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_10","text":"\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u65e2\u7136\u7ee7\u627f\u540e\u660e\u786e\u4e86\u6cdb\u578b\u7c7b\u578b\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48 @Override \u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\u5462\uff0c\u91cd\u5199\u7684\u6761\u4ef6\u662f\u9700\u8981\u548c\u7236\u7c7b\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u5f62\u5f0f\u53c2\u6570\u4e00\u81f4\uff0c\u800c\u6cdb\u578b\u9ed8\u8ba4\u7684\u539f\u59cb\u7c7b\u578b\u662fObject\u7c7b\u578b\uff0c\u5b50\u7c7b\u660e\u786e\u540e\u53d8\u4e3aNumber\u7c7b\u578b\uff0c\u8fd9\u663e\u7136\u4e0d\u6ee1\u8db3\u91cd\u5199\u7684\u6761\u4ef6\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u4f9d\u7136\u80fd\u7f16\u8bd1\u901a\u8fc7\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class A < T > { private T t ; public T get (){ return t ; } public void set ( T t ){ this . t = t ; } } class B extends A < Number > { private Number n ; @Override public Number get (){ //\u8fd9\u5e76\u4e0d\u6ee1\u8db3\u91cd\u5199\u7684\u8981\u6c42\uff0c\u56e0\u4e3a\u53ea\u80fd\u91cd\u5199\u7236\u7c7b\u540c\u6837\u8fd4\u56de\u503c\u548c\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u5374\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff01 return t ; } @Override public void set ( Number t ){ this . t = t ; } } \u901a\u8fc7\u53cd\u7f16\u8bd1\u8fdb\u884c\u89c2\u5bdf\uff0c\u5b9e\u9645\u4e0a\u662f\u7f16\u8bd1\u5668\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u4e24\u4e2a\u6865\u63a5\u65b9\u6cd5\u7528\u4e8e\u652f\u6301\u91cd\u5199\uff1a 1 2 3 4 5 6 7 8 9 @Override public Object get (){ return this . get (); //\u8c03\u7528\u8fd4\u56deNumber\u7684\u90a3\u4e2a\u65b9\u6cd5 } @Override public void set ( Object t ){ this . set (( Number ) t ); //\u8c03\u7528\u53c2\u6570\u662fNumber\u7684\u90a3\u4e2a\u65b9\u6cd5 }","title":"\u591a\u6001\u7c7b\u578b\u64e6\u9664"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_11","text":"\u8b66\u544a\uff01\u672c\u7ae0\u6700\u96be\u7684\u90e8\u5206\uff01 \u5b66\u4e60\u96c6\u5408\u7c7b\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u6709\u6700\u5173\u952e\u7684\u5185\u5bb9\u9700\u8981\u5b66\u4e60\uff0c\u540c\u7b2c\u4e00\u7ae0\u4e00\u6837\uff0c\u81ea\u5e95\u5411\u4e0a\u624d\u662f\u6700\u4f73\u7684\u5b66\u4e60\u65b9\u5411\uff0c\u6bd4\u8d77\u76f4\u63a5\u5e26\u5927\u5bb6\u8ba4\u8bc6\u96c6\u5408\u7c7b\uff0c\u4e0d\u5982\u5148\u4e86\u89e3\u4e00\u4e0b\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u6709\u4e86\u89e3\u4e86\u6570\u636e\u7ed3\u6784\u57fa\u7840\uff0c\u624d\u80fd\u66f4\u597d\u5730\u5b66\u4e60\u96c6\u5408\u7c7b\uff0c\u540c\u65f6\uff0c\u6570\u636e\u7ed3\u6784\u4e5f\u662f\u4f60\u4ee5\u540e\u6df1\u5165\u5b66\u4e60JDK\u6e90\u7801\u7684\u5fc5\u5907\u6761\u4ef6\uff01\uff08\u5b66\u4e60\u4e0d\u8981\u5feb\u9910\u5f0f\uff01\uff09\u5f53\u7136\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u8bb2\u89e3Java\uff0c\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u94fa\u57ab\u4f5c\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u4f1a\u8bb2\u89e3\u5173\u952e\u7684\u90e8\u5206\uff0c\u5176\u4ed6\u90e8\u5206\u53ef\u4ee5\u4e0b\u53bb\u81ea\u884c\u4e86\u89e3\u3002 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u6570\u636e\u7ed3\u6784\u662f\u4e00\u79cd\u6570\u636e\u7ec4\u7ec7\u3001\u7ba1\u7406\u548c\u5b58\u50a8\u7684\u683c\u5f0f,\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u5bf9\u6570\u636e\u9ad8\u6548\u7684\u8bbf\u95ee\u548c\u4fee\u6539\u3002\u66f4\u51c6\u786e\u5730\u8bf4,\u6570\u636e\u7ed3\u6784\u662f\u6570\u636e\u503c\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u4f53\u73b0\u6570\u636e\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u5e94\u7528\u7684\u51fd\u6570\u6216\u64cd\u4f5c\u3002 \u901a\u4fd7\u5730\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u53bb\u5b66\u4e60\u5728\u8ba1\u7b97\u673a\u4e2d\u5982\u4f55\u53bb\u66f4\u597d\u5730\u7ba1\u7406\u6211\u4eec\u7684\u6570\u636e\uff0c\u624d\u80fd\u8ba9\u6211\u4eec\u5bf9\u6211\u4eec\u7684\u6570\u636e\u63a7\u5236\u66f4\u52a0\u7075\u6d3b\uff01","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_12","text":"\u7ebf\u6027\u8868\u662f\u6700\u57fa\u672c\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u662f\u8868\u793a\u4e00\u7ec4\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u6709\u9650\u5e8f\u5217\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u4e0e\u6570\u7ec4\u8fdb\u884c\u53c2\u8003\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u662f\u6570\u7ec4\uff0c\u7ebf\u6027\u8868\u662f\u4e00\u79cd\u8868\u7ed3\u6784\uff0c\u5b83\u80fd\u591f\u652f\u6301\u6570\u636e\u7684\u63d2\u5165\u3001\u5220\u9664\u3001\u66f4\u65b0\u3001\u67e5\u8be2\u7b49\uff0c\u540c\u65f6\u6570\u7ec4\u53ef\u4ee5\u968f\u610f\u5b58\u653e\u5728\u6570\u7ec4\u4e2d\u4efb\u610f\u4f4d\u7f6e\uff0c\u800c\u7ebf\u6027\u8868\u53ea\u80fd\u4f9d\u6b21\u6709\u5e8f\u6392\u5217\uff0c\u4e0d\u80fd\u51fa\u73b0\u7a7a\u9699\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u8bbe\u8ba1\u3002","title":"\u7ebf\u6027\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_13","text":"\u5c06\u6570\u636e\u4f9d\u6b21\u5b58\u50a8\u5728\u8fde\u7eed\u7684\u6574\u5757\u7269\u7406\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\u79f0\u4e3a \u987a\u5e8f\u5b58\u50a8\u7ed3\u6784 \uff0c\u800c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u7684\u7ebf\u6027\u8868\uff0c\u6211\u4eec\u79f0\u4e3a \u987a\u5e8f\u8868 \u3002 \u540c\u6837\u7684\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e2a\u4f53\u90fd\u88ab\u79f0\u4e3a \u5143\u7d20 \uff0c\u5143\u7d20\u5de6\u8fb9\u7684\u5143\u7d20\uff08\u4e0a\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u79f0\u4e3a \u524d\u9a71 \uff0c\u540c\u7406\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\uff08\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u79f0\u4e3a \u540e\u9a71 \u3002 \u6211\u4eec\u8bbe\u8ba1\u7ebf\u6027\u8868\u7684\u76ee\u6807\u5c31\u662f\u4e3a\u4e86\u53bb\u66f4\u597d\u5730\u7ba1\u7406\u6211\u4eec\u7684\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u6570\u7ec4\uff0c\u6765\u8fdb\u884c\u5c01\u88c5\uff0c\u5b9e\u73b0\u589e\u5220\u6539\u67e5\uff01\u65e2\u7136\u8981\u5b58\u50a8\u4e00\u7ec4\u6570\u636e\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u5c31\u80fd\u591f\u5bb9\u7eb3\u4e00\u7ec4\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002 \u76ee\u6807\uff1a\u4ee5\u6570\u7ec4\u4e3a\u5e95\u5c42\uff0c\u7f16\u5199\u4ee5\u4e0b\u62bd\u8c61\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /** * \u7ebf\u6027\u8868\u62bd\u8c61\u7c7b * @param <E> \u5b58\u50a8\u7684\u5143\u7d20(Element)\u7c7b\u578b */ public abstract class AbstractList < E > { /** * \u83b7\u53d6\u8868\u7684\u957f\u5ea6 * @return \u987a\u5e8f\u8868\u7684\u957f\u5ea6 */ public abstract int size (); /** * \u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 * @param e \u5143\u7d20 * @param index \u8981\u6dfb\u52a0\u7684\u4f4d\u7f6e(\u7d22\u5f15) */ public abstract void add ( E e , int index ); /** * \u79fb\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20 * @param index \u4f4d\u7f6e * @return \u79fb\u9664\u7684\u5143\u7d20 */ public abstract E remove ( int index ); /** * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20 * @param index \u4f4d\u7f6e * @return \u5143\u7d20 */ public abstract E get ( int index ); }","title":"\u987a\u5e8f\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_14","text":"\u6570\u636e\u5206\u6563\u7684\u5b58\u50a8\u5728\u7269\u7406\u7a7a\u95f4\u4e2d\uff0c\u901a\u8fc7\u4e00\u6839\u7ebf\u4fdd\u5b58\u7740\u5b83\u4eec\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\u79f0\u4e3a \u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 \u5b9e\u9645\u4e0a\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5b58\u653e\u4e00\u4e2a\u5143\u7d20\u548c\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u5f15\u7528\uff08C\u8bed\u8a00\u91cc\u9762\u662f\u6307\u9488\uff0cJava\u4e2d\u5c31\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee3\u8868\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u5bf9\u8c61\uff09 \u5229\u7528\u8fd9\u79cd\u601d\u60f3\uff0c\u6211\u4eec\u518d\u6765\u5c1d\u8bd5\u5b9e\u73b0\u4e0a\u9762\u7684\u62bd\u8c61\u7c7b\uff0c\u4ece\u5b9e\u9645\u7684\u4ee3\u7801\u4e2d\u611f\u53d7\uff01 \u6bd4\u8f83\uff1a\u987a\u5e8f\u8868\u548c\u94fe\u8868\u7684\u4f18\u5f02\uff1f \u987a\u5e8f\u8868\u4f18\u7f3a\u70b9\uff1a \u8bbf\u95ee\u901f\u5ea6\u5feb\uff0c\u968f\u673a\u8bbf\u95ee\u6027\u80fd\u9ad8 \u63d2\u5165\u548c\u5220\u9664\u7684\u6548\u7387\u4f4e\u4e0b\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\u9700\u8981\u53d8\u66f4\u6574\u4e2a\u8868 \u4e0d\u6613\u6269\u5145\uff0c\u9700\u8981\u590d\u5236\u5e76\u91cd\u65b0\u521b\u5efa\u6570\u7ec4 \u94fe\u8868\u4f18\u7f3a\u70b9\uff1a \u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u9ad8\uff0c\u53ea\u9700\u8981\u6539\u53d8\u8fde\u63a5\u70b9\u7684\u6307\u5411\u5373\u53ef \u52a8\u6001\u6269\u5145\u5bb9\u91cf\uff0c\u65e0\u9700\u62c5\u5fc3\u5bb9\u91cf\u95ee\u9898 \u8bbf\u95ee\u5143\u7d20\u9700\u8981\u4f9d\u6b21\u5bfb\u627e\uff0c\u968f\u673a\u8bbf\u95ee\u5143\u7d20\u6548\u7387\u4f4e\u4e0b \u94fe\u8868\u53ea\u80fd\u6307\u5411\u540e\u9762\uff0c\u80fd\u4e0d\u80fd\u6307\u5411\u524d\u9762\u5462\uff1f\u53cc\u5411\u94fe\u8868\uff01 \u6808\u548c\u961f\u5217\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u7ebf\u6027\u8868\u52a0\u4ee5\u7ea6\u675f\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982\u679c\u524d\u9762\u7684\u7ebf\u6027\u8868\u7684\u638c\u63e1\u5df2\u7ecfok\uff0c\u90a3\u4e48\u6808\u548c\u961f\u5217\u5c31\u975e\u5e38\u8f7b\u677e\u4e86\uff01","title":"\u94fe\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_15","text":"\u6808\u9075\u5faa\u5148\u5165\u540e\u51fa\u539f\u5219\uff0c\u53ea\u80fd\u5728\u7ebf\u6027\u8868\u7684\u4e00\u7aef\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6808\u770b\u505a\u4e00\u4e2a\u676f\u5b50\uff0c\u676f\u5b50\u53ea\u6709\u4e00\u4e2a\u53e3\u8fdb\u51fa\uff0c\u6700\u4f4e\u5904\u7684\u5143\u7d20\u53ea\u80fd\u7b49\u5230\u4e0a\u9762\u7684\u5143\u7d20\u79bb\u5f00\u676f\u5b50\u540e\uff0c\u624d\u80fd\u79bb\u5f00\u3002 \u5411\u6808\u4e2d\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u79f0\u4e3a \u5165\u6808\uff08\u538b\u6808\uff09 \uff0c\u79fb\u9664\u6808\u9876\u5143\u7d20\u79f0\u4e3a \u51fa\u6808 \uff0c\u6211\u4eec\u9700\u8981\u5c1d\u8bd5\u5b9e\u73b0\u4ee5\u4e0b\u62bd\u8c61\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * \u62bd\u8c61\u7c7b\u578b\u6808\uff0c\u5f85\u5b9e\u73b0 * @param <E> \u5143\u7d20\u7c7b\u578b */ public abstract class AbstractStack < E > { /** * \u51fa\u6808\u64cd\u4f5c * @return \u6808\u9876\u5143\u7d20 */ public abstract E pop (); /** * \u5165\u6808\u64cd\u4f5c * @param e \u5143\u7d20 */ public abstract void push ( E e ); } \u5176\u5b9e\uff0c\u6211\u4eec\u7684JVM\u5728\u5904\u7406\u65b9\u6cd5\u8c03\u7528\u65f6\uff0c\u4e5f\u662f\u4e00\u4e2a\u6808\u64cd\u4f5c\uff1a \u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u73a9\u4e0d\u597d\u9012\u5f52\uff0c\u5c31\u4f1a\u50cf\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Main { public static void main ( String [] args ) { go (); } private static void go (){ go (); } } Exception in thread \"main\" java . lang . StackOverflowError at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) at com . test . Main . go ( Main . java : 13 ) ... \u6808\u7684\u6df1\u5ea6\u662f\u6709\u9650\u5236\u7684\uff0c\u5982\u679c\u8fbe\u5230\u9650\u5236\uff0c\u5c06\u4f1a\u51fa\u73b0 StackOverflowError \u9519\u8bef\uff08\u6ce8\u610f\u662f\u9519\u8bef\uff01\u8bf4\u660e\u662fJVM\u51fa\u73b0\u4e86\u95ee\u9898\uff09","title":"\u6808"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_16","text":"\u961f\u5217\u540c\u6837\u4e5f\u662f\u53d7\u9650\u5236\u7684\u7ebf\u6027\u8868\uff0c\u4e0d\u8fc7\u961f\u5217\u5c31\u50cf\u6211\u4eec\u6392\u961f\u4e00\u6837\uff0c\u53ea\u80fd\u4ece\u961f\u5c3e\u5f00\u59cb\u6392\uff0c\u4ece\u961f\u9996\u51fa\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u5b9e\u73b0\u4ee5\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * * @param <E> */ public abstract class AbstractQueue < E > { /** * \u8fdb\u961f\u64cd\u4f5c * @param e \u5143\u7d20 */ public abstract void offer ( E e ); /** * \u51fa\u961f\u64cd\u4f5c * @return \u5143\u7d20 */ public abstract E poll (); }","title":"\u961f\u5217"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_17","text":"\u672c\u7248\u5757\u4e3b\u8981\u5b66\u4e60\u7684\u662f\u4e8c\u53c9\u6811\uff0c\u6811\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u7684\u590d\u6742\u3002","title":"\u4e8c\u53c9\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_18","text":"\u6211\u4eec\u524d\u9762\u5df2\u7ecf\u5b66\u4e60\u8fc7\u94fe\u8868\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u94fe\u8868\u662f\u5355\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u76f8\u8fde\uff0c\u4e5f\u5c31\u662f\u4e00\u79cd\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u800c\u6811\u5219\u662f\u4e00\u4e2a\u7ed3\u70b9\u8fde\u63a5\u591a\u4e2a\u7ed3\u70b9\uff0c\u4e5f\u5c31\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002 \u4e00\u4e2a\u7ed3\u70b9\u53ef\u4ee5\u6709N\u4e2a\u5b50\u7ed3\u70b9\uff0c\u5c31\u50cf\u4e0a\u56fe\u4e00\u6837\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u68f5\u6811\u3002\u800c\u4f4d\u4e8e\u6700\u9876\u7aef\u7684\u7ed3\u70b9\uff08\u6ca1\u6709\u7236\u7ed3\u70b9\uff09\u6211\u4eec\u79f0\u4e3a \u6839\u7ed3\u70b9 \uff0c\u800c\u7ed3\u70b9\u62e5\u6709\u7684\u5b50\u8282\u70b9\u6570\u91cf\u79f0\u4e3a \u5ea6 \uff0c\u6bcf\u5411\u4e0b\u4e00\u7ea7\u79f0\u4e3a\u4e00\u4e2a \u5c42\u6b21 \uff0c\u6811\u4e2d\u51fa\u73b0\u7684\u6700\u5927\u5c42\u6b21\u79f0\u4e3a\u6811\u7684 \u6df1\u5ea6(\u9ad8\u5ea6) \u3002","title":"\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_19","text":"\u4e8c\u53c9\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6700\u591a\u6709\u4e24\u9897\u5b50\u6811\uff0c\u6240\u4ee5\u4e8c\u53c9\u6811\u4e2d\u4e0d\u5b58\u5728\u5ea6\u5927\u4e8e2\u7684\u7ed3\u70b9\uff0c\u4f4d\u4e8e\u4e24\u8fb9\u7684\u5b50\u7ed3\u70b9\u79f0\u4e3a\u5de6\u53f3\u5b50\u6811\uff08\u6ce8\u610f\uff0c\u5de6\u53f3\u5b50\u6811\u662f\u660e\u786e\u533a\u5206\u7684\uff0c\u662f\u5de6\u5c31\u662f\u5de6\uff0c\u662f\u53f3\u5c31\u662f\u53f3\uff09 \u6570\u5b66\u6027\u8d28\uff1a \u5728\u4e8c\u53c9\u6811\u7684\u7b2ci\u5c42\u4e0a\u6700\u591a\u67092^(i-1) \u4e2a\u8282\u70b9\u3002 \u4e8c\u53c9\u6811\u4e2d\u5982\u679c\u6df1\u5ea6\u4e3ak\uff0c\u90a3\u4e48\u6700\u591a\u67092^k-1\u4e2a\u8282\u70b9\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u4e8c\u53c9\u6811\u7ed3\u70b9\u7c7b\uff1a 1 2 3 4 5 public class TreeNode < E > { public E e ; //\u5f53\u524d\u7ed3\u70b9\u6570\u636e public TreeNode < E > left ; //\u5de6\u5b50\u6811 public TreeNode < E > right ; //\u53f3\u5b50\u6811 }","title":"\u4e8c\u53c9\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_20","text":"\u987a\u5e8f\u8868\u7684\u904d\u5386\u5176\u5b9e\u5c31\u662f\u4f9d\u6b21\u6709\u5e8f\u53bb\u8bbf\u95ee\u8868\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u50cf\u4e8c\u53c9\u6811\u8fd9\u6837\u7684\u590d\u6742\u7ed3\u6784\uff0c\u6211\u4eec\u6709\u56db\u79cd\u904d\u5386\u65b9\u5f0f\uff0c\u4ed6\u4eec\u662f\uff1a\u524d\u5e8f\u904d\u5386\u3001\u4e2d\u5e8f\u904d\u5386\u3001\u540e\u5e8f\u904d\u5386\u4ee5\u53ca\u5c42\u5e8f\u904d\u5386\uff0c\u672c\u7248\u5757\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u524d\u4e09\u79cd\u904d\u5386\u65b9\u5f0f\uff1a \u524d\u5e8f\u904d\u5386 \uff1a\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u51fa\u53d1\uff0c\u5230\u8fbe\u7ed3\u70b9\u65f6\u5c31\u76f4\u63a5\u8f93\u51fa\u7ed3\u70b9\u6570\u636e\uff0c\u6309\u7167\u5148\u5411\u5de6\u5728\u5411\u53f3\u7684\u65b9\u5411\u8bbf\u95ee\u3002ABCDEF \u4e2d\u5e8f\u904d\u5386 \uff1a\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u51fa\u53d1\uff0c\u4f18\u5148\u8f93\u51fa\u5de6\u5b50\u6811\u7684\u8282\u70b9\u7684\u6570\u636e\uff0c\u518d\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u672c\u8eab\uff0c\u6700\u540e\u624d\u662f\u53f3\u5b50\u6811\u3002CBDAEF \u540e\u5e8f\u904d\u5386 \uff1a\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u51fa\u53d1\uff0c\u4f18\u5148\u904d\u5386\u5176\u5de6\u5b50\u6811\uff0c\u518d\u904d\u5386\u53f3\u5b50\u6811\uff0c\u6700\u540e\u5728\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u672c\u8eab\u3002CDBFEA","title":"\u4e8c\u53c9\u6811\u7684\u904d\u5386"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_21","text":"\u6ee1\u4e8c\u53c9\u6811\u548c\u5b8c\u5168\u4e8c\u53c9\u6811\u5176\u5b9e\u5c31\u662f\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u4e8c\u53c9\u6811\uff0c\u6ee1\u4e8c\u53c9\u6811\u5de6\u53f3\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b8c\u5168\u628a\u6bcf\u4e00\u4e2a\u5c42\u7ea7\u90fd\u7ed9\u52a0\u6ee1\u4e86\u7ed3\u70b9\u3002\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u5b83\u7684\u6700\u4e0b\u5c42\u53f6\u5b50\u8282\u70b9\u53ef\u4ee5\u4e0d\u6ee1\uff0c\u4f46\u662f\u6700\u4e0b\u5c42\u7684\u53f6\u5b50\u8282\u70b9\u5fc5\u987b\u9760\u5de6\u6392\u5e03\u3002 \u5176\u5b9e\u6ee1\u4e8c\u53c9\u6811\u548c\u5b8c\u5168\u4e8c\u53c9\u6811\u5c31\u662f\u6709\u4e00\u5b9a\u89c4\u5f8b\u7684\u4e8c\u53c9\u6811\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u3002","title":"\u6ee1\u4e8c\u53c9\u6811\u548c\u5b8c\u5168\u4e8c\u53c9\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_22","text":"\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u597d\u5730\u5e2e\u6211\u4eec\u7ba1\u7406\u4e86\u6570\u636e\uff0c\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u67e5\u627e\u67d0\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u66f4\u52a0\u9ad8\u6548\u7684\u53bb\u5b8c\u6210\u5462\uff1f","title":"\u5feb\u901f\u67e5\u627e"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_23","text":"\u901a\u8fc7\u524d\u9762\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u987a\u5e8f\u8868\u867d\u7136\u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u4f46\u662f\u63d2\u5165\u5220\u9664\u6709\u4e25\u91cd\u8868\u66f4\u65b0\u7684\u95ee\u9898\uff0c\u800c\u94fe\u8868\u867d\u7136\u5f25\u8865\u4e86\u66f4\u65b0\u95ee\u9898\uff0c\u4f46\u662f\u67e5\u8be2\u6548\u7387\u5b9e\u5728\u662f\u592a\u4f4e\u4e86\uff0c\u80fd\u5426\u6709\u4e00\u79cd\u6298\u4e2d\u65b9\u6848\uff1f\u54c8\u5e0c\u8868\uff01 \u4e0d\u77e5\u5927\u5bb6\u5728\u4e4b\u524d\u7684\u5b66\u4e60\u4e2d\u662f\u5426\u53d1\u73b0\uff0c\u6211\u4eec\u7684Object\u7c7b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a hashcode() \u7684\u65b9\u6cd5\uff1f\u800c\u8fd9\u4e2a\u65b9\u6cd5\u5462\uff0c\u5c31\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u652f\u6301\u54c8\u5e0c\u8868\u7684\u5b9e\u73b0\u3002 hashcode() \u9ed8\u8ba4\u5f97\u5230\u7684\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u7684hashCode\u90fd\u4e0d\u4e00\u6837\u3002 \u54c8\u5e0c\u8868\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u5b58\u653e\u94fe\u8868\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u662f\u5982\u4f55\u53bb\u5b58\u50a8\u6570\u636e\u7684\u5462\uff1f\u6211\u4eec\u5148\u6765\u770b\u770b\u957f\u5565\u6837\uff1a \u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5934\u7ed3\u70b9\uff0c\u7528\u4e8e\u4fdd\u5b58\u6570\u636e\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u6570\u636e\u5e94\u8be5\u653e\u5728\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u5462\uff1f\u901a\u8fc7hash\u7b97\u6cd5\uff0c\u6211\u4eec\u80fd\u591f\u77ac\u95f4\u5f97\u5230\u5143\u7d20\u5e94\u8be5\u653e\u7f6e\u7684\u4f4d\u7f6e\u3002 1 2 3 4 //\u5047\u8bbehash\u8868\u957f\u5ea6\u4e3a16\uff0chash\u7b97\u6cd5\u4e3a\uff1a private int hash ( int hashcode ){ return hashcode % 16 ; } \u8bbe\u60f3\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u8ba1\u7b97\u51fa\u6765\u7684hash\u503c\u548c\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u76f8\u540c\u4e86\u5462\uff1f\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u79f0\u4e3a hash\u78b0\u649e \uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u5c06\u6bcf\u4e00\u4e2a\u8868\u5143\u7d20\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u7684\u539f\u56e0\uff0c\u4e00\u65e6\u53d1\u73b0\u91cd\u590d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u540e\u7ee7\u7eed\u6dfb\u52a0\u8282\u70b9\u3002 \u5f53\u7136\uff0c\u4ee5\u4e0a\u7684hash\u8868\u7ed3\u6784\u53ea\u662f\u4e00\u79cd\u8bbe\u8ba1\u65b9\u6848\uff0c\u5728\u9762\u5bf9\u5927\u989d\u6570\u636e\u65f6\uff0c\u662f\u4e0d\u591f\u7528\u7684\uff0c\u5728JDK1.8\u4e2d\uff0c\u96c6\u5408\u7c7b\u4f7f\u7528\u7684\u662f\u6570\u7ec4+\u4e8c\u53c9\u6811\u7684\u5f62\u5f0f\u89e3\u51b3\u7684\uff08\u8fd9\u91cc\u7684\u4e8c\u53c9\u6811\u662f\u7ecf\u8fc7\u52a0\u5f3a\u7684\u4e8c\u53c9\u6811\uff0c\u4e0d\u662f\u524d\u9762\u8bb2\u5f97\u7b80\u5355\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u4e0b\u4e00\u8282\u5c31\u4f1a\u5f00\u59cb\u8bb2\uff09","title":"\u54c8\u5e0c\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_24","text":"\u6211\u4eec\u524d\u9762\u5b66\u4e60\u7684\u4e8c\u53c9\u6811\u6548\u7387\u662f\u4e0d\u591f\u7684\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u79cd\u6548\u7387\u66f4\u9ad8\u7684\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\uff0c\u57fa\u4e8e\u4e8c\u53c9\u6811\u7684\u6539\u8fdb\uff0c\u63d0\u51fa\u4e86\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u53ef\u4ee5\u770b\u5230\u7ed3\u6784\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a \u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u4e00\u5b9a\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff0c\u4e00\u5b9a\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a \u4e8c\u53c9\u6392\u5e8f\u6811 \u3002\u5229\u7528\u4e8c\u5206\u641c\u7d22\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u67e5\u627e\u67d0\u4e2a\u8282\u70b9\uff01","title":"\u4e8c\u53c9\u6392\u5e8f\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_25","text":"\u5728\u4e86\u89e3\u4e86\u4e8c\u53c9\u67e5\u627e\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6839\u8282\u70b9\u4e3a10\uff0c\u73b0\u5728\u52a0\u5165\u5230\u7ed3\u70b9\u7684\u503c\u4ece9\u5f00\u59cb\uff0c\u4f9d\u6b21\u51cf\u5c0f\u52301\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8868\u5c31\u4f1a\u5f88\u5947\u602a\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a \u663e\u7136\uff0c\u5f53\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u6392\u5217\u5230\u4e00\u8fb9\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u67e5\u627e\u6548\u7387\u4f1a\u76f4\u63a5\u9000\u5316\u4e3a\u6700\u539f\u59cb\u7684\u4e8c\u53c9\u6811\uff01\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ef4\u6301\u4e8c\u53c9\u6811\u7684\u5e73\u8861\uff0c\u624d\u80fd\u7ef4\u6301\u539f\u6709\u7684\u67e5\u627e\u6548\u7387\u3002 \u73b0\u5728\u6211\u4eec\u5bf9\u4e8c\u53c9\u6392\u5e8f\u6811\u52a0\u4ee5\u7ea6\u675f\uff0c\u8981\u6c42\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff0c\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a \u5e73\u8861\u4e8c\u53c9\u6811 \uff0c\u540c\u65f6\u8981\u6c42\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u8fd9\u6837\uff0c\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u4e00\u8fb9\u7684\u75af\u72c2\u589e\u52a0\u5bfc\u81f4\u5931\u8861\u3002\u6211\u4eec\u6765\u770b\u770b\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a \u5de6\u5de6\u5931\u8861 \u53f3\u53f3\u5931\u8861 \u5de6\u53f3\u5931\u8861 \u53f3\u5de6\u5931\u8861 \u901a\u8fc7\u4ee5\u4e0a\u56db\u79cd\u60c5\u51b5\u7684\u5904\u7406\uff0c\u6700\u7ec8\u5f97\u5230\u7ef4\u62a4\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u7b97\u6cd5\u3002","title":"\u5e73\u8861\u4e8c\u53c9\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_26","text":"\u7ea2\u9ed1\u6811\u4e5f\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u540c\u5e73\u8861\u4e8c\u53c9\u6811\u4e00\u6837\uff0c\u7ea2\u9ed1\u6811\u4e5f\u662f\u4e00\u79cd\u7ef4\u62a4\u5e73\u8861\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u4f46\u662f\u6ca1\u6709\u5e73\u8861\u4e8c\u53c9\u6811\u90a3\u6837\u4e25\u683c\uff08\u5e73\u8861\u4e8c\u53c9\u6811\u6bcf\u6b21\u63d2\u5165\u65b0\u7ed3\u70b9\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5927\u91cf\u7684\u65cb\u8f6c\uff0c\u800c\u7ea2\u9ed1\u6811\u4fdd\u8bc1\u4e0d\u8d85\u8fc7\u4e09\u6b21\uff09\uff0c\u7ea2\u9ed1\u6811\u964d\u4f4e\u4e86\u5bf9\u4e8e\u65cb\u8f6c\u7684\u8981\u6c42\uff0c\u56e0\u6b64\u6548\u7387\u6709\u4e00\u5b9a\u7684\u63d0\u5347\u540c\u65f6\u5b9e\u73b0\u8d77\u6765\u4e5f\u66f4\u52a0\u7b80\u5355\u3002\u4f46\u662f\u7ea2\u9ed1\u6811\u7684\u6548\u7387\u5374\u9ad8\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u7ea2\u9ed1\u6811\u4e5f\u662fJDK1.8\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\uff01 \u7ea2\u9ed1\u6811\u7684\u7279\u6027: \uff081\uff09\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u9ed1\u8272\uff0c\u6216\u8005\u662f\u7ea2\u8272\u3002 \uff082\uff09\u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 \uff083\uff09\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4e24\u8fb9\u4e5f\u9700\u8981\u8868\u793a\uff08\u867d\u7136\u6ca1\u6709\uff0c\u4f46\u662fnull\u4e5f\u9700\u8981\u8868\u793a\u51fa\u6765\uff09\u662f\u9ed1\u8272\u3002 \uff084\uff09\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002 \uff085\uff09\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8282\u70b9\u3002 \u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u8282\u70b9\uff0c\u662f\u5982\u4f55\u63d2\u5165\u5230\u7ea2\u9ed1\u6811\u4e2d\u7684\uff1a \u57fa\u672c\u7684 \u63d2\u5165\u89c4\u5219\u548c\u5e73\u8861\u4e8c\u53c9\u6811\u4e00\u6837\uff0c\u4f46\u662f\u5728\u63d2\u5165\u540e\uff1a \u5c06\u65b0\u63d2\u5165\u7684\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u8272 \u5982\u679c X \u662f\u6839\u7ed3\u70b9(root)\uff0c\u5219\u6807\u8bb0\u4e3a\u9ed1\u8272 \u5982\u679c X \u7684 parent \u4e0d\u662f\u9ed1\u8272\uff0c\u540c\u65f6 X \u4e5f\u4e0d\u662f root: 3.1 \u5982\u679c X \u7684 uncle (\u53d4\u53d4) \u662f\u7ea2\u8272 3.1.1 \u5c06 parent \u548c uncle \u6807\u8bb0\u4e3a\u9ed1\u8272 3.1.2 \u5c06 grand parent (\u7956\u7236) \u6807\u8bb0\u4e3a\u7ea2\u8272 3.1.3 \u8ba9 X \u8282\u70b9\u7684\u989c\u8272\u4e0e X \u7956\u7236\u7684\u989c\u8272\u76f8\u540c\uff0c\u7136\u540e\u91cd\u590d\u6b65\u9aa4 2\u30013 3.2 \u5982\u679c X \u7684 uncle (\u53d4\u53d4) \u662f\u9ed1\u8272\uff0c\u6211\u4eec\u8981\u5206\u56db\u79cd\u60c5\u51b5\u5904\u7406 3.2.1 \u5de6\u5de6 (P \u662f G \u7684\u5de6\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u5de6\u5b69\u5b50) 3.2.2 \u5de6\u53f3 (P \u662f G \u7684\u5de6\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u53f3\u5b69\u5b50) 3.2.3 \u53f3\u53f3 (P \u662f G \u7684\u53f3\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u53f3\u5b69\u5b50) 3.2.4 \u53f3\u5de6 (P \u662f G \u7684\u53f3\u5b69\u5b50\uff0c\u5e76\u4e14 X \u662f P \u7684\u5de6\u5b69\u5b50) \u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5904\u7406\u5c31\u548c\u6211\u4eec\u7684\u5e73\u8861\u4e8c\u53c9\u6811\u4e00\u6837\u4e86","title":"\u7ea2\u9ed1\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_27","text":"\u96c6\u5408\u8868\u793a\u4e00\u7ec4\u5bf9\u8c61\uff0c\u79f0\u4e3a\u5176\u5143\u7d20\u3002\u4e00\u4e9b\u96c6\u5408\u5141\u8bb8\u91cd\u590d\u7684\u5143\u7d20\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u5141\u8bb8\u3002\u4e00\u4e9b\u96c6\u5408\u662f\u6709\u5e8f\u7684\uff0c\u800c\u5176\u4ed6\u5219\u662f\u65e0\u5e8f\u7684\u3002 \u96c6\u5408\u7c7b\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ec4\u7ec7\u3001\u7ba1\u7406\u548c\u64cd\u4f5c\u6211\u4eec\u7684\u6570\u636e\u800c\u5b58\u5728\u7684\uff0c\u5305\u62ec\u5217\u8868\u3001\u96c6\u5408\u3001\u961f\u5217\u3001\u6620\u5c04\u7b49\u6570\u636e\u7ed3\u6784\u3002\u4ece\u8fd9\u4e00\u5757\u5f00\u59cb\uff0c\u6211\u4eec\u4f1a\u4ece\u6e90\u7801\u89d2\u5ea6\u7ed9\u5927\u5bb6\u8bb2\u89e3\uff08\u6570\u636e\u7ed3\u6784\u5f88\u91cd\u8981\uff01\uff09\uff0c\u4e0d\u4ec5\u4ec5\u662f\u6559\u4f1a\u5927\u5bb6\u5982\u4f55\u53bb\u4f7f\u7528\u3002 \u96c6\u5408\u7c7b\u6700\u9876\u5c42\u4e0d\u662f\u62bd\u8c61\u7c7b\u800c\u662f\u63a5\u53e3\uff0c\u56e0\u4e3a\u63a5\u53e3\u4ee3\u8868\u7684\u662f\u67d0\u4e2a\u529f\u80fd\uff0c\u800c\u62bd\u8c61\u7c7b\u662f\u5df2\u7ecf\u5feb\u8981\u6210\u5f62\u7684\u7c7b\u578b\uff0c\u4e0d\u540c\u7684\u96c6\u5408\u7c7b\u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u540c\u65f6\u4e00\u4e2a\u96c6\u5408\u7c7b\u53ef\u80fd\u4f1a\u540c\u65f6\u5177\u6709\u4e24\u79cd\u53ca\u4ee5\u4e0a\u529f\u80fd\uff08\u65e2\u80fd\u505a\u961f\u5217\u4e5f\u80fd\u505a\u5217\u8868\uff09\uff0c\u6240\u4ee5\u91c7\u7528\u63a5\u53e3\u4f1a\u66f4\u52a0\u5408\u9002\uff0c\u63a5\u53e3\u53ea\u9700\u5b9a\u4e49\u652f\u6301\u7684\u529f\u80fd\u5373\u53ef\u3002","title":"\u8ba4\u8bc6\u96c6\u5408\u7c7b"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_28","text":"\u76f8\u540c\u4e4b\u5904\uff1a \u5b83\u4eec\u90fd\u662f\u5bb9\u5668\uff0c\u90fd\u80fd\u591f\u5bb9\u7eb3\u4e00\u7ec4\u5143\u7d20\u3002 \u4e0d\u540c\u4e4b\u5904\uff1a \u6570\u7ec4\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u96c6\u5408\u7684\u5927\u5c0f\u662f\u53ef\u53d8\u7684\u3002 \u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u96c6\u5408\u53ea\u80fd\u5b58\u653e\u5bf9\u8c61\u3002 \u6570\u7ec4\u5b58\u653e\u7684\u7c7b\u578b\u53ea\u80fd\u662f\u4e00\u79cd\uff0c\u4f46\u96c6\u5408\u53ef\u4ee5\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u5143\u7d20\u3002","title":"\u6570\u7ec4\u4e0e\u96c6\u5408"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#collection","text":"\u672c\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u5168\u90e8\u7684\u96c6\u5408\u57fa\u672c\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e90\u7801\u4e2d\u770b\u770b\u3002 \u6211\u4eec\u518d\u6765\u770b\u770bList\u548cSet\u4ee5\u53caQueue\u63a5\u53e3\u3002","title":"\u96c6\u5408\u6839\u63a5\u53e3Collection"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_29","text":"","title":"\u96c6\u5408\u7c7b\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#list","text":"\u9996\u5148\u4ecb\u7ecdArrayList\uff0c\u5b83\u7684\u5e95\u5c42\u662f\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u5185\u90e8\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u53ef\u6539\u53d8\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684\u7ebf\u6027\u8868\uff01\u8ddf\u6211\u4eec\u4e4b\u524d\u81ea\u5df1\u5199\u7684ArrayList\u76f8\u6bd4\uff0c\u5b83\u66f4\u52a0\u7684\u89c4\u8303\uff0c\u540c\u65f6\u7ee7\u627f\u81eaList\u63a5\u53e3\u3002 \u5148\u770b\u770bArrayList\u7684\u6e90\u7801\uff01","title":"List\u5217\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_30","text":"1 2 List < String > list = new ArrayList <> (); //\u9ed8\u8ba4\u957f\u5ea6\u7684\u5217\u8868 List < String > listInit = new ArrayList <> ( 100 ); //\u521d\u59cb\u957f\u5ea6\u4e3a100\u7684\u5217\u8868 \u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u5143\u7d20\uff1a 1 2 3 4 5 List < String > list = new ArrayList <> (); list . add ( \"lbwnb\" ); list . add ( \"yyds\" ); list . contains ( \"yyds\" ); //\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20 System . out . println ( list ); \u79fb\u9664\u5143\u7d20\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); list . add ( \"lbwnb\" ); list . add ( \"yyds\" ); list . remove ( 0 ); //\u6309\u4e0b\u6807\u79fb\u9664\u5143\u7d20 list . remove ( \"yyds\" ); //\u79fb\u9664\u6307\u5b9a\u5143\u7d20 System . out . println ( list ); } \u4e5f\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { ArrayList < String > list = new ArrayList <> (); list . addAll ( new ArrayList <> ()); //\u5728\u5c3e\u90e8\u6279\u91cf\u6dfb\u52a0\u5143\u7d20 list . removeAll ( new ArrayList <> ()); //\u6279\u91cf\u79fb\u9664\u5143\u7d20\uff08\u53ea\u6709\u7ed9\u5b9a\u96c6\u5408\u4e2d\u5b58\u5728\u7684\u5143\u7d20\u624d\u4f1a\u88ab\u79fb\u9664\uff09 list . retainAll ( new ArrayList <> ()); //\u53ea\u4fdd\u7559\u67d0\u4e9b\u5143\u7d20 System . out . println ( list ); } \u6211\u4eec\u518d\u6765\u770bLinkedList\uff0c\u5176\u5b9e\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff01\u6211\u4eec\u6765\u770b\u770b\u6e90\u7801\u3002 \u5176\u5b9e\u4e0e\u6211\u4eec\u4e4b\u524d\u7f16\u5199\u7684LinkedList\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u5185\u90e8\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff1a 1 2 3 4 5 6 7 8 9 10 11 private static class Node < E > { E item ; Node < E > next ; Node < E > prev ; Node ( Node < E > prev , E element , Node < E > next ) { this . item = element ; this . next = next ; this . prev = prev ; } } \u5f53\u7136\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u8fd8\u5b9e\u73b0\u4e86Queue\u63a5\u53e3\uff0c\u6240\u4ee5LinkedList\u4e5f\u80fd\u88ab\u5f53\u505a\u4e00\u4e2a\u961f\u5217\u6216\u662f\u6808\u6765\u4f7f\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { LinkedList < String > list = new LinkedList <> (); list . offer ( \"A\" ); //\u5165\u961f System . out . println ( list . poll ()); //\u51fa\u961f list . push ( \"A\" ); list . push ( \"B\" ); //\u8fdb\u6808 list . push ( \"C\" ); System . out . println ( list . pop ()); System . out . println ( list . pop ()); //\u51fa\u6808 System . out . println ( list . pop ()); }","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_31","text":"\u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86\u533f\u540d\u5185\u90e8\u7c7b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4ee3\u7801\u5757\uff0c\u6765\u5feb\u901f\u751f\u6210\u4e00\u4e2a\u81ea\u5e26\u5143\u7d20\u7684List 1 2 3 4 List < String > list = new LinkedList < String > (){{ //\u521d\u59cb\u5316\u65f6\u6dfb\u52a0 this . add ( \"A\" ); this . add ( \"B\" ); }}; \u5982\u679c\u662f\u9700\u8981\u5feb\u901f\u751f\u6210\u4e00\u4e2a\u53ea\u8bfb\u7684List\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u8bb2\u89e3Arrays\u5de5\u5177\u7c7b\u3002","title":"\u5229\u7528\u4ee3\u7801\u5757\u6765\u5feb\u901f\u6dfb\u52a0\u5185\u5bb9"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_32","text":"1 2 3 4 5 6 7 8 9 10 11 12 List < Integer > list = new LinkedList < Integer > (){ //Java9\u624d\u652f\u6301\u533f\u540d\u5185\u90e8\u7c7b\u4f7f\u7528\u94bb\u77f3\u8fd0\u7b97\u7b26 { this . add ( 10 ); this . add ( 2 ); this . add ( 5 ); this . add ( 8 ); } }; list . sort (( a , b ) -> { //\u6392\u5e8f\u5df2\u7ecf\u7531JDK\u5b9e\u73b0\uff0c\u73b0\u5728\u53ea\u9700\u8981\u586b\u5165\u81ea\u5b9a\u4e49\u89c4\u5219\uff0c\u5b8c\u6210Comparator\u63a5\u53e3\u5b9e\u73b0 return a - b ; //\u8fd4\u56de\u503c\u5c0f\u4e8e0\uff0c\u8868\u793aa\u5e94\u8be5\u5728b\u524d\u9762\uff0c\u8fd4\u56de\u503c\u5927\u4e8e0\uff0c\u8868\u793ab\u5e94\u8be5\u5728a\u540e\u9762\uff0c\u7b49\u4e8e0\u5219\u4e0d\u8fdb\u884c\u4ea4\u6362 }); System . out . println ( list );","title":"\u96c6\u5408\u7684\u6392\u5e8f"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_33","text":"","title":"\u8fed\u4ee3\u5668"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_34","text":"\u6240\u6709\u7684\u96c6\u5408\u7c7b\uff0c\u90fd\u652f\u6301foreach\u5faa\u73af\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { List < Integer > list = new LinkedList < Integer > (){ //Java9\u624d\u652f\u6301\u533f\u540d\u5185\u90e8\u7c7b\u4f7f\u7528\u94bb\u77f3\u8fd0\u7b97\u7b26 { this . add ( 10 ); this . add ( 2 ); this . add ( 5 ); this . add ( 8 ); } }; for ( Integer integer : list ) { System . out . println ( integer ); } } \u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528JDK1.8\u65b0\u589e\u7684forEach\u65b9\u6cd5\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2aConsumer\u63a5\u53e3\u5b9e\u73b0\uff1a 1 2 3 list . forEach ( i -> { System . out . println ( i ); }); \u4eceJDK1.8\u5f00\u59cb\uff0clambda\u8868\u8fbe\u5f0f\u5f00\u59cb\u9010\u6e10\u6210\u4e3a\u4e3b\u6d41\uff0c\u6211\u4eec\u9700\u8981\u53bb\u9002\u5e94\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u8fd9\u79cd\u8bed\u6cd5\uff0c\u5305\u62ec\u6279\u91cf\u66ff\u6362\uff0c\u4e5f\u662f\u7528\u5230\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u6765\u5b8c\u6210\u7684\u3002 1 2 3 4 5 list . replaceAll (( i ) -> { if ( i == 2 ) return 3 ; //\u5c06\u6240\u6709\u76842\u66ff\u6362\u4e3a3 else return i ; //\u4e0d\u662f2\u5c31\u4e0d\u53d8 }); System . out . println ( list );","title":"\u96c6\u5408\u7684\u904d\u5386"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#iterableiterator","text":"\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u5df2\u7ecf\u5f97\u77e5\uff0c\u4e0d\u540c\u7684\u7ebf\u6027\u8868\u5b9e\u73b0\uff0c\u5728\u83b7\u53d6\u5143\u7d20\u65f6\u7684\u6548\u7387\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u597d\u5730\u65b9\u5f0f\u6765\u7edf\u4e00\u4e0d\u540c\u6570\u636e\u7ed3\u6784\u7684\u904d\u5386\u3002 \u7531\u4e8eArrayList\u5bf9\u4e8e\u968f\u673a\u8bbf\u95ee\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u800cLinkedList\u5bf9\u4e8e\u987a\u5e8f\u8bbf\u95ee\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u56e0\u6b64\u5728\u4e0a\u8ff0\u7684\u4f20\u7edffor\u5faa\u73af\u904d\u5386\u64cd\u4f5c\u4e2d\uff0cArrayList\u7684\u6548\u7387\u66f4\u80dc\u4e00\u7b79\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u4f7f\u5f97LinkedList\u904d\u5386\u6548\u7387\u63d0\u5347\uff0c\u5c31\u9700\u8981\u91c7\u7528\u987a\u5e8f\u8bbf\u95ee\u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c\u6ca1\u6709\u8fed\u4ee3\u5668\u5e2e\u52a9\u6211\u4eec\u7edf\u4e00\u6807\u51c6\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u5e94\u5bf9\u591a\u79cd\u96c6\u5408\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5bf9\u5e94\u7f16\u5199\u4e0d\u540c\u7684\u904d\u5386\u7b97\u6cd5\uff0c\u5f88\u663e\u7136\u8fd9\u6837\u4f1a\u964d\u4f4e\u6211\u4eec\u7684\u5f00\u53d1\u6548\u7387\uff0c\u800c\u8fed\u4ee3\u5668\u7684\u51fa\u73b0\u5c31\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u8fed\u4ee3\u5668\u91cc\u9762\u65b9\u6cd5\uff1a 1 2 3 public interface Iterator < E > { //... } \u6bcf\u4e2a\u96c6\u5408\u7c7b\u90fd\u6709\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u901a\u8fc7 iterator() \u65b9\u6cd5\u6765\u83b7\u53d6\uff1a 1 2 3 4 5 Iterator < Integer > iterator = list . iterator (); //\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668 while ( iterator . hasNext ()){ //\u5224\u65ad\u662f\u5426\u8fd8\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20 Integer i = iterator . next (); //\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\uff08\u83b7\u53d6\u4e00\u4e2a\u5c11\u4e00\u4e2a\uff09 System . out . println ( i ); } \u8fed\u4ee3\u5668\u751f\u6210\u540e\uff0c\u9ed8\u8ba4\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u6bcf\u6b21\u8c03\u7528 next() \u65b9\u6cd5\uff0c\u90fd\u4f1a\u5c06\u6307\u9488\u540e\u79fb\uff0c\u5f53\u6307\u9488\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u8c03\u7528 hasNext() \u5c06\u4f1a\u8fd4\u56de false \uff0c\u8fed\u4ee3\u5668\u662f\u4e00\u6b21\u6027\u7684\uff0c\u7528\u5b8c\u5373\u6b62\uff0c\u5982\u679c\u9700\u8981\u518d\u6b21\u4f7f\u7528\uff0c\u9700\u8981\u8c03\u7528 iterator() \u65b9\u6cd5\u3002 1 ListIterator < Integer > iterator = list . listIterator (); //List\u8fd8\u6709\u4e00\u4e2a\u66f4\u597d\u5730\u8fed\u4ee3\u5668\u5b9e\u73b0ListIterator ListIterator \u662fList\u4e2d\u72ec\u6709\u7684\u8fed\u4ee3\u5668\uff0c\u5728\u539f\u6709\u8fed\u4ee3\u5668\u57fa\u7840\u4e0a\u65b0\u589e\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002","title":"Iterable\u548cIterator\u63a5\u53e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#set","text":"\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u770b\u8fc7 Set \u63a5\u53e3\u7684\u5b9a\u4e49\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662fCollection\u4e2d\u76f4\u63a5\u7ee7\u627f\u7684\uff0c\u56e0\u6b64\uff0cSet\u652f\u6301\u7684\u529f\u80fd\u5176\u5b9e\u4e5f\u5c31\u548cCollection\u4e2d\u5b9a\u4e49\u7684\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u4f7f\u7528\u65b9\u6cd5\u4e0a\u7a0d\u6709\u4e0d\u540c\u3002 Set\u96c6\u5408\u7279\u70b9\uff1a \u4e0d\u5141\u8bb8\u51fa\u73b0\u91cd\u590d\u5143\u7d20 \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff08\u4e0d\u5141\u8bb8\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\uff09 \u9996\u5148\u8ba4\u8bc6\u4e00\u4e0bHashSet\uff0c\u5b83\u7684\u5e95\u5c42\u5c31\u662f\u91c7\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff08\u6211\u4eec\u5728\u8fd9\u91cc\u5148\u4e0d\u53bb\u63a2\u8ba8\u5b9e\u73b0\u539f\u7406\uff0c\u56e0\u4e3a\u5e95\u5c42\u5b9e\u8d28\u4e0a\u7ef4\u62a4\u7684\u662f\u4e00\u4e2aHashMap\uff0c\u6211\u4eec\u5b66\u4e60\u4e86Map\u4e4b\u540e\u518d\u6765\u8ba8\u8bba\uff09 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { HashSet < Integer > set = new HashSet <> (); set . add ( 120 ); //\u652f\u6301\u63d2\u5165\u5143\u7d20\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165 set . add ( 13 ); set . add ( 11 ); for ( Integer integer : set ) { System . out . println ( integer ); } } \u8fd0\u884c\u4e0a\u9762\u4ee3\u7801\u53d1\u73b0\uff0c\u6700\u540eSet\u96c6\u5408\u4e2d\u5b58\u5728\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u5e76\u4e0d\u662f\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3aHashSet\u5e95\u5c42\u662f\u91c7\u7528 \u54c8\u5e0c\u8868 \u6765\u5b9e\u73b0\u7684\uff0c\u5b9e\u9645\u7684\u5b58\u653e\u987a\u5e8f\u662f\u7531Hash\u7b97\u6cd5\u51b3\u5b9a\u7684\u3002 \u90a3\u4e48\u6211\u4eec\u5e0c\u671b\u6570\u636e\u6309\u7167\u6211\u4eec\u63d2\u5165\u7684\u987a\u5e8f\u8fdb\u884c\u4fdd\u5b58\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528LinkedHashSet\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { LinkedHashSet < Integer > set = new LinkedHashSet <> (); //\u4f1a\u81ea\u52a8\u4fdd\u5b58\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f set . add ( 120 ); set . add ( 13 ); set . add ( 11 ); for ( Integer integer : set ) { System . out . println ( integer ); } } LinkedHashSet\u5e95\u5c42\u7ef4\u62a4\u7684\u4e0d\u518d\u662f\u4e00\u4e2aHashMap\uff0c\u800c\u662fLinkedHashMap\uff0c\u5b83\u80fd\u591f\u5728\u63d2\u5165\u6570\u636e\u65f6\u5229\u7528\u94fe\u8868\u81ea\u52a8\u7ef4\u62a4\u987a\u5e8f\uff0c\u56e0\u6b64\u8fd9\u6837\u5c31\u80fd\u591f\u4fdd\u8bc1\u6211\u4eec\u63d2\u5165\u987a\u5e8f\u548c\u6700\u540e\u7684\u8fed\u4ee3\u987a\u5e8f\u4e00\u81f4\u4e86\u3002 \u8fd8\u6709\u4e00\u79cdSet\u53eb\u505aTreeSet\uff0c\u5b83\u4f1a\u5728\u5143\u7d20\u63d2\u5165\u65f6\u8fdb\u884c\u6392\u5e8f\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { TreeSet < Integer > set = new TreeSet <> (); set . add ( 1 ); set . add ( 3 ); set . add ( 2 ); System . out . println ( set ); } \u53ef\u4ee5\u770b\u5230\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6211\u4eec\u63d2\u5165\u987a\u5e8f\uff0c\u800c\u662f\u6309\u7167\u6570\u5b57\u7684\u5927\u5c0f\u8fdb\u884c\u6392\u5217\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff1a 1 2 3 4 5 6 7 public static void main ( String [] args ) { TreeSet < Integer > set = new TreeSet <> (( a , b ) -> b - a ); //\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u6307\u5b9a\u89c4\u5219\u5373\u53ef set . add ( 1 ); set . add ( 3 ); set . add ( 2 ); System . out . println ( set ); } \u73b0\u5728\u7684\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\u4e86\u3002 \u867d\u7136Set\u96c6\u5408\u53ea\u662f\u7c97\u7565\u7684\u8fdb\u884c\u4e86\u8bb2\u89e3\uff0c\u4f46\u662f\u5b66\u4e60Map\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u4f1a\u56de\u6765\u770b\u6211\u4eecSet\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u6240\u4ee5\u8bf4\u6700\u91cd\u8981\u7684\u8fd8\u662fMap\u3002\u672c\u8282\u53ea\u9700\u8981\u8bb0\u4f4fSet\u7684\u6027\u8d28\u3001\u4f7f\u7528\u5373\u53ef\u3002","title":"Set\u96c6\u5408"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#map","text":"","title":"Map\u6620\u5c04"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_35","text":"\u6211\u4eec\u5728\u9ad8\u4e2d\u9636\u6bb5\u5176\u5b9e\u5df2\u7ecf\u5b66\u4e60\u8fc7\u6620\u5c04\u4e86\uff0c\u6620\u5c04\u6307\u4e24\u4e2a\u5143\u7d20\u7684\u4e4b\u95f4\u76f8\u4e92\u201c\u5bf9\u5e94\u201d\u7684\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u5143\u7d20\u4e4b\u95f4\u662f\u4e24\u4e24\u5bf9\u5e94\u7684\uff0c\u662f\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u5728\u3002","title":"\u4ec0\u4e48\u662f\u6620\u5c04"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#map_1","text":"Map\u5c31\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u800c\u5b58\u5728\u7684\uff0c\u6211\u4eec\u901a\u8fc7\u4fdd\u5b58\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\u6620\u5c04\u5173\u7cfb\u3002 \u6211\u4eec\u5148\u6765\u770b\u770bMap\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u54ea\u4e9b\u64cd\u4f5c\u3002","title":"Map\u63a5\u53e3"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#hashmaplinkedhashmap","text":"HashMap\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff0c\u76f8\u6bd4List\uff0c\u5c31\u975e\u5e38\u5730\u590d\u6742\u4e86\uff0c\u5b83\u5e76\u4e0d\u662f\u7b80\u7b80\u5355\u5355\u7684\u8868\u7ed3\u6784\uff0c\u800c\u662f\u5229\u7528\u54c8\u5e0c\u8868\u5b58\u653e\u6620\u5c04\u5173\u7cfb\uff0c\u6211\u4eec\u6765\u770b\u770bHashMap\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u9996\u5148\u56de\u987e\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u54c8\u5e0c\u8868\uff0c\u5b83\u957f\u8fd9\u6837\uff1a \u54c8\u5e0c\u8868\u7684\u672c\u8d28\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u653e\u540e\u7eed\u8282\u70b9\u7684\u5934\u7ed3\u70b9\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5934\u7ed3\u70b9\uff08\u4e5f\u53ef\u4ee5\u8bf4\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff09\uff0c\u5f53\u8981\u65b0\u63d2\u5165\u4e00\u4e2a\u6570\u636e\u65f6\uff0c\u4f1a\u5148\u8ba1\u7b97\u8be5\u6570\u636e\u7684\u54c8\u5e0c\u503c\uff0c\u627e\u5230\u6570\u7ec4\u4e0b\u6807\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u6dfb\u52a0\u5230\u5bf9\u5e94\u7684\u94fe\u8868\u540e\u9762\u3002 \u800cHashMap\u5c31\u662f\u91c7\u7528\u7684\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6e90\u7801\u4e2d\u540c\u6837\u5b9a\u4e49\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 /** * The table, initialized on first use, and resized as * necessary. When allocated, length is always a power of two. * (We also tolerate length zero in some operations to allow * bootstrapping mechanics that are currently not needed.) */ transient Node < K , V >[] table ; \u8fd9\u4e2a\u8868\u4f1a\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521d\u59cb\u5316\uff0c\u540c\u65f6\u5728\u5fc5\u8981\u65f6\u8fdb\u884c\u6269\u5bb9\uff0c\u5e76\u4e14\u5b83\u7684\u5927\u5c0f\u6c38\u8fdc\u662f2\u7684\u500d\u6570\uff01 1 2 3 4 /** * The default initial capacity - MUST be a power of two. */ static final int DEFAULT_INITIAL_CAPACITY = 1 << 4 ; // aka 16 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u7684\u5927\u5c0f\u4e3a2\u76844\u6b21\u65b9\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u662f2\u7684\u500d\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0b\u4e00\u6b21\u589e\u957f\u4e4b\u540e\uff0c\u5927\u5c0f\u4f1a\u53d8\u62102\u76845\u6b21\u65b9\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u8868\u4e2d\u7684\u6570\u636e\u4e0d\u65ad\u589e\u52a0\u4e4b\u540e\uff0c\u94fe\u8868\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\uff0c\u8fd9\u6837\u4f1a\u4e25\u91cd\u5bfc\u81f4\u67e5\u8be2\u901f\u5ea6\u53d8\u6162\uff0c\u9996\u5148\u60f3\u5230\u529e\u6cd5\u5c31\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6570\u7ec4\u7684\u957f\u5ea6\u8fdb\u884c\u6269\u5bb9\uff0c\u6765\u5b58\u653e\u66f4\u591a\u7684\u94fe\u8868\uff0c\u90a3\u4e48\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u884c\u6269\u5bb9\u5462\uff1f 1 2 3 4 5 6 /** * The load factor for the hash table. * * @serial */ final float loadFactor ; \u6211\u4eec\u8fd8\u53d1\u73b0HashMap\u6e90\u7801\u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f \u8d1f\u8f7d\u56e0\u5b50 \uff0c\u90a3\u4e48\u5b83\u662f\u5e72\u561b\u7684\u5462\uff1f \u8d1f\u8f7d\u56e0\u5b50\u5176\u5b9e\u5c31\u662f\u7528\u6765\u8861\u91cf\u5f53\u524d\u60c5\u51b5\u662f\u5426\u9700\u8981\u8fdb\u884c\u6269\u5bb9\u7684\u6807\u51c6\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u7684\u8d1f\u8f7d\u56e0\u5b50\u662f 0.75 1 2 3 4 /** * The load factor used when none specified in constructor. */ static final float DEFAULT_LOAD_FACTOR = 0.75f ; \u90a3\u4e48\u8d1f\u8f7d\u56e0\u5b50\u662f\u600e\u4e48\u63a7\u5236\u6269\u5bb9\u7684\u5462\uff1f 0.75 \u7684\u610f\u601d\u662f\uff0c\u5728\u63d2\u5165\u65b0\u7684\u7ed3\u70b9\u540e\uff0c\u5982\u679c\u5f53\u524d\u6570\u7ec4\u7684\u5360\u7528\u7387\u8fbe\u523075%\u5219\u8fdb\u884c\u6269\u5bb9\u3002\u5728\u6269\u5bb9\u65f6\uff0c\u4f1a\u5c06\u6240\u6709\u7684\u6570\u636e\uff0c\u91cd\u65b0\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u4e0b\u6807\uff0c\u7ec4\u6210\u65b0\u7684\u54c8\u5e0c\u8868\u3002 \u4f46\u662f\u8fd9\u6837\u4f9d\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u94fe\u8868\u8fc7\u957f\u7684\u60c5\u51b5\u8fd8\u662f\u6709\u53ef\u80fd\u53d1\u751f\uff0c\u6240\u4ee5\uff0c\u4e3a\u4e86\u4ece\u6839\u6e90\u4e0a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728JDK1.8\u65f6\uff0c\u5f15\u5165\u4e86\u7ea2\u9ed1\u6811\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002 \u5f53\u94fe\u8868\u7684\u957f\u5ea6\u8fbe\u52308\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\uff0c\u8fd9\u6837\u80fd\u4f7f\u5f97\u539f\u6709\u7684\u67e5\u8be2\u6548\u7387\u5927\u5e45\u5ea6\u964d\u4f4e\uff01\u5f53\u4f7f\u7528\u7ea2\u9ed1\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\u641c\u7d22\u7684\u601d\u60f3\uff0c\u5feb\u901f\u5730\u53bb\u5bfb\u627e\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u50cf\u94fe\u8868\u4e00\u6837\u6328\u4e2a\u53bb\u770b\u3002 1 2 3 4 5 6 /** * Entry for Tree bins. Extends LinkedHashMap.Entry (which in turn * extends Node) so can be used as extension of either regular or * linked node. */ static final class TreeNode < K , V > extends LinkedHashMap . Entry < K , V > { \u9664\u4e86Node\u4ee5\u5916\uff0cHashMap\u8fd8\u6709TreeNode\uff0c\u5f88\u660e\u663e\u8fd9\u5c31\u662f\u4e3a\u4e86\u5b9e\u73b0\u7ea2\u9ed1\u6811\u800c\u8bbe\u8ba1\u7684\u5185\u90e8\u7c7b\u3002\u4e0d\u8fc7\u6211\u4eec\u53d1\u73b0\uff0cTreeNode\u5e76\u4e0d\u662f\u76f4\u63a5\u7ee7\u627fNode\uff0c\u800c\u662f\u4f7f\u7528\u4e86LinkedHashMap\u4e2d\u7684Entry\u5b9e\u73b0\uff0c\u5b83\u4fdd\u5b58\u4e86\u524d\u540e\u8282\u70b9\u7684\u987a\u5e8f\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f\uff09\u3002 1 2 3 4 5 6 7 8 9 /** * HashMap.Node subclass for normal LinkedHashMap entries. */ static class Entry < K , V > extends HashMap . Node < K , V > { Entry < K , V > before , after ; Entry ( int hash , K key , V value , Node < K , V > next ) { super ( hash , key , value , next ); } } LinkedHashMap\u662f\u76f4\u63a5\u7ee7\u627f\u81eaHashMap\uff0c\u5177\u6709HashMap\u7684\u5168\u90e8\u6027\u8d28\uff0c\u540c\u65f6\u5f97\u76ca\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u4fdd\u5b58\u4e86\u63d2\u5165\u987a\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u904d\u5386LinkedHashMap\u65f6\uff0c\u987a\u5e8f\u5c31\u540c\u6211\u4eec\u7684\u63d2\u5165\u987a\u5e8f\u4e00\u81f4\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8bbf\u95ee\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u521a\u8bbf\u95ee\u8fc7\u7684\u5143\u7d20\uff0c\u4f1a\u88ab\u6392\u5230\u6700\u540e\u4e00\u4f4d\u3002 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { LinkedHashMap < Integer , String > map = new LinkedHashMap <> ( 16 , 0.75f , true ); //\u4ee5\u8bbf\u95ee\u987a\u5e8f map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); map . get ( 2 ); System . out . println ( map ); } \u89c2\u5bdf\u7ed3\u679c\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u521a\u8bbf\u95ee\u7684\u7ed3\u679c\u88ab\u6392\u5230\u4e86\u6700\u540e\u4e00\u4f4d\u3002","title":"HashMap\u548cLinkedHashMap"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#treemap","text":"TreeMap\u5176\u5b9e\u5c31\u662f\u81ea\u52a8\u7ef4\u62a4\u987a\u5e8f\u7684\u4e00\u79cdMap\uff0c\u5c31\u548c\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684TreeSet\u4e00\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /** * The comparator used to maintain order in this tree map, or * null if it uses the natural ordering of its keys. * * @serial */ private final Comparator <? super K > comparator ; private transient Entry < K , V > root ; /** * Node in the Tree. Doubles as a means to pass key-value pairs back to * user (see Map.Entry). */ static final class Entry < K , V > implements Map . Entry < K , V > { \u6211\u4eec\u53d1\u73b0\u5b83\u7684\u5185\u90e8\u76f4\u63a5\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7ea2\u9ed1\u6811\uff0c\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5c31\u662f\u4e00\u4e2aTree\uff0c\u56e0\u4e3a\u5b83\u9ed8\u8ba4\u5c31\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u8bf4\u76f4\u63a5\u91c7\u7528\u7ea2\u9ed1\u6811\u4f1a\u66f4\u597d\u3002\u6211\u4eec\u5728\u521b\u5efa\u65f6\uff0c\u76f4\u63a5\u7ed9\u4e88\u4e00\u4e2a\u6bd4\u8f83\u89c4\u5219\u5373\u53ef\u3002","title":"TreeMap"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#map_2","text":"\u6211\u4eec\u9996\u5148\u6765\u770b\u770bMap\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); System . out . println ( map . get ( 1 )); //\u83b7\u53d6Key\u4e3a1\u7684\u503c System . out . println ( map . getOrDefault ( 0 , \"K\" )); //\u4e0d\u5b58\u5728\u5c31\u8fd4\u56deK map . remove ( 1 ); //\u79fb\u9664\u8fd9\u4e2aKey\u7684\u952e\u503c\u5bf9 } \u7531\u4e8eMap\u5e76\u672a\u5b9e\u73b0\u8fed\u4ee3\u5668\u63a5\u53e3\uff0c\u56e0\u6b64\u4e0d\u652f\u6301foreach\uff0c\u4f46\u662fJDK1.8\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86forEach\u65b9\u6cd5\u4f7f\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); map . forEach (( k , v ) -> System . out . println ( k + \"->\" + v )); for ( Map . Entry < Integer , String > entry : map . entrySet ()) { //\u4e5f\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u7684Entry\u6765foreach int key = entry . getKey (); String value = entry . getValue (); System . out . println ( key + \" -> \" + value ); } } \u6211\u4eec\u4e5f\u53ef\u4ee5\u5355\u72ec\u83b7\u53d6\u6240\u6709\u7684\u503c\u6216\u8005\u662f\u952e\uff1a 1 2 3 4 5 6 7 8 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . put ( 3 , \"C\" ); System . out . println ( map . keySet ()); //\u76f4\u63a5\u83b7\u53d6\u6240\u6709\u7684key System . out . println ( map . values ()); //\u76f4\u63a5\u83b7\u53d6\u6240\u6709\u7684\u503c }","title":"Map\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#set_1","text":"\u901a\u8fc7\u89c2\u5bdfHashSet\u7684\u6e90\u7801\u53d1\u73b0\uff0cHashSet\u51e0\u4e4e\u90fd\u5728\u64cd\u4f5c\u5185\u90e8\u7ef4\u62a4\u7684\u4e00\u4e2aHashMap\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cHashSet\u53ea\u662f\u4e00\u4e2a\u8868\u58f3\uff0c\u800c\u5185\u90e8\u7ef4\u62a4\u7684HashMap\u624d\u662f\u7075\u9b42\uff01 1 2 // Dummy value to associate with an Object in the backing Map private static final Object PRESENT = new Object (); \u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u5176\u5b9e\u6dfb\u52a0\u7684\u662f\u4e00\u4e2a\u952e\u4e3a\u6211\u4eec\u63d2\u5165\u7684\u5143\u7d20\uff0c\u800c\u503c\u5c31\u662f PRESENT \u5e38\u91cf\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /** * Adds the specified element to this set if it is not already present. * More formally, adds the specified element <tt>e</tt> to this set if * this set contains no element <tt>e2</tt> such that * <tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>. * If this set already contains the element, the call leaves the set * unchanged and returns <tt>false</tt>. * * @param e element to be added to this set * @return <tt>true</tt> if this set did not already contain the specified * element */ public boolean add ( E e ) { return map . put ( e , PRESENT ) == null ; } \u89c2\u5bdf\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u4e5f\u51e0\u4e4e\u90fd\u662f\u5728\u7528HashMap\u505a\u4e8b\uff0c\u6240\u4ee5\u8bf4\uff0cHashSet\u5229\u7528\u4e86HashMap\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8f7b\u677e\u5730\u5c31\u5b9e\u73b0\u4e86Set\u5b9a\u4e49\u7684\u5168\u90e8\u529f\u80fd\uff01 \u518d\u6765\u770bTreeSet\uff0c\u5b9e\u9645\u4e0a\u7528\u7684\u5c31\u662f\u6211\u4eec\u7684TreeMap\uff1a 1 2 3 4 /** * The backing map. */ private transient NavigableMap < E , Object > m ; \u540c\u7406\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u9610\u8ff0\u4e86\u3002","title":"\u518d\u8c08Set\u539f\u7406"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#jdk18","text":"\u6700\u540e\uff0c\u6211\u4eec\u518d\u6765\u770b\u770bJDK1.8\u4e2d\u96c6\u5408\u7c7b\u65b0\u589e\u7684\u4e00\u4e9b\u64cd\u4f5c\uff08\u4e4b\u524d\u6ca1\u6709\u63d0\u53ca\u7684\uff09\u9996\u5148\u6765\u770b\u770b compute \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . compute ( 1 , ( k , v ) -> { //compute\u4f1a\u5c06\u6307\u5b9aKey\u7684\u503c\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\uff0c\u82e5Key\u4e0d\u5b58\u5728\uff0cv\u4f1a\u8fd4\u56denull return v + \"M\" ; //\u8fd9\u91cc\u8fd4\u56de\u539f\u6765\u7684value+M }); map . computeIfPresent ( 1 , ( k , v ) -> { //\u5f53Key\u5b58\u5728\u65f6\u5b58\u5728\u5219\u8ba1\u7b97\u5e76\u8d4b\u4e88\u65b0\u7684\u503c return v + \"M\" ; //\u8fd9\u91cc\u8fd4\u56de\u539f\u6765\u7684value+M }); System . out . println ( map ); } \u4e5f\u53ef\u4ee5\u4f7f\u7528 computeIfAbsent \uff0c\u5f53\u4e0d\u5b58\u5728Key\u65f6\uff0c\u8ba1\u7b97\u5e76\u5c06\u952e\u503c\u5bf9\u653e\u5165Map 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Map < Integer , String > map = new HashMap <> (); map . put ( 1 , \"A\" ); map . put ( 2 , \"B\" ); map . computeIfAbsent ( 0 , ( k ) -> { //\u82e5\u4e0d\u5b58\u5728\u5219\u8ba1\u7b97\u5e76\u63d2\u5165\u65b0\u7684\u503c return \"M\" ; //\u8fd9\u91cc\u8fd4\u56deM }); System . out . println ( map ); } merge\u65b9\u6cd5\u7528\u4e8e\u5904\u7406\u6570\u636e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public static void main ( String [] args ) { List < Student > students = Arrays . asList ( new Student ( \"yoni\" , \"English\" , 80 ), new Student ( \"yoni\" , \"Chiness\" , 98 ), new Student ( \"yoni\" , \"Math\" , 95 ), new Student ( \"taohai.wang\" , \"English\" , 50 ), new Student ( \"taohai.wang\" , \"Chiness\" , 72 ), new Student ( \"taohai.wang\" , \"Math\" , 41 ), new Student ( \"Seely\" , \"English\" , 88 ), new Student ( \"Seely\" , \"Chiness\" , 89 ), new Student ( \"Seely\" , \"Math\" , 92 ) ); Map < String , Integer > scoreMap = new HashMap <> (); students . forEach ( student -> scoreMap . merge ( student . getName (), student . getScore (), Integer :: sum )); scoreMap . forEach (( k , v ) -> System . out . println ( \"key:\" + k + \"\u603b\u5206\" + \"value:\" + v )); } static class Student { private final String name ; private final String type ; private final int score ; public Student ( String name , String type , int score ) { this . name = name ; this . type = type ; this . score = score ; } public String getName () { return name ; } public int getScore () { return score ; } public String getType () { return type ; } }","title":"JDK1.8\u65b0\u589e\u65b9\u6cd5\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_36","text":"\u65e2\u7136\u96c6\u5408\u7c7b\u578b\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u662f\u6cdb\u578b\uff0c\u90a3\u4e48\u80fd\u5426\u5d4c\u5957\u5b58\u50a8\u5462\uff1f 1 2 3 4 5 6 7 public static void main ( String [] args ) { Map < String , List < Integer >> map = new HashMap <> (); //\u6bcf\u4e00\u4e2a\u6620\u5c04\u90fd\u662f \u5b57\u7b26\u4e32<->\u5217\u8868 map . put ( \"\u5361\u5e03\u5947\u8bfa\u4eca\u72b9\u5728\" , new LinkedList <> ()); map . put ( \"\u4e0d\u89c1\u5f53\u5e74\u5012\u8336\u4eba\" , new LinkedList <> ()); System . out . println ( map . keySet ()); System . out . println ( map . values ()); } \u901a\u8fc7Key\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u503c\u540e\uff0c\u5c31\u662f\u4e00\u4e2a\u5217\u8868\uff1a 1 2 map . get ( \"\u5361\u5e03\u5947\u8bfa\u4eca\u72b9\u5728\" ). add ( 10 ); System . out . println ( map . get ( \"\u5361\u5e03\u5947\u8bfa\u4eca\u72b9\u5728\" ). get ( 0 )); \u8ba9\u5957\u5a03\u7ee7\u7eed\u4e0b\u53bb\uff1a 1 2 3 public static void main ( String [] args ) { Map < Integer , Map < Integer , Map < Integer , String >>> map = new HashMap <> (); } \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528List\u6765\u5957\u5a03\u522b\u7684\uff1a 1 2 3 public static void main ( String [] args ) { List < Map < String , Set < String >>> list = new LinkedList <> (); }","title":"\u96c6\u5408\u7684\u5d4c\u5957"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#streamoptional","text":"Java 8 API\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u62bd\u8c61\u79f0\u4e3a\u6d41Stream\uff0c\u53ef\u4ee5\u8ba9\u4f60\u4ee5\u4e00\u79cd\u58f0\u660e\u7684\u65b9\u5f0f\u5904\u7406\u6570\u636e\u3002Stream \u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u7528 SQL \u8bed\u53e5\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e\u7684\u76f4\u89c2\u65b9\u5f0f\u6765\u63d0\u4f9b\u4e00\u79cd\u5bf9 Java \u96c6\u5408\u8fd0\u7b97\u548c\u8868\u8fbe\u7684\u9ad8\u9636\u62bd\u8c61\u3002Stream API\u53ef\u4ee5\u6781\u5927\u63d0\u9ad8Java\u7a0b\u5e8f\u5458\u7684\u751f\u4ea7\u529b\uff0c\u8ba9\u7a0b\u5e8f\u5458\u5199\u51fa\u9ad8\u6548\u7387\u3001\u5e72\u51c0\u3001\u7b80\u6d01\u7684\u4ee3\u7801\u3002\u8fd9\u79cd\u98ce\u683c\u5c06\u8981\u5904\u7406\u7684\u5143\u7d20\u96c6\u5408\u770b\u4f5c\u4e00\u79cd\u6d41\uff0c \u6d41\u5728\u7ba1\u9053\u4e2d\u4f20\u8f93\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u7ba1\u9053\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u5904\u7406\uff0c \u6bd4\u5982\u7b5b\u9009\uff0c \u6392\u5e8f\uff0c\u805a\u5408\u7b49\u3002\u5143\u7d20\u6d41\u5728\u7ba1\u9053\u4e2d\u7ecf\u8fc7\u4e2d\u95f4\u64cd\u4f5c\uff08intermediate operation\uff09\u7684\u5904\u7406\uff0c\u6700\u540e\u7531\u6700\u7ec8\u64cd\u4f5c(terminal operation)\u5f97\u5230\u524d\u9762\u5904\u7406\u7684\u7ed3\u679c\u3002 \u5b83\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u5de5\u5382\u7684\u6d41\u6c34\u7ebf\u4e00\u6837\uff01\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2aStream\u5f53\u505a\u6d41\u6c34\u7ebf\u5904\u7406\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); list . add ( \"A\" ); list . add ( \"B\" ); list . add ( \"C\" ); //\u79fb\u9664\u4e3aB\u7684\u5143\u7d20 Iterator < String > iterator = list . iterator (); while ( iterator . hasNext ()){ if ( iterator . next (). equals ( \"B\" )) iterator . remove (); } //Stream\u64cd\u4f5c list = list //\u94fe\u5f0f\u8c03\u7528 . stream () //\u83b7\u53d6\u6d41 . filter ( e -> ! e . equals ( \"B\" )) //\u53ea\u5141\u8bb8\u6240\u6709\u4e0d\u662fB\u7684\u5143\u7d20\u901a\u8fc7\u6d41\u6c34\u7ebf . collect ( Collectors . toList ()); //\u5c06\u6d41\u6c34\u7ebf\u4e2d\u7684\u5143\u7d20\u91cd\u65b0\u6536\u96c6\u8d77\u6765\uff0c\u53d8\u56deList System . out . println ( list ); } \u53ef\u80fd\u4ece\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u8fd8\u4e0d\u80fd\u611f\u53d7\u5230\u6d41\u5904\u7406\u5e26\u6765\u7684\u4fbf\u6377\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u6765\u611f\u53d7\u4e00\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); list . add ( 3 ); list = list . stream () . distinct () //\u53bb\u91cd\uff08\u4f7f\u7528equals\u5224\u65ad\uff09 . sorted (( a , b ) -> b - a ) //\u8fdb\u884c\u5012\u5e8f\u6392\u5217 . map ( e -> e + 1 ) //\u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u6267\u884c+1\u64cd\u4f5c . limit ( 2 ) //\u53ea\u653e\u884c\u524d\u4e24\u4e2a\u5143\u7d20 . collect ( Collectors . toList ()); System . out . println ( list ); } \u5f53\u9047\u5230\u5927\u91cf\u7684\u590d\u6742\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Stream\u6765\u5feb\u901f\u7f16\u5199\u4ee3\u7801\uff0c\u8fd9\u6837\u4e0d\u4ec5\u4ee3\u7801\u91cf\u5927\u5e45\u5ea6\u51cf\u5c11\uff0c\u800c\u4e14\u903b\u8f91\u4e5f\u66f4\u52a0\u6e05\u6670\u660e\u4e86\uff08\u5982\u679c\u4f60\u5b66\u4e60\u8fc7SQL\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u66f4\u50cf\u4e00\u4e2aSql\u8bed\u53e5\uff09 \u6ce8\u610f \uff1a\u4e0d\u80fd\u8ba4\u4e3a\u6bcf\u4e00\u6b65\u662f\u76f4\u63a5\u4f9d\u6b21\u6267\u884c\u7684\uff01 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); list . add ( 3 ); list = list . stream () . distinct () //\u65ad\u70b9 . sorted (( a , b ) -> b - a ) . map ( e -> { System . out . println ( \">>> \" + e ); //\u65ad\u70b9 return e + 1 ; }) . limit ( 2 ) //\u65ad\u70b9 . collect ( Collectors . toList ()); //\u5b9e\u9645\u4e0a\uff0cstream\u4f1a\u5148\u8bb0\u5f55\u6bcf\u4e00\u6b65\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5f00\u59cb\u6267\u884c\u5185\u5bb9\uff0c\u5f53\u6574\u4e2a\u94fe\u5f0f\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u624d\u4f1a\u4f9d\u6b21\u8fdb\u884c\uff01 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7528\u4e00\u5806\u968f\u673a\u6570\u6765\u8fdb\u884c\u66f4\u591a\u6d41\u64cd\u4f5c\u7684\u6f14\u793a\uff1a 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Random random = new Random (); //Random\u662f\u4e00\u4e2a\u968f\u673a\u6570\u5de5\u5177\u7c7b random . ints ( - 100 , 100 ) //\u751f\u6210-100~100\u4e4b\u95f4\u7684\uff0c\u968f\u673aint\u578b\u6570\u5b57\uff08\u672c\u8d28\u4e0a\u662f\u4e00\u4e2aIntStream\uff09 . limit ( 10 ) //\u53ea\u83b7\u53d6\u524d10\u4e2a\u6570\u5b57\uff08\u8fd9\u662f\u4e00\u4e2a\u65e0\u9650\u5236\u7684\u6d41\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u9650\u5236\uff0c\u5c06\u4f1a\u65e0\u9650\u8fdb\u884c\u4e0b\u53bb\uff01\uff09 . filter ( i -> i < 0 ) //\u53ea\u4fdd\u7559\u5c0f\u4e8e0\u7684\u6570\u5b57 . sorted () //\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f . forEach ( System . out :: println ); //\u4f9d\u6b21\u6253\u5370 } \u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u7edf\u8ba1\u5b9e\u4f8b\u6765\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u8fdb\u884c\u7edf\u8ba1\uff1a 1 2 3 4 5 6 7 8 9 10 public static void main ( String [] args ) { Random random = new Random (); //Random\u662f\u4e00\u4e2a\u968f\u673a\u6570\u5de5\u5177\u7c7b IntSummaryStatistics statistics = random . ints ( 0 , 100 ) . limit ( 100 ) . summaryStatistics (); //\u83b7\u53d6\u8bed\u6cd5\u7edf\u8ba1\u5b9e\u4f8b System . out . println ( statistics . getMax ()); //\u5feb\u901f\u83b7\u53d6\u6700\u5927\u503c System . out . println ( statistics . getCount ()); //\u83b7\u53d6\u6570\u91cf System . out . println ( statistics . getAverage ()); //\u83b7\u53d6\u5e73\u5747\u503c } \u666e\u901a\u7684List\u53ea\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6362\u5230\u65b9\u4fbf\u597d\u7528\u7684IntStream\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); list . add ( 4 ); list . stream () . mapToInt ( i -> i ) //\u5c06\u6bcf\u4e00\u4e2a\u5143\u7d20\u6620\u5c04\u4e3aInteger\u7c7b\u578b\uff08\u8fd9\u91cc\u56e0\u4e3a\u672c\u6765\u5c31\u662fInteger\uff09 . summaryStatistics (); } \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 flat \u6765\u5bf9\u6574\u4e2a\u6d41\u8fdb\u884c\u8fdb\u4e00\u6b65\u7ec6\u5206\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); list . add ( \"A,B\" ); list . add ( \"C,D\" ); list . add ( \"E,F\" ); //\u6211\u4eec\u60f3\u8ba9\u6bcf\u4e00\u4e2a\u5143\u7d20\u901a\u8fc7,\u8fdb\u884c\u5206\u5272\uff0c\u53d8\u6210\u72ec\u7acb\u76846\u4e2a\u5143\u7d20 list = list . stream () //\u751f\u6210\u6d41 . flatMap ( e -> Arrays . stream ( e . split ( \",\" ))) //\u5206\u5272\u5b57\u7b26\u4e32\u5e76\u751f\u6210\u65b0\u7684\u6d41 . collect ( Collectors . toList ()); //\u6c47\u6210\u65b0\u7684List System . out . println ( list ); //\u5f97\u5230\u7ed3\u679c } \u6211\u4eec\u4e5f\u53ef\u4ee5\u53ea\u901a\u8fc7Stream\u6765\u5b8c\u6210\u6240\u6709\u6570\u5b57\u7684\u548c\uff0c\u4f7f\u7528 reduce \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); list . add ( 1 ); list . add ( 2 ); list . add ( 3 ); int sum = list . stream () . reduce (( a , b ) -> a + b ) //\u8ba1\u7b97\u89c4\u5219\u4e3a\uff1aa\u662f\u4e0a\u4e00\u6b21\u8ba1\u7b97\u7684\u503c\uff0cb\u662f\u5f53\u524d\u8981\u8ba1\u7b97\u7684\u53c2\u6570\uff0c\u8fd9\u91cc\u662f\u6c42\u548c . get (); //\u6211\u4eec\u53d1\u73b0\u5f97\u5230\u7684\u662f\u4e00\u4e2aOptional\u7c7b\u5b9e\u4f8b\uff0c\u4e0d\u662f\u6211\u4eec\u8fd4\u56de\u7684\u7c7b\u578b\uff0c\u901a\u8fc7get\u65b9\u6cd5\u8fd4\u56de\u5f97\u5230\u7684\u503c System . out . println ( sum ); } \u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\uff0cStream\u4e0d\u559c\u6b22\u76f4\u63a5\u7ed9\u6211\u4eec\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u800c\u662f\u901a\u8fc7Optinal\u7684\u65b9\u5f0f\uff0c\u90a3\u4e48\u4ec0\u4e48\u662fOptional\u5462\uff1f Optional\u7c7b\u662fJava8\u4e3a\u4e86\u89e3\u51b3null\u503c\u5224\u65ad\u95ee\u9898\uff0c\u4f7f\u7528Optional\u7c7b\u53ef\u4ee5\u907f\u514d\u663e\u5f0f\u7684null\u503c\u5224\u65ad\uff08null\u7684\u9632\u5fa1\u6027\u68c0\u67e5\uff09\uff0c\u907f\u514dnull\u5bfc\u81f4\u7684NPE\uff08NullPointerException\uff09\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u5bf9\u63a7\u5236\u7684\u4e00\u4e2a\u5224\u65ad\uff0c\u4e3a\u4e86\u907f\u514d\u7a7a\u6307\u9488\u5f02\u5e38\u3002 1 2 3 4 5 6 public static void main ( String [] args ) { String str = null ; if ( str != null ){ //\u5f53str\u4e0d\u4e3a\u7a7a\u65f6\u6dfb\u52a0\u5143\u7d20\u5230List\u4e2d list . add ( str ); } } \u6709\u4e86Optional\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 2 3 4 5 public static void main ( String [] args ) { String str = null ; Optional < String > optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional optional . ifPresent ( System . out :: println ); //\u5f53\u5b58\u5728\u65f6\u518d\u6267\u884c\u65b9\u6cd5 } \u5c31\u7c7b\u4f3c\u4e8eKotlin\u4e2d\u7684\uff1a 1 2 var str : String ? = null str ? . upperCase () \u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5get\u6216\u662f\u5f53\u503c\u4e3anull\u65f6\uff0c\u83b7\u53d6\u5907\u9009\u503c\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { String str = null ; Optional optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional\uff08\u53ef\u7a7a\uff09 System . out . println ( optional . orElse ( \"lbwnb\" )); // System.out.println(optional.get()); \u8fd9\u6837\u4f1a\u76f4\u63a5\u62a5\u9519 } \u540c\u6837\u7684\uff0cOptional\u4e5f\u652f\u6301\u8fc7\u6ee4\u64cd\u4f5c\u548c\u6620\u5c04\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u662f\u5bf9\u4e8e\u5355\u5bf9\u8c61\u800c\u8a00\uff1a 1 2 3 4 5 public static void main ( String [] args ) { String str = \"A\" ; Optional optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional\uff08\u53ef\u7a7a\uff09 System . out . println ( optional . filter ( s -> s . equals ( \"B\" )). get ()); //\u88ab\u8fc7\u6ee4\u4e86\uff0c\u6b64\u65f6\u5143\u7d20\u4e3anull\uff0c\u83b7\u53d6\u65f6\u62a5\u9519 } 1 2 3 4 5 6 public static void main ( String [] args ) { List < String > list = new ArrayList <> (); String str = \"A\" ; Optional optional = Optional . ofNullable ( str ); //\u8f6c\u6362\u4e3aOptional\uff08\u53ef\u7a7a\uff09 System . out . println ( optional . map ( s -> s + \"A\" ). get ()); //\u5728\u5c3e\u90e8\u8ffd\u52a0\u4e00\u4e2aA } \u5176\u4ed6\u64cd\u4f5c\u81ea\u5b66\u4e86\u89e3\u3002","title":"\u6d41Stream\u548cOptional\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#arrayscollections","text":"Arrays\u662f\u4e00\u4e2a\u7528\u4e8e\u64cd\u4f5c\u6570\u7ec4\u7684\u5de5\u5177\u7c7b\uff0c\u5b83\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u5de5\u5177\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 /** * This class contains various methods for manipulating arrays (such as * sorting and searching). This class also contains a static factory * that allows arrays to be viewed as lists. <- \u6ce8\u610f\uff0c\u8fd9\u53e5\u8bdd\u5f88\u5173\u952e * * @author Josh Bloch * @author Neal Gafter * @author John Rose * @since 1.2 */ public class Arrays { \u7531\u4e8e\u64cd\u4f5c\u6570\u7ec4\u5e76\u4e0d\u50cf\u96c6\u5408\u90a3\u6837\u65b9\u4fbf\uff0c\u56e0\u6b64JDK\u63d0\u4f9b\u4e86Arrays\u7c7b\u6765\u589e\u5f3a\u5bf9\u6570\u7ec4\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; Arrays . sort ( array ); //\u76f4\u63a5\u8fdb\u884c\u6392\u5e8f\uff08\u5e95\u5c42\u539f\u7406\uff1a\u8fdb\u884c\u5224\u65ad\uff0c\u5143\u7d20\u5c11\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u5927\u91cf\u5143\u7d20\u4f7f\u7528\u53cc\u8f74\u5feb\u901f/\u5f52\u5e76\u6392\u5e8f\uff09 System . out . println ( array ); //\u7531\u4e8eint[]\u662f\u4e00\u4e2a\u5bf9\u8c61\u7c7b\u578b\uff0c\u800c\u6570\u7ec4\u9ed8\u8ba4\u662f\u6ca1\u6709\u91cd\u5199toString()\u65b9\u6cd5\uff0c\u56e0\u6b64\u65e0\u6cd5\u6253\u5370\u5230\u60f3\u8981\u7684\u7ed3\u679c System . out . println ( Arrays . toString ( array )); //\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Arrays.toString()\u6765\u50cf\u96c6\u5408\u4e00\u6837\u76f4\u63a5\u6253\u5370\u6bcf\u4e00\u4e2a\u5143\u7d20\u51fa\u6765 } 1 2 3 4 5 6 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; Arrays . sort ( array ); System . out . println ( \"\u6392\u5e8f\u540e\u7684\u7ed3\u679c\uff1a\" + Arrays . toString ( array )); System . out . println ( \"\u76ee\u6807\u5143\u7d203\u4f4d\u7f6e\u4e3a\uff1a\" + Arrays . binarySearch ( array , 3 )); //\u4e8c\u5206\u641c\u7d20\uff0c\u5fc5\u987b\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6570\u7ec4\uff01 } 1 2 3 4 5 6 7 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; Arrays . stream ( array ) //\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u6d41\u8fdb\u884c\u64cd\u4f5c . sorted () . forEach ( System . out :: println ); } 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main ( String [] args ) { int [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; int [] array2 = Arrays . copyOf ( array , array . length ); //\u590d\u5236\u4e00\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u6570\u7ec4 System . out . println ( Arrays . toString ( array2 )); System . out . println ( Arrays . equals ( array , array2 )); //\u6bd4\u8f83\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u503c\u76f8\u540c Arrays . fill ( array , 0 ); //\u5c06\u6570\u7ec4\u7684\u6240\u6709\u503c\u5168\u90e8\u586b\u5145\u4e3a\u6307\u5b9a\u503c System . out . println ( Arrays . toString ( array )); Arrays . setAll ( array2 , i -> array2 [ i ] + 2 ); //\u4f9d\u6b21\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5143\u7d20\uff08\u6ce8\u610fi\u662f\u4e0b\u6807\u4f4d\u7f6e\uff09 System . out . println ( Arrays . toString ( array2 )); //\u8fd9\u91cc\u8ba1\u7b97\u8ba9\u6bcf\u4e2a\u5143\u7d20\u503c+2 } \u601d\u8003\uff1a\u5f53\u4e8c\u7ef4\u6570\u7ec4\u4f7f\u7528 Arrays.equals() \u8fdb\u884c\u6bd4\u8f83\u4ee5\u53ca Arrays.toString() \u8fdb\u884c\u6253\u5370\u65f6\uff0c\u8fd8\u4f1a\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u5417\uff1f 1 2 3 4 5 6 7 8 9 public static void main ( String [] args ) { Integer [][] array = {{ 1 , 5 }, { 2 , 4 }, { 7 , 3 }, { 6 }}; Integer [][] array2 = {{ 1 , 5 }, { 2 , 4 }, { 7 , 3 }, { 6 }}; System . out . println ( Arrays . toString ( array )); //\u8fd9\u6837\u8fd8\u4f1a\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u5417\uff1f System . out . println ( Arrays . equals ( array2 , array )); //\u8fd9\u6837\u8fd8\u4f1a\u5f97\u5230true\u5417\uff1f System . out . println ( Arrays . deepToString ( array )); //\u4f7f\u7528deepToString\u5c31\u80fd\u5230\u6253\u5370\u591a\u7ef4\u6570\u7ec4 System . out . println ( Arrays . deepEquals ( array2 , array )); //\u4f7f\u7528deepEquals\u5c31\u80fd\u6bd4\u8f83\u591a\u7ef4\u6570\u7ec4 } \u90a3\u4e48\uff0c\u4e00\u5f00\u59cb\u63d0\u5230\u7684\u5f53\u505aList\u8fdb\u884c\u64cd\u4f5c\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Arrays.asList() \u6765\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e00\u4e2a \u56fa\u5b9a\u957f\u5ea6\u7684List 1 2 3 4 5 6 7 8 9 10 11 12 public static void main ( String [] args ) { Integer [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; List < Integer > list = Arrays . asList ( array ); //\u4e0d\u652f\u6301\u57fa\u672c\u7c7b\u578b\u6570\u7ec4\uff0c\u5fc5\u987b\u662f\u5bf9\u8c61\u7c7b\u578b\u6570\u7ec4 Arrays . asList ( \"A\" , \"B\" , \"C\" ); //\u4e5f\u53ef\u4ee5\u9010\u4e2a\u6dfb\u52a0\uff0c\u56e0\u4e3a\u662f\u53ef\u53d8\u53c2\u6570 list . add ( 1 ); //\u6b64List\u5b9e\u73b0\u662f\u957f\u5ea6\u56fa\u5b9a\u7684\uff0c\u662fArrays\u5185\u90e8\u5355\u72ec\u5b9e\u73b0\u7684\u4e00\u4e2a\u7c7b\u578b\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u6dfb\u52a0\u64cd\u4f5c list . remove ( 0 ); //\u540c\u7406\uff0c\u4e5f\u4e0d\u652f\u6301\u79fb\u9664 list . set ( 0 , 8 ); //\u76f4\u63a5\u8bbe\u7f6e\u6307\u5b9a\u4e0b\u6807\u7684\u503c\u5c31\u53ef\u4ee5 list . sort ( Comparator . reverseOrder ()); //\u4e5f\u53ef\u4ee5\u6267\u884c\u6392\u5e8f\u64cd\u4f5c System . out . println ( list ); //\u4e5f\u53ef\u4ee5\u50cfList\u90a3\u6837\u76f4\u63a5\u6253\u5370 } \u6587\u5b57\u6e38\u620f\uff1a allows arrays to be viewed as lists \uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5f53\u505aList\u4f7f\u7528\uff0c\u672c\u8d28\u8fd8\u662f\u6570\u7ec4\uff0c\u56e0\u6b64\u6570\u7ec4\u7684\u5c5e\u6027\u4f9d\u7136\u5b58\u5728\uff01\u56e0\u6b64\u5982\u679c\u8981\u5c06\u6570\u7ec4\u5feb\u901f\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684List\uff0c\u53ef\u4ee5\u50cf\u8fd9\u6837\uff1a 1 2 3 4 public static void main ( String [] args ) { Integer [] array = { 1 , 5 , 2 , 4 , 7 , 3 , 6 }; List < Integer > list = new ArrayList <> ( Arrays . asList ( array )); } \u901a\u8fc7\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u771f\u6b63\u7684ArrayList\u5e76\u5728\u6784\u9020\u65f6\u5c06Arrays\u7684List\u503c\u4f20\u9012\u3002 \u65e2\u7136\u6570\u7ec4\u64cd\u4f5c\u90fd\u8fd9\u4e48\u65b9\u4fbf\u4e86\uff0c\u96c6\u5408\u64cd\u4f5c\u80fd\u4e0d\u80fd\u4e5f\u5b89\u6392\u70b9\u9ad8\u7ea7\u7684\u73a9\u6cd5\u5462\uff1f\u90a3\u5fc5\u987b\u7684\uff0cJDK\u4e3a\u6211\u4eec\u51c6\u5907\u7684Collocations\u7c7b\u5c31\u662f\u4e13\u7528\u4e8e\u96c6\u5408\u7684\u5de5\u5177\u7c7b\uff1a 1 2 3 4 5 public static void main ( String [] args ) { List < Integer > list = new ArrayList <> (); Collections . max ( list ); Collections . min ( list ); } \u5f53\u7136\uff0cCollections\u63d0\u4f9b\u7684\u5185\u5bb9\u76f8\u6bd4Arrays\u4f1a\u66f4\u591a\uff0c\u5e0c\u671b\u5927\u5bb6\u4e0b\u53bb\u81ea\u884c\u4e86\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u505a\u4ecb\u7ecd\u4e86\u3002","title":"Arrays\u548cCollections\u7684\u4f7f\u7528"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_37","text":"","title":"\u96c6\u5408\u7c7b\u7f16\u7a0b\u5b9e\u6218"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_38","text":"1 <- 3 <- 5 <- 7 <- 9 \u8f6c\u6362\u4e3a 1 <- 3 <- 5 <- 7 <- 9 \u73b0\u5728\u6709\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u5c1d\u8bd5\u5c06\u5176\u6240\u6709\u8282\u70b9\u5012\u5e8f\u6392\u5217 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class Main { public static void main ( String [] args ) { Node head = new Node ( 1 ); head . next = new Node ( 3 ); head . next . next = new Node ( 5 ); head . next . next . next = new Node ( 7 ); head . next . next . next . next = new Node ( 9 ); head = reverse ( head ); while ( head != null ){ System . out . println ( head . value + \" \" ); head = head . next ; } } public static class Node { public int value ; public Node next ; public Node ( int data ) { this . value = data ; } } public static Node reverse ( Node head ) { //\u5728\u8fd9\u91cc\u5b9e\u73b0 } }","title":"\u53cd\u8f6c\u94fe\u8868"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_39","text":"\u73b0\u5728\u77e5\u9053\u4e8c\u53c9\u6811\u7684\u524d\u5e8f: GDAFEMHZ\uff0c\u4ee5\u53ca\u4e2d\u5e8f: ADEFGHMZ\uff0c\u8bf7\u6839\u636e\u5df2\u77e5\u4fe1\u606f\u8fd8\u539f\u8fd9\u9897\u4e8c\u53c9\u6811\u3002","title":"\u91cd\u5efa\u4e8c\u53c9\u6811"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#_40","text":"\u5b9e\u73b0\u4e00\u4e2a\u8ba1\u7b97\u5668\uff0c\u8981\u6c42\u8f93\u5165\u4e00\u4e2a\u8ba1\u7b97\u516c\u5f0f\uff08\u542b\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\u7b26\uff0c\u6ca1\u6709\u8d1f\u6570\u4f46\u662f\u6709\u5c0f\u6570\uff09\uff0c\u5f97\u5230\u7ed3\u679c\uff0c\u6bd4\u5982\u8f93\u5165\uff1a1+4*3/1.321\uff0c\u5f97\u5230\u7ed3\u679c\u4e3a\uff1a2.2","title":"\u5b9e\u73b0\u8ba1\u7b97\u5668"},{"location":"java/javase/JavaSE%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/#kmp","text":"\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u4e3b\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u8bf7\u5224\u65ad\u4e3b\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u5b50\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u4e3b\u5b57\u7b26\u4e32\uff1aABCABCDHI\uff0c\u5b50\u5b57\u7b26\u4e32\uff1aABCD\uff0c\u56e0\u6b64\u4e3b\u5b57\u7b26\u4e32\u5305\u542b\u6b64\u5b50\u5b57\u7b26\u4e32\uff1b\u4e3b\u5b57\u7b26\u4e32\uff1aABCABCUISA\uff0c\u5b50\u5b57\u7b26\u4e32\uff1aABCD\uff0c\u5219\u4e0d\u5305\u542b\u3002","title":"\u5b57\u7b26\u4e32\u5339\u914d\uff08KMP\u7b97\u6cd5\uff09"},{"location":"latex/basic/","text":"\\(\\LaTeX\\) \u57fa\u7840\u77e5\u8bc6 \u53c2\u8003\u7ef4\u57fa\u767e\u79d1\u7684 \u6570\u5b66\u516c\u5f0f\u6559\u7a0b \uff1b \u53c2\u8003 Cmd Markdown \u516c\u5f0f\u6307\u5bfc\u624b\u518c \u3002 \u672c\u6587\u4e3a MathJax \u5728 Markdown \u73af\u5883\u4e0b\u7684\u8bed\u6cd5\u6307\u5f15\u3002 \u5982\u4f55\u63d2\u5165\u516c\u5f0f \\(\\LaTeX\\) \u7684\u6570\u5b66\u516c\u5f0f\u6709\u4e24\u79cd\uff1a\u884c\u4e2d\u516c\u5f0f\u548c\u72ec\u7acb\u516c\u5f0f\uff08\u884c\u95f4\u516c\u5f0f\uff09\u3002\u884c\u4e2d\u516c\u5f0f\u653e\u5728\u6587\u4e2d\u4e0e\u5176\u5b83\u6587\u5b57\u6df7\u7f16\uff0c\u72ec\u7acb\u516c\u5f0f\u5355\u72ec\u6210\u884c\u3002 \u884c\u4e2d\u516c\u5f0f\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u6cd5\u8868\u793a\uff1a $ \u6570\u5b66\u516c\u5f0f $ \u72ec\u7acb\u516c\u5f0f\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u6cd5\u8868\u793a\uff1a $$ \u6570\u5b66\u516c\u5f0f $$ \u4e0a\u6807\u3001\u4e0b\u6807\u53ca\u79ef\u5206\u7b49 \u529f\u80fd | \u8bed\u6cd5 | \u6548\u679c ^ \u8868\u793a\u4e0a\u6807\uff0c _ \u8868\u793a\u4e0b\u6807\u3002\u5982\u679c\u4e0a\u4e0b\u6807\u7684\u5185\u5bb9\u591a\u4e8e\u4e00\u4e2a\u5b57\u7b26\uff0c\u9700\u8981\u7528 {} \u5c06\u8fd9\u4e9b\u5185\u5bb9\u62ec\u6210\u4e00\u4e2a\u6574\u4f53\u3002\u4e0a\u4e0b\u6807\u53ef\u4ee5\u5d4c\u5957\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u3002 \u4e0a\u6807 a^2 \\({\\displaystyle a^{2}}\\) \u4e0b\u6807 a_2 \\({\\displaystyle a_{2}}\\) \u7ec4\u5408 a^{2+2} \\({\\displaystyle a^{2+2}}\\) a_{i,j} \\({\\displaystyle a_{i,j}}\\) \u7ed3\u5408\u4e0a\u4e0b\u6807 x_2^3 \\({\\displaystyle x_{2}^{3}}\\) \u524d\u7f6e\u4e0a\u4e0b\u6807 {}_1^2\\!X_3^4 \\({\\displaystyle {}_{1}^{2}\\!X_{3}^{4}}\\) \u5bfc\u6570\uff08 HTML \uff09 x' \\({\\displaystyle x'}\\) \u5bfc\u6570\uff08 PNG \uff09 x^\\prime \\({\\displaystyle x^{\\prime}}\\) \u5bfc\u6570\uff08 \u9519\u8bef \uff09 x\\prime \\({\\displaystyle x\\prime}\\) \u5bfc\u6570\u70b9 \\dot{x} \\({\\displaystyle {\\dot {x}}}\\) \\ddot{y} \\({\\displaystyle {\\ddot {y}}}\\) \u5411\u91cf \\vec{c} \uff08\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\uff09 \\({\\displaystyle {\\vec {c}}}\\) \\overleftarrow{a b} \\({\\displaystyle {\\overleftarrow {ab}}}\\) \\overrightarrow{c d} \\({\\displaystyle {\\overrightarrow {cd}}}\\) \\overleftrightarrow{a b} \\({\\displaystyle {\\overleftrightarrow {ab}}}\\) \\widehat{e f g} \\({\\displaystyle {\\widehat {efg}}}\\) \u4e0a\u5f27 \uff08\u6ce8\uff1a\u6b63\u786e\u5e94\u8be5\u7528 \\overarc\uff0c\u4f46\u5728\u8fd9\u91cc\u884c\u4e0d\u901a\u3002\u8981\u7528\u5efa\u8bae\u7684\u8bed\u6cd5\u4f5c\u4e3a\u89e3\u51b3\u529e\u6cd5\u3002\uff09\uff08\u4f7f\u7528 \\ overarc \u65f6\u9700\u8981\u5f15\u5165 {arcs} \u5305\u3002\uff09 \\overset{\\frown} {AB} \\({\\displaystyle {\\overset {\\frown}{AB}}}\\) \u4e0a\u5212\u7ebf \\overline{h i j} \\({\\displaystyle {\\overline {hij}}}\\) \u4e0b\u5212\u7ebf \\underline{k l m} \\({\\displaystyle {\\underline {klm}}}\\) \u4e0a\u62ec\u53f7 \\overbrace{1+2+\\cdots+100} \\({\\displaystyle \\overbrace {1+2+\\cdots +100} }\\) \\begin{matrix} 5050 \\\\ \\overbrace{ 1+2+\\cdots+100 } \\end{matrix} \\({\\displaystyle {\\begin{matrix}5050\\\\\\overbrace {1+2+\\cdots +100} \\end{matrix}}}\\) \u4e0b\u62ec\u53f7 \\underbrace{a+b+\\cdots+z} \\({\\displaystyle \\underbrace {a+b+\\cdots +z} }\\) \\begin{matrix} \\underbrace{ a+b+\\cdots+z } \\\\ 26 \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\underbrace {a+b+\\cdots +z} \\\\26\\end{matrix}}}\\) \u6c42\u548c\uff08\u7d2f\u52a0\uff09 \\sum_{k=1}^N k^2 \\({\\displaystyle \\sum _{k=1}^{N}k^{2}}\\) \\begin{matrix} \\sum_{k=1}^N k^2 \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\sum _{k=1}^{N}k^{2}\\end{matrix}}}\\) \u6c42\u79ef\uff08\u7d2f\u4e58\uff09 \\prod_{i=1}^N x_i \\({\\displaystyle \\prod _{i=1}^{N}x_{i}}\\) \\begin{matrix} \\prod_{i=1}^N x_i \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\prod _{i=1}^{N}x_{i}\\end{matrix}}}\\) \u4e0a\u79ef \\coprod_{i=1}^N x_i \\({\\displaystyle \\coprod _{i=1}^{N}x_{i}}\\) \\begin{matrix} \\coprod_{i=1}^N x_i \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\coprod _{i=1}^{N}x_{i}\\end{matrix}}}\\) \u6781\u9650 \\lim_{n \\to \\infty}x_n \\({\\displaystyle \\lim _{n\\to \\infty}x_{n}}\\) \\begin{matrix} \\lim_{n \\to \\infty}x_n \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\lim _{n\\to \\infty }x_{n}\\end{matrix}}}\\) \u79ef\u5206 \\int_{-N}^{N} e^x\\, {\\rm d}x \\({\\displaystyle \\int _{-N}^{N}e^{x}\\,{\\rm d} x}\\) \u672c\u4f8b\u4e2d \\, \u548c {\\rm d} \u90e8\u5206\u53ef\u7701\u7565\uff0c\u4f46\u5efa\u8bae\u52a0\u5165\uff0c\u80fd\u4f7f\u5f0f\u5b50\u66f4\u7f8e\u89c2\u3002 {\\rm d} \u53ef\u4ee5\u7528 \\mathrm{d} \u7b49\u4ef7\u66ff\u6362\u3002 \\begin{matrix} \\int_{-N}^{N} e^x\\, \\mathrm{d}x \\end{matrix} \uff08\u77e9\u9635\u4e2d\u79ef\u5206\u7b26\u53f7\u53d8\u5c0f\uff09 \\({\\displaystyle {\\begin{matrix}\\int _{-N}^{N}e^{x}\\,\\mathrm {d} x\\end{matrix}}}\\) \u53cc\u91cd\u79ef\u5206 \\iint_{D}^{W} \\, \\mathrm{d}x\\,\\mathrm{d}y \\({\\displaystyle \\iint _{D}^{W}\\,\\mathrm {d} x\\,\\mathrm {d} y}\\) \u4e09\u91cd\u79ef\u5206 \\iiint_{E}^{V} \\, \\mathrm{d}x\\,\\mathrm{d}y\\,\\mathrm{d}z \\({\\displaystyle \\iiint _{E}^{V}\\,\\mathrm {d} x\\,\\mathrm {d} y\\,\\mathrm {d} z}\\) \u95ed\u5408\u7684\u66f2\u7ebf\u3001\u66f2\u9762\u79ef\u5206 \\oint_{C} x^3\\, \\mathrm{d}x + 4y^2\\, \\mathrm{d}y \\({\\displaystyle \\oint _{C}x^{3}\\,\\mathrm {d} x+4y^{2}\\,\\mathrm {d} y}\\) \u4ea4\u96c6 \\bigcap_1^{n} p \\({\\displaystyle \\bigcap _{1}^{n}p}\\) \u5e76\u96c6 \\bigcup_1^{k} p \\({\\displaystyle \\bigcup _{1}^{k}p}\\) \u5206\u6570 \u901a\u5e38\u4f7f\u7528 \\frac {\u5206\u5b50} {\u5206\u6bcd} \u547d\u4ee4\u4ea7\u751f\u4e00\u4e2a\u5206\u6570\uff0c\u5206\u6570\u53ef\u5d4c\u5957\u3002 \u4fbf\u6377\u60c5\u51b5\u53ef\u76f4\u63a5\u8f93\u5165 \\frac ab \u6765\u5feb\u901f\u751f\u6210\u4e00\u4e2a \\(\\frac ab\\) \u3002 \u5982\u679c\u5206\u5f0f\u5f88\u590d\u6742\uff0c\u4ea6\u53ef\u4f7f\u7528 \u5206\u5b50 \\over \u5206\u6bcd \u547d\u4ee4\uff0c\u6b64\u65f6\u5206\u6570\u4ec5\u6709\u4e00\u5c42\u3002 \u529f\u80fd | \u8bed\u6cd5 | \u6548\u679c \u5206\u6570 \\frac{2}{4}=0.5 \\({\\displaystyle {\\frac {2}{4}}=0.5}\\) \u5c0f\u578b\u5206\u6570 \\tfrac{2}{4} = 0.5 \\({\\displaystyle {\\tfrac {2}{4}}=0.5}\\) \u8fde\u5206\u5f0f\uff08\u5927\u578b\u5d4c\u5957\u5206\u5f0f\uff09 \\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a \\({\\displaystyle {\\cfrac {2}{c+{\\cfrac {2}{d+{\\cfrac {2}{4}}}}}}=a}\\) \u5927\u578b\u4e0d\u5d4c\u5957\u5206\u5f0f \\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a \\({\\displaystyle {\\dfrac {2}{4}}=0.5\\qquad {\\dfrac {2}{c+{\\dfrac {2}{d+{\\dfrac {2}{4}}}}}}=a}\\) \u4e8c\u9879\u5f0f\u7cfb\u6570 \\dbinom{n}{r}=\\binom{n}{n-r}=\\mathrm{C}_n^r=\\mathrm{C}_n^{n-r} \\({\\displaystyle {\\dbinom {n}{r}}={\\binom {n}{n-r}}=\\mathrm {C} _{n}^{r}=\\mathrm {C} _{n}^{n-r}}\\) \u5c0f\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570 \\tbinom{n}{r}=\\tbinom{n}{n-r}=\\mathrm{C}_n^r=\\mathrm{C}_n^{n-r} \\({\\displaystyle {\\tbinom {n}{r}}={\\tbinom {n}{n-r}}=\\mathrm {C} _{n}^{r}=\\mathrm {C} _{n}^{n-r}}\\) \u5927\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570 \\binom{n}{r}=\\dbinom{n}{n-r}=\\mathrm{C}_n^r=\\mathrm{C}_n^{n-r} \\({\\displaystyle {\\binom {n}{r}}={\\dbinom {n}{n-r}}=\\mathrm {C} _{n}^{r}=\\mathrm {C} _{n}^{n-r}}\\) \u5728\u4ee5 e \u4e3a\u5e95\u7684\u6307\u6570\u51fd\u6570\u3001\u6781\u9650\u548c\u79ef\u5206\u4e2d\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 \\frac \u7b26\u53f7\uff1a\u5b83\u4f1a\u4f7f\u6574\u6bb5\u51fd\u6570\u770b\u8d77\u6765\u5f88\u602a\uff0c\u800c\u4e14\u53ef\u80fd\u4ea7\u751f\u6b67\u4e49\u3002\u4e5f\u6b63\u662f\u56e0\u6b64\u5b83\u5728\u4e13\u4e1a\u6570\u5b66\u6392\u7248\u4e2d\u51e0\u4e4e\u4ece\u4e0d\u51fa\u73b0\u3002 \u6a2a\u7740\u5199\u8fd9\u4e9b\u5206\u5f0f\uff0c\u4e2d\u95f4\u4f7f\u7528\u659c\u7ebf\u95f4\u9694 / \uff08\u7528\u659c\u7ebf\u4ee3\u66ff\u5206\u6570\u7ebf\uff09\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 \\begin { array }{ cc } \\mathrm { Bad } & \\mathrm { Better } \\\\ \\hline \\\\ e ^{ i \\frac { \\pi } 2 } \\quad e ^{ \\frac { i \\pi } 2 }& e ^{ i \\pi /2 } \\\\ \\int _{ - \\frac\\pi 2 }^ \\frac\\pi 2 \\sin x \\, dx & \\int _{ - \\pi /2 }^{ \\pi /2 } \\sin x \\, dx \\\\ \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{cc} \\mathrm{Bad} & \\mathrm{Better} \\\\ \\hline \\\\ e^{i\\frac{\\pi}2} \\quad e^{\\frac{i\\pi}2}& e^{i\\pi/2} \\\\ \\int_{-\\frac\\pi2}^\\frac\\pi2 \\sin x\\,dx & \\int_{-\\pi/2}^{\\pi/2}\\sin x\\,dx \\\\ \\end{array} \\] \u62ec\u53f7 () \u3001 [] \u548c | \u8868\u793a\u7b26\u53f7\u672c\u8eab\uff0c\u4f7f\u7528 \\{\\} \u6765\u8868\u793a {} \u3002 \u529f\u80fd | \u8bed\u6cd5 | \u663e\u793a \u77ed\u62ec\u53f7 \\frac{1}{2} \\({\\displaystyle ({\\frac {1}{2}})}\\) \u957f\u62ec\u53f7 \\left(\\frac{1}{2} \\right \\({\\displaystyle \\left({\\frac {1}{2}}\\right)}\\) \u4f7f\u7528 \\left \u548c \\right \u6765\u521b\u5efa\u81ea\u52a8\u5339\u914d\u9ad8\u5ea6\u7684 (\u5706\u62ec\u53f7)\uff0c[\u65b9\u62ec\u53f7] \u548c {\u82b1\u62ec\u53f7} \u3002 \u529f\u80fd | \u8bed\u6cd5 | \u663e\u793a \u5706\u62ec\u53f7\uff0c\u5c0f\u62ec\u53f7 \\left( \\frac{a}{b} \\right) \\({\\displaystyle \\left({\\frac {a}{b}}\\right)}\\) \u65b9\u62ec\u53f7\uff0c\u4e2d\u62ec\u53f7 \\left[ \\frac{a}{b} \\right] \\({\\displaystyle \\left[{\\frac {a}{b}}\\right]}\\) \u82b1\u62ec\u53f7\uff0c\u5927\u62ec\u53f7 \\left{ \\frac{a}{b} \\right} \\({\\displaystyle \\left\\{{\\frac {a}{b}}\\right\\}}\\) \u89d2\u62ec\u53f7 \\left \\langle \\frac{a}{b} \\right \\rangle \\({\\displaystyle \\left\\langle {\\frac {a}{b}}\\right\\rangle }\\) \u5355\u7ad6\u7ebf\uff0c\u7edd\u5bf9\u503c \\left| \\frac{a}{b} \\right| \\({\\displaystyle \\left| \\frac{a}{b} \\right|}\\) \u53cc\u7ad6\u7ebf\uff0c\u8303 \\left \\| \\frac{a}{b} \\right \\| \\({\\displaystyle \\left\\|{\\frac {a}{b}}\\right\\|}\\) \u53d6\u6574\u51fd\u6570 \\left \\lfloor \\frac{a}{b} \\right \\rfloor \\({\\displaystyle \\left\\lfloor {\\frac {a}{b}}\\right\\rfloor }\\) \u53d6\u9876\u51fd\u6570 \\left \\lceil \\frac{c}{d} \\right \\rceil \\({\\displaystyle \\left\\lceil {\\frac {c}{d}}\\right\\rceil }\\) \u659c\u7ebf\u4e0e\u53cd\u659c\u7ebf \\left / \\frac{a}{b} \\right \\backslash \\({\\displaystyle \\left/{\\frac {a}{b}}\\right\\backslash }\\) \u4e0a\u4e0b\u7bad\u5934 \\left \\uparrow \\frac{a}{b} \\right \\downarrow \\({\\displaystyle \\left\\uparrow {\\frac {a}{b}}\\right\\downarrow }\\) \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\({\\displaystyle \\left\\Uparrow {\\frac {a}{b}}\\right\\Downarrow }\\) \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow \\({\\displaystyle \\left\\updownarrow {\\frac {a}{b}}\\right\\Updownarrow }\\) \u6df7\u5408\u62ec\u53f7 \\left[ 0,1 \\right) \\({\\displaystyle \\left[0,1\\right)}\\) \\left \\langle \\psi \\right | \\(\\left \\langle \\psi \\right |\\) \u5982\u679c\u62ec\u53f7\u53ea\u6709\u4e00\u8fb9\uff0c\u8981\u7528 \\left. \u6216 \\right. \u5339\u914d\u53e6\u4e00\u8fb9\u3002 \u5355\u5de6\u62ec\u53f7 \\left \\{\\frac{a}{b} \\right. \\({\\displaystyle \\left\\{{\\frac {a}{b}}\\right.}\\) \u5355\u53f3\u62ec\u53f7 \\left. \\frac{a}{b} \\right \\} \\({\\displaystyle \\left.{\\frac {a}{b}}\\right\\}}\\) \u5907\u6ce8\uff1a \u53ef\u4ee5\u4f7f\u7528 \\big, \\Big, \\bigg, \\Bigg \u63a7\u5236\u62ec\u53f7\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u4ee3\u7801 \\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| \\frac{a}{b} \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg ) \u663e\u793a\ufe30 \\( \\(\\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| \\frac{a}{b} \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg )\\) \\) \u7a7a\u683c \u6ce8\u610f TeX \u80fd\u591f\u81ea\u52a8\u5904\u7406\u5927\u591a\u6570\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u60a8\u6709\u65f6\u5019\u9700\u8981\u81ea\u5df1\u6765\u63a7\u5236\u3002 \u529f\u80fd | \u8bed\u6cd5 | \u663e\u793a | \u5bbd\u5ea6 2 \u4e2a quad \u7a7a\u683c \\alpha\\qquad\\beta \\({\\displaystyle \\alpha \\qquad \\beta}\\) \\({\\displaystyle mm}\\) quad \u7a7a\u683c \\alpha\\quad\\beta \\({\\displaystyle \\alpha \\quad \\beta}\\) \\({\\displaystyle m}\\) \u5927\u7a7a\u683c \\alpha\\ \\beta \\({\\displaystyle \\alpha \\ \\beta}\\) \\({\\displaystyle {\\frac{m}{3}}}\\) \u4e2d\u7b49\u7a7a\u683c \\alpha\\;\\beta \\({\\displaystyle \\alpha \\;\\beta}\\) \\({\\displaystyle {\\frac {2m}{7}}}\\) \u5c0f\u7a7a\u683c \\alpha\\,\\beta \\({\\displaystyle \\alpha \\,\\beta}\\) \\({\\displaystyle {\\frac {m}{6}}}\\) \u6ca1\u6709\u7a7a\u683c \\alpha\\beta \\({\\displaystyle \\alpha \\beta }\\) \\({\\displaystyle 0}\\) \u7d27\u8d34 \\alpha\\!\\beta \\({\\displaystyle \\alpha \\!\\beta}\\) \\({\\displaystyle -{\\frac {m}{6}}}\\)","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"latex/basic/#latex","text":"\u53c2\u8003\u7ef4\u57fa\u767e\u79d1\u7684 \u6570\u5b66\u516c\u5f0f\u6559\u7a0b \uff1b \u53c2\u8003 Cmd Markdown \u516c\u5f0f\u6307\u5bfc\u624b\u518c \u3002 \u672c\u6587\u4e3a MathJax \u5728 Markdown \u73af\u5883\u4e0b\u7684\u8bed\u6cd5\u6307\u5f15\u3002","title":"\\(\\LaTeX\\) \u57fa\u7840\u77e5\u8bc6"},{"location":"latex/basic/#_1","text":"\\(\\LaTeX\\) \u7684\u6570\u5b66\u516c\u5f0f\u6709\u4e24\u79cd\uff1a\u884c\u4e2d\u516c\u5f0f\u548c\u72ec\u7acb\u516c\u5f0f\uff08\u884c\u95f4\u516c\u5f0f\uff09\u3002\u884c\u4e2d\u516c\u5f0f\u653e\u5728\u6587\u4e2d\u4e0e\u5176\u5b83\u6587\u5b57\u6df7\u7f16\uff0c\u72ec\u7acb\u516c\u5f0f\u5355\u72ec\u6210\u884c\u3002 \u884c\u4e2d\u516c\u5f0f\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u6cd5\u8868\u793a\uff1a $ \u6570\u5b66\u516c\u5f0f $ \u72ec\u7acb\u516c\u5f0f\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u6cd5\u8868\u793a\uff1a $$ \u6570\u5b66\u516c\u5f0f $$","title":"\u5982\u4f55\u63d2\u5165\u516c\u5f0f"},{"location":"latex/basic/#_2","text":"\u529f\u80fd | \u8bed\u6cd5 | \u6548\u679c ^ \u8868\u793a\u4e0a\u6807\uff0c _ \u8868\u793a\u4e0b\u6807\u3002\u5982\u679c\u4e0a\u4e0b\u6807\u7684\u5185\u5bb9\u591a\u4e8e\u4e00\u4e2a\u5b57\u7b26\uff0c\u9700\u8981\u7528 {} \u5c06\u8fd9\u4e9b\u5185\u5bb9\u62ec\u6210\u4e00\u4e2a\u6574\u4f53\u3002\u4e0a\u4e0b\u6807\u53ef\u4ee5\u5d4c\u5957\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u3002 \u4e0a\u6807 a^2 \\({\\displaystyle a^{2}}\\) \u4e0b\u6807 a_2 \\({\\displaystyle a_{2}}\\) \u7ec4\u5408 a^{2+2} \\({\\displaystyle a^{2+2}}\\) a_{i,j} \\({\\displaystyle a_{i,j}}\\) \u7ed3\u5408\u4e0a\u4e0b\u6807 x_2^3 \\({\\displaystyle x_{2}^{3}}\\) \u524d\u7f6e\u4e0a\u4e0b\u6807 {}_1^2\\!X_3^4 \\({\\displaystyle {}_{1}^{2}\\!X_{3}^{4}}\\) \u5bfc\u6570\uff08 HTML \uff09 x' \\({\\displaystyle x'}\\) \u5bfc\u6570\uff08 PNG \uff09 x^\\prime \\({\\displaystyle x^{\\prime}}\\) \u5bfc\u6570\uff08 \u9519\u8bef \uff09 x\\prime \\({\\displaystyle x\\prime}\\) \u5bfc\u6570\u70b9 \\dot{x} \\({\\displaystyle {\\dot {x}}}\\) \\ddot{y} \\({\\displaystyle {\\ddot {y}}}\\) \u5411\u91cf \\vec{c} \uff08\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\uff09 \\({\\displaystyle {\\vec {c}}}\\) \\overleftarrow{a b} \\({\\displaystyle {\\overleftarrow {ab}}}\\) \\overrightarrow{c d} \\({\\displaystyle {\\overrightarrow {cd}}}\\) \\overleftrightarrow{a b} \\({\\displaystyle {\\overleftrightarrow {ab}}}\\) \\widehat{e f g} \\({\\displaystyle {\\widehat {efg}}}\\) \u4e0a\u5f27 \uff08\u6ce8\uff1a\u6b63\u786e\u5e94\u8be5\u7528 \\overarc\uff0c\u4f46\u5728\u8fd9\u91cc\u884c\u4e0d\u901a\u3002\u8981\u7528\u5efa\u8bae\u7684\u8bed\u6cd5\u4f5c\u4e3a\u89e3\u51b3\u529e\u6cd5\u3002\uff09\uff08\u4f7f\u7528 \\ overarc \u65f6\u9700\u8981\u5f15\u5165 {arcs} \u5305\u3002\uff09 \\overset{\\frown} {AB} \\({\\displaystyle {\\overset {\\frown}{AB}}}\\) \u4e0a\u5212\u7ebf \\overline{h i j} \\({\\displaystyle {\\overline {hij}}}\\) \u4e0b\u5212\u7ebf \\underline{k l m} \\({\\displaystyle {\\underline {klm}}}\\) \u4e0a\u62ec\u53f7 \\overbrace{1+2+\\cdots+100} \\({\\displaystyle \\overbrace {1+2+\\cdots +100} }\\) \\begin{matrix} 5050 \\\\ \\overbrace{ 1+2+\\cdots+100 } \\end{matrix} \\({\\displaystyle {\\begin{matrix}5050\\\\\\overbrace {1+2+\\cdots +100} \\end{matrix}}}\\) \u4e0b\u62ec\u53f7 \\underbrace{a+b+\\cdots+z} \\({\\displaystyle \\underbrace {a+b+\\cdots +z} }\\) \\begin{matrix} \\underbrace{ a+b+\\cdots+z } \\\\ 26 \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\underbrace {a+b+\\cdots +z} \\\\26\\end{matrix}}}\\) \u6c42\u548c\uff08\u7d2f\u52a0\uff09 \\sum_{k=1}^N k^2 \\({\\displaystyle \\sum _{k=1}^{N}k^{2}}\\) \\begin{matrix} \\sum_{k=1}^N k^2 \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\sum _{k=1}^{N}k^{2}\\end{matrix}}}\\) \u6c42\u79ef\uff08\u7d2f\u4e58\uff09 \\prod_{i=1}^N x_i \\({\\displaystyle \\prod _{i=1}^{N}x_{i}}\\) \\begin{matrix} \\prod_{i=1}^N x_i \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\prod _{i=1}^{N}x_{i}\\end{matrix}}}\\) \u4e0a\u79ef \\coprod_{i=1}^N x_i \\({\\displaystyle \\coprod _{i=1}^{N}x_{i}}\\) \\begin{matrix} \\coprod_{i=1}^N x_i \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\coprod _{i=1}^{N}x_{i}\\end{matrix}}}\\) \u6781\u9650 \\lim_{n \\to \\infty}x_n \\({\\displaystyle \\lim _{n\\to \\infty}x_{n}}\\) \\begin{matrix} \\lim_{n \\to \\infty}x_n \\end{matrix} \\({\\displaystyle {\\begin{matrix}\\lim _{n\\to \\infty }x_{n}\\end{matrix}}}\\) \u79ef\u5206 \\int_{-N}^{N} e^x\\, {\\rm d}x \\({\\displaystyle \\int _{-N}^{N}e^{x}\\,{\\rm d} x}\\) \u672c\u4f8b\u4e2d \\, \u548c {\\rm d} \u90e8\u5206\u53ef\u7701\u7565\uff0c\u4f46\u5efa\u8bae\u52a0\u5165\uff0c\u80fd\u4f7f\u5f0f\u5b50\u66f4\u7f8e\u89c2\u3002 {\\rm d} \u53ef\u4ee5\u7528 \\mathrm{d} \u7b49\u4ef7\u66ff\u6362\u3002 \\begin{matrix} \\int_{-N}^{N} e^x\\, \\mathrm{d}x \\end{matrix} \uff08\u77e9\u9635\u4e2d\u79ef\u5206\u7b26\u53f7\u53d8\u5c0f\uff09 \\({\\displaystyle {\\begin{matrix}\\int _{-N}^{N}e^{x}\\,\\mathrm {d} x\\end{matrix}}}\\) \u53cc\u91cd\u79ef\u5206 \\iint_{D}^{W} \\, \\mathrm{d}x\\,\\mathrm{d}y \\({\\displaystyle \\iint _{D}^{W}\\,\\mathrm {d} x\\,\\mathrm {d} y}\\) \u4e09\u91cd\u79ef\u5206 \\iiint_{E}^{V} \\, \\mathrm{d}x\\,\\mathrm{d}y\\,\\mathrm{d}z \\({\\displaystyle \\iiint _{E}^{V}\\,\\mathrm {d} x\\,\\mathrm {d} y\\,\\mathrm {d} z}\\) \u95ed\u5408\u7684\u66f2\u7ebf\u3001\u66f2\u9762\u79ef\u5206 \\oint_{C} x^3\\, \\mathrm{d}x + 4y^2\\, \\mathrm{d}y \\({\\displaystyle \\oint _{C}x^{3}\\,\\mathrm {d} x+4y^{2}\\,\\mathrm {d} y}\\) \u4ea4\u96c6 \\bigcap_1^{n} p \\({\\displaystyle \\bigcap _{1}^{n}p}\\) \u5e76\u96c6 \\bigcup_1^{k} p \\({\\displaystyle \\bigcup _{1}^{k}p}\\)","title":"\u4e0a\u6807\u3001\u4e0b\u6807\u53ca\u79ef\u5206\u7b49"},{"location":"latex/basic/#_3","text":"\u901a\u5e38\u4f7f\u7528 \\frac {\u5206\u5b50} {\u5206\u6bcd} \u547d\u4ee4\u4ea7\u751f\u4e00\u4e2a\u5206\u6570\uff0c\u5206\u6570\u53ef\u5d4c\u5957\u3002 \u4fbf\u6377\u60c5\u51b5\u53ef\u76f4\u63a5\u8f93\u5165 \\frac ab \u6765\u5feb\u901f\u751f\u6210\u4e00\u4e2a \\(\\frac ab\\) \u3002 \u5982\u679c\u5206\u5f0f\u5f88\u590d\u6742\uff0c\u4ea6\u53ef\u4f7f\u7528 \u5206\u5b50 \\over \u5206\u6bcd \u547d\u4ee4\uff0c\u6b64\u65f6\u5206\u6570\u4ec5\u6709\u4e00\u5c42\u3002 \u529f\u80fd | \u8bed\u6cd5 | \u6548\u679c \u5206\u6570 \\frac{2}{4}=0.5 \\({\\displaystyle {\\frac {2}{4}}=0.5}\\) \u5c0f\u578b\u5206\u6570 \\tfrac{2}{4} = 0.5 \\({\\displaystyle {\\tfrac {2}{4}}=0.5}\\) \u8fde\u5206\u5f0f\uff08\u5927\u578b\u5d4c\u5957\u5206\u5f0f\uff09 \\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a \\({\\displaystyle {\\cfrac {2}{c+{\\cfrac {2}{d+{\\cfrac {2}{4}}}}}}=a}\\) \u5927\u578b\u4e0d\u5d4c\u5957\u5206\u5f0f \\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a \\({\\displaystyle {\\dfrac {2}{4}}=0.5\\qquad {\\dfrac {2}{c+{\\dfrac {2}{d+{\\dfrac {2}{4}}}}}}=a}\\) \u4e8c\u9879\u5f0f\u7cfb\u6570 \\dbinom{n}{r}=\\binom{n}{n-r}=\\mathrm{C}_n^r=\\mathrm{C}_n^{n-r} \\({\\displaystyle {\\dbinom {n}{r}}={\\binom {n}{n-r}}=\\mathrm {C} _{n}^{r}=\\mathrm {C} _{n}^{n-r}}\\) \u5c0f\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570 \\tbinom{n}{r}=\\tbinom{n}{n-r}=\\mathrm{C}_n^r=\\mathrm{C}_n^{n-r} \\({\\displaystyle {\\tbinom {n}{r}}={\\tbinom {n}{n-r}}=\\mathrm {C} _{n}^{r}=\\mathrm {C} _{n}^{n-r}}\\) \u5927\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570 \\binom{n}{r}=\\dbinom{n}{n-r}=\\mathrm{C}_n^r=\\mathrm{C}_n^{n-r} \\({\\displaystyle {\\binom {n}{r}}={\\dbinom {n}{n-r}}=\\mathrm {C} _{n}^{r}=\\mathrm {C} _{n}^{n-r}}\\) \u5728\u4ee5 e \u4e3a\u5e95\u7684\u6307\u6570\u51fd\u6570\u3001\u6781\u9650\u548c\u79ef\u5206\u4e2d\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 \\frac \u7b26\u53f7\uff1a\u5b83\u4f1a\u4f7f\u6574\u6bb5\u51fd\u6570\u770b\u8d77\u6765\u5f88\u602a\uff0c\u800c\u4e14\u53ef\u80fd\u4ea7\u751f\u6b67\u4e49\u3002\u4e5f\u6b63\u662f\u56e0\u6b64\u5b83\u5728\u4e13\u4e1a\u6570\u5b66\u6392\u7248\u4e2d\u51e0\u4e4e\u4ece\u4e0d\u51fa\u73b0\u3002 \u6a2a\u7740\u5199\u8fd9\u4e9b\u5206\u5f0f\uff0c\u4e2d\u95f4\u4f7f\u7528\u659c\u7ebf\u95f4\u9694 / \uff08\u7528\u659c\u7ebf\u4ee3\u66ff\u5206\u6570\u7ebf\uff09\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 \\begin { array }{ cc } \\mathrm { Bad } & \\mathrm { Better } \\\\ \\hline \\\\ e ^{ i \\frac { \\pi } 2 } \\quad e ^{ \\frac { i \\pi } 2 }& e ^{ i \\pi /2 } \\\\ \\int _{ - \\frac\\pi 2 }^ \\frac\\pi 2 \\sin x \\, dx & \\int _{ - \\pi /2 }^{ \\pi /2 } \\sin x \\, dx \\\\ \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{cc} \\mathrm{Bad} & \\mathrm{Better} \\\\ \\hline \\\\ e^{i\\frac{\\pi}2} \\quad e^{\\frac{i\\pi}2}& e^{i\\pi/2} \\\\ \\int_{-\\frac\\pi2}^\\frac\\pi2 \\sin x\\,dx & \\int_{-\\pi/2}^{\\pi/2}\\sin x\\,dx \\\\ \\end{array} \\]","title":"\u5206\u6570"},{"location":"latex/basic/#_4","text":"() \u3001 [] \u548c | \u8868\u793a\u7b26\u53f7\u672c\u8eab\uff0c\u4f7f\u7528 \\{\\} \u6765\u8868\u793a {} \u3002 \u529f\u80fd | \u8bed\u6cd5 | \u663e\u793a \u77ed\u62ec\u53f7 \\frac{1}{2} \\({\\displaystyle ({\\frac {1}{2}})}\\) \u957f\u62ec\u53f7 \\left(\\frac{1}{2} \\right \\({\\displaystyle \\left({\\frac {1}{2}}\\right)}\\) \u4f7f\u7528 \\left \u548c \\right \u6765\u521b\u5efa\u81ea\u52a8\u5339\u914d\u9ad8\u5ea6\u7684 (\u5706\u62ec\u53f7)\uff0c[\u65b9\u62ec\u53f7] \u548c {\u82b1\u62ec\u53f7} \u3002 \u529f\u80fd | \u8bed\u6cd5 | \u663e\u793a \u5706\u62ec\u53f7\uff0c\u5c0f\u62ec\u53f7 \\left( \\frac{a}{b} \\right) \\({\\displaystyle \\left({\\frac {a}{b}}\\right)}\\) \u65b9\u62ec\u53f7\uff0c\u4e2d\u62ec\u53f7 \\left[ \\frac{a}{b} \\right] \\({\\displaystyle \\left[{\\frac {a}{b}}\\right]}\\) \u82b1\u62ec\u53f7\uff0c\u5927\u62ec\u53f7 \\left{ \\frac{a}{b} \\right} \\({\\displaystyle \\left\\{{\\frac {a}{b}}\\right\\}}\\) \u89d2\u62ec\u53f7 \\left \\langle \\frac{a}{b} \\right \\rangle \\({\\displaystyle \\left\\langle {\\frac {a}{b}}\\right\\rangle }\\) \u5355\u7ad6\u7ebf\uff0c\u7edd\u5bf9\u503c \\left| \\frac{a}{b} \\right| \\({\\displaystyle \\left| \\frac{a}{b} \\right|}\\) \u53cc\u7ad6\u7ebf\uff0c\u8303 \\left \\| \\frac{a}{b} \\right \\| \\({\\displaystyle \\left\\|{\\frac {a}{b}}\\right\\|}\\) \u53d6\u6574\u51fd\u6570 \\left \\lfloor \\frac{a}{b} \\right \\rfloor \\({\\displaystyle \\left\\lfloor {\\frac {a}{b}}\\right\\rfloor }\\) \u53d6\u9876\u51fd\u6570 \\left \\lceil \\frac{c}{d} \\right \\rceil \\({\\displaystyle \\left\\lceil {\\frac {c}{d}}\\right\\rceil }\\) \u659c\u7ebf\u4e0e\u53cd\u659c\u7ebf \\left / \\frac{a}{b} \\right \\backslash \\({\\displaystyle \\left/{\\frac {a}{b}}\\right\\backslash }\\) \u4e0a\u4e0b\u7bad\u5934 \\left \\uparrow \\frac{a}{b} \\right \\downarrow \\({\\displaystyle \\left\\uparrow {\\frac {a}{b}}\\right\\downarrow }\\) \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\({\\displaystyle \\left\\Uparrow {\\frac {a}{b}}\\right\\Downarrow }\\) \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow \\({\\displaystyle \\left\\updownarrow {\\frac {a}{b}}\\right\\Updownarrow }\\) \u6df7\u5408\u62ec\u53f7 \\left[ 0,1 \\right) \\({\\displaystyle \\left[0,1\\right)}\\) \\left \\langle \\psi \\right | \\(\\left \\langle \\psi \\right |\\) \u5982\u679c\u62ec\u53f7\u53ea\u6709\u4e00\u8fb9\uff0c\u8981\u7528 \\left. \u6216 \\right. \u5339\u914d\u53e6\u4e00\u8fb9\u3002 \u5355\u5de6\u62ec\u53f7 \\left \\{\\frac{a}{b} \\right. \\({\\displaystyle \\left\\{{\\frac {a}{b}}\\right.}\\) \u5355\u53f3\u62ec\u53f7 \\left. \\frac{a}{b} \\right \\} \\({\\displaystyle \\left.{\\frac {a}{b}}\\right\\}}\\) \u5907\u6ce8\uff1a \u53ef\u4ee5\u4f7f\u7528 \\big, \\Big, \\bigg, \\Bigg \u63a7\u5236\u62ec\u53f7\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u4ee3\u7801 \\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| \\frac{a}{b} \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg ) \u663e\u793a\ufe30 \\( \\(\\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| \\frac{a}{b} \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg )\\) \\)","title":"\u62ec\u53f7"},{"location":"latex/basic/#_5","text":"\u6ce8\u610f TeX \u80fd\u591f\u81ea\u52a8\u5904\u7406\u5927\u591a\u6570\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u60a8\u6709\u65f6\u5019\u9700\u8981\u81ea\u5df1\u6765\u63a7\u5236\u3002 \u529f\u80fd | \u8bed\u6cd5 | \u663e\u793a | \u5bbd\u5ea6","title":"\u7a7a\u683c"},{"location":"latex/basic/#2-quad","text":"\\alpha\\qquad\\beta \\({\\displaystyle \\alpha \\qquad \\beta}\\) \\({\\displaystyle mm}\\)","title":"2 \u4e2a quad \u7a7a\u683c"},{"location":"latex/basic/#quad","text":"\\alpha\\quad\\beta \\({\\displaystyle \\alpha \\quad \\beta}\\) \\({\\displaystyle m}\\)","title":"quad \u7a7a\u683c"},{"location":"latex/basic/#_6","text":"\\alpha\\ \\beta \\({\\displaystyle \\alpha \\ \\beta}\\) \\({\\displaystyle {\\frac{m}{3}}}\\)","title":"\u5927\u7a7a\u683c"},{"location":"latex/basic/#_7","text":"\\alpha\\;\\beta \\({\\displaystyle \\alpha \\;\\beta}\\) \\({\\displaystyle {\\frac {2m}{7}}}\\)","title":"\u4e2d\u7b49\u7a7a\u683c"},{"location":"latex/basic/#_8","text":"\\alpha\\,\\beta \\({\\displaystyle \\alpha \\,\\beta}\\) \\({\\displaystyle {\\frac {m}{6}}}\\)","title":"\u5c0f\u7a7a\u683c"},{"location":"latex/basic/#_9","text":"\\alpha\\beta \\({\\displaystyle \\alpha \\beta }\\) \\({\\displaystyle 0}\\)","title":"\u6ca1\u6709\u7a7a\u683c"},{"location":"latex/basic/#_10","text":"\\alpha\\!\\beta \\({\\displaystyle \\alpha \\!\\beta}\\) \\({\\displaystyle -{\\frac {m}{6}}}\\)","title":"\u7d27\u8d34"},{"location":"latex/colors/","text":"\u989c\u8272 Cmd Markdown \u516c\u5f0f\u6307\u5bfc\u624b\u518c \u91cc\u662f\u8fd9\u6837\u5199\u7684\uff1a \u4f7f\u7528 \\color{\u989c\u8272}{\u6587\u5b57} \u6765\u66f4\u6539\u7279\u5b9a\u7684\u6587\u5b57\u989c\u8272\u3002 \u66f4\u6539\u6587\u5b57\u989c\u8272 \u9700\u8981\u6d4f\u89c8\u5668\u652f\u6301 \uff0c\u5982\u679c\u6d4f\u89c8\u5668\u4e0d\u77e5\u9053\u4f60\u6240\u9700\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6587\u5b57\u5c06\u88ab\u6e32\u67d3\u4e3a\u9ed1\u8272\u3002 \u5bf9\u4e8e\u8f83\u65e7\u7684\u6d4f\u89c8\u5668\uff08HTML4 \u4e0e CSS2\uff09\uff0c\u4ee5\u4e0b\u989c\u8272\u662f\u88ab\u652f\u6301\u7684\uff1a \u8f93\u5165 \u663e\u793a \u8f93\u5165 \u663e\u793a black \\(\\color{black}{text}\\) grey \\(\\color{grey}{text}\\) silver \\(\\color{silver}{text}\\) white \\(\\color{white}{text}\\) maroon \\(\\color{maroon}{text}\\) red \\(\\color{red}{text}\\) yellow \\(\\color{yellow}{text}\\) lime \\(\\color{lime}{text}\\) olive \\(\\color{olive}{text}\\) green \\(\\color{green}{text}\\) teal \\(\\color{teal}{text}\\) auqa \\(\\color{auqa}{text}\\) blue \\(\\color{blue}{text}\\) navy \\(\\color{navy}{text}\\) purple \\(\\color{purple}{text}\\) fuchsia \\(\\color{fuchsia}{text}\\) \u5bf9\u4e8e\u8f83\u65b0\u7684\u6d4f\u89c8\u5668\uff08HTML5 \u4e0e CSS3\uff09\uff0c\u989d\u5916\u7684 124 \u79cd\u989c\u8272\u5c06\u88ab\u652f\u6301\uff1a \u8f93\u5165 \\color {#rgb} {text} \u6765\u81ea\u5b9a\u4e49\u66f4\u591a\u7684\u989c\u8272\uff0c\u5176\u4e2d #rgb \u7684 r g b \u53ef\u8f93\u5165 0-9 \u548c a-f \u6765\u8868\u793a\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u7684\u7eaf\u5ea6\uff08\u9971\u548c\u5ea6\uff09\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 \\begin { array }{ |rrrrrrrr| } \\hline \\verb +#000+ & \\color { #000 }{ text } & & & \\verb +#00F+ & \\color { #00F }{ text } & & \\\\ & & \\verb +#0F0+ & \\color { #0F0 }{ text } & & & \\verb +#0FF+ & \\color { #0FF }{ text } \\\\ \\verb +#F00+ & \\color { #F00 }{ text } & & & \\verb +#F0F+ & \\color { #F0F }{ text } & & \\\\ & & \\verb +#FF0+ & \\color { #FF0 }{ text } & & & \\verb +#FFF+ & \\color { #FFF }{ text } \\\\ \\hline \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{|rrrrrrrr|}\\hline \\verb+#000+ & \\color{#000}{text} & & & \\verb+#00F+ & \\color{#00F}{text} & & \\\\ & & \\verb+#0F0+ & \\color{#0F0}{text} & & & \\verb+#0FF+ & \\color{#0FF}{text}\\\\ \\verb+#F00+ & \\color{#F00}{text} & & & \\verb+#F0F+ & \\color{#F0F}{text} & & \\\\ & & \\verb+#FF0+ & \\color{#FF0}{text} & & & \\verb+#FFF+ & \\color{#FFF}{text}\\\\ \\hline \\end{array} \\] \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\begin { array }{ |rrrrrrrr| } \\hline \\verb +#000+ & \\color { #000 }{ text } & \\verb +#005+ & \\color { #005 }{ text } & \\verb +#00A+ & \\color { #00A }{ text } & \\verb +#00F+ & \\color { #00F }{ text } \\\\ \\verb +#500+ & \\color { #500 }{ text } & \\verb +#505+ & \\color { #505 }{ text } & \\verb +#50A+ & \\color { #50A }{ text } & \\verb +#50F+ & \\color { #50F }{ text } \\\\ \\verb +#A00+ & \\color { #A00 }{ text } & \\verb +#A05+ & \\color { #A05 }{ text } & \\verb +#A0A+ & \\color { #A0A }{ text } & \\verb +#A0F+ & \\color { #A0F }{ text } \\\\ \\verb +#F00+ & \\color { #F00 }{ text } & \\verb +#F05+ & \\color { #F05 }{ text } & \\verb +#F0A+ & \\color { #F0A }{ text } & \\verb +#F0F+ & \\color { #F0F }{ text } \\\\ \\hline \\verb +#080+ & \\color { #080 }{ text } & \\verb +#085+ & \\color { #085 }{ text } & \\verb +#08A+ & \\color { #08A }{ text } & \\verb +#08F+ & \\color { #08F }{ text } \\\\ \\verb +#580+ & \\color { #580 }{ text } & \\verb +#585+ & \\color { #585 }{ text } & \\verb +#58A+ & \\color { #58A }{ text } & \\verb +#58F+ & \\color { #58F }{ text } \\\\ \\verb +#A80+ & \\color { #A80 }{ text } & \\verb +#A85+ & \\color { #A85 }{ text } & \\verb +#A8A+ & \\color { #A8A }{ text } & \\verb +#A8F+ & \\color { #A8F }{ text } \\\\ \\verb +#F80+ & \\color { #F80 }{ text } & \\verb +#F85+ & \\color { #F85 }{ text } & \\verb +#F8A+ & \\color { #F8A }{ text } & \\verb +#F8F+ & \\color { #F8F }{ text } \\\\ \\hline \\verb +#0F0+ & \\color { #0F0 }{ text } & \\verb +#0F5+ & \\color { #0F5 }{ text } & \\verb +#0FA+ & \\color { #0FA }{ text } & \\verb +#0FF+ & \\color { #0FF }{ text } \\\\ \\verb +#5F0+ & \\color { #5F0 }{ text } & \\verb +#5F5+ & \\color { #5F5 }{ text } & \\verb +#5FA+ & \\color { #5FA }{ text } & \\verb +#5FF+ & \\color { #5FF }{ text } \\\\ \\verb +#AF0+ & \\color { #AF0 }{ text } & \\verb +#AF5+ & \\color { #AF5 }{ text } & \\verb +#AFA+ & \\color { #AFA }{ text } & \\verb +#AFF+ & \\color { #AFF }{ text } \\\\ \\verb +#FF0+ & \\color { #FF0 }{ text } & \\verb +#FF5+ & \\color { #FF5 }{ text } & \\verb +#FFA+ & \\color { #FFA }{ text } & \\verb +#FFF+ & \\color { #FFF }{ text } \\\\ \\hline \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{|rrrrrrrr|} \\hline \\verb+#000+ & \\color{#000}{text} & \\verb+#005+ & \\color{#005}{text} & \\verb+#00A+ & \\color{#00A}{text} & \\verb+#00F+ & \\color{#00F}{text} \\\\ \\verb+#500+ & \\color{#500}{text} & \\verb+#505+ & \\color{#505}{text} & \\verb+#50A+ & \\color{#50A}{text} & \\verb+#50F+ & \\color{#50F}{text} \\\\ \\verb+#A00+ & \\color{#A00}{text} & \\verb+#A05+ & \\color{#A05}{text} & \\verb+#A0A+ & \\color{#A0A}{text} & \\verb+#A0F+ & \\color{#A0F}{text} \\\\ \\verb+#F00+ & \\color{#F00}{text} & \\verb+#F05+ & \\color{#F05}{text} & \\verb+#F0A+ & \\color{#F0A}{text} & \\verb+#F0F+ & \\color{#F0F}{text} \\\\ \\hline \\verb+#080+ & \\color{#080}{text} & \\verb+#085+ & \\color{#085}{text} & \\verb+#08A+ & \\color{#08A}{text} & \\verb+#08F+ & \\color{#08F}{text} \\\\ \\verb+#580+ & \\color{#580}{text} & \\verb+#585+ & \\color{#585}{text} & \\verb+#58A+ & \\color{#58A}{text} & \\verb+#58F+ & \\color{#58F}{text} \\\\ \\verb+#A80+ & \\color{#A80}{text} & \\verb+#A85+ & \\color{#A85}{text} & \\verb+#A8A+ & \\color{#A8A}{text} & \\verb+#A8F+ & \\color{#A8F}{text} \\\\ \\verb+#F80+ & \\color{#F80}{text} & \\verb+#F85+ & \\color{#F85}{text} & \\verb+#F8A+ & \\color{#F8A}{text} & \\verb+#F8F+ & \\color{#F8F}{text} \\\\ \\hline \\verb+#0F0+ & \\color{#0F0}{text} & \\verb+#0F5+ & \\color{#0F5}{text} & \\verb+#0FA+ & \\color{#0FA}{text} & \\verb+#0FF+ & \\color{#0FF}{text} \\\\ \\verb+#5F0+ & \\color{#5F0}{text} & \\verb+#5F5+ & \\color{#5F5}{text} & \\verb+#5FA+ & \\color{#5FA}{text} & \\verb+#5FF+ & \\color{#5FF}{text} \\\\ \\verb+#AF0+ & \\color{#AF0}{text} & \\verb+#AF5+ & \\color{#AF5}{text} & \\verb+#AFA+ & \\color{#AFA}{text} & \\verb+#AFF+ & \\color{#AFF}{text} \\\\ \\verb+#FF0+ & \\color{#FF0}{text} & \\verb+#FF5+ & \\color{#FF5}{text} & \\verb+#FFA+ & \\color{#FFA}{text} & \\verb+#FFF+ & \\color{#FFF}{text} \\\\ \\hline \\end{array} \\] \u7ef4\u57fa\u767e\u79d1\u7684 \u6570\u5b66\u516c\u5f0f\u6559\u7a0b \u91cc\u662f\u8fd9\u6837\u5199\u7684\uff1a \u8bed\u6cd5\uff1a {\\color{\u989c\u8272}\u8868\u8fbe\u5f0f} \u4f5c\u8005\u5b9e\u6d4b\uff1a\u5728\u90e8\u5206\u6d4f\u89c8\u5668\u4e2d\uff0c\u4e0a\u9762\u7684\u8bed\u6cd5\u53ef\u80fd\u662f\u9519\u8bef\u7684 \uff08\u53ea\u5c06\u8868\u8fbe\u5f0f\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7740\u8272\uff09\uff0c \\color{\u989c\u8272}{\u6587\u5b57} \u7684\u8bed\u6cd5\u624d\u662f\u6b63\u786e\u7684\u3002\u4f8b\u5982\uff1a {\\color{Red}abc} \u663e\u793a \\({\\color{Red}abc}\\) \\color{Red}{abc} \u663e\u793a \\(\\color{Red}{abc}\\) \u652f\u6301\u8272\u8c03\u8868\uff1a \\({\\displaystyle \\color {Apricot}{\\text{Apricot}}}\\) \\({\\displaystyle \\color {Aquamarine}{\\text{Aquamarine}}}\\) \\({\\displaystyle \\color {Bittersweet}{\\text{Bittersweet}}}\\) \\({\\displaystyle \\color {Black}{\\text{Black}}}\\) \\({\\displaystyle \\color {Blue}{\\text{Blue}}}\\) \\({\\displaystyle \\color {BlueGreen}{\\text{BlueGreen}}}\\) \\({\\displaystyle \\color {BlueViolet}{\\text{BlueViolet}}}\\) \\({\\displaystyle \\color {BrickRed}{\\text{BrickRed}}}\\) \\({\\displaystyle \\color {Brown}{\\text{Brown}}}\\) \\({\\displaystyle \\color {BurntOrange}{\\text{BurntOrange}}}\\) \\({\\displaystyle \\color {CadetBlue}{\\text{CadetBlue}}}\\) \\({\\displaystyle \\color {CarnationPink}{\\text{CarnationPink}}}\\) \\({\\displaystyle \\color {Cerulean}{\\text{Cerulean}}}\\) \\({\\displaystyle \\color {CornflowerBlue}{\\text{CornflowerBlue}}}\\) \\({\\displaystyle \\color {Cyan}{\\text{Cyan}}}\\) \\({\\displaystyle \\color {Dandelion}{\\text{Dandelion}}}\\) \\({\\displaystyle \\color {DarkOrchid}{\\text{DarkOrchid}}}\\) \\({\\displaystyle \\color {Emerald}{\\text{Emerald}}}\\) \\({\\displaystyle \\color {ForestGreen}{\\text{ForestGreen}}}\\) \\({\\displaystyle \\color {Fuchsia}{\\text{Fuchsia}}}\\) \\({\\displaystyle \\color {Goldenrod}{\\text{Goldenrod}}}\\) \\({\\displaystyle \\color {Gray}{\\text{Gray}}}\\) \\({\\displaystyle \\color {Green}{\\text{Green}}}\\) \\({\\displaystyle \\color {GreenYellow}{\\text{GreenYellow}}}\\) \\({\\displaystyle \\color {JungleGreen}{\\text{JungleGreen}}}\\) \\({\\displaystyle \\color {Lavender}{\\text{Lavender}}}\\) \\({\\displaystyle \\color {LimeGreen}{\\text{LimeGreen}}}\\) \\({\\displaystyle \\color {Magenta}{\\text{Magenta}}}\\) \\({\\displaystyle \\color {Mahogany}{\\text{Mahogany}}}\\) \\({\\displaystyle \\color {Maroon}{\\text{Maroon}}}\\) \\({\\displaystyle \\color {Melon}{\\text{Melon}}}\\) \\({\\displaystyle \\color {MidnightBlue}{\\text{MidnightBlue}}}\\) \\({\\displaystyle \\color {Mulberry}{\\text{Mulberry}}}\\) \\({\\displaystyle \\color {NavyBlue}{\\text{NavyBlue}}}\\) \\({\\displaystyle \\color {OliveGreen}{\\text{OliveGreen}}}\\) \\({\\displaystyle \\color {Orange}{\\text{Orange}}}\\) \\({\\displaystyle \\color {OrangeRed}{\\text{OrangeRed}}}\\) \\({\\displaystyle \\color {Orchid}{\\text{Orchid}}}\\) \\({\\displaystyle \\color {Peach}{\\text{Peach}}}\\) \\({\\displaystyle \\color {Periwinkle}{\\text{Periwinkle}}}\\) \\({\\displaystyle \\color {PineGreen}{\\text{PineGreen}}}\\) \\({\\displaystyle \\color {Plum}{\\text{Plum}}}\\) \\({\\displaystyle \\color {ProcessBlue}{\\text{ProcessBlue}}}\\) \\({\\displaystyle \\color {Purple}{\\text{Purple}}}\\) \\({\\displaystyle \\color {RawSienna}{\\text{RawSienna}}}\\) \\({\\displaystyle \\color {Red}{\\text{Red}}}\\) \\({\\displaystyle \\color {RedOrange}{\\text{RedOrange}}}\\) \\({\\displaystyle \\color {RedViolet}{\\text{RedViolet}}}\\) \\({\\displaystyle \\color {Rhodamine}{\\text{Rhodamine}}}\\) \\({\\displaystyle \\color {RoyalBlue}{\\text{RoyalBlue}}}\\) \\({\\displaystyle \\color {RoyalPurple}{\\text{RoyalPurple}}}\\) \\({\\displaystyle \\color {RubineRed}{\\text{RubineRed}}}\\) \\({\\displaystyle \\color {Salmon}{\\text{Salmon}}}\\) \\({\\displaystyle \\color {SeaGreen}{\\text{SeaGreen}}}\\) \\({\\displaystyle \\color {Sepia}{\\text{Sepia}}}\\) \\({\\displaystyle \\color {SkyBlue}{\\text{SkyBlue}}}\\) \\({\\displaystyle \\color {SpringGreen}{\\text{SpringGreen}}}\\) \\({\\displaystyle \\color {Tan}{\\text{Tan}}}\\) \\({\\displaystyle \\color {TealBlue}{\\text{TealBlue}}}\\) \\({\\displaystyle \\color {Thistle}{\\text{Thistle}}}\\) \\({\\displaystyle \\color {Turquoise}{\\text{Turquoise}}}\\) \\({\\displaystyle \\color {Violet}{\\text{Violet}}}\\) \\({\\displaystyle \\color {VioletRed}{\\text{VioletRed}}}\\) \\({\\displaystyle \\color {White}{\\text{White}}}\\) \\({\\displaystyle \\color {WildStrawberry}{\\text{WildStrawberry}}}\\) \\({\\displaystyle \\color {Yellow}{\\text{Yellow}}}\\) \\({\\displaystyle \\color {YellowGreen}{\\text{YellowGreen}}}\\) \\({\\displaystyle \\color {YellowOrange}{\\text{YellowOrange}}}\\) \uff0a \u6ce8\ufe30\u8f93\u5165\u65f6\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5fc5\u9700\u4ee5\u5927\u5199\u8f93\u5165\uff0c\u5982 \\color{OliveGreen} \u3002 \u4f8b\u5b50 {\\color{Blue}x^2}+{\\color{Brown}2x} - {\\color{OliveGreen}1} \\({\\displaystyle {\\color {Blue}x^{2}}+{\\color {Brown}2x}-{\\color {OliveGreen}1}}\\) x_{\\color{Maroon}1,2}=\\frac{-b\\pm\\sqrt{{\\color{Maroon}b^2-4ac}}}{2a} \\({\\displaystyle x_{\\color {Maroon}1,2}={\\frac {-b\\pm {\\sqrt {\\color {Maroon}b^{2}-4ac}}}{2a}}}\\)","title":"\u989c\u8272"},{"location":"latex/colors/#_1","text":"","title":"\u989c\u8272"},{"location":"latex/colors/#cmd-markdown","text":"\u4f7f\u7528 \\color{\u989c\u8272}{\u6587\u5b57} \u6765\u66f4\u6539\u7279\u5b9a\u7684\u6587\u5b57\u989c\u8272\u3002 \u66f4\u6539\u6587\u5b57\u989c\u8272 \u9700\u8981\u6d4f\u89c8\u5668\u652f\u6301 \uff0c\u5982\u679c\u6d4f\u89c8\u5668\u4e0d\u77e5\u9053\u4f60\u6240\u9700\u7684\u989c\u8272\uff0c\u90a3\u4e48\u6587\u5b57\u5c06\u88ab\u6e32\u67d3\u4e3a\u9ed1\u8272\u3002 \u5bf9\u4e8e\u8f83\u65e7\u7684\u6d4f\u89c8\u5668\uff08HTML4 \u4e0e CSS2\uff09\uff0c\u4ee5\u4e0b\u989c\u8272\u662f\u88ab\u652f\u6301\u7684\uff1a \u8f93\u5165 \u663e\u793a \u8f93\u5165 \u663e\u793a black \\(\\color{black}{text}\\) grey \\(\\color{grey}{text}\\) silver \\(\\color{silver}{text}\\) white \\(\\color{white}{text}\\) maroon \\(\\color{maroon}{text}\\) red \\(\\color{red}{text}\\) yellow \\(\\color{yellow}{text}\\) lime \\(\\color{lime}{text}\\) olive \\(\\color{olive}{text}\\) green \\(\\color{green}{text}\\) teal \\(\\color{teal}{text}\\) auqa \\(\\color{auqa}{text}\\) blue \\(\\color{blue}{text}\\) navy \\(\\color{navy}{text}\\) purple \\(\\color{purple}{text}\\) fuchsia \\(\\color{fuchsia}{text}\\) \u5bf9\u4e8e\u8f83\u65b0\u7684\u6d4f\u89c8\u5668\uff08HTML5 \u4e0e CSS3\uff09\uff0c\u989d\u5916\u7684 124 \u79cd\u989c\u8272\u5c06\u88ab\u652f\u6301\uff1a \u8f93\u5165 \\color {#rgb} {text} \u6765\u81ea\u5b9a\u4e49\u66f4\u591a\u7684\u989c\u8272\uff0c\u5176\u4e2d #rgb \u7684 r g b \u53ef\u8f93\u5165 0-9 \u548c a-f \u6765\u8868\u793a\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u7684\u7eaf\u5ea6\uff08\u9971\u548c\u5ea6\uff09\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 \\begin { array }{ |rrrrrrrr| } \\hline \\verb +#000+ & \\color { #000 }{ text } & & & \\verb +#00F+ & \\color { #00F }{ text } & & \\\\ & & \\verb +#0F0+ & \\color { #0F0 }{ text } & & & \\verb +#0FF+ & \\color { #0FF }{ text } \\\\ \\verb +#F00+ & \\color { #F00 }{ text } & & & \\verb +#F0F+ & \\color { #F0F }{ text } & & \\\\ & & \\verb +#FF0+ & \\color { #FF0 }{ text } & & & \\verb +#FFF+ & \\color { #FFF }{ text } \\\\ \\hline \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{|rrrrrrrr|}\\hline \\verb+#000+ & \\color{#000}{text} & & & \\verb+#00F+ & \\color{#00F}{text} & & \\\\ & & \\verb+#0F0+ & \\color{#0F0}{text} & & & \\verb+#0FF+ & \\color{#0FF}{text}\\\\ \\verb+#F00+ & \\color{#F00}{text} & & & \\verb+#F0F+ & \\color{#F0F}{text} & & \\\\ & & \\verb+#FF0+ & \\color{#FF0}{text} & & & \\verb+#FFF+ & \\color{#FFF}{text}\\\\ \\hline \\end{array} \\] \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\begin { array }{ |rrrrrrrr| } \\hline \\verb +#000+ & \\color { #000 }{ text } & \\verb +#005+ & \\color { #005 }{ text } & \\verb +#00A+ & \\color { #00A }{ text } & \\verb +#00F+ & \\color { #00F }{ text } \\\\ \\verb +#500+ & \\color { #500 }{ text } & \\verb +#505+ & \\color { #505 }{ text } & \\verb +#50A+ & \\color { #50A }{ text } & \\verb +#50F+ & \\color { #50F }{ text } \\\\ \\verb +#A00+ & \\color { #A00 }{ text } & \\verb +#A05+ & \\color { #A05 }{ text } & \\verb +#A0A+ & \\color { #A0A }{ text } & \\verb +#A0F+ & \\color { #A0F }{ text } \\\\ \\verb +#F00+ & \\color { #F00 }{ text } & \\verb +#F05+ & \\color { #F05 }{ text } & \\verb +#F0A+ & \\color { #F0A }{ text } & \\verb +#F0F+ & \\color { #F0F }{ text } \\\\ \\hline \\verb +#080+ & \\color { #080 }{ text } & \\verb +#085+ & \\color { #085 }{ text } & \\verb +#08A+ & \\color { #08A }{ text } & \\verb +#08F+ & \\color { #08F }{ text } \\\\ \\verb +#580+ & \\color { #580 }{ text } & \\verb +#585+ & \\color { #585 }{ text } & \\verb +#58A+ & \\color { #58A }{ text } & \\verb +#58F+ & \\color { #58F }{ text } \\\\ \\verb +#A80+ & \\color { #A80 }{ text } & \\verb +#A85+ & \\color { #A85 }{ text } & \\verb +#A8A+ & \\color { #A8A }{ text } & \\verb +#A8F+ & \\color { #A8F }{ text } \\\\ \\verb +#F80+ & \\color { #F80 }{ text } & \\verb +#F85+ & \\color { #F85 }{ text } & \\verb +#F8A+ & \\color { #F8A }{ text } & \\verb +#F8F+ & \\color { #F8F }{ text } \\\\ \\hline \\verb +#0F0+ & \\color { #0F0 }{ text } & \\verb +#0F5+ & \\color { #0F5 }{ text } & \\verb +#0FA+ & \\color { #0FA }{ text } & \\verb +#0FF+ & \\color { #0FF }{ text } \\\\ \\verb +#5F0+ & \\color { #5F0 }{ text } & \\verb +#5F5+ & \\color { #5F5 }{ text } & \\verb +#5FA+ & \\color { #5FA }{ text } & \\verb +#5FF+ & \\color { #5FF }{ text } \\\\ \\verb +#AF0+ & \\color { #AF0 }{ text } & \\verb +#AF5+ & \\color { #AF5 }{ text } & \\verb +#AFA+ & \\color { #AFA }{ text } & \\verb +#AFF+ & \\color { #AFF }{ text } \\\\ \\verb +#FF0+ & \\color { #FF0 }{ text } & \\verb +#FF5+ & \\color { #FF5 }{ text } & \\verb +#FFA+ & \\color { #FFA }{ text } & \\verb +#FFF+ & \\color { #FFF }{ text } \\\\ \\hline \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{|rrrrrrrr|} \\hline \\verb+#000+ & \\color{#000}{text} & \\verb+#005+ & \\color{#005}{text} & \\verb+#00A+ & \\color{#00A}{text} & \\verb+#00F+ & \\color{#00F}{text} \\\\ \\verb+#500+ & \\color{#500}{text} & \\verb+#505+ & \\color{#505}{text} & \\verb+#50A+ & \\color{#50A}{text} & \\verb+#50F+ & \\color{#50F}{text} \\\\ \\verb+#A00+ & \\color{#A00}{text} & \\verb+#A05+ & \\color{#A05}{text} & \\verb+#A0A+ & \\color{#A0A}{text} & \\verb+#A0F+ & \\color{#A0F}{text} \\\\ \\verb+#F00+ & \\color{#F00}{text} & \\verb+#F05+ & \\color{#F05}{text} & \\verb+#F0A+ & \\color{#F0A}{text} & \\verb+#F0F+ & \\color{#F0F}{text} \\\\ \\hline \\verb+#080+ & \\color{#080}{text} & \\verb+#085+ & \\color{#085}{text} & \\verb+#08A+ & \\color{#08A}{text} & \\verb+#08F+ & \\color{#08F}{text} \\\\ \\verb+#580+ & \\color{#580}{text} & \\verb+#585+ & \\color{#585}{text} & \\verb+#58A+ & \\color{#58A}{text} & \\verb+#58F+ & \\color{#58F}{text} \\\\ \\verb+#A80+ & \\color{#A80}{text} & \\verb+#A85+ & \\color{#A85}{text} & \\verb+#A8A+ & \\color{#A8A}{text} & \\verb+#A8F+ & \\color{#A8F}{text} \\\\ \\verb+#F80+ & \\color{#F80}{text} & \\verb+#F85+ & \\color{#F85}{text} & \\verb+#F8A+ & \\color{#F8A}{text} & \\verb+#F8F+ & \\color{#F8F}{text} \\\\ \\hline \\verb+#0F0+ & \\color{#0F0}{text} & \\verb+#0F5+ & \\color{#0F5}{text} & \\verb+#0FA+ & \\color{#0FA}{text} & \\verb+#0FF+ & \\color{#0FF}{text} \\\\ \\verb+#5F0+ & \\color{#5F0}{text} & \\verb+#5F5+ & \\color{#5F5}{text} & \\verb+#5FA+ & \\color{#5FA}{text} & \\verb+#5FF+ & \\color{#5FF}{text} \\\\ \\verb+#AF0+ & \\color{#AF0}{text} & \\verb+#AF5+ & \\color{#AF5}{text} & \\verb+#AFA+ & \\color{#AFA}{text} & \\verb+#AFF+ & \\color{#AFF}{text} \\\\ \\verb+#FF0+ & \\color{#FF0}{text} & \\verb+#FF5+ & \\color{#FF5}{text} & \\verb+#FFA+ & \\color{#FFA}{text} & \\verb+#FFF+ & \\color{#FFF}{text} \\\\ \\hline \\end{array} \\]","title":"Cmd Markdown \u516c\u5f0f\u6307\u5bfc\u624b\u518c\u91cc\u662f\u8fd9\u6837\u5199\u7684\uff1a"},{"location":"latex/colors/#_2","text":"\u8bed\u6cd5\uff1a {\\color{\u989c\u8272}\u8868\u8fbe\u5f0f} \u4f5c\u8005\u5b9e\u6d4b\uff1a\u5728\u90e8\u5206\u6d4f\u89c8\u5668\u4e2d\uff0c\u4e0a\u9762\u7684\u8bed\u6cd5\u53ef\u80fd\u662f\u9519\u8bef\u7684 \uff08\u53ea\u5c06\u8868\u8fbe\u5f0f\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7740\u8272\uff09\uff0c \\color{\u989c\u8272}{\u6587\u5b57} \u7684\u8bed\u6cd5\u624d\u662f\u6b63\u786e\u7684\u3002\u4f8b\u5982\uff1a {\\color{Red}abc} \u663e\u793a \\({\\color{Red}abc}\\) \\color{Red}{abc} \u663e\u793a \\(\\color{Red}{abc}\\) \u652f\u6301\u8272\u8c03\u8868\uff1a \\({\\displaystyle \\color {Apricot}{\\text{Apricot}}}\\) \\({\\displaystyle \\color {Aquamarine}{\\text{Aquamarine}}}\\) \\({\\displaystyle \\color {Bittersweet}{\\text{Bittersweet}}}\\) \\({\\displaystyle \\color {Black}{\\text{Black}}}\\) \\({\\displaystyle \\color {Blue}{\\text{Blue}}}\\) \\({\\displaystyle \\color {BlueGreen}{\\text{BlueGreen}}}\\) \\({\\displaystyle \\color {BlueViolet}{\\text{BlueViolet}}}\\) \\({\\displaystyle \\color {BrickRed}{\\text{BrickRed}}}\\) \\({\\displaystyle \\color {Brown}{\\text{Brown}}}\\) \\({\\displaystyle \\color {BurntOrange}{\\text{BurntOrange}}}\\) \\({\\displaystyle \\color {CadetBlue}{\\text{CadetBlue}}}\\) \\({\\displaystyle \\color {CarnationPink}{\\text{CarnationPink}}}\\) \\({\\displaystyle \\color {Cerulean}{\\text{Cerulean}}}\\) \\({\\displaystyle \\color {CornflowerBlue}{\\text{CornflowerBlue}}}\\) \\({\\displaystyle \\color {Cyan}{\\text{Cyan}}}\\) \\({\\displaystyle \\color {Dandelion}{\\text{Dandelion}}}\\) \\({\\displaystyle \\color {DarkOrchid}{\\text{DarkOrchid}}}\\) \\({\\displaystyle \\color {Emerald}{\\text{Emerald}}}\\) \\({\\displaystyle \\color {ForestGreen}{\\text{ForestGreen}}}\\) \\({\\displaystyle \\color {Fuchsia}{\\text{Fuchsia}}}\\) \\({\\displaystyle \\color {Goldenrod}{\\text{Goldenrod}}}\\) \\({\\displaystyle \\color {Gray}{\\text{Gray}}}\\) \\({\\displaystyle \\color {Green}{\\text{Green}}}\\) \\({\\displaystyle \\color {GreenYellow}{\\text{GreenYellow}}}\\) \\({\\displaystyle \\color {JungleGreen}{\\text{JungleGreen}}}\\) \\({\\displaystyle \\color {Lavender}{\\text{Lavender}}}\\) \\({\\displaystyle \\color {LimeGreen}{\\text{LimeGreen}}}\\) \\({\\displaystyle \\color {Magenta}{\\text{Magenta}}}\\) \\({\\displaystyle \\color {Mahogany}{\\text{Mahogany}}}\\) \\({\\displaystyle \\color {Maroon}{\\text{Maroon}}}\\) \\({\\displaystyle \\color {Melon}{\\text{Melon}}}\\) \\({\\displaystyle \\color {MidnightBlue}{\\text{MidnightBlue}}}\\) \\({\\displaystyle \\color {Mulberry}{\\text{Mulberry}}}\\) \\({\\displaystyle \\color {NavyBlue}{\\text{NavyBlue}}}\\) \\({\\displaystyle \\color {OliveGreen}{\\text{OliveGreen}}}\\) \\({\\displaystyle \\color {Orange}{\\text{Orange}}}\\) \\({\\displaystyle \\color {OrangeRed}{\\text{OrangeRed}}}\\) \\({\\displaystyle \\color {Orchid}{\\text{Orchid}}}\\) \\({\\displaystyle \\color {Peach}{\\text{Peach}}}\\) \\({\\displaystyle \\color {Periwinkle}{\\text{Periwinkle}}}\\) \\({\\displaystyle \\color {PineGreen}{\\text{PineGreen}}}\\) \\({\\displaystyle \\color {Plum}{\\text{Plum}}}\\) \\({\\displaystyle \\color {ProcessBlue}{\\text{ProcessBlue}}}\\) \\({\\displaystyle \\color {Purple}{\\text{Purple}}}\\) \\({\\displaystyle \\color {RawSienna}{\\text{RawSienna}}}\\) \\({\\displaystyle \\color {Red}{\\text{Red}}}\\) \\({\\displaystyle \\color {RedOrange}{\\text{RedOrange}}}\\) \\({\\displaystyle \\color {RedViolet}{\\text{RedViolet}}}\\) \\({\\displaystyle \\color {Rhodamine}{\\text{Rhodamine}}}\\) \\({\\displaystyle \\color {RoyalBlue}{\\text{RoyalBlue}}}\\) \\({\\displaystyle \\color {RoyalPurple}{\\text{RoyalPurple}}}\\) \\({\\displaystyle \\color {RubineRed}{\\text{RubineRed}}}\\) \\({\\displaystyle \\color {Salmon}{\\text{Salmon}}}\\) \\({\\displaystyle \\color {SeaGreen}{\\text{SeaGreen}}}\\) \\({\\displaystyle \\color {Sepia}{\\text{Sepia}}}\\) \\({\\displaystyle \\color {SkyBlue}{\\text{SkyBlue}}}\\) \\({\\displaystyle \\color {SpringGreen}{\\text{SpringGreen}}}\\) \\({\\displaystyle \\color {Tan}{\\text{Tan}}}\\) \\({\\displaystyle \\color {TealBlue}{\\text{TealBlue}}}\\) \\({\\displaystyle \\color {Thistle}{\\text{Thistle}}}\\) \\({\\displaystyle \\color {Turquoise}{\\text{Turquoise}}}\\) \\({\\displaystyle \\color {Violet}{\\text{Violet}}}\\) \\({\\displaystyle \\color {VioletRed}{\\text{VioletRed}}}\\) \\({\\displaystyle \\color {White}{\\text{White}}}\\) \\({\\displaystyle \\color {WildStrawberry}{\\text{WildStrawberry}}}\\) \\({\\displaystyle \\color {Yellow}{\\text{Yellow}}}\\) \\({\\displaystyle \\color {YellowGreen}{\\text{YellowGreen}}}\\) \\({\\displaystyle \\color {YellowOrange}{\\text{YellowOrange}}}\\) \uff0a \u6ce8\ufe30\u8f93\u5165\u65f6\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5fc5\u9700\u4ee5\u5927\u5199\u8f93\u5165\uff0c\u5982 \\color{OliveGreen} \u3002 \u4f8b\u5b50 {\\color{Blue}x^2}+{\\color{Brown}2x} - {\\color{OliveGreen}1} \\({\\displaystyle {\\color {Blue}x^{2}}+{\\color {Brown}2x}-{\\color {OliveGreen}1}}\\) x_{\\color{Maroon}1,2}=\\frac{-b\\pm\\sqrt{{\\color{Maroon}b^2-4ac}}}{2a} \\({\\displaystyle x_{\\color {Maroon}1,2}={\\frac {-b\\pm {\\sqrt {\\color {Maroon}b^{2}-4ac}}}{2a}}}\\)","title":"\u7ef4\u57fa\u767e\u79d1\u7684\u6570\u5b66\u516c\u5f0f\u6559\u7a0b\u91cc\u662f\u8fd9\u6837\u5199\u7684\uff1a"},{"location":"latex/env/","text":"\u77e9\u9635\u3001\u6761\u4ef6\u8868\u8fbe\u5f0f\u3001\u65b9\u7a0b\u7ec4 \u8bed\u6cd5\uff1a 1 2 3 \\begin { \u7c7b\u578b } \u516c\u5f0f\u5185\u5bb9 \\end { \u7c7b\u578b } \u7c7b\u578b\u53ef\u4ee5\u662f\uff1a\u77e9\u9635 matrix pmatrix bmatrix Bmatrix vmatrix Vmatrix \u3001\u6761\u4ef6\u8868\u8fbe\u5f0f cases \u3001\u591a\u884c\u5bf9\u9f50\u65b9\u7a0b\u5f0f aligned \u3001\u6570\u7ec4 array \u3002 \u5728\u516c\u5f0f\u5185\u5bb9\u4e2d\uff1a\u5728\u6bcf\u4e00\u884c\u4e2d\u63d2\u5165 & \u6765\u6307\u5b9a\u9700\u8981 \u5bf9\u9f50 \u7684\u5185\u5bb9\uff0c\u5728\u6bcf\u884c\u7ed3\u5c3e\u5904\u4f7f\u7528 \\\\ \u6362\u884c \u3002 \u65e0\u6846\u77e9\u9635 \u5728\u5f00\u5934\u4f7f\u7528 begin{matrix} \uff0c\u5728\u7ed3\u5c3e\u4f7f\u7528 end{matrix} \uff0c\u5728\u4e2d\u95f4\u63d2\u5165\u77e9\u9635\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u63d2\u5165 & \uff0c\u5e76\u5728\u6bcf\u884c\u7ed3\u5c3e\u5904\u4f7f\u7528 \\\\ \u3002 1 2 3 4 \\begin { matrix } x & y \\\\ z & v \\end { matrix } \\({\\displaystyle {\\begin{matrix}x&y\\\\z&v\\end{matrix}}}\\) \u6709\u6846\u77e9\u9635 \u5728\u5f00\u5934\u5c06 matrix \u66ff\u6362\u4e3a pmatrix \u6216 bmatrix \u6216 Bmatrix \u6216 vmatrix \u6216 Vmatrix \u3002 1 2 3 4 \\begin { vmatrix } x & y \\\\ z & v \\end { vmatrix } \\({\\displaystyle {\\begin{vmatrix}x&y\\\\z&v\\end{vmatrix}}}\\) 1 2 3 4 \\begin { Vmatrix } x & y \\\\ z & v \\end { Vmatrix } \\({\\displaystyle {\\begin{Vmatrix}x&y\\\\z&v\\end{Vmatrix}}}\\) \u4f7f\u7528 \\cdots \\(\\cdots\\) , \\ddots \\(\\ddots\\) , \\vdots \\(\\vdots\\) \u6765\u8f93\u5165 \u7701\u7565\u7b26\u53f7 \u3002 1 2 3 4 5 \\begin { bmatrix } 0 & \\cdots & 0 \\\\ \\vdots & \\ddots & \\vdots \\\\ 0 & \\cdots & 0 \\end { bmatrix } \\({\\displaystyle {\\begin{bmatrix}0&\\cdots &0\\\\\\vdots &\\ddots &\\vdots \\\\0&\\cdots &0\\end{bmatrix}}}\\) 1 2 3 4 \\begin { Bmatrix } x & y \\\\ z & v \\end { Bmatrix } \\({\\displaystyle {\\begin{Bmatrix}x&y\\\\z&v\\end{Bmatrix}}}\\) 1 2 3 4 \\begin { pmatrix } x & y \\\\ z & v \\end { pmatrix } \\({\\displaystyle {\\begin{pmatrix}x&y\\\\z&v\\end{pmatrix}}}\\) \u6761\u4ef6\u8868\u8fbe\u5f0f 1 2 3 4 5 f(n) = \\begin { cases } n/2, & \\text { if } n \\text { is even } \\\\ 3n+1, & \\text { if } n \\text { is odd } \\end { cases } \\({\\displaystyle f(n)={\\begin{cases}n/2,&{\\text{if }}n{\\text{ is even}}\\\\3n+1,&{\\text{if }}n{\\text{ is odd}}\\end{cases}}}\\) \u591a\u884c\u7b49\u5f0f\u3001\u540c\u4f59\u5f0f \u4eba\u4eec\u7ecf\u5e38\u60f3\u8981\u4e00\u5217\u6574\u9f50\u4e14\u5c45\u4e2d\u7684\u65b9\u7a0b\u5f0f\u5e8f\u5217\u3002\u4f7f\u7528 \\begin{aligned}\u2026\\end{aligned} \u3002 1 2 3 4 \\begin { aligned } f(x) & = (m+n) ^ 2 \\\\ & = m ^ 2+2mn+n ^ 2 \\\\ \\end { aligned } \\({\\displaystyle {\\begin{aligned}f(x)&=(m+n)^{2}\\\\&=m^{2}+2mn+n^{2}\\\\\\end{aligned}}}\\) 1 2 3 4 5 6 7 8 \\begin { aligned } 3 ^{ 6n+3 } +4 ^{ 6n+3 } & \\equiv (3 ^ 3) ^{ 2n+1 } +(4 ^ 3) ^{ 2n+1 } \\\\ & \\equiv 27 ^{ 2n+1 } +64 ^{ 2n+1 } \\\\ & \\equiv 27 ^{ 2n+1 } +(-27) ^{ 2n+1 } \\\\ & \\equiv 27 ^{ 2n+1 } -27 ^{ 2n+1 } \\\\ & \\equiv 0 \\pmod { 91 } \\\\ \\end { aligned } \\({\\displaystyle {\\begin{aligned}3^{6n+3}+4^{6n+3}&\\equiv (3^{3})^{2n+1}+(4^{3})^{2n+1}\\\\&\\equiv 27^{2n+1}+64^{2n+1}\\\\&\\equiv 27^{2n+1}+(-27)^{2n+1}\\\\&\\equiv 27^{2n+1}-27^{2n+1}\\\\&\\equiv 0{\\pmod {91}}\\\\\\end{aligned}}}\\) 1 2 3 4 5 \\begin { alignedat }{ 3 } f(x) & = (m-n) ^ 2 \\\\ f(x) & = (-m+n) ^ 2 \\\\ & = m ^ 2-2mn+n ^ 2 \\\\ \\end { alignedat } \\({\\displaystyle {\\begin{alignedat}{3}f(x)&=(m-n)^{2}\\\\f(x)&=(-m+n)^{2}\\\\&=m^{2}-2mn+n^{2}\\\\\\end{alignedat}}}\\) \u65b9\u7a0b\u7ec4 1 2 3 4 5 \\begin { cases } 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end { cases } \\[{\\displaystyle {\\begin{cases}3x+5y+z\\\\7x-2y+4z\\\\-6x+3y+2z\\end{cases}}}\\] \u6216 1 2 3 4 5 \\left\\{\\begin { aligned } 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end { aligned } \\right . \\[ \\left\\{\\begin{aligned} 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end{aligned}\\right. \\] \u6570\u7ec4\u4e0e\u8868\u683c \u901a\u5e38\uff0c\u4e00\u4e2a\u683c\u5f0f\u5316\u540e\u7684\u8868\u683c\u6bd4\u5355\u7eaf\u7684\u6587\u5b57\u6216\u6392\u7248\u540e\u7684\u6587\u5b57\u66f4\u5177\u6709\u53ef\u8bfb\u6027\u3002\u6570\u7ec4\u548c\u8868\u683c\u5747\u4ee5 \\begin{array} \u5f00\u5934\uff0c\u5e76\u5728\u5176\u540e\u5b9a\u4e49\u5217\u6570\u53ca\u6bcf\u4e00\u5217\u7684\u6587\u672c\u5bf9\u9f50\u5c5e\u6027\uff0c c l r \u5206\u522b\u4ee3\u8868\u5c45\u4e2d\u3001\u5de6\u5bf9\u9f50\u53ca\u53f3\u5bf9\u9f50\u3002\u82e5\u9700\u8981\u63d2\u5165\u5782\u76f4\u5206\u5272\u7ebf\uff0c\u5728\u5b9a\u4e49\u5f0f\u4e2d\u63d2\u5165 | \uff0c\u82e5\u8981\u63d2\u5165\u6c34\u5e73\u5206\u5272\u7ebf\uff0c\u5728\u4e0b\u4e00\u884c\u8f93\u5165\u524d\u63d2\u5165 \\hline \u3002\u4e0e\u77e9\u9635\u76f8\u4f3c\uff0c\u6bcf\u884c\u5143\u7d20\u95f4\u5747\u987b\u8981\u63d2\u5165 & \uff0c\u6bcf\u884c\u5143\u7d20\u4ee5 \\\\ \u7ed3\u5c3e\uff0c\u6700\u540e\u4ee5 \\end{array} \u7ed3\u675f\u6570\u7ec4\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 \\begin { array }{ c|lcr } n & \\text { \u5de6\u5bf9\u9f50 } & \\text { \u5c45\u4e2d\u5bf9\u9f50 } & \\text { \u53f3\u5bf9\u9f50 } \\\\ \\hline 1 & 0.24 & 1 & 125 \\\\ 2 & -1 & 189 & -8 \\\\ 3 & -20 & 2000 & 1+10i \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{c|lcr} n & \\text{\u5de6\u5bf9\u9f50} & \\text{\u5c45\u4e2d\u5bf9\u9f50} & \\text{\u53f3\u5bf9\u9f50} \\\\ \\hline 1 & 0.24 & 1 & 125 \\\\ 2 & -1 & 189 & -8 \\\\ 3 & -20 & 2000 & 1+10i \\end{array} \\] \u4f8b\u5b50\uff1a 1 2 3 4 \\begin { array }{ lcl } z & = & a \\\\ f(x,y,z) & = & x + y + z \\end { array } \u663e\u793a\uff1a \\({\\displaystyle {\\begin{array}{lcl}z&=&a\\\\f(x,y,z)&=&x+y+z\\end{array}}}\\) \u4f8b\u5b50\uff1a 1 2 3 4 \\begin { array }{ lcr } z & = & a \\\\ f(x,y,z) & = & x + y + z \\end { array } \u663e\u793a\uff1a \\({\\displaystyle {\\begin{array}{lcr}z&=&a\\\\f(x,y,z)&=&x+y+z\\end{array}}}\\) \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 \\begin { array }{ ccc } a & b & S \\\\ \\hline 0 & 0 & 1 \\\\ 0 & 1 & 1 \\\\ 1 & 0 & 1 \\\\ 1 & 1 & 0 \\\\ \\end { array } \u663e\u793a\uff1a \\[{\\displaystyle {\\begin{array}{ccc}a&b&S\\\\\\hline 0&0&1\\\\0&1&1\\\\1&0&1\\\\1&1&0\\\\\\end{array}}}\\] \u5d4c\u5957\u6570\u7ec4\u6216\u8868\u683c \u591a\u4e2a\u6570\u7ec4/\u8868\u683c\u53ef \u4e92\u76f8\u5d4c\u5957 \u5e76\u7ec4\u6210\u4e00\u7ec4\u6570\u7ec4/\u4e00\u7ec4\u8868\u683c\u3002 \u4f7f\u7528\u5d4c\u5957\u524d\u5fc5\u987b\u58f0\u660e $$ \u7b26\u53f7\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 % outer vertical array of arrays \u5916\u5c42\u5782\u76f4\u8868\u683c \\begin { array }{ c } % inner horizontal array of arrays \u5185\u5c42\u6c34\u5e73\u8868\u683c \\begin { array }{ cc } % inner array of minimum values \u5185\u5c42\"\u6700\u5c0f\u503c\"\u6570\u7ec4 \\begin { array }{ c|cccc } \\text { min } & 0 & 1 & 2 & 3 \\\\ \\hline 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 1 & 1 & 1 \\\\ 2 & 0 & 1 & 2 & 2 \\\\ 3 & 0 & 1 & 2 & 3 \\end { array } & % inner array of maximum values \u5185\u5c42\"\u6700\u5927\u503c\"\u6570\u7ec4 \\begin { array }{ c|cccc } \\text { max }& 0 & 1 & 2 & 3 \\\\ \\hline 0 & 0 & 1 & 2 & 3 \\\\ 1 & 1 & 1 & 2 & 3 \\\\ 2 & 2 & 2 & 2 & 3 \\\\ 3 & 3 & 3 & 3 & 3 \\end { array } \\end { array } % \u5185\u5c42\u7b2c\u4e00\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\\\ % inner array of delta values \u5185\u5c42\u7b2c\u4e8c\u884c Delta \u503c\u6570\u7ec4 \\begin { array }{ c|cccc } \\Delta & 0 & 1 & 2 & 3 \\\\ \\hline 0 & 0 & 1 & 2 & 3 \\\\ 1 & 1 & 0 & 1 & 2 \\\\ 2 & 2 & 1 & 0 & 1 \\\\ 3 & 3 & 2 & 1 & 0 \\end { array } % \u5185\u5c42\u7b2c\u4e8c\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\end { array } \u663e\u793a\uff1a \\[ % outer vertical array of arrays \u5916\u5c42\u5782\u76f4\u8868\u683c \\begin{array}{c} % inner horizontal array of arrays \u5185\u5c42\u6c34\u5e73\u8868\u683c \\begin{array}{cc} % inner array of minimum values \u5185\u5c42\"\u6700\u5c0f\u503c\"\u6570\u7ec4 \\begin{array}{c|cccc} \\text{min} & 0 & 1 & 2 & 3\\\\ \\hline 0 & 0 & 0 & 0 & 0\\\\ 1 & 0 & 1 & 1 & 1\\\\ 2 & 0 & 1 & 2 & 2\\\\ 3 & 0 & 1 & 2 & 3 \\end{array} & % inner array of maximum values \u5185\u5c42\"\u6700\u5927\u503c\"\u6570\u7ec4 \\begin{array}{c|cccc} \\text{max}&0&1&2&3\\\\ \\hline 0 & 0 & 1 & 2 & 3\\\\ 1 & 1 & 1 & 2 & 3\\\\ 2 & 2 & 2 & 2 & 3\\\\ 3 & 3 & 3 & 3 & 3 \\end{array} \\end{array} % \u5185\u5c42\u7b2c\u4e00\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\\\ % inner array of delta values \u5185\u5c42\u7b2c\u4e8c\u884c Delta \u503c\u6570\u7ec4 \\begin{array}{c|cccc} \\Delta&0&1&2&3\\\\ \\hline 0 & 0 & 1 & 2 & 3\\\\ 1 & 1 & 0 & 1 & 2\\\\ 2 & 2 & 1 & 0 & 1\\\\ 3 & 3 & 2 & 1 & 0 \\end{array} % \u5185\u5c42\u7b2c\u4e8c\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\end{array} \\] \u7528\u6570\u7ec4\u5b9e\u73b0\u5e26\u5206\u5272\u7b26\u53f7\u7684\u77e9\u9635 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 $$ \\left [ \\begin {array}{cc|c} 1 & 2 & 3 \\\\ 4 & 5 & 6 \\end {array} \\right ] $$ \u663e\u793a\uff1a \\[ \\left[ \\begin{array}{cc|c} 1&2&3\\\\ 4&5&6 \\end{array} \\right] \\] \u5176\u4e2d cc|c \u4ee3\u8868\u5728\u4e00\u4e2a\u4e09\u5217\u77e9\u9635\u4e2d\u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u5217\u4e4b\u95f4\u63d2\u5165\u5206\u5272\u7ebf\u3002","title":"\u77e9\u9635\u3001\u6761\u4ef6\u8868\u8fbe\u5f0f\u3001\u65b9\u7a0b\u7ec4"},{"location":"latex/env/#_1","text":"\u8bed\u6cd5\uff1a 1 2 3 \\begin { \u7c7b\u578b } \u516c\u5f0f\u5185\u5bb9 \\end { \u7c7b\u578b } \u7c7b\u578b\u53ef\u4ee5\u662f\uff1a\u77e9\u9635 matrix pmatrix bmatrix Bmatrix vmatrix Vmatrix \u3001\u6761\u4ef6\u8868\u8fbe\u5f0f cases \u3001\u591a\u884c\u5bf9\u9f50\u65b9\u7a0b\u5f0f aligned \u3001\u6570\u7ec4 array \u3002 \u5728\u516c\u5f0f\u5185\u5bb9\u4e2d\uff1a\u5728\u6bcf\u4e00\u884c\u4e2d\u63d2\u5165 & \u6765\u6307\u5b9a\u9700\u8981 \u5bf9\u9f50 \u7684\u5185\u5bb9\uff0c\u5728\u6bcf\u884c\u7ed3\u5c3e\u5904\u4f7f\u7528 \\\\ \u6362\u884c \u3002","title":"\u77e9\u9635\u3001\u6761\u4ef6\u8868\u8fbe\u5f0f\u3001\u65b9\u7a0b\u7ec4"},{"location":"latex/env/#_2","text":"\u5728\u5f00\u5934\u4f7f\u7528 begin{matrix} \uff0c\u5728\u7ed3\u5c3e\u4f7f\u7528 end{matrix} \uff0c\u5728\u4e2d\u95f4\u63d2\u5165\u77e9\u9635\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u63d2\u5165 & \uff0c\u5e76\u5728\u6bcf\u884c\u7ed3\u5c3e\u5904\u4f7f\u7528 \\\\ \u3002 1 2 3 4 \\begin { matrix } x & y \\\\ z & v \\end { matrix } \\({\\displaystyle {\\begin{matrix}x&y\\\\z&v\\end{matrix}}}\\)","title":"\u65e0\u6846\u77e9\u9635"},{"location":"latex/env/#_3","text":"\u5728\u5f00\u5934\u5c06 matrix \u66ff\u6362\u4e3a pmatrix \u6216 bmatrix \u6216 Bmatrix \u6216 vmatrix \u6216 Vmatrix \u3002 1 2 3 4 \\begin { vmatrix } x & y \\\\ z & v \\end { vmatrix } \\({\\displaystyle {\\begin{vmatrix}x&y\\\\z&v\\end{vmatrix}}}\\) 1 2 3 4 \\begin { Vmatrix } x & y \\\\ z & v \\end { Vmatrix } \\({\\displaystyle {\\begin{Vmatrix}x&y\\\\z&v\\end{Vmatrix}}}\\) \u4f7f\u7528 \\cdots \\(\\cdots\\) , \\ddots \\(\\ddots\\) , \\vdots \\(\\vdots\\) \u6765\u8f93\u5165 \u7701\u7565\u7b26\u53f7 \u3002 1 2 3 4 5 \\begin { bmatrix } 0 & \\cdots & 0 \\\\ \\vdots & \\ddots & \\vdots \\\\ 0 & \\cdots & 0 \\end { bmatrix } \\({\\displaystyle {\\begin{bmatrix}0&\\cdots &0\\\\\\vdots &\\ddots &\\vdots \\\\0&\\cdots &0\\end{bmatrix}}}\\) 1 2 3 4 \\begin { Bmatrix } x & y \\\\ z & v \\end { Bmatrix } \\({\\displaystyle {\\begin{Bmatrix}x&y\\\\z&v\\end{Bmatrix}}}\\) 1 2 3 4 \\begin { pmatrix } x & y \\\\ z & v \\end { pmatrix } \\({\\displaystyle {\\begin{pmatrix}x&y\\\\z&v\\end{pmatrix}}}\\)","title":"\u6709\u6846\u77e9\u9635"},{"location":"latex/env/#_4","text":"1 2 3 4 5 f(n) = \\begin { cases } n/2, & \\text { if } n \\text { is even } \\\\ 3n+1, & \\text { if } n \\text { is odd } \\end { cases } \\({\\displaystyle f(n)={\\begin{cases}n/2,&{\\text{if }}n{\\text{ is even}}\\\\3n+1,&{\\text{if }}n{\\text{ is odd}}\\end{cases}}}\\)","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"latex/env/#_5","text":"\u4eba\u4eec\u7ecf\u5e38\u60f3\u8981\u4e00\u5217\u6574\u9f50\u4e14\u5c45\u4e2d\u7684\u65b9\u7a0b\u5f0f\u5e8f\u5217\u3002\u4f7f\u7528 \\begin{aligned}\u2026\\end{aligned} \u3002 1 2 3 4 \\begin { aligned } f(x) & = (m+n) ^ 2 \\\\ & = m ^ 2+2mn+n ^ 2 \\\\ \\end { aligned } \\({\\displaystyle {\\begin{aligned}f(x)&=(m+n)^{2}\\\\&=m^{2}+2mn+n^{2}\\\\\\end{aligned}}}\\) 1 2 3 4 5 6 7 8 \\begin { aligned } 3 ^{ 6n+3 } +4 ^{ 6n+3 } & \\equiv (3 ^ 3) ^{ 2n+1 } +(4 ^ 3) ^{ 2n+1 } \\\\ & \\equiv 27 ^{ 2n+1 } +64 ^{ 2n+1 } \\\\ & \\equiv 27 ^{ 2n+1 } +(-27) ^{ 2n+1 } \\\\ & \\equiv 27 ^{ 2n+1 } -27 ^{ 2n+1 } \\\\ & \\equiv 0 \\pmod { 91 } \\\\ \\end { aligned } \\({\\displaystyle {\\begin{aligned}3^{6n+3}+4^{6n+3}&\\equiv (3^{3})^{2n+1}+(4^{3})^{2n+1}\\\\&\\equiv 27^{2n+1}+64^{2n+1}\\\\&\\equiv 27^{2n+1}+(-27)^{2n+1}\\\\&\\equiv 27^{2n+1}-27^{2n+1}\\\\&\\equiv 0{\\pmod {91}}\\\\\\end{aligned}}}\\) 1 2 3 4 5 \\begin { alignedat }{ 3 } f(x) & = (m-n) ^ 2 \\\\ f(x) & = (-m+n) ^ 2 \\\\ & = m ^ 2-2mn+n ^ 2 \\\\ \\end { alignedat } \\({\\displaystyle {\\begin{alignedat}{3}f(x)&=(m-n)^{2}\\\\f(x)&=(-m+n)^{2}\\\\&=m^{2}-2mn+n^{2}\\\\\\end{alignedat}}}\\)","title":"\u591a\u884c\u7b49\u5f0f\u3001\u540c\u4f59\u5f0f"},{"location":"latex/env/#_6","text":"1 2 3 4 5 \\begin { cases } 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end { cases } \\[{\\displaystyle {\\begin{cases}3x+5y+z\\\\7x-2y+4z\\\\-6x+3y+2z\\end{cases}}}\\] \u6216 1 2 3 4 5 \\left\\{\\begin { aligned } 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end { aligned } \\right . \\[ \\left\\{\\begin{aligned} 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end{aligned}\\right. \\]","title":"\u65b9\u7a0b\u7ec4"},{"location":"latex/env/#_7","text":"\u901a\u5e38\uff0c\u4e00\u4e2a\u683c\u5f0f\u5316\u540e\u7684\u8868\u683c\u6bd4\u5355\u7eaf\u7684\u6587\u5b57\u6216\u6392\u7248\u540e\u7684\u6587\u5b57\u66f4\u5177\u6709\u53ef\u8bfb\u6027\u3002\u6570\u7ec4\u548c\u8868\u683c\u5747\u4ee5 \\begin{array} \u5f00\u5934\uff0c\u5e76\u5728\u5176\u540e\u5b9a\u4e49\u5217\u6570\u53ca\u6bcf\u4e00\u5217\u7684\u6587\u672c\u5bf9\u9f50\u5c5e\u6027\uff0c c l r \u5206\u522b\u4ee3\u8868\u5c45\u4e2d\u3001\u5de6\u5bf9\u9f50\u53ca\u53f3\u5bf9\u9f50\u3002\u82e5\u9700\u8981\u63d2\u5165\u5782\u76f4\u5206\u5272\u7ebf\uff0c\u5728\u5b9a\u4e49\u5f0f\u4e2d\u63d2\u5165 | \uff0c\u82e5\u8981\u63d2\u5165\u6c34\u5e73\u5206\u5272\u7ebf\uff0c\u5728\u4e0b\u4e00\u884c\u8f93\u5165\u524d\u63d2\u5165 \\hline \u3002\u4e0e\u77e9\u9635\u76f8\u4f3c\uff0c\u6bcf\u884c\u5143\u7d20\u95f4\u5747\u987b\u8981\u63d2\u5165 & \uff0c\u6bcf\u884c\u5143\u7d20\u4ee5 \\\\ \u7ed3\u5c3e\uff0c\u6700\u540e\u4ee5 \\end{array} \u7ed3\u675f\u6570\u7ec4\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 \\begin { array }{ c|lcr } n & \\text { \u5de6\u5bf9\u9f50 } & \\text { \u5c45\u4e2d\u5bf9\u9f50 } & \\text { \u53f3\u5bf9\u9f50 } \\\\ \\hline 1 & 0.24 & 1 & 125 \\\\ 2 & -1 & 189 & -8 \\\\ 3 & -20 & 2000 & 1+10i \\end { array } \u663e\u793a\uff1a \\[ \\begin{array}{c|lcr} n & \\text{\u5de6\u5bf9\u9f50} & \\text{\u5c45\u4e2d\u5bf9\u9f50} & \\text{\u53f3\u5bf9\u9f50} \\\\ \\hline 1 & 0.24 & 1 & 125 \\\\ 2 & -1 & 189 & -8 \\\\ 3 & -20 & 2000 & 1+10i \\end{array} \\] \u4f8b\u5b50\uff1a 1 2 3 4 \\begin { array }{ lcl } z & = & a \\\\ f(x,y,z) & = & x + y + z \\end { array } \u663e\u793a\uff1a \\({\\displaystyle {\\begin{array}{lcl}z&=&a\\\\f(x,y,z)&=&x+y+z\\end{array}}}\\) \u4f8b\u5b50\uff1a 1 2 3 4 \\begin { array }{ lcr } z & = & a \\\\ f(x,y,z) & = & x + y + z \\end { array } \u663e\u793a\uff1a \\({\\displaystyle {\\begin{array}{lcr}z&=&a\\\\f(x,y,z)&=&x+y+z\\end{array}}}\\) \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 \\begin { array }{ ccc } a & b & S \\\\ \\hline 0 & 0 & 1 \\\\ 0 & 1 & 1 \\\\ 1 & 0 & 1 \\\\ 1 & 1 & 0 \\\\ \\end { array } \u663e\u793a\uff1a \\[{\\displaystyle {\\begin{array}{ccc}a&b&S\\\\\\hline 0&0&1\\\\0&1&1\\\\1&0&1\\\\1&1&0\\\\\\end{array}}}\\]","title":"\u6570\u7ec4\u4e0e\u8868\u683c"},{"location":"latex/env/#_8","text":"\u591a\u4e2a\u6570\u7ec4/\u8868\u683c\u53ef \u4e92\u76f8\u5d4c\u5957 \u5e76\u7ec4\u6210\u4e00\u7ec4\u6570\u7ec4/\u4e00\u7ec4\u8868\u683c\u3002 \u4f7f\u7528\u5d4c\u5957\u524d\u5fc5\u987b\u58f0\u660e $$ \u7b26\u53f7\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 % outer vertical array of arrays \u5916\u5c42\u5782\u76f4\u8868\u683c \\begin { array }{ c } % inner horizontal array of arrays \u5185\u5c42\u6c34\u5e73\u8868\u683c \\begin { array }{ cc } % inner array of minimum values \u5185\u5c42\"\u6700\u5c0f\u503c\"\u6570\u7ec4 \\begin { array }{ c|cccc } \\text { min } & 0 & 1 & 2 & 3 \\\\ \\hline 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 1 & 1 & 1 \\\\ 2 & 0 & 1 & 2 & 2 \\\\ 3 & 0 & 1 & 2 & 3 \\end { array } & % inner array of maximum values \u5185\u5c42\"\u6700\u5927\u503c\"\u6570\u7ec4 \\begin { array }{ c|cccc } \\text { max }& 0 & 1 & 2 & 3 \\\\ \\hline 0 & 0 & 1 & 2 & 3 \\\\ 1 & 1 & 1 & 2 & 3 \\\\ 2 & 2 & 2 & 2 & 3 \\\\ 3 & 3 & 3 & 3 & 3 \\end { array } \\end { array } % \u5185\u5c42\u7b2c\u4e00\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\\\ % inner array of delta values \u5185\u5c42\u7b2c\u4e8c\u884c Delta \u503c\u6570\u7ec4 \\begin { array }{ c|cccc } \\Delta & 0 & 1 & 2 & 3 \\\\ \\hline 0 & 0 & 1 & 2 & 3 \\\\ 1 & 1 & 0 & 1 & 2 \\\\ 2 & 2 & 1 & 0 & 1 \\\\ 3 & 3 & 2 & 1 & 0 \\end { array } % \u5185\u5c42\u7b2c\u4e8c\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\end { array } \u663e\u793a\uff1a \\[ % outer vertical array of arrays \u5916\u5c42\u5782\u76f4\u8868\u683c \\begin{array}{c} % inner horizontal array of arrays \u5185\u5c42\u6c34\u5e73\u8868\u683c \\begin{array}{cc} % inner array of minimum values \u5185\u5c42\"\u6700\u5c0f\u503c\"\u6570\u7ec4 \\begin{array}{c|cccc} \\text{min} & 0 & 1 & 2 & 3\\\\ \\hline 0 & 0 & 0 & 0 & 0\\\\ 1 & 0 & 1 & 1 & 1\\\\ 2 & 0 & 1 & 2 & 2\\\\ 3 & 0 & 1 & 2 & 3 \\end{array} & % inner array of maximum values \u5185\u5c42\"\u6700\u5927\u503c\"\u6570\u7ec4 \\begin{array}{c|cccc} \\text{max}&0&1&2&3\\\\ \\hline 0 & 0 & 1 & 2 & 3\\\\ 1 & 1 & 1 & 2 & 3\\\\ 2 & 2 & 2 & 2 & 3\\\\ 3 & 3 & 3 & 3 & 3 \\end{array} \\end{array} % \u5185\u5c42\u7b2c\u4e00\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\\\ % inner array of delta values \u5185\u5c42\u7b2c\u4e8c\u884c Delta \u503c\u6570\u7ec4 \\begin{array}{c|cccc} \\Delta&0&1&2&3\\\\ \\hline 0 & 0 & 1 & 2 & 3\\\\ 1 & 1 & 0 & 1 & 2\\\\ 2 & 2 & 1 & 0 & 1\\\\ 3 & 3 & 2 & 1 & 0 \\end{array} % \u5185\u5c42\u7b2c\u4e8c\u884c\u8868\u683c\u7ec4\u7ed3\u675f \\end{array} \\]","title":"\u5d4c\u5957\u6570\u7ec4\u6216\u8868\u683c"},{"location":"latex/env/#_9","text":"\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 $$ \\left [ \\begin {array}{cc|c} 1 & 2 & 3 \\\\ 4 & 5 & 6 \\end {array} \\right ] $$ \u663e\u793a\uff1a \\[ \\left[ \\begin{array}{cc|c} 1&2&3\\\\ 4&5&6 \\end{array} \\right] \\] \u5176\u4e2d cc|c \u4ee3\u8868\u5728\u4e00\u4e2a\u4e09\u5217\u77e9\u9635\u4e2d\u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u5217\u4e4b\u95f4\u63d2\u5165\u5206\u5272\u7ebf\u3002","title":"\u7528\u6570\u7ec4\u5b9e\u73b0\u5e26\u5206\u5272\u7b26\u53f7\u7684\u77e9\u9635"},{"location":"latex/font/","text":"\u5b57\u4f53 \u5e0c\u814a\u5b57\u6bcd \u8f93\u5165 \\\u5c0f\u5199\u5e0c\u814a\u5b57\u6bcd\u82f1\u6587\u5168\u79f0 \u548c \\\u9996\u5b57\u6bcd\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\u82f1\u6587\u5168\u79f0 \u6765\u5206\u522b\u8f93\u5165\u5c0f\u5199\u548c\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\u3002 \\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta \\({\\displaystyle \\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }\\) \\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi \\({\\displaystyle \\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\mathrm {O} \\Xi \\Pi }\\) \\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega \\({\\displaystyle \\mathrm {P} \\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }\\) \\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta \\({\\displaystyle \\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta}\\) \\iota \\kappa \\lambda \\mu \\nu \\omicron \\xi \\pi \\({\\displaystyle \\iota \\kappa \\lambda \\mu \\nu \\mathrm {o} \\xi \\pi }\\) \\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega \\({\\displaystyle \\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega}\\) \u90e8\u5206\u5b57\u6bcd\u6709\u53d8\u91cf\u4e13\u7528\u5f62\u5f0f\uff0c\u4ee5 \\var- \u5f00\u5934\u3002 \\varepsilon \\digamma \\varkappa \\varpi \\({\\displaystyle \\varepsilon \\digamma \\varkappa \\varpi}\\) \\varrho \\varsigma \\vartheta \\varphi \\({\\displaystyle \\varrho \\varsigma \\vartheta \\varphi}\\) \u5e0c\u4f2f\u6765\u7b26\u53f7 \\aleph \\beth \\gimel \\daleth \\({\\displaystyle \\aleph \\beth \\gimel \\daleth}\\) \u90e8\u5206\u5b57\u4f53\u7684\u7b80\u79f0 \u82e5\u8981\u5bf9\u516c\u5f0f\u7684\u67d0\u4e00\u90e8\u5206\u5b57\u7b26\u8fdb\u884c\u5b57\u4f53\u8f6c\u6362\uff0c\u53ef\u4ee5\u7528 {\\\u5b57\u4f53 {\u9700\u8f6c\u6362\u7684\u90e8\u5206\u5b57\u7b26}} \u547d\u4ee4\uff0c\u5176\u4e2d \\\u5b57\u4f53 \u90e8\u5206\u53ef\u4ee5\u53c2\u7167\u4e0b\u8868\u9009\u62e9\u5408\u9002\u7684\u5b57\u4f53\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u516c\u5f0f\u9ed8\u8ba4\u4e3a\u610f\u5927\u5229\u4f53 \\(italic\\) \u3002 \u8f93\u5165 \u8bf4\u660e \u663e\u793a \u8f93\u5165 \u8bf4\u660e \u663e\u793a \\rm \u7f57\u9a6c\u4f53 \\(\\rm{Sample}\\) \\cal \u82b1\u4f53 \\(\\cal{SAMPLE}\\) \\it \u610f\u5927\u5229\u4f53 \\(\\it{Sample}\\) \\Bbb \u9ed1\u677f\u7c97\u4f53 \\(\\Bbb{SAMPLE}\\) \\bf \u7c97\u4f53 \\(\\bf{Sample}\\) \\mit \u6570\u5b66\u659c\u4f53 \\(\\mit{SAMPLE}\\) \\sf \u7b49\u7ebf\u4f53 \\(\\sf{Sample}\\) \\scr \u624b\u5199\u4f53 \\(\\scr{SAMPLE}\\) \\tt \u6253\u5b57\u673a\u4f53 \\(\\tt{Sample}\\) \\frak \u65e7\u5fb7\u5f0f\u5b57\u4f53 \\(\\frak{Sample}\\) \u6240\u6709\u5b57\u4f53 \u9ed1\u677f\u62a5\u7c97\u4f53 \\mathbb{ABCDEFGHI} \\({\\displaystyle \\mathbb {ABCDEFGHI} }\\) \\mathbb{JKLMNOPQR} \\({\\displaystyle \\mathbb {JKLMNOPQR} }\\) \\mathbb{STUVWXYZ} \\({\\displaystyle \\mathbb {STUVWXYZ} }\\) \u7c97\u4f53 \\mathbf{ABCDEFGHI} \\({\\displaystyle \\mathbf {ABCDEFGHI} }\\) \\mathbf{JKLMNOPQR} \\({\\displaystyle \\mathbf {JKLMNOPQR} }\\) \\mathbf{STUVWXYZ} \\({\\displaystyle \\mathbf {STUVWXYZ} }\\) \\mathbf{abcdefghijklm} \\({\\displaystyle \\mathbf {abcdefghijklm} }\\) \\mathbf{nopqrstuvwxyz} \\({\\displaystyle \\mathbf {nopqrstuvwxyz} }\\) \\mathbf{0123456789} \\({\\displaystyle \\mathbf {0123456789} }\\) \u7c97\u4f53\u5e0c\u814a\u5b57\u6bcd \\boldsymbol{\\Alpha\\Beta\\Gamma\\Delta\\Epsilon\\Zeta\\Eta\\Theta} \\({\\displaystyle {\\boldsymbol {\\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }}}\\) \\boldsymbol{\\Iota\\Kappa\\Lambda\\Mu\\Nu\\Xi\\Pi\\Rho} \\({\\displaystyle {\\boldsymbol {\\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\Xi \\Pi \\mathrm {P} }}}\\) \\boldsymbol{\\Sigma\\Tau\\Upsilon\\Phi\\Chi\\Psi\\Omega} \\({\\displaystyle {\\boldsymbol {\\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }}}\\) \\boldsymbol{\\alpha\\beta\\gamma\\delta\\epsilon\\zeta\\eta\\theta} \\({\\displaystyle {\\boldsymbol {\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta}}}\\) \\boldsymbol{\\iota\\kappa\\lambda\\mu\\nu\\xi\\pi\\rho} \\({\\displaystyle {\\boldsymbol {\\iota \\kappa \\lambda \\mu \\nu \\xi \\pi \\rho}}}\\) \\boldsymbol{\\sigma\\tau\\upsilon\\phi\\chi\\psi\\omega} \\({\\displaystyle {\\boldsymbol {\\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega}}}\\) \\boldsymbol{\\varepsilon\\digamma\\varkappa\\varpi} \\({\\displaystyle {\\boldsymbol {\\varepsilon \\digamma \\varkappa \\varpi}}}\\) \\boldsymbol{\\varrho\\varsigma\\vartheta\\varphi} \\({\\displaystyle {\\boldsymbol {\\varrho \\varsigma \\vartheta \\varphi}}}\\) \u659c\u4f53\uff08\u62c9\u4e01\u5b57\u6bcd\u9ed8\u8ba4\uff09 \\mathit{0123456789} \\({\\displaystyle {\\mathit {0123456789}}}\\) \u659c\u4f53\u5e0c\u814a\u5b57\u6bcd\uff08\u5c0f\u5199\u5b57\u6bcd\u9ed8\u8ba4\uff09 \\mathit{\\Alpha\\Beta\\Gamma\\Delta\\Epsilon\\Zeta\\Eta\\Theta} \\({\\displaystyle {\\mathit {\\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }}}\\) \\mathit{\\Iota\\Kappa\\Lambda\\Mu\\Nu\\Xi\\Pi\\Rho} \\({\\displaystyle {\\mathit {\\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\Xi \\Pi \\mathrm {P} }}}\\) \\mathit{\\Sigma\\Tau\\Upsilon\\Phi\\Chi\\Psi\\Omega} \\({\\displaystyle {\\mathit {\\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }}}\\) \u7f57\u9a6c\u4f53 \\mathrm{ABCDEFGHI} \\({\\displaystyle \\mathrm {ABCDEFGHI} }\\) \\mathrm{JKLMNOPQR} \\({\\displaystyle \\mathrm {JKLMNOPQR} }\\) \\mathrm{STUVWXYZ} \\({\\displaystyle \\mathrm {STUVWXYZ} }\\) \\mathrm{abcdefghijklm} \\({\\displaystyle \\mathrm {abcdefghijklm} }\\) \\mathrm{nopqrstuvwxyz} \\({\\displaystyle \\mathrm {nopqrstuvwxyz} }\\) \\mathrm{0123456789} \\({\\displaystyle \\mathrm {0123456789} }\\) \u65e0\u886c\u7ebf\u4f53 \\mathsf{ABCDEFGHI} \\({\\displaystyle {\\mathsf {ABCDEFGHI}}}\\) \\mathsf{JKLMNOPQR} \\({\\displaystyle {\\mathsf {JKLMNOPQR}}}\\) \\mathsf{STUVWXYZ} \\({\\displaystyle {\\mathsf {STUVWXYZ}}}\\) \\mathsf{abcdefghijklm} \\({\\displaystyle {\\mathsf {abcdefghijklm}}}\\) \\mathsf{nopqrstuvwxyz} \\({\\displaystyle {\\mathsf {nopqrstuvwxyz}}}\\) \\mathsf{0123456789} \\({\\displaystyle {\\mathsf {0123456789}}}\\) \u65e0\u886c\u7ebf\u4f53\u5e0c\u814a\u5b57\u6bcd\uff08\u4ec5\u5927\u5199\uff09 \\mathsf{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta} \\({\\displaystyle {\\mathsf {\\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }}}\\) \\mathsf{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Pi \\Rho} \\({\\displaystyle {\\mathsf {\\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\Xi \\Pi \\mathrm {P} }}}\\) \\mathsf{\\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega} \\({\\displaystyle {\\mathsf {\\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }}}\\) \u624b\u5199\u4f53 / \u82b1\u4f53 \\mathcal{ABCDEFGHI} \\({\\displaystyle {\\mathcal {ABCDEFGHI}}}\\) \\mathcal{JKLMNOPQR} \\({\\displaystyle {\\mathcal {JKLMNOPQR}}}\\) \\mathcal{STUVWXYZ} \\({\\displaystyle {\\mathcal {STUVWXYZ}}}\\) Fraktur \u4f53 \\mathfrak{ABCDEFGHI} \\({\\displaystyle {\\mathfrak {ABCDEFGHI}}}\\) \\mathfrak{JKLMNOPQR} \\({\\displaystyle {\\mathfrak {JKLMNOPQR}}}\\) \\mathfrak{STUVWXYZ} \\({\\displaystyle {\\mathfrak {STUVWXYZ}}}\\) \\mathfrak{abcdefghijklm} \\({\\displaystyle {\\mathfrak {abcdefghijklm}}}\\) \\mathfrak{nopqrstuvwxyz} \\({\\displaystyle {\\mathfrak {nopqrstuvwxyz}}}\\) \\mathfrak{0123456789} \\({\\displaystyle {\\mathfrak {0123456789}}}\\) \u5c0f\u578b\u624b\u5199\u4f53 {\\scriptstyle\\text{abcdefghijklm}} \\({\\displaystyle {\\scriptstyle {\\text{abcdefghijklm}}}}\\) \u6df7\u5408\u5b57\u4f53 \u7279\u5f81 | \u8bed\u6cd5 | \u6e32\u67d3\u6548\u679c \u659c\u4f53\u5b57\u7b26\uff08\u5ffd\u7565\u7a7a\u683c\uff09 x y z \\({\\displaystyle xyz}\\) \u975e\u659c\u4f53\u5b57\u7b26 \\text{x y z} \\({\\displaystyle {\\text{x y z}}}\\) \u6df7\u5408\u659c\u4f53\uff08\u5dee\uff09 \\text{if} n \\text{is even} \\({\\displaystyle {\\text{if}}n{\\text{is even}}}\\) \u6df7\u5408\u659c\u4f53\uff08\u597d\uff09 \\text{if }n\\text{ is even} \\({\\displaystyle {\\text{if }}n{\\text{ is even}}}\\) \u6df7\u5408\u659c\u4f53\uff08\u66ff\u4ee3\u54c1\uff1a ~ \u6216\u8005 \\ \u5f3a\u5236\u7a7a\u683c\uff09 \\text{if}~n\\ \\text{is even} \\({\\displaystyle {\\text{if}}~n\\ {\\text{is even}}}\\) \u6ce8\u91ca\u6587\u672c \u4f7f\u7528 \\text {\u6587\u5b57} \u6765\u6dfb\u52a0\u6ce8\u91ca\u6587\u672c\uff08\u6ce8\u91ca\u6587\u672c\u4e0d\u4f1a\u88ab\u8bc6\u522b\u4e3a\u516c\u5f0f\uff0c\u4e0d\u7528\u659c\u4f53\u663e\u793a\uff09\u3002 \\text {\u6587\u5b57} \u4e2d\u4ecd\u53ef\u4ee5\u4f7f\u7528 $\u516c\u5f0f$ \u63d2\u5165\u5176\u5b83\u516c\u5f0f\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 f(n)= \\begin { cases } n/2, & \\text { if $ n $ is even } \\\\ 3n+1, & \\text { if $ n $ is odd } \\end { cases } \u663e\u793a\uff1a \\[ f(n)= \\begin{cases} n/2, & \\text {if}\\ n\\ \\text{is even} \\\\ 3n+1, & \\text {if}\\ n\\ \\text{is odd} \\end{cases} \\]","title":"\u5b57\u4f53"},{"location":"latex/font/#_1","text":"","title":"\u5b57\u4f53"},{"location":"latex/font/#_2","text":"\u8f93\u5165 \\\u5c0f\u5199\u5e0c\u814a\u5b57\u6bcd\u82f1\u6587\u5168\u79f0 \u548c \\\u9996\u5b57\u6bcd\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\u82f1\u6587\u5168\u79f0 \u6765\u5206\u522b\u8f93\u5165\u5c0f\u5199\u548c\u5927\u5199\u5e0c\u814a\u5b57\u6bcd\u3002 \\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta \\({\\displaystyle \\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }\\) \\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Omicron \\Pi \\({\\displaystyle \\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\mathrm {O} \\Xi \\Pi }\\) \\Rho \\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega \\({\\displaystyle \\mathrm {P} \\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }\\) \\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta \\({\\displaystyle \\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta}\\) \\iota \\kappa \\lambda \\mu \\nu \\omicron \\xi \\pi \\({\\displaystyle \\iota \\kappa \\lambda \\mu \\nu \\mathrm {o} \\xi \\pi }\\) \\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega \\({\\displaystyle \\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega}\\) \u90e8\u5206\u5b57\u6bcd\u6709\u53d8\u91cf\u4e13\u7528\u5f62\u5f0f\uff0c\u4ee5 \\var- \u5f00\u5934\u3002 \\varepsilon \\digamma \\varkappa \\varpi \\({\\displaystyle \\varepsilon \\digamma \\varkappa \\varpi}\\) \\varrho \\varsigma \\vartheta \\varphi \\({\\displaystyle \\varrho \\varsigma \\vartheta \\varphi}\\)","title":"\u5e0c\u814a\u5b57\u6bcd"},{"location":"latex/font/#_3","text":"\\aleph \\beth \\gimel \\daleth \\({\\displaystyle \\aleph \\beth \\gimel \\daleth}\\)","title":"\u5e0c\u4f2f\u6765\u7b26\u53f7"},{"location":"latex/font/#_4","text":"\u82e5\u8981\u5bf9\u516c\u5f0f\u7684\u67d0\u4e00\u90e8\u5206\u5b57\u7b26\u8fdb\u884c\u5b57\u4f53\u8f6c\u6362\uff0c\u53ef\u4ee5\u7528 {\\\u5b57\u4f53 {\u9700\u8f6c\u6362\u7684\u90e8\u5206\u5b57\u7b26}} \u547d\u4ee4\uff0c\u5176\u4e2d \\\u5b57\u4f53 \u90e8\u5206\u53ef\u4ee5\u53c2\u7167\u4e0b\u8868\u9009\u62e9\u5408\u9002\u7684\u5b57\u4f53\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u516c\u5f0f\u9ed8\u8ba4\u4e3a\u610f\u5927\u5229\u4f53 \\(italic\\) \u3002 \u8f93\u5165 \u8bf4\u660e \u663e\u793a \u8f93\u5165 \u8bf4\u660e \u663e\u793a \\rm \u7f57\u9a6c\u4f53 \\(\\rm{Sample}\\) \\cal \u82b1\u4f53 \\(\\cal{SAMPLE}\\) \\it \u610f\u5927\u5229\u4f53 \\(\\it{Sample}\\) \\Bbb \u9ed1\u677f\u7c97\u4f53 \\(\\Bbb{SAMPLE}\\) \\bf \u7c97\u4f53 \\(\\bf{Sample}\\) \\mit \u6570\u5b66\u659c\u4f53 \\(\\mit{SAMPLE}\\) \\sf \u7b49\u7ebf\u4f53 \\(\\sf{Sample}\\) \\scr \u624b\u5199\u4f53 \\(\\scr{SAMPLE}\\) \\tt \u6253\u5b57\u673a\u4f53 \\(\\tt{Sample}\\) \\frak \u65e7\u5fb7\u5f0f\u5b57\u4f53 \\(\\frak{Sample}\\)","title":"\u90e8\u5206\u5b57\u4f53\u7684\u7b80\u79f0"},{"location":"latex/font/#_5","text":"","title":"\u6240\u6709\u5b57\u4f53"},{"location":"latex/font/#_6","text":"\\mathbb{ABCDEFGHI} \\({\\displaystyle \\mathbb {ABCDEFGHI} }\\) \\mathbb{JKLMNOPQR} \\({\\displaystyle \\mathbb {JKLMNOPQR} }\\) \\mathbb{STUVWXYZ} \\({\\displaystyle \\mathbb {STUVWXYZ} }\\)","title":"\u9ed1\u677f\u62a5\u7c97\u4f53"},{"location":"latex/font/#_7","text":"\\mathbf{ABCDEFGHI} \\({\\displaystyle \\mathbf {ABCDEFGHI} }\\) \\mathbf{JKLMNOPQR} \\({\\displaystyle \\mathbf {JKLMNOPQR} }\\) \\mathbf{STUVWXYZ} \\({\\displaystyle \\mathbf {STUVWXYZ} }\\) \\mathbf{abcdefghijklm} \\({\\displaystyle \\mathbf {abcdefghijklm} }\\) \\mathbf{nopqrstuvwxyz} \\({\\displaystyle \\mathbf {nopqrstuvwxyz} }\\) \\mathbf{0123456789} \\({\\displaystyle \\mathbf {0123456789} }\\)","title":"\u7c97\u4f53"},{"location":"latex/font/#_8","text":"\\boldsymbol{\\Alpha\\Beta\\Gamma\\Delta\\Epsilon\\Zeta\\Eta\\Theta} \\({\\displaystyle {\\boldsymbol {\\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }}}\\) \\boldsymbol{\\Iota\\Kappa\\Lambda\\Mu\\Nu\\Xi\\Pi\\Rho} \\({\\displaystyle {\\boldsymbol {\\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\Xi \\Pi \\mathrm {P} }}}\\) \\boldsymbol{\\Sigma\\Tau\\Upsilon\\Phi\\Chi\\Psi\\Omega} \\({\\displaystyle {\\boldsymbol {\\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }}}\\) \\boldsymbol{\\alpha\\beta\\gamma\\delta\\epsilon\\zeta\\eta\\theta} \\({\\displaystyle {\\boldsymbol {\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta}}}\\) \\boldsymbol{\\iota\\kappa\\lambda\\mu\\nu\\xi\\pi\\rho} \\({\\displaystyle {\\boldsymbol {\\iota \\kappa \\lambda \\mu \\nu \\xi \\pi \\rho}}}\\) \\boldsymbol{\\sigma\\tau\\upsilon\\phi\\chi\\psi\\omega} \\({\\displaystyle {\\boldsymbol {\\sigma \\tau \\upsilon \\phi \\chi \\psi \\omega}}}\\) \\boldsymbol{\\varepsilon\\digamma\\varkappa\\varpi} \\({\\displaystyle {\\boldsymbol {\\varepsilon \\digamma \\varkappa \\varpi}}}\\) \\boldsymbol{\\varrho\\varsigma\\vartheta\\varphi} \\({\\displaystyle {\\boldsymbol {\\varrho \\varsigma \\vartheta \\varphi}}}\\)","title":"\u7c97\u4f53\u5e0c\u814a\u5b57\u6bcd"},{"location":"latex/font/#_9","text":"\\mathit{0123456789} \\({\\displaystyle {\\mathit {0123456789}}}\\)","title":"\u659c\u4f53\uff08\u62c9\u4e01\u5b57\u6bcd\u9ed8\u8ba4\uff09"},{"location":"latex/font/#_10","text":"\\mathit{\\Alpha\\Beta\\Gamma\\Delta\\Epsilon\\Zeta\\Eta\\Theta} \\({\\displaystyle {\\mathit {\\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }}}\\) \\mathit{\\Iota\\Kappa\\Lambda\\Mu\\Nu\\Xi\\Pi\\Rho} \\({\\displaystyle {\\mathit {\\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\Xi \\Pi \\mathrm {P} }}}\\) \\mathit{\\Sigma\\Tau\\Upsilon\\Phi\\Chi\\Psi\\Omega} \\({\\displaystyle {\\mathit {\\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }}}\\)","title":"\u659c\u4f53\u5e0c\u814a\u5b57\u6bcd\uff08\u5c0f\u5199\u5b57\u6bcd\u9ed8\u8ba4\uff09"},{"location":"latex/font/#_11","text":"\\mathrm{ABCDEFGHI} \\({\\displaystyle \\mathrm {ABCDEFGHI} }\\) \\mathrm{JKLMNOPQR} \\({\\displaystyle \\mathrm {JKLMNOPQR} }\\) \\mathrm{STUVWXYZ} \\({\\displaystyle \\mathrm {STUVWXYZ} }\\) \\mathrm{abcdefghijklm} \\({\\displaystyle \\mathrm {abcdefghijklm} }\\) \\mathrm{nopqrstuvwxyz} \\({\\displaystyle \\mathrm {nopqrstuvwxyz} }\\) \\mathrm{0123456789} \\({\\displaystyle \\mathrm {0123456789} }\\)","title":"\u7f57\u9a6c\u4f53"},{"location":"latex/font/#_12","text":"\\mathsf{ABCDEFGHI} \\({\\displaystyle {\\mathsf {ABCDEFGHI}}}\\) \\mathsf{JKLMNOPQR} \\({\\displaystyle {\\mathsf {JKLMNOPQR}}}\\) \\mathsf{STUVWXYZ} \\({\\displaystyle {\\mathsf {STUVWXYZ}}}\\) \\mathsf{abcdefghijklm} \\({\\displaystyle {\\mathsf {abcdefghijklm}}}\\) \\mathsf{nopqrstuvwxyz} \\({\\displaystyle {\\mathsf {nopqrstuvwxyz}}}\\) \\mathsf{0123456789} \\({\\displaystyle {\\mathsf {0123456789}}}\\)","title":"\u65e0\u886c\u7ebf\u4f53"},{"location":"latex/font/#_13","text":"\\mathsf{\\Alpha \\Beta \\Gamma \\Delta \\Epsilon \\Zeta \\Eta \\Theta} \\({\\displaystyle {\\mathsf {\\mathrm {A} \\mathrm {B} \\Gamma \\Delta \\mathrm {E} \\mathrm {Z} \\mathrm {H} \\Theta }}}\\) \\mathsf{\\Iota \\Kappa \\Lambda \\Mu \\Nu \\Xi \\Pi \\Rho} \\({\\displaystyle {\\mathsf {\\mathrm {I} \\mathrm {K} \\Lambda \\mathrm {M} \\mathrm {N} \\Xi \\Pi \\mathrm {P} }}}\\) \\mathsf{\\Sigma \\Tau \\Upsilon \\Phi \\Chi \\Psi \\Omega} \\({\\displaystyle {\\mathsf {\\Sigma \\mathrm {T} \\Upsilon \\Phi \\mathrm {X} \\Psi \\Omega }}}\\)","title":"\u65e0\u886c\u7ebf\u4f53\u5e0c\u814a\u5b57\u6bcd\uff08\u4ec5\u5927\u5199\uff09"},{"location":"latex/font/#_14","text":"\\mathcal{ABCDEFGHI} \\({\\displaystyle {\\mathcal {ABCDEFGHI}}}\\) \\mathcal{JKLMNOPQR} \\({\\displaystyle {\\mathcal {JKLMNOPQR}}}\\) \\mathcal{STUVWXYZ} \\({\\displaystyle {\\mathcal {STUVWXYZ}}}\\)","title":"\u624b\u5199\u4f53 / \u82b1\u4f53"},{"location":"latex/font/#fraktur","text":"\\mathfrak{ABCDEFGHI} \\({\\displaystyle {\\mathfrak {ABCDEFGHI}}}\\) \\mathfrak{JKLMNOPQR} \\({\\displaystyle {\\mathfrak {JKLMNOPQR}}}\\) \\mathfrak{STUVWXYZ} \\({\\displaystyle {\\mathfrak {STUVWXYZ}}}\\) \\mathfrak{abcdefghijklm} \\({\\displaystyle {\\mathfrak {abcdefghijklm}}}\\) \\mathfrak{nopqrstuvwxyz} \\({\\displaystyle {\\mathfrak {nopqrstuvwxyz}}}\\) \\mathfrak{0123456789} \\({\\displaystyle {\\mathfrak {0123456789}}}\\)","title":"Fraktur \u4f53"},{"location":"latex/font/#_15","text":"{\\scriptstyle\\text{abcdefghijklm}} \\({\\displaystyle {\\scriptstyle {\\text{abcdefghijklm}}}}\\)","title":"\u5c0f\u578b\u624b\u5199\u4f53"},{"location":"latex/font/#_16","text":"\u7279\u5f81 | \u8bed\u6cd5 | \u6e32\u67d3\u6548\u679c \u659c\u4f53\u5b57\u7b26\uff08\u5ffd\u7565\u7a7a\u683c\uff09 x y z \\({\\displaystyle xyz}\\) \u975e\u659c\u4f53\u5b57\u7b26 \\text{x y z} \\({\\displaystyle {\\text{x y z}}}\\) \u6df7\u5408\u659c\u4f53\uff08\u5dee\uff09 \\text{if} n \\text{is even} \\({\\displaystyle {\\text{if}}n{\\text{is even}}}\\) \u6df7\u5408\u659c\u4f53\uff08\u597d\uff09 \\text{if }n\\text{ is even} \\({\\displaystyle {\\text{if }}n{\\text{ is even}}}\\) \u6df7\u5408\u659c\u4f53\uff08\u66ff\u4ee3\u54c1\uff1a ~ \u6216\u8005 \\ \u5f3a\u5236\u7a7a\u683c\uff09 \\text{if}~n\\ \\text{is even} \\({\\displaystyle {\\text{if}}~n\\ {\\text{is even}}}\\)","title":"\u6df7\u5408\u5b57\u4f53"},{"location":"latex/font/#_17","text":"\u4f7f\u7528 \\text {\u6587\u5b57} \u6765\u6dfb\u52a0\u6ce8\u91ca\u6587\u672c\uff08\u6ce8\u91ca\u6587\u672c\u4e0d\u4f1a\u88ab\u8bc6\u522b\u4e3a\u516c\u5f0f\uff0c\u4e0d\u7528\u659c\u4f53\u663e\u793a\uff09\u3002 \\text {\u6587\u5b57} \u4e2d\u4ecd\u53ef\u4ee5\u4f7f\u7528 $\u516c\u5f0f$ \u63d2\u5165\u5176\u5b83\u516c\u5f0f\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 f(n)= \\begin { cases } n/2, & \\text { if $ n $ is even } \\\\ 3n+1, & \\text { if $ n $ is odd } \\end { cases } \u663e\u793a\uff1a \\[ f(n)= \\begin{cases} n/2, & \\text {if}\\ n\\ \\text{is even} \\\\ 3n+1, & \\text {if}\\ n\\ \\text{is odd} \\end{cases} \\]","title":"\u6ce8\u91ca\u6587\u672c"},{"location":"latex/links/","text":"\u5916\u90e8\u94fe\u63a5 \u4e00\u4e2a\u4ecb\u7ecd \\(\\TeX\\) \u7684 PDF \u6587\u6863\uff08\u82f1\u6587\uff09\uff1a http://www.ctan.org/tex-archive/info/gentle/gentle.pdf \u624b\u753b\u7b26\u53f7\u641c\u7d22 \\(\\LaTeX\\) \u4ee3\u7801\uff1a http://detexify.kirelabs.org/classify.html LaTeX \u5728\u7ebf\u7f16\u8f91\u5668 AMS-LaTeX \u6307\u5357","title":"\u5916\u90e8\u94fe\u63a5"},{"location":"latex/links/#_1","text":"\u4e00\u4e2a\u4ecb\u7ecd \\(\\TeX\\) \u7684 PDF \u6587\u6863\uff08\u82f1\u6587\uff09\uff1a http://www.ctan.org/tex-archive/info/gentle/gentle.pdf \u624b\u753b\u7b26\u53f7\u641c\u7d22 \\(\\LaTeX\\) \u4ee3\u7801\uff1a http://detexify.kirelabs.org/classify.html LaTeX \u5728\u7ebf\u7f16\u8f91\u5668 AMS-LaTeX \u6307\u5357","title":"\u5916\u90e8\u94fe\u63a5"},{"location":"latex/symbols/","text":"\u51fd\u6570\u3001\u7b26\u53f7\u53ca\u7279\u6b8a\u5b57\u7b26 \u58f0\u8c03 / \u53d8\u97f3\u7b26\u53f7 \\dot{a}, \\ddot{a}, \\acute{a}, \\grave{a} \\({\\displaystyle {\\dot {a}},{\\ddot {a}},{\\acute {a}},{\\grave {a}}}\\) \\check{a}, \\breve{a}, \\tilde{a}, \\bar{a} \\({\\displaystyle {\\check {a}},{\\breve {a}},{\\tilde {a}},{\\bar {a}}}\\) \\hat{a}, \\widehat{a}, \\vec{a} \\({\\displaystyle {\\hat {a}},{\\widehat {a}},{\\vec {a}}}\\) \u6807\u51c6\u51fd\u6570 \u6307\u6570 \\exp_a b = a^b, \\exp b = e^b, 10^m \\({\\displaystyle \\exp _{a}b=a^{b},\\exp b=e^{b},10^{m}}\\) \u5bf9\u6570 \\ln c, \\lg d = \\log e, \\log_{10} f \\({\\displaystyle \\ln c,\\lg d=\\log e,\\log _{10}f}\\) \u4e09\u89d2\u51fd\u6570 \\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f \\({\\displaystyle \\sin a,\\cos b,\\tan c,\\cot d,\\sec e,\\csc f}\\) \\arcsin a, \\arccos b, \\arctan c \\({\\displaystyle \\arcsin a,\\arccos b,\\arctan c}\\) \\arccot d, \\arcsec e, \\arccsc f \\({\\displaystyle \\operatorname {arccot} d,\\operatorname {arcsec} e,\\operatorname {arccsc} f}\\) \\sinh a, \\cosh b, \\tanh c, \\coth d \\({\\displaystyle \\sinh a,\\cosh b,\\tanh c,\\coth d}\\) \\operatorname{sh}k, \\operatorname{ch}l, \\operatorname{th}m, \\operatorname{coth}n \\({\\displaystyle \\operatorname {sh} k,\\operatorname {ch} l,\\operatorname {th} m,\\operatorname {coth} n}\\) \\operatorname{argsh}o, \\operatorname{argch}p, \\operatorname{argth}q \\({\\displaystyle \\operatorname {argsh} o,\\operatorname {argch} p,\\operatorname {argth} q}\\) \u7b26\u53f7\u51fd\u6570\uff0c\u7edd\u5bf9\u503c \\sgn r, \\left\\vert s \\right\\vert \\({\\displaystyle \\operatorname {sgn} r,\\left\\vert s\\right\\vert }\\) \u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c \\min(x,y), \\max(x,y) \\({\\displaystyle \\min(x,y),\\max(x,y)}\\) \u754c\u9650\uff0c\u6781\u9650 \\min x, \\max y, \\inf s, \\sup t \\({\\displaystyle \\min x,\\max y,\\inf s,\\sup t}\\) \\lim u, \\liminf v, \\limsup w \\({\\displaystyle \\lim u,\\liminf v,\\limsup w}\\) \\lim_{x \\to \\infty} \\frac{1}{n(n+1)} \\({\\displaystyle \\lim_{x \\to \\infty} \\frac{1}{n(n+1)}}\\) \\dim p, \\deg q, \\det m, \\ker\\phi \\({\\displaystyle \\dim p,\\deg q,\\det m,\\ker \\phi}\\) \u6295\u5c04 \\Pr j, \\hom l, \\lVert z \\rVert, \\arg z \\({\\displaystyle \\Pr j,\\hom l,\\lVert z\\rVert ,\\arg z}\\) \u5fae\u5206\u53ca\u5bfc\u6570 dt, \\mathrm{d}t, \\partial t, \\nabla\\psi \\({\\displaystyle dt,\\mathrm {d} t,\\partial t,\\nabla \\psi }\\) dy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}y \\({\\displaystyle dy/dx,\\mathrm {d} y/\\mathrm {d} x,{\\frac {dy}{dx}},{\\frac {\\mathrm {d} y}{\\mathrm {d} x}},{\\frac {\\partial ^{2}}{\\partial x_{1}\\partial x_{2}}}y}\\) \\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y \\({\\displaystyle \\prime ,\\backprime ,f^{\\prime},f',f'',f^{(3)}\\!,{\\dot {y}},{\\ddot {y}}}\\) \u7c7b\u5b57\u6bcd\u7b26\u53f7\u53ca\u5e38\u6570 \\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar \\({\\displaystyle \\infty ,\\aleph ,\\complement ,\\backepsilon ,\\eth ,\\Finv ,\\hbar}\\) \\Im, \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS \\({\\displaystyle \\Im ,\\imath ,\\jmath ,\\Bbbk ,\\ell ,\\mho ,\\wp ,\\Re ,\\circledS }\\) \u6a21\u8fd0\u7b97 s_k \\equiv 0 \\pmod{m} \\({\\displaystyle s_{k}\\equiv 0{\\pmod {m}}}\\) a \\bmod b \\({\\displaystyle a \\bmod b}\\) \\gcd(m, n), \\operatorname{lcm}(m, n) \\({\\displaystyle \\gcd(m,n),\\operatorname {lcm} (m,n)}\\) \\mid, \\nmid, \\shortmid, \\nshortmid \\({\\displaystyle \\mid ,\\nmid ,\\shortmid ,\\nshortmid}\\) \u6839\u53f7 \\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{\\frac{x^3+y^3}{2}} \\({\\displaystyle \\surd ,{\\sqrt {2}},{\\sqrt[{n}]{}},{\\sqrt[{3}]{\\frac {x^{3}+y^{3}}{2}}}}\\) \u8fd0\u7b97\u7b26 +, -, \\pm, \\mp, \\dotplus \\({\\displaystyle +,-,\\pm ,\\mp ,\\dotplus}\\) \\times, \\div, \\divideontimes, /, \\backslash \\({\\displaystyle \\times ,\\div ,\\divideontimes ,/,\\backslash}\\) \\cdot, * \\ast, \\star, \\circ, \\bullet \\({\\displaystyle \\cdot ,*\\ast ,\\star ,\\circ ,\\bullet}\\) \\boxplus, \\boxminus, \\boxtimes, \\boxdot \\({\\displaystyle \\boxplus ,\\boxminus ,\\boxtimes ,\\boxdot}\\) \\oplus, \\ominus, \\otimes, \\oslash, \\odot \\({\\displaystyle \\oplus ,\\ominus ,\\otimes ,\\oslash ,\\odot}\\) \\circleddash, \\circledcirc, \\circledast \\({\\displaystyle \\circleddash ,\\circledcirc ,\\circledast}\\) \\bigoplus, \\bigotimes, \\bigodot \\({\\displaystyle \\bigoplus ,\\bigotimes ,\\bigodot}\\) \u96c6\u5408 \\{ \\}, \\O \\empty \\emptyset, \\varnothing \\({\\displaystyle \\{\\},\\emptyset \\emptyset \\emptyset ,\\varnothing }\\) \\in, \\notin \\not\\in, \\ni, \\not\\ni \\({\\displaystyle \\in ,\\notin \\not \\in ,\\ni ,\\not \\ni}\\) \\cap, \\Cap, \\sqcap, \\bigcap \\({\\displaystyle \\cap ,\\Cap ,\\sqcap ,\\bigcap}\\) \\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus \\({\\displaystyle \\cup ,\\Cup ,\\sqcup ,\\bigcup ,\\bigsqcup ,\\uplus ,\\biguplus}\\) \\setminus, \\smallsetminus, \\times \\({\\displaystyle \\setminus ,\\smallsetminus ,\\times}\\) \\subset, \\Subset, \\sqsubset \\({\\displaystyle \\subset ,\\Subset ,\\sqsubset}\\) \\supset, \\Supset, \\sqsupset \\({\\displaystyle \\supset ,\\Supset ,\\sqsupset}\\) \\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq \\({\\displaystyle \\subseteq ,\\nsubseteq ,\\subsetneq ,\\varsubsetneq ,\\sqsubseteq}\\) \\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq \\({\\displaystyle \\supseteq ,\\nsupseteq ,\\supsetneq ,\\varsupsetneq ,\\sqsupseteq}\\) \\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq \\({\\displaystyle \\subseteqq ,\\nsubseteqq ,\\subsetneqq ,\\varsubsetneqq}\\) \\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq \\({\\displaystyle \\supseteqq ,\\nsupseteqq ,\\supsetneqq ,\\varsupsetneqq}\\) \u5173\u7cfb\u7b26\u53f7 =, \\ne, \\neq, \\equiv, \\not\\equiv \\({\\displaystyle =,\\neq ,\\neq ,\\equiv ,\\not \\equiv}\\) \\doteq, \\doteqdot, \\overset{\\underset{\\mathrm{def}}{}}{=}, := \\({\\displaystyle \\doteq ,\\doteqdot ,{\\overset {\\underset {\\mathrm {def} }{}}{=}},:=}\\) \\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong \\({\\displaystyle \\sim ,\\nsim ,\\backsim ,\\thicksim ,\\simeq ,\\backsimeq ,\\eqsim ,\\cong ,\\ncong}\\) \\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto \\({\\displaystyle \\approx ,\\thickapprox ,\\approxeq ,\\asymp ,\\propto ,\\varpropto}\\) <, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot \\({\\displaystyle <,\\nless ,\\ll ,\\not \\ll ,\\lll ,\\not \\lll ,\\lessdot}\\) >, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot \\({\\displaystyle>,\\ngtr ,\\gg ,\\not \\gg ,\\ggg ,\\not \\ggg ,\\gtrdot }\\) \\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq \\({\\displaystyle \\leq ,\\leq ,\\lneq ,\\leqq ,\\nleq ,\\nleqq ,\\lneqq ,\\lvertneqq}\\) \\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq \\({\\displaystyle \\geq ,\\geq ,\\gneq ,\\geqq ,\\ngeq ,\\ngeqq ,\\gneqq ,\\gvertneqq}\\) \\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless \\({\\displaystyle \\lessgtr ,\\lesseqgtr ,\\lesseqqgtr ,\\gtrless ,\\gtreqless ,\\gtreqqless}\\) \\leqslant, \\nleqslant, \\eqslantless \\({\\displaystyle \\leqslant ,\\nleqslant ,\\eqslantless}\\) \\geqslant, \\ngeqslant, \\eqslantgtr \\({\\displaystyle \\geqslant ,\\ngeqslant ,\\eqslantgtr}\\) \\lesssim, \\lnsim, \\lessapprox, \\lnapprox \\({\\displaystyle \\lesssim ,\\lnsim ,\\lessapprox ,\\lnapprox}\\) \\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox \\({\\displaystyle \\gtrsim ,\\gnsim ,\\gtrapprox ,\\gnapprox}\\) \\prec, \\nprec, \\preceq, \\npreceq, \\precneqq \\({\\displaystyle \\prec ,\\nprec ,\\preceq ,\\npreceq ,\\precneqq}\\) \\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq \\({\\displaystyle \\succ ,\\nsucc ,\\succeq ,\\nsucceq ,\\succneqq}\\) \\preccurlyeq, \\curlyeqprec \\({\\displaystyle \\preccurlyeq ,\\curlyeqprec}\\) \\succcurlyeq, \\curlyeqsucc \\({\\displaystyle \\succcurlyeq ,\\curlyeqsucc}\\) \\precsim, \\precnsim, \\precapprox, \\precnapprox \\({\\displaystyle \\precsim ,\\precnsim ,\\precapprox ,\\precnapprox}\\) \\succsim, \\succnsim, \\succapprox, \\succnapprox \\({\\displaystyle \\succsim ,\\succnsim ,\\succapprox ,\\succnapprox}\\) \u51e0\u4f55\u7b26\u53f7 \\parallel, \\nparallel, \\shortparallel, \\nshortparallel \\({\\displaystyle \\parallel ,\\nparallel ,\\shortparallel ,\\nshortparallel}\\) \\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ \\({\\displaystyle \\perp ,\\angle ,\\sphericalangle ,\\measuredangle ,45^{\\circ}}\\) \\Box, \\blacksquare, \\diamond, \\Diamond \\lozenge, \\blacklozenge, \\bigstar \\({\\displaystyle \\Box ,\\blacksquare ,\\diamond ,\\Diamond \\lozenge ,\\blacklozenge ,\\bigstar}\\) \\bigcirc, \\triangle, \\bigtriangleup, \\bigtriangledown \\({\\displaystyle \\bigcirc ,\\triangle ,\\bigtriangleup ,\\bigtriangledown}\\) \\vartriangle, \\triangledown \\({\\displaystyle \\vartriangle ,\\triangledown}\\) \\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright \\({\\displaystyle \\blacktriangle ,\\blacktriangledown ,\\blacktriangleleft ,\\blacktriangleright}\\) \u903b\u8f91\u7b26\u53f7 \\forall, \\exists, \\nexists \\({\\displaystyle \\forall ,\\exists ,\\nexists}\\) \\therefore, \\because, \\And \\({\\displaystyle \\therefore ,\\because ,\\And}\\) \\or \\lor \\vee, \\curlyvee, \\bigvee \\({\\displaystyle \\lor ,\\lor ,\\vee ,\\curlyvee ,\\bigvee}\\) \\and \\land \\wedge, \\curlywedge, \\bigwedge \\({\\displaystyle \\land ,\\land ,\\wedge ,\\curlywedge ,\\bigwedge}\\) \\bar{q}, \\bar{abc}, \\overline{q}, \\overline{abc}, \\lnot \\neg, \\not\\operatorname{R}, \\bot, \\top \\({\\displaystyle {\\bar {q}},{\\bar {abc}},{\\overline {q}},{\\overline {abc}},}\\) \\({\\displaystyle \\lnot \\neg ,\\not \\operatorname {R} ,\\bot ,\\top }\\) \\vdash \\dashv, \\vDash, \\Vdash, \\models \\({\\displaystyle \\vdash ,\\dashv ,\\vDash ,\\Vdash ,\\models}\\) \\Vvdash \\nvdash \\nVdash \\nvDash \\nVDash \\({\\displaystyle \\Vvdash ,\\nvdash ,\\nVdash ,\\nvDash ,\\nVDash}\\) \\ulcorner \\urcorner \\llcorner \\lrcorner \\({\\displaystyle \\ulcorner \\urcorner \\llcorner \\lrcorner}\\) \u7bad\u5934 \\Rrightarrow, \\Lleftarrow \\({\\displaystyle \\Rrightarrow ,\\Lleftarrow}\\) \\Rightarrow, \\nRightarrow, \\Longrightarrow \\implies \\({\\displaystyle \\Rightarrow ,\\nRightarrow ,\\Longrightarrow ,\\implies}\\) \\Leftarrow, \\nLeftarrow, \\Longleftarrow, \\impliedby \\({\\displaystyle \\Leftarrow ,\\nLeftarrow ,\\Longleftarrow, \\impliedby}\\) \\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow \\iff \\({\\displaystyle \\Leftrightarrow ,\\nLeftrightarrow ,\\Longleftrightarrow \\iff}\\) \\Uparrow, \\Downarrow, \\Updownarrow \\({\\displaystyle \\Uparrow ,\\Downarrow ,\\Updownarrow}\\) \\rightarrow \\to, \\nrightarrow, \\longrightarrow \\({\\displaystyle \\rightarrow \\to ,\\nrightarrow ,\\longrightarrow}\\) \\leftarrow \\gets, \\nleftarrow, \\longleftarrow \\({\\displaystyle \\leftarrow \\gets ,\\nleftarrow ,\\longleftarrow}\\) \\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow \\({\\displaystyle \\leftrightarrow ,\\nleftrightarrow ,\\longleftrightarrow}\\) \\uparrow, \\downarrow, \\updownarrow \\({\\displaystyle \\uparrow ,\\downarrow ,\\updownarrow}\\) \\nearrow, \\swarrow, \\nwarrow, \\searrow \\({\\displaystyle \\nearrow ,\\swarrow ,\\nwarrow ,\\searrow}\\) \\mapsto, \\longmapsto \\({\\displaystyle \\mapsto ,\\longmapsto}\\) \\rightharpoonup \\rightharpoondown \\leftharpoonup \\leftharpoondown \\upharpoonleft \\upharpoonright \\downharpoonleft \\downharpoonright \\rightleftharpoons \\leftrightharpoons \\({\\displaystyle \\rightharpoonup ,\\rightharpoondown ,\\leftharpoonup ,\\leftharpoondown ,\\upharpoonleft ,\\upharpoonright ,\\downharpoonleft ,\\downharpoonright ,\\rightleftharpoons ,\\leftrightharpoons}\\) \\curvearrowleft \\circlearrowleft \\Lsh \\upuparrows \\rightrightarrows \\rightleftarrows \\rightarrowtail \\looparrowright \\({\\displaystyle \\curvearrowleft ,\\circlearrowleft ,\\Lsh ,\\upuparrows ,\\rightrightarrows ,\\rightleftarrows ,\\rightarrowtail ,\\looparrowright}\\) \\curvearrowright \\circlearrowright \\Rsh \\downdownarrows \\leftleftarrows \\leftrightarrows \\leftarrowtail \\looparrowleft \\({\\displaystyle \\curvearrowright ,\\circlearrowright ,\\Rsh ,\\downdownarrows ,\\leftleftarrows ,\\leftrightarrows ,\\leftarrowtail ,\\looparrowleft}\\) \\hookrightarrow \\hookleftarrow \\multimap \\leftrightsquigarrow \\rightsquigarrow \\twoheadrightarrow \\twoheadleftarrow \\({\\displaystyle \\hookrightarrow ,\\hookleftarrow ,\\multimap ,\\leftrightsquigarrow ,\\rightsquigarrow ,\\twoheadrightarrow ,\\twoheadleftarrow}\\) \u7279\u6b8a\u7b26\u53f7 \u7701\u7565\u53f7\uff1a\u6570\u5b66\u516c\u5f0f\u4e2d\u5e38\u89c1\u7684\u7701\u7565\u53f7\u6709\u4e24\u79cd\uff0c \\ldots \u8868\u793a\u4e0e\u6587\u672c\u5e95\u7ebf\u5bf9\u9f50\u7684\u7701\u7565\u53f7\uff0c \\cdots \u8868\u793a\u4e0e\u6587\u672c\u4e2d\u7ebf\u5bf9\u9f50\u7684\u7701\u7565\u53f7\u3002 \\amalg \\% \\dagger \\ddagger \\ldots \\cdots \\({\\displaystyle \\amalg \\%\\dagger \\ddagger \\ldots \\cdots}\\) \\smile \\frown \\wr \\triangleleft \\triangleright \\({\\displaystyle \\smile \\frown \\wr \\triangleleft \\triangleright}\\) \\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp \\({\\displaystyle \\diamondsuit ,\\heartsuit ,\\clubsuit ,\\spadesuit ,\\Game ,\\flat ,\\natural ,\\sharp}\\) \u672a\u5206\u7c7b \\diagup \\diagdown \\centerdot \\ltimes \\rtimes \\leftthreetimes \\rightthreetimes \\({\\displaystyle \\diagup ,\\diagdown ,\\centerdot ,\\ltimes ,\\rtimes ,\\leftthreetimes ,\\rightthreetimes}\\) \\eqcirc \\circeq \\triangleq \\bumpeq \\Bumpeq \\doteqdot \\risingdotseq \\fallingdotseq \\({\\displaystyle \\eqcirc ,\\circeq ,\\triangleq ,\\bumpeq ,\\Bumpeq ,\\doteqdot ,\\risingdotseq ,\\fallingdotseq}\\) \\intercal \\barwedge \\veebar \\doublebarwedge \\between \\pitchfork \\({\\displaystyle \\intercal ,\\barwedge ,\\veebar ,\\doublebarwedge ,\\between ,\\pitchfork}\\) \\vartriangleleft \\ntriangleleft \\vartriangleright \\ntriangleright \\({\\displaystyle \\vartriangleleft ,\\ntriangleleft ,\\vartriangleright ,\\ntriangleright}\\) \\trianglelefteq \\ntrianglelefteq \\trianglerighteq \\ntrianglerighteq \\({\\displaystyle \\trianglelefteq ,\\ntrianglelefteq ,\\trianglerighteq ,\\ntrianglerighteq}\\) \u5173\u4e8e\u8fd9\u4e9b\u7b26\u53f7\u7684\u66f4\u591a\u8bed\u4e49\uff0c\u53c2\u9605 TeX Cookbook \u7684\u7b80\u8ff0\u3002","title":"\u51fd\u6570\u3001\u7b26\u53f7\u53ca\u7279\u6b8a\u5b57\u7b26"},{"location":"latex/symbols/#_1","text":"","title":"\u51fd\u6570\u3001\u7b26\u53f7\u53ca\u7279\u6b8a\u5b57\u7b26"},{"location":"latex/symbols/#_2","text":"\\dot{a}, \\ddot{a}, \\acute{a}, \\grave{a} \\({\\displaystyle {\\dot {a}},{\\ddot {a}},{\\acute {a}},{\\grave {a}}}\\) \\check{a}, \\breve{a}, \\tilde{a}, \\bar{a} \\({\\displaystyle {\\check {a}},{\\breve {a}},{\\tilde {a}},{\\bar {a}}}\\) \\hat{a}, \\widehat{a}, \\vec{a} \\({\\displaystyle {\\hat {a}},{\\widehat {a}},{\\vec {a}}}\\)","title":"\u58f0\u8c03 / \u53d8\u97f3\u7b26\u53f7"},{"location":"latex/symbols/#_3","text":"\u6307\u6570 \\exp_a b = a^b, \\exp b = e^b, 10^m \\({\\displaystyle \\exp _{a}b=a^{b},\\exp b=e^{b},10^{m}}\\) \u5bf9\u6570 \\ln c, \\lg d = \\log e, \\log_{10} f \\({\\displaystyle \\ln c,\\lg d=\\log e,\\log _{10}f}\\) \u4e09\u89d2\u51fd\u6570 \\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f \\({\\displaystyle \\sin a,\\cos b,\\tan c,\\cot d,\\sec e,\\csc f}\\) \\arcsin a, \\arccos b, \\arctan c \\({\\displaystyle \\arcsin a,\\arccos b,\\arctan c}\\) \\arccot d, \\arcsec e, \\arccsc f \\({\\displaystyle \\operatorname {arccot} d,\\operatorname {arcsec} e,\\operatorname {arccsc} f}\\) \\sinh a, \\cosh b, \\tanh c, \\coth d \\({\\displaystyle \\sinh a,\\cosh b,\\tanh c,\\coth d}\\) \\operatorname{sh}k, \\operatorname{ch}l, \\operatorname{th}m, \\operatorname{coth}n \\({\\displaystyle \\operatorname {sh} k,\\operatorname {ch} l,\\operatorname {th} m,\\operatorname {coth} n}\\) \\operatorname{argsh}o, \\operatorname{argch}p, \\operatorname{argth}q \\({\\displaystyle \\operatorname {argsh} o,\\operatorname {argch} p,\\operatorname {argth} q}\\) \u7b26\u53f7\u51fd\u6570\uff0c\u7edd\u5bf9\u503c \\sgn r, \\left\\vert s \\right\\vert \\({\\displaystyle \\operatorname {sgn} r,\\left\\vert s\\right\\vert }\\) \u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c \\min(x,y), \\max(x,y) \\({\\displaystyle \\min(x,y),\\max(x,y)}\\)","title":"\u6807\u51c6\u51fd\u6570"},{"location":"latex/symbols/#_4","text":"\\min x, \\max y, \\inf s, \\sup t \\({\\displaystyle \\min x,\\max y,\\inf s,\\sup t}\\) \\lim u, \\liminf v, \\limsup w \\({\\displaystyle \\lim u,\\liminf v,\\limsup w}\\) \\lim_{x \\to \\infty} \\frac{1}{n(n+1)} \\({\\displaystyle \\lim_{x \\to \\infty} \\frac{1}{n(n+1)}}\\) \\dim p, \\deg q, \\det m, \\ker\\phi \\({\\displaystyle \\dim p,\\deg q,\\det m,\\ker \\phi}\\)","title":"\u754c\u9650\uff0c\u6781\u9650"},{"location":"latex/symbols/#_5","text":"\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z \\({\\displaystyle \\Pr j,\\hom l,\\lVert z\\rVert ,\\arg z}\\)","title":"\u6295\u5c04"},{"location":"latex/symbols/#_6","text":"dt, \\mathrm{d}t, \\partial t, \\nabla\\psi \\({\\displaystyle dt,\\mathrm {d} t,\\partial t,\\nabla \\psi }\\) dy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}y \\({\\displaystyle dy/dx,\\mathrm {d} y/\\mathrm {d} x,{\\frac {dy}{dx}},{\\frac {\\mathrm {d} y}{\\mathrm {d} x}},{\\frac {\\partial ^{2}}{\\partial x_{1}\\partial x_{2}}}y}\\) \\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y \\({\\displaystyle \\prime ,\\backprime ,f^{\\prime},f',f'',f^{(3)}\\!,{\\dot {y}},{\\ddot {y}}}\\)","title":"\u5fae\u5206\u53ca\u5bfc\u6570"},{"location":"latex/symbols/#_7","text":"\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar \\({\\displaystyle \\infty ,\\aleph ,\\complement ,\\backepsilon ,\\eth ,\\Finv ,\\hbar}\\) \\Im, \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS \\({\\displaystyle \\Im ,\\imath ,\\jmath ,\\Bbbk ,\\ell ,\\mho ,\\wp ,\\Re ,\\circledS }\\)","title":"\u7c7b\u5b57\u6bcd\u7b26\u53f7\u53ca\u5e38\u6570"},{"location":"latex/symbols/#_8","text":"s_k \\equiv 0 \\pmod{m} \\({\\displaystyle s_{k}\\equiv 0{\\pmod {m}}}\\) a \\bmod b \\({\\displaystyle a \\bmod b}\\) \\gcd(m, n), \\operatorname{lcm}(m, n) \\({\\displaystyle \\gcd(m,n),\\operatorname {lcm} (m,n)}\\) \\mid, \\nmid, \\shortmid, \\nshortmid \\({\\displaystyle \\mid ,\\nmid ,\\shortmid ,\\nshortmid}\\)","title":"\u6a21\u8fd0\u7b97"},{"location":"latex/symbols/#_9","text":"\\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{\\frac{x^3+y^3}{2}} \\({\\displaystyle \\surd ,{\\sqrt {2}},{\\sqrt[{n}]{}},{\\sqrt[{3}]{\\frac {x^{3}+y^{3}}{2}}}}\\)","title":"\u6839\u53f7"},{"location":"latex/symbols/#_10","text":"+, -, \\pm, \\mp, \\dotplus \\({\\displaystyle +,-,\\pm ,\\mp ,\\dotplus}\\) \\times, \\div, \\divideontimes, /, \\backslash \\({\\displaystyle \\times ,\\div ,\\divideontimes ,/,\\backslash}\\) \\cdot, * \\ast, \\star, \\circ, \\bullet \\({\\displaystyle \\cdot ,*\\ast ,\\star ,\\circ ,\\bullet}\\) \\boxplus, \\boxminus, \\boxtimes, \\boxdot \\({\\displaystyle \\boxplus ,\\boxminus ,\\boxtimes ,\\boxdot}\\) \\oplus, \\ominus, \\otimes, \\oslash, \\odot \\({\\displaystyle \\oplus ,\\ominus ,\\otimes ,\\oslash ,\\odot}\\) \\circleddash, \\circledcirc, \\circledast \\({\\displaystyle \\circleddash ,\\circledcirc ,\\circledast}\\) \\bigoplus, \\bigotimes, \\bigodot \\({\\displaystyle \\bigoplus ,\\bigotimes ,\\bigodot}\\)","title":"\u8fd0\u7b97\u7b26"},{"location":"latex/symbols/#_11","text":"\\{ \\}, \\O \\empty \\emptyset, \\varnothing \\({\\displaystyle \\{\\},\\emptyset \\emptyset \\emptyset ,\\varnothing }\\) \\in, \\notin \\not\\in, \\ni, \\not\\ni \\({\\displaystyle \\in ,\\notin \\not \\in ,\\ni ,\\not \\ni}\\) \\cap, \\Cap, \\sqcap, \\bigcap \\({\\displaystyle \\cap ,\\Cap ,\\sqcap ,\\bigcap}\\) \\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus \\({\\displaystyle \\cup ,\\Cup ,\\sqcup ,\\bigcup ,\\bigsqcup ,\\uplus ,\\biguplus}\\) \\setminus, \\smallsetminus, \\times \\({\\displaystyle \\setminus ,\\smallsetminus ,\\times}\\) \\subset, \\Subset, \\sqsubset \\({\\displaystyle \\subset ,\\Subset ,\\sqsubset}\\) \\supset, \\Supset, \\sqsupset \\({\\displaystyle \\supset ,\\Supset ,\\sqsupset}\\) \\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq \\({\\displaystyle \\subseteq ,\\nsubseteq ,\\subsetneq ,\\varsubsetneq ,\\sqsubseteq}\\) \\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq \\({\\displaystyle \\supseteq ,\\nsupseteq ,\\supsetneq ,\\varsupsetneq ,\\sqsupseteq}\\) \\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq \\({\\displaystyle \\subseteqq ,\\nsubseteqq ,\\subsetneqq ,\\varsubsetneqq}\\) \\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq \\({\\displaystyle \\supseteqq ,\\nsupseteqq ,\\supsetneqq ,\\varsupsetneqq}\\)","title":"\u96c6\u5408"},{"location":"latex/symbols/#_12","text":"=, \\ne, \\neq, \\equiv, \\not\\equiv \\({\\displaystyle =,\\neq ,\\neq ,\\equiv ,\\not \\equiv}\\) \\doteq, \\doteqdot, \\overset{\\underset{\\mathrm{def}}{}}{=}, := \\({\\displaystyle \\doteq ,\\doteqdot ,{\\overset {\\underset {\\mathrm {def} }{}}{=}},:=}\\) \\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong \\({\\displaystyle \\sim ,\\nsim ,\\backsim ,\\thicksim ,\\simeq ,\\backsimeq ,\\eqsim ,\\cong ,\\ncong}\\) \\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto \\({\\displaystyle \\approx ,\\thickapprox ,\\approxeq ,\\asymp ,\\propto ,\\varpropto}\\) <, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot \\({\\displaystyle <,\\nless ,\\ll ,\\not \\ll ,\\lll ,\\not \\lll ,\\lessdot}\\) >, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot \\({\\displaystyle>,\\ngtr ,\\gg ,\\not \\gg ,\\ggg ,\\not \\ggg ,\\gtrdot }\\) \\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq \\({\\displaystyle \\leq ,\\leq ,\\lneq ,\\leqq ,\\nleq ,\\nleqq ,\\lneqq ,\\lvertneqq}\\) \\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq \\({\\displaystyle \\geq ,\\geq ,\\gneq ,\\geqq ,\\ngeq ,\\ngeqq ,\\gneqq ,\\gvertneqq}\\) \\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless \\({\\displaystyle \\lessgtr ,\\lesseqgtr ,\\lesseqqgtr ,\\gtrless ,\\gtreqless ,\\gtreqqless}\\) \\leqslant, \\nleqslant, \\eqslantless \\({\\displaystyle \\leqslant ,\\nleqslant ,\\eqslantless}\\) \\geqslant, \\ngeqslant, \\eqslantgtr \\({\\displaystyle \\geqslant ,\\ngeqslant ,\\eqslantgtr}\\) \\lesssim, \\lnsim, \\lessapprox, \\lnapprox \\({\\displaystyle \\lesssim ,\\lnsim ,\\lessapprox ,\\lnapprox}\\) \\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox \\({\\displaystyle \\gtrsim ,\\gnsim ,\\gtrapprox ,\\gnapprox}\\) \\prec, \\nprec, \\preceq, \\npreceq, \\precneqq \\({\\displaystyle \\prec ,\\nprec ,\\preceq ,\\npreceq ,\\precneqq}\\) \\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq \\({\\displaystyle \\succ ,\\nsucc ,\\succeq ,\\nsucceq ,\\succneqq}\\) \\preccurlyeq, \\curlyeqprec \\({\\displaystyle \\preccurlyeq ,\\curlyeqprec}\\) \\succcurlyeq, \\curlyeqsucc \\({\\displaystyle \\succcurlyeq ,\\curlyeqsucc}\\) \\precsim, \\precnsim, \\precapprox, \\precnapprox \\({\\displaystyle \\precsim ,\\precnsim ,\\precapprox ,\\precnapprox}\\) \\succsim, \\succnsim, \\succapprox, \\succnapprox \\({\\displaystyle \\succsim ,\\succnsim ,\\succapprox ,\\succnapprox}\\)","title":"\u5173\u7cfb\u7b26\u53f7"},{"location":"latex/symbols/#_13","text":"\\parallel, \\nparallel, \\shortparallel, \\nshortparallel \\({\\displaystyle \\parallel ,\\nparallel ,\\shortparallel ,\\nshortparallel}\\) \\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ \\({\\displaystyle \\perp ,\\angle ,\\sphericalangle ,\\measuredangle ,45^{\\circ}}\\) \\Box, \\blacksquare, \\diamond, \\Diamond \\lozenge, \\blacklozenge, \\bigstar \\({\\displaystyle \\Box ,\\blacksquare ,\\diamond ,\\Diamond \\lozenge ,\\blacklozenge ,\\bigstar}\\) \\bigcirc, \\triangle, \\bigtriangleup, \\bigtriangledown \\({\\displaystyle \\bigcirc ,\\triangle ,\\bigtriangleup ,\\bigtriangledown}\\) \\vartriangle, \\triangledown \\({\\displaystyle \\vartriangle ,\\triangledown}\\) \\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright \\({\\displaystyle \\blacktriangle ,\\blacktriangledown ,\\blacktriangleleft ,\\blacktriangleright}\\)","title":"\u51e0\u4f55\u7b26\u53f7"},{"location":"latex/symbols/#_14","text":"\\forall, \\exists, \\nexists \\({\\displaystyle \\forall ,\\exists ,\\nexists}\\) \\therefore, \\because, \\And \\({\\displaystyle \\therefore ,\\because ,\\And}\\) \\or \\lor \\vee, \\curlyvee, \\bigvee \\({\\displaystyle \\lor ,\\lor ,\\vee ,\\curlyvee ,\\bigvee}\\) \\and \\land \\wedge, \\curlywedge, \\bigwedge \\({\\displaystyle \\land ,\\land ,\\wedge ,\\curlywedge ,\\bigwedge}\\) \\bar{q}, \\bar{abc}, \\overline{q}, \\overline{abc}, \\lnot \\neg, \\not\\operatorname{R}, \\bot, \\top \\({\\displaystyle {\\bar {q}},{\\bar {abc}},{\\overline {q}},{\\overline {abc}},}\\) \\({\\displaystyle \\lnot \\neg ,\\not \\operatorname {R} ,\\bot ,\\top }\\) \\vdash \\dashv, \\vDash, \\Vdash, \\models \\({\\displaystyle \\vdash ,\\dashv ,\\vDash ,\\Vdash ,\\models}\\) \\Vvdash \\nvdash \\nVdash \\nvDash \\nVDash \\({\\displaystyle \\Vvdash ,\\nvdash ,\\nVdash ,\\nvDash ,\\nVDash}\\) \\ulcorner \\urcorner \\llcorner \\lrcorner \\({\\displaystyle \\ulcorner \\urcorner \\llcorner \\lrcorner}\\)","title":"\u903b\u8f91\u7b26\u53f7"},{"location":"latex/symbols/#_15","text":"\\Rrightarrow, \\Lleftarrow \\({\\displaystyle \\Rrightarrow ,\\Lleftarrow}\\) \\Rightarrow, \\nRightarrow, \\Longrightarrow \\implies \\({\\displaystyle \\Rightarrow ,\\nRightarrow ,\\Longrightarrow ,\\implies}\\) \\Leftarrow, \\nLeftarrow, \\Longleftarrow, \\impliedby \\({\\displaystyle \\Leftarrow ,\\nLeftarrow ,\\Longleftarrow, \\impliedby}\\) \\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow \\iff \\({\\displaystyle \\Leftrightarrow ,\\nLeftrightarrow ,\\Longleftrightarrow \\iff}\\) \\Uparrow, \\Downarrow, \\Updownarrow \\({\\displaystyle \\Uparrow ,\\Downarrow ,\\Updownarrow}\\) \\rightarrow \\to, \\nrightarrow, \\longrightarrow \\({\\displaystyle \\rightarrow \\to ,\\nrightarrow ,\\longrightarrow}\\) \\leftarrow \\gets, \\nleftarrow, \\longleftarrow \\({\\displaystyle \\leftarrow \\gets ,\\nleftarrow ,\\longleftarrow}\\) \\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow \\({\\displaystyle \\leftrightarrow ,\\nleftrightarrow ,\\longleftrightarrow}\\) \\uparrow, \\downarrow, \\updownarrow \\({\\displaystyle \\uparrow ,\\downarrow ,\\updownarrow}\\) \\nearrow, \\swarrow, \\nwarrow, \\searrow \\({\\displaystyle \\nearrow ,\\swarrow ,\\nwarrow ,\\searrow}\\) \\mapsto, \\longmapsto \\({\\displaystyle \\mapsto ,\\longmapsto}\\) \\rightharpoonup \\rightharpoondown \\leftharpoonup \\leftharpoondown \\upharpoonleft \\upharpoonright \\downharpoonleft \\downharpoonright \\rightleftharpoons \\leftrightharpoons \\({\\displaystyle \\rightharpoonup ,\\rightharpoondown ,\\leftharpoonup ,\\leftharpoondown ,\\upharpoonleft ,\\upharpoonright ,\\downharpoonleft ,\\downharpoonright ,\\rightleftharpoons ,\\leftrightharpoons}\\) \\curvearrowleft \\circlearrowleft \\Lsh \\upuparrows \\rightrightarrows \\rightleftarrows \\rightarrowtail \\looparrowright \\({\\displaystyle \\curvearrowleft ,\\circlearrowleft ,\\Lsh ,\\upuparrows ,\\rightrightarrows ,\\rightleftarrows ,\\rightarrowtail ,\\looparrowright}\\) \\curvearrowright \\circlearrowright \\Rsh \\downdownarrows \\leftleftarrows \\leftrightarrows \\leftarrowtail \\looparrowleft \\({\\displaystyle \\curvearrowright ,\\circlearrowright ,\\Rsh ,\\downdownarrows ,\\leftleftarrows ,\\leftrightarrows ,\\leftarrowtail ,\\looparrowleft}\\) \\hookrightarrow \\hookleftarrow \\multimap \\leftrightsquigarrow \\rightsquigarrow \\twoheadrightarrow \\twoheadleftarrow \\({\\displaystyle \\hookrightarrow ,\\hookleftarrow ,\\multimap ,\\leftrightsquigarrow ,\\rightsquigarrow ,\\twoheadrightarrow ,\\twoheadleftarrow}\\)","title":"\u7bad\u5934"},{"location":"latex/symbols/#_16","text":"\u7701\u7565\u53f7\uff1a\u6570\u5b66\u516c\u5f0f\u4e2d\u5e38\u89c1\u7684\u7701\u7565\u53f7\u6709\u4e24\u79cd\uff0c \\ldots \u8868\u793a\u4e0e\u6587\u672c\u5e95\u7ebf\u5bf9\u9f50\u7684\u7701\u7565\u53f7\uff0c \\cdots \u8868\u793a\u4e0e\u6587\u672c\u4e2d\u7ebf\u5bf9\u9f50\u7684\u7701\u7565\u53f7\u3002 \\amalg \\% \\dagger \\ddagger \\ldots \\cdots \\({\\displaystyle \\amalg \\%\\dagger \\ddagger \\ldots \\cdots}\\) \\smile \\frown \\wr \\triangleleft \\triangleright \\({\\displaystyle \\smile \\frown \\wr \\triangleleft \\triangleright}\\) \\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp \\({\\displaystyle \\diamondsuit ,\\heartsuit ,\\clubsuit ,\\spadesuit ,\\Game ,\\flat ,\\natural ,\\sharp}\\)","title":"\u7279\u6b8a\u7b26\u53f7"},{"location":"latex/symbols/#_17","text":"\\diagup \\diagdown \\centerdot \\ltimes \\rtimes \\leftthreetimes \\rightthreetimes \\({\\displaystyle \\diagup ,\\diagdown ,\\centerdot ,\\ltimes ,\\rtimes ,\\leftthreetimes ,\\rightthreetimes}\\) \\eqcirc \\circeq \\triangleq \\bumpeq \\Bumpeq \\doteqdot \\risingdotseq \\fallingdotseq \\({\\displaystyle \\eqcirc ,\\circeq ,\\triangleq ,\\bumpeq ,\\Bumpeq ,\\doteqdot ,\\risingdotseq ,\\fallingdotseq}\\) \\intercal \\barwedge \\veebar \\doublebarwedge \\between \\pitchfork \\({\\displaystyle \\intercal ,\\barwedge ,\\veebar ,\\doublebarwedge ,\\between ,\\pitchfork}\\) \\vartriangleleft \\ntriangleleft \\vartriangleright \\ntriangleright \\({\\displaystyle \\vartriangleleft ,\\ntriangleleft ,\\vartriangleright ,\\ntriangleright}\\) \\trianglelefteq \\ntrianglelefteq \\trianglerighteq \\ntrianglerighteq \\({\\displaystyle \\trianglelefteq ,\\ntrianglelefteq ,\\trianglerighteq ,\\ntrianglerighteq}\\) \u5173\u4e8e\u8fd9\u4e9b\u7b26\u53f7\u7684\u66f4\u591a\u8bed\u4e49\uff0c\u53c2\u9605 TeX Cookbook \u7684\u7b80\u8ff0\u3002","title":"\u672a\u5206\u7c7b"},{"location":"linux/command/","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 (1) ctrl c: \u53d6\u6d88\u547d\u4ee4\uff0c\u5e76\u4e14\u6362\u884c (2) ctrl u: \u6e05\u7a7a\u672c\u884c\u547d\u4ee4 (3) tab\u952e\uff1a\u53ef\u4ee5\u8865\u5168\u547d\u4ee4\u548c\u6587\u4ef6\u540d\uff0c\u5982\u679c\u8865\u5168\u4e0d\u4e86\u5feb\u901f\u6309\u4e24\u4e0btab\u952e\uff0c\u53ef\u4ee5\u663e\u793a\u5907\u9009\u9009\u9879 (4) ls: \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\uff0c\u84dd\u8272\u7684\u662f\u6587\u4ef6\u5939\uff0c\u767d\u8272\u7684\u662f\u666e\u901a\u6587\u4ef6\uff0c\u7eff\u8272\u7684\u662f\u53ef\u6267\u884c\u6587\u4ef6 (5) pwd: \u663e\u793a\u5f53\u524d\u8def\u5f84 (6) cd XXX: \u8fdb\u5165XXX\u76ee\u5f55\u4e0b, cd .. \u8fd4\u56de\u4e0a\u5c42\u76ee\u5f55 (7) cp XXX YYY: \u5c06XXX\u6587\u4ef6\u590d\u5236\u6210YYY\uff0cXXX\u548cYYY\u53ef\u4ee5\u662f\u4e00\u4e2a\u8def\u5f84\uff0c\u6bd4\u5982../dir_c/a.txt\uff0c\u8868\u793a\u4e0a\u5c42\u76ee\u5f55\u4e0b\u7684dir_c\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6a.txt (8) mkdir XXX: \u521b\u5efa\u76ee\u5f55XXX (9) rm XXX: \u5220\u9664\u666e\u901a\u6587\u4ef6; rm XXX -r: \u5220\u9664\u6587\u4ef6\u5939 (10) mv XXX YYY: \u5c06XXX\u6587\u4ef6\u79fb\u52a8\u5230YYY\uff0c\u548ccp\u547d\u4ee4\u4e00\u6837\uff0cXXX\u548cYYY\u53ef\u4ee5\u662f\u4e00\u4e2a\u8def\u5f84\uff1b\u91cd\u547d\u540d\u4e5f\u662f\u7528\u8fd9\u4e2a\u547d\u4ee4 (11) touch XXX: \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 (12) cat XXX: \u5c55\u793a\u6587\u4ef6XXX\u4e2d\u7684\u5185\u5bb9 (13) \u590d\u5236\u6587\u672c windows/Linux\u4e0b\uff1aCtrl + insert\uff0cMac\u4e0b\uff1acommand + c (14) \u7c98\u8d34\u6587\u672c windows/Linux\u4e0b\uff1aShift + insert\uff0cMac\u4e0b\uff1acommand + v","title":"\u5e38\u7528\u6587\u4ef6\u7ba1\u7406\u547d\u4ee4"},{"location":"linux/common_commond/","text":"Linux \u547d\u4ee4\u975e\u5e38\u591a\uff0c\u672c\u8282\u8bb2\u89e3\u51e0\u4e2a\u5e38\u7528\u547d\u4ee4\u3002\u5176\u4ed6\u547d\u4ee4\u4f9d\u8d56\u4e8e\u5927\u5bb6\u6839\u636e\u5b9e\u9645\u64cd\u4f5c\u73af\u5883\uff0c\u8fb9\u7528\u8fb9\u67e5\u3002 \u7cfb\u7edf\u72b6\u51b5 top \uff1a\u67e5\u770b\u6240\u6709\u8fdb\u7a0b\u7684\u4fe1\u606f\uff08 Linux \u7684\u4efb\u52a1\u7ba1\u7406\u5668\uff09 \u6253\u5f00\u540e\uff0c\u8f93\u5165 M \uff1a\u6309\u4f7f\u7528\u5185\u5b58\u6392\u5e8f \u6253\u5f00\u540e\uff0c\u8f93\u5165 P \uff1a\u6309\u4f7f\u7528 CPU \u6392\u5e8f \u6253\u5f00\u540e\uff0c\u8f93\u5165 Q \uff1a\u9000\u51fa df -h \uff1a\u67e5\u770b\u786c\u76d8\u4f7f\u7528\u60c5\u51b5 free -h \uff1a\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 du -sh \uff1a\u67e5\u770b\u5f53\u524d\u76ee\u5f55\u5360\u7528\u7684\u786c\u76d8\u7a7a\u95f4 ps aux \uff1a\u67e5\u770b\u6240\u6709\u8fdb\u7a0b kill -9 pid \uff1a\u6740\u6b7b\u7f16\u53f7\u4e3a pid \u7684\u8fdb\u7a0b \u4f20\u9012\u67d0\u4e2a\u5177\u4f53\u7684\u4fe1\u53f7\uff1a kill -s SIGTERM pid netstat -nt \uff1a\u67e5\u770b\u6240\u6709\u7f51\u7edc\u8fde\u63a5 w \uff1a\u5217\u51fa\u5f53\u524d\u767b\u9646\u7684\u7528\u6237 ping www.baidu.com \uff1a\u68c0\u67e5\u662f\u5426\u8fde\u7f51 \u6587\u4ef6\u6743\u9650 chmod \uff1a\u4fee\u6539\u6587\u4ef6\u6743\u9650 chmod +x xxx \uff1a\u7ed9 xxx \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650 chmod -x xxx \uff1a\u53bb\u6389 xxx \u7684\u53ef\u6267\u884c\u6743\u9650 chmod 777 xxx \uff1a\u5c06 xxx \u7684\u6743\u9650\u6539\u6210777 chmod 777 xxx -R \uff1a\u9012\u5f52\u4fee\u6539\u6574\u4e2a\u6587\u4ef6\u5939\u7684\u6743\u9650 \u6587\u4ef6\u68c0\u7d22 find /path/to/directory/ -name '*.py' \uff1a\u641c\u7d22\u67d0\u4e2a\u6587\u4ef6\u8def\u5f84\u4e0b\u7684\u6240\u6709 *.py \u6587\u4ef6 grep xxx \uff1a\u4ece stdin \u4e2d\u8bfb\u5165\u82e5\u5e72\u884c\u6570\u636e\uff0c\u5982\u679c\u67d0\u884c\u4e2d\u5305\u542b xxx \uff0c\u5219\u8f93\u51fa\u8be5\u884c\uff1b\u5426\u5219\u5ffd\u7565\u8be5\u884c\u3002 wc \uff1a\u7edf\u8ba1\u884c\u6570\u3001\u5355\u8bcd\u6570\u3001\u5b57\u8282\u6570 \u65e2\u53ef\u4ee5\u4ece stdin \u4e2d\u76f4\u63a5\u8bfb\u5165\u5185\u5bb9\uff1b\u4e5f\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u4f20\u5165\u6587\u4ef6\u540d\u5217\u8868\uff1b wc -l \uff1a\u7edf\u8ba1\u884c\u6570 wc -w \uff1a\u7edf\u8ba1\u5355\u8bcd\u6570 wc -c \uff1a\u7edf\u8ba1\u5b57\u8282\u6570 tree \uff1a\u5c55\u793a\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784 tree /path/to/directory/ \uff1a\u5c55\u793a\u67d0\u4e2a\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784 tree -a \uff1a\u5c55\u793a\u9690\u85cf\u6587\u4ef6 ag xxx \uff1a\u641c\u7d22\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u68c0\u7d22 xxx \u5b57\u7b26\u4e32 cut \uff1a\u5206\u5272\u4e00\u884c\u5185\u5bb9 \u4ece stdin \u4e2d\u8bfb\u5165\u591a\u884c\u6570\u636e echo $PATH | cut -d ':' -f 3,5 \uff1a\u8f93\u51fa PATH \u7528:\u5206\u5272\u540e\u7b2c3\u30015\u5217\u6570\u636e echo $PATH | cut -d ':' -f 3-5 \uff1a\u8f93\u51fa PATH \u7528:\u5206\u5272\u540e\u7b2c3-5\u5217\u6570\u636e echo $PATH | cut -c 3,5 \uff1a\u8f93\u51fa PATH \u7684\u7b2c3\u30015\u4e2a\u5b57\u7b26 echo $PATH | cut -c 3-5 \uff1a\u8f93\u51fa PATH \u7684\u7b2c3-5\u4e2a\u5b57\u7b26 sort \uff1a\u5c06\u6bcf\u884c\u5185\u5bb9\u6309\u5b57\u5178\u5e8f\u6392\u5e8f \u53ef\u4ee5\u4ece stdin \u4e2d\u8bfb\u53d6\u591a\u884c\u6570\u636e \u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u8bfb\u53d6\u6587\u4ef6\u540d\u5217\u8868 xargs \uff1a\u5c06 stdin \u4e2d\u7684\u6570\u636e\u7528\u7a7a\u683c\u6216\u56de\u8f66\u5206\u5272\u6210\u547d\u4ee4\u884c\u53c2\u6570 find . -name '*.py' | xargs cat | wc -l \uff1a\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709 python \u6587\u4ef6\u7684\u603b\u884c\u6570 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 more \uff1a\u6d4f\u89c8\u6587\u4ef6\u5185\u5bb9 Enter \uff1a\u4e0b\u4e00\u884c Space \uff1a\u4e0b\u4e00\u9875 B \uff1a\u4e0a\u4e00\u9875 Q \uff1a\u9000\u51fa less \uff1a\u4e0e more \u7c7b\u4f3c\uff0c\u529f\u80fd\u66f4\u5168 Enter \uff1a\u4e0b\u4e00\u884c Y \uff1a\u4e0a\u4e00\u884c Page Down \uff1a\u4e0b\u4e00\u9875 Page Up \uff1a\u4e0a\u4e00\u9875 Q \uff1a\u9000\u51fa head -3 xxx \uff1a\u5c55\u793a xxx \u7684\u524d3\u884c\u5185\u5bb9 \u540c\u65f6\u652f\u6301\u4ece stdin \u8bfb\u5165\u5185\u5bb9 tail -3 xxx \uff1a\u5c55\u793a xxx \u672b\u5c3e3\u884c\u5185\u5bb9 \u540c\u65f6\u652f\u6301\u4ece stdin \u8bfb\u5165\u5185\u5bb9 \u7528\u6237\u76f8\u5173 history \uff1a\u5c55\u793a\u5f53\u524d\u7528\u6237\u7684\u5386\u53f2\u64cd\u4f5c\u3002\u5185\u5bb9\u5b58\u653e\u5728 ~/.bash_history \u4e2d \u5de5\u5177 md5sum \uff1a\u8ba1\u7b97 md5 \u54c8\u5e0c\u503c \u53ef\u4ee5\u4ece stdin \u8bfb\u5165\u5185\u5bb9 \u4e5f\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u4f20\u5165\u6587\u4ef6\u540d\u5217\u8868\uff1b time command \uff1a\u7edf\u8ba1 command \u547d\u4ee4\u7684\u6267\u884c\u65f6\u95f4 ipython3 \uff1a \u4ea4\u4e92\u5f0f python3 \u73af\u5883\u3002\u53ef\u4ee5\u5f53\u505a\u8ba1\u7b97\u5668\uff0c\u6216\u8005\u6279\u91cf\u7ba1\u7406\u6587\u4ef6\u3002 ! echo \"Hello World\" \uff1a ! \u8868\u793a\u6267\u884c shell \u811a\u672c watch -n 0.1 command \uff1a\u6bcf0.1\u79d2\u6267\u884c\u4e00\u6b21 command \u547d\u4ee4 tar \uff1a\u538b\u7f29\u6587\u4ef6 tar -zcvf xxx.tar.gz /path/to/file/* \uff1a\u538b\u7f29 tar -zxvf xxx.tar.gz \uff1a\u89e3\u538b\u7f29 diff xxx yyy \uff1a\u67e5\u627e\u6587\u4ef6 xxx \u4e0e yyy \u7684\u4e0d\u540c\u70b9 \u5b89\u88c5\u8f6f\u4ef6 sudo command \uff1a\u4ee5 root \u8eab\u4efd\u6267\u884c command \u547d\u4ee4 apt-get install xxx \uff1a\u5b89\u88c5\u8f6f\u4ef6 pip install xxx --user --upgrade \uff1a\u5b89\u88c5 python \u5305","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"linux/common_commond/#_1","text":"top \uff1a\u67e5\u770b\u6240\u6709\u8fdb\u7a0b\u7684\u4fe1\u606f\uff08 Linux \u7684\u4efb\u52a1\u7ba1\u7406\u5668\uff09 \u6253\u5f00\u540e\uff0c\u8f93\u5165 M \uff1a\u6309\u4f7f\u7528\u5185\u5b58\u6392\u5e8f \u6253\u5f00\u540e\uff0c\u8f93\u5165 P \uff1a\u6309\u4f7f\u7528 CPU \u6392\u5e8f \u6253\u5f00\u540e\uff0c\u8f93\u5165 Q \uff1a\u9000\u51fa df -h \uff1a\u67e5\u770b\u786c\u76d8\u4f7f\u7528\u60c5\u51b5 free -h \uff1a\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 du -sh \uff1a\u67e5\u770b\u5f53\u524d\u76ee\u5f55\u5360\u7528\u7684\u786c\u76d8\u7a7a\u95f4 ps aux \uff1a\u67e5\u770b\u6240\u6709\u8fdb\u7a0b kill -9 pid \uff1a\u6740\u6b7b\u7f16\u53f7\u4e3a pid \u7684\u8fdb\u7a0b \u4f20\u9012\u67d0\u4e2a\u5177\u4f53\u7684\u4fe1\u53f7\uff1a kill -s SIGTERM pid netstat -nt \uff1a\u67e5\u770b\u6240\u6709\u7f51\u7edc\u8fde\u63a5 w \uff1a\u5217\u51fa\u5f53\u524d\u767b\u9646\u7684\u7528\u6237 ping www.baidu.com \uff1a\u68c0\u67e5\u662f\u5426\u8fde\u7f51","title":"\u7cfb\u7edf\u72b6\u51b5"},{"location":"linux/common_commond/#_2","text":"chmod \uff1a\u4fee\u6539\u6587\u4ef6\u6743\u9650 chmod +x xxx \uff1a\u7ed9 xxx \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650 chmod -x xxx \uff1a\u53bb\u6389 xxx \u7684\u53ef\u6267\u884c\u6743\u9650 chmod 777 xxx \uff1a\u5c06 xxx \u7684\u6743\u9650\u6539\u6210777 chmod 777 xxx -R \uff1a\u9012\u5f52\u4fee\u6539\u6574\u4e2a\u6587\u4ef6\u5939\u7684\u6743\u9650","title":"\u6587\u4ef6\u6743\u9650"},{"location":"linux/common_commond/#_3","text":"find /path/to/directory/ -name '*.py' \uff1a\u641c\u7d22\u67d0\u4e2a\u6587\u4ef6\u8def\u5f84\u4e0b\u7684\u6240\u6709 *.py \u6587\u4ef6 grep xxx \uff1a\u4ece stdin \u4e2d\u8bfb\u5165\u82e5\u5e72\u884c\u6570\u636e\uff0c\u5982\u679c\u67d0\u884c\u4e2d\u5305\u542b xxx \uff0c\u5219\u8f93\u51fa\u8be5\u884c\uff1b\u5426\u5219\u5ffd\u7565\u8be5\u884c\u3002 wc \uff1a\u7edf\u8ba1\u884c\u6570\u3001\u5355\u8bcd\u6570\u3001\u5b57\u8282\u6570 \u65e2\u53ef\u4ee5\u4ece stdin \u4e2d\u76f4\u63a5\u8bfb\u5165\u5185\u5bb9\uff1b\u4e5f\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u4f20\u5165\u6587\u4ef6\u540d\u5217\u8868\uff1b wc -l \uff1a\u7edf\u8ba1\u884c\u6570 wc -w \uff1a\u7edf\u8ba1\u5355\u8bcd\u6570 wc -c \uff1a\u7edf\u8ba1\u5b57\u8282\u6570 tree \uff1a\u5c55\u793a\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784 tree /path/to/directory/ \uff1a\u5c55\u793a\u67d0\u4e2a\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784 tree -a \uff1a\u5c55\u793a\u9690\u85cf\u6587\u4ef6 ag xxx \uff1a\u641c\u7d22\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u68c0\u7d22 xxx \u5b57\u7b26\u4e32 cut \uff1a\u5206\u5272\u4e00\u884c\u5185\u5bb9 \u4ece stdin \u4e2d\u8bfb\u5165\u591a\u884c\u6570\u636e echo $PATH | cut -d ':' -f 3,5 \uff1a\u8f93\u51fa PATH \u7528:\u5206\u5272\u540e\u7b2c3\u30015\u5217\u6570\u636e echo $PATH | cut -d ':' -f 3-5 \uff1a\u8f93\u51fa PATH \u7528:\u5206\u5272\u540e\u7b2c3-5\u5217\u6570\u636e echo $PATH | cut -c 3,5 \uff1a\u8f93\u51fa PATH \u7684\u7b2c3\u30015\u4e2a\u5b57\u7b26 echo $PATH | cut -c 3-5 \uff1a\u8f93\u51fa PATH \u7684\u7b2c3-5\u4e2a\u5b57\u7b26 sort \uff1a\u5c06\u6bcf\u884c\u5185\u5bb9\u6309\u5b57\u5178\u5e8f\u6392\u5e8f \u53ef\u4ee5\u4ece stdin \u4e2d\u8bfb\u53d6\u591a\u884c\u6570\u636e \u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u8bfb\u53d6\u6587\u4ef6\u540d\u5217\u8868 xargs \uff1a\u5c06 stdin \u4e2d\u7684\u6570\u636e\u7528\u7a7a\u683c\u6216\u56de\u8f66\u5206\u5272\u6210\u547d\u4ee4\u884c\u53c2\u6570 find . -name '*.py' | xargs cat | wc -l \uff1a\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709 python \u6587\u4ef6\u7684\u603b\u884c\u6570","title":"\u6587\u4ef6\u68c0\u7d22"},{"location":"linux/common_commond/#_4","text":"more \uff1a\u6d4f\u89c8\u6587\u4ef6\u5185\u5bb9 Enter \uff1a\u4e0b\u4e00\u884c Space \uff1a\u4e0b\u4e00\u9875 B \uff1a\u4e0a\u4e00\u9875 Q \uff1a\u9000\u51fa less \uff1a\u4e0e more \u7c7b\u4f3c\uff0c\u529f\u80fd\u66f4\u5168 Enter \uff1a\u4e0b\u4e00\u884c Y \uff1a\u4e0a\u4e00\u884c Page Down \uff1a\u4e0b\u4e00\u9875 Page Up \uff1a\u4e0a\u4e00\u9875 Q \uff1a\u9000\u51fa head -3 xxx \uff1a\u5c55\u793a xxx \u7684\u524d3\u884c\u5185\u5bb9 \u540c\u65f6\u652f\u6301\u4ece stdin \u8bfb\u5165\u5185\u5bb9 tail -3 xxx \uff1a\u5c55\u793a xxx \u672b\u5c3e3\u884c\u5185\u5bb9 \u540c\u65f6\u652f\u6301\u4ece stdin \u8bfb\u5165\u5185\u5bb9","title":"\u67e5\u770b\u6587\u4ef6\u5185\u5bb9"},{"location":"linux/common_commond/#_5","text":"history \uff1a\u5c55\u793a\u5f53\u524d\u7528\u6237\u7684\u5386\u53f2\u64cd\u4f5c\u3002\u5185\u5bb9\u5b58\u653e\u5728 ~/.bash_history \u4e2d","title":"\u7528\u6237\u76f8\u5173"},{"location":"linux/common_commond/#_6","text":"md5sum \uff1a\u8ba1\u7b97 md5 \u54c8\u5e0c\u503c \u53ef\u4ee5\u4ece stdin \u8bfb\u5165\u5185\u5bb9 \u4e5f\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u4f20\u5165\u6587\u4ef6\u540d\u5217\u8868\uff1b time command \uff1a\u7edf\u8ba1 command \u547d\u4ee4\u7684\u6267\u884c\u65f6\u95f4 ipython3 \uff1a \u4ea4\u4e92\u5f0f python3 \u73af\u5883\u3002\u53ef\u4ee5\u5f53\u505a\u8ba1\u7b97\u5668\uff0c\u6216\u8005\u6279\u91cf\u7ba1\u7406\u6587\u4ef6\u3002 ! echo \"Hello World\" \uff1a ! \u8868\u793a\u6267\u884c shell \u811a\u672c watch -n 0.1 command \uff1a\u6bcf0.1\u79d2\u6267\u884c\u4e00\u6b21 command \u547d\u4ee4 tar \uff1a\u538b\u7f29\u6587\u4ef6 tar -zcvf xxx.tar.gz /path/to/file/* \uff1a\u538b\u7f29 tar -zxvf xxx.tar.gz \uff1a\u89e3\u538b\u7f29 diff xxx yyy \uff1a\u67e5\u627e\u6587\u4ef6 xxx \u4e0e yyy \u7684\u4e0d\u540c\u70b9","title":"\u5de5\u5177"},{"location":"linux/common_commond/#_7","text":"sudo command \uff1a\u4ee5 root \u8eab\u4efd\u6267\u884c command \u547d\u4ee4 apt-get install xxx \uff1a\u5b89\u88c5\u8f6f\u4ef6 pip install xxx --user --upgrade \uff1a\u5b89\u88c5 python \u5305","title":"\u5b89\u88c5\u8f6f\u4ef6"},{"location":"linux/conduit/","text":"\u6982\u5ff5 \u7ba1\u9053\u7c7b\u4f3c\u4e8e\u6587\u4ef6\u91cd\u5b9a\u5411\uff0c\u53ef\u4ee5\u5c06\u524d\u4e00\u4e2a\u547d\u4ee4\u7684 stdout \u91cd\u5b9a\u5411\u5230\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684 stdin \u3002 \u8981\u70b9 \u7ba1\u9053\u547d\u4ee4\u4ec5\u5904\u7406 stdout \uff0c\u4f1a\u5ffd\u7565 stderr \u3002 \u7ba1\u9053\u53f3\u8fb9\u7684\u547d\u4ee4\u5fc5\u987b\u80fd\u63a5\u53d7 stdin \u3002 \u591a\u4e2a\u7ba1\u9053\u547d\u4ee4\u53ef\u4ee5\u4e32\u8054\u3002 \u4e0e\u6587\u4ef6\u91cd\u5b9a\u5411\u7684\u533a\u522b \u6587\u4ef6\u91cd\u5b9a\u5411\u5de6\u8fb9\u4e3a\u547d\u4ee4\uff0c\u53f3\u8fb9\u4e3a\u6587\u4ef6\u3002 \u7ba1\u9053\u5de6\u53f3\u4e24\u8fb9\u5747\u4e3a\u547d\u4ee4\uff0c\u5de6\u8fb9\u6709 stdout \uff0c\u53f3\u8fb9\u6709 stdin \u3002 \u4e3e\u4f8b \u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709python\u6587\u4ef6\u7684\u603b\u884c\u6570\uff0c\u5176\u4e2d find \u3001 xargs \u3001 wc \u7b49\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003 \u5e38\u7528\u547d\u4ee4 \u8fd9\u4e00\u8282\u5185\u5bb9\u3002 1 find . -name '*.py' | xargs cat | wc -l","title":"\u7ba1\u9053"},{"location":"linux/conduit/#_1","text":"\u7ba1\u9053\u7c7b\u4f3c\u4e8e\u6587\u4ef6\u91cd\u5b9a\u5411\uff0c\u53ef\u4ee5\u5c06\u524d\u4e00\u4e2a\u547d\u4ee4\u7684 stdout \u91cd\u5b9a\u5411\u5230\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684 stdin \u3002","title":"\u6982\u5ff5"},{"location":"linux/conduit/#_2","text":"\u7ba1\u9053\u547d\u4ee4\u4ec5\u5904\u7406 stdout \uff0c\u4f1a\u5ffd\u7565 stderr \u3002 \u7ba1\u9053\u53f3\u8fb9\u7684\u547d\u4ee4\u5fc5\u987b\u80fd\u63a5\u53d7 stdin \u3002 \u591a\u4e2a\u7ba1\u9053\u547d\u4ee4\u53ef\u4ee5\u4e32\u8054\u3002","title":"\u8981\u70b9"},{"location":"linux/conduit/#_3","text":"\u6587\u4ef6\u91cd\u5b9a\u5411\u5de6\u8fb9\u4e3a\u547d\u4ee4\uff0c\u53f3\u8fb9\u4e3a\u6587\u4ef6\u3002 \u7ba1\u9053\u5de6\u53f3\u4e24\u8fb9\u5747\u4e3a\u547d\u4ee4\uff0c\u5de6\u8fb9\u6709 stdout \uff0c\u53f3\u8fb9\u6709 stdin \u3002","title":"\u4e0e\u6587\u4ef6\u91cd\u5b9a\u5411\u7684\u533a\u522b"},{"location":"linux/conduit/#_4","text":"\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709python\u6587\u4ef6\u7684\u603b\u884c\u6570\uff0c\u5176\u4e2d find \u3001 xargs \u3001 wc \u7b49\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003 \u5e38\u7528\u547d\u4ee4 \u8fd9\u4e00\u8282\u5185\u5bb9\u3002 1 find . -name '*.py' | xargs cat | wc -l","title":"\u4e3e\u4f8b"},{"location":"linux/environment_variable/","text":"\u6982\u5ff5 Linux \u7cfb\u7edf\u4e2d\u4f1a\u7528\u5f88\u591a\u73af\u5883\u53d8\u91cf\u6765\u8bb0\u5f55 \u914d\u7f6e\u4fe1\u606f \u3002 \u73af\u5883\u53d8\u91cf\u7c7b\u4f3c\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u88ab\u5404\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u5230\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u73af\u5883\u53d8\u91cf\u6765\u65b9\u4fbf\u5730\u4fee\u6539\u7cfb\u7edf\u914d\u7f6e\u3002 \u67e5\u770b \u5217\u51fa\u5f53\u524d\u73af\u5883\u4e0b\u7684\u6240\u6709\u73af\u5883\u53d8\u91cf\uff1a 1 2 3 env # \u663e\u793a\u5f53\u524d\u7528\u6237\u7684\u53d8\u91cf set # \u663e\u793a\u5f53\u524dshell\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u5f53\u524d\u7528\u6237\u7684\u53d8\u91cf; export # \u663e\u793a\u5f53\u524d\u5bfc\u51fa\u6210\u7528\u6237\u53d8\u91cf\u7684shell\u53d8\u91cf \u8f93\u51fa\u67d0\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\uff1a 1 echo $PATH \u4fee\u6539 \u73af\u5883\u53d8\u91cf\u7684\u5b9a\u4e49\u3001\u4fee\u6539\u3001\u5220\u9664\u64cd\u4f5c\u53ef\u4ee5\u53c2\u8003 Shell-\u53d8\u91cf \u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u3002 \u4e3a\u4e86\u5c06\u5bf9\u73af\u5883\u53d8\u91cf\u7684\u4fee\u6539\u5e94\u7528\u5230\u672a\u6765\u6240\u6709\u73af\u5883\u4e0b\uff0c\u53ef\u4ee5\u5c06\u4fee\u6539\u547d\u4ee4\u653e\u5230 ~/.bashrc \u6587\u4ef6\u4e2d\u3002 \u4fee\u6539\u5b8c ~/.bashrc \u6587\u4ef6\u540e\uff0c\u8bb0\u5f97\u6267\u884c source ~/.bashrc \uff0c\u6765\u5c06\u4fee\u6539\u5e94\u7528\u5230\u5f53\u524d\u7684 bash \u73af\u5883\u4e0b\u3002 \u4e3a\u4f55\u5c06\u4fee\u6539\u547d\u4ee4\u653e\u5230 ~/.bashrc \uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u4fee\u6539\u4f1a\u5f71\u54cd\u672a\u6765\u6240\u6709\u7684\u73af\u5883\u5462\uff1f \u6bcf\u6b21\u542f\u52a8 bash \uff0c\u90fd\u4f1a\u5148\u6267\u884c ~/.bashrc \u3002 \u6bcf\u6b21 ssh \u767b\u9646\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u90fd\u4f1a\u542f\u52a8\u4e00\u4e2a bash \u547d\u4ee4\u884c\u7ed9\u6211\u4eec\u3002 \u6bcf\u6b21 tmux \u65b0\u5f00\u4e00\u4e2a pane \uff0c\u90fd\u4f1a\u542f\u52a8\u4e00\u4e2a bash \u547d\u4ee4\u884c\u7ed9\u6211\u4eec\u3002 \u6240\u4ee5\u672a\u6765\u6240\u6709\u65b0\u5f00\u7684\u73af\u5883\u90fd\u4f1a\u52a0\u8f7d\u6211\u4eec\u4fee\u6539\u7684\u5185\u5bb9\u3002 \u5e38\u89c1\u73af\u5883\u53d8\u91cf HOME \uff1a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002 PATH \uff1a\u53ef\u6267\u884c\u6587\u4ef6\uff08\u547d\u4ee4\uff09\u7684\u5b58\u50a8\u8def\u5f84\u3002\u8def\u5f84\u4e0e\u8def\u5f84\u4e4b\u95f4\u7528:\u5206\u9694\u3002\u5f53\u67d0\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u540c\u65f6\u51fa\u73b0\u5728\u591a\u4e2a\u8def\u5f84\u4e2d\u65f6\uff0c\u4f1a\u9009\u62e9\u4ece\u5de6\u5230\u53f3\u6570\u7b2c\u4e00\u4e2a\u8def\u5f84\u4e2d\u7684\u6267\u884c\u3002 \u4e0b\u5217\u6240\u6709\u5b58\u50a8\u8def\u5f84\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5747\u91c7\u7528\u4ece\u5de6\u5230\u53f3\u7684\u4f18\u5148\u987a\u5e8f \u3002 LD_LIBRARY_PATH \uff1a\u7528\u4e8e\u6307\u5b9a\u52a8\u6001\u94fe\u63a5\u5e93( .so \u6587\u4ef6)\u7684\u8def\u5f84\uff0c\u5176\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 C_INCLUDE_PATH \uff1a C\u8bed\u8a00 \u7684\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 CPLUS_INCLUDE_PATH \uff1a CPP \u7684\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 PYTHONPATH \uff1a Python \u5bfc\u5165\u5305\u7684\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 JAVA_HOME \uff1a jdk \u7684\u5b89\u88c5\u76ee\u5f55\u3002 CLASSPATH \uff1a\u5b58\u653e Java \u5bfc\u5165\u7c7b\u7684\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002","title":"\u73af\u5883\u53d8\u91cf"},{"location":"linux/environment_variable/#_1","text":"Linux \u7cfb\u7edf\u4e2d\u4f1a\u7528\u5f88\u591a\u73af\u5883\u53d8\u91cf\u6765\u8bb0\u5f55 \u914d\u7f6e\u4fe1\u606f \u3002 \u73af\u5883\u53d8\u91cf\u7c7b\u4f3c\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u88ab\u5404\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u5230\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u73af\u5883\u53d8\u91cf\u6765\u65b9\u4fbf\u5730\u4fee\u6539\u7cfb\u7edf\u914d\u7f6e\u3002","title":"\u6982\u5ff5"},{"location":"linux/environment_variable/#_2","text":"\u5217\u51fa\u5f53\u524d\u73af\u5883\u4e0b\u7684\u6240\u6709\u73af\u5883\u53d8\u91cf\uff1a 1 2 3 env # \u663e\u793a\u5f53\u524d\u7528\u6237\u7684\u53d8\u91cf set # \u663e\u793a\u5f53\u524dshell\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u5f53\u524d\u7528\u6237\u7684\u53d8\u91cf; export # \u663e\u793a\u5f53\u524d\u5bfc\u51fa\u6210\u7528\u6237\u53d8\u91cf\u7684shell\u53d8\u91cf \u8f93\u51fa\u67d0\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\uff1a 1 echo $PATH","title":"\u67e5\u770b"},{"location":"linux/environment_variable/#_3","text":"\u73af\u5883\u53d8\u91cf\u7684\u5b9a\u4e49\u3001\u4fee\u6539\u3001\u5220\u9664\u64cd\u4f5c\u53ef\u4ee5\u53c2\u8003 Shell-\u53d8\u91cf \u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u3002 \u4e3a\u4e86\u5c06\u5bf9\u73af\u5883\u53d8\u91cf\u7684\u4fee\u6539\u5e94\u7528\u5230\u672a\u6765\u6240\u6709\u73af\u5883\u4e0b\uff0c\u53ef\u4ee5\u5c06\u4fee\u6539\u547d\u4ee4\u653e\u5230 ~/.bashrc \u6587\u4ef6\u4e2d\u3002 \u4fee\u6539\u5b8c ~/.bashrc \u6587\u4ef6\u540e\uff0c\u8bb0\u5f97\u6267\u884c source ~/.bashrc \uff0c\u6765\u5c06\u4fee\u6539\u5e94\u7528\u5230\u5f53\u524d\u7684 bash \u73af\u5883\u4e0b\u3002 \u4e3a\u4f55\u5c06\u4fee\u6539\u547d\u4ee4\u653e\u5230 ~/.bashrc \uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u4fee\u6539\u4f1a\u5f71\u54cd\u672a\u6765\u6240\u6709\u7684\u73af\u5883\u5462\uff1f \u6bcf\u6b21\u542f\u52a8 bash \uff0c\u90fd\u4f1a\u5148\u6267\u884c ~/.bashrc \u3002 \u6bcf\u6b21 ssh \u767b\u9646\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u90fd\u4f1a\u542f\u52a8\u4e00\u4e2a bash \u547d\u4ee4\u884c\u7ed9\u6211\u4eec\u3002 \u6bcf\u6b21 tmux \u65b0\u5f00\u4e00\u4e2a pane \uff0c\u90fd\u4f1a\u542f\u52a8\u4e00\u4e2a bash \u547d\u4ee4\u884c\u7ed9\u6211\u4eec\u3002 \u6240\u4ee5\u672a\u6765\u6240\u6709\u65b0\u5f00\u7684\u73af\u5883\u90fd\u4f1a\u52a0\u8f7d\u6211\u4eec\u4fee\u6539\u7684\u5185\u5bb9\u3002","title":"\u4fee\u6539"},{"location":"linux/environment_variable/#_4","text":"HOME \uff1a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002 PATH \uff1a\u53ef\u6267\u884c\u6587\u4ef6\uff08\u547d\u4ee4\uff09\u7684\u5b58\u50a8\u8def\u5f84\u3002\u8def\u5f84\u4e0e\u8def\u5f84\u4e4b\u95f4\u7528:\u5206\u9694\u3002\u5f53\u67d0\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u540c\u65f6\u51fa\u73b0\u5728\u591a\u4e2a\u8def\u5f84\u4e2d\u65f6\uff0c\u4f1a\u9009\u62e9\u4ece\u5de6\u5230\u53f3\u6570\u7b2c\u4e00\u4e2a\u8def\u5f84\u4e2d\u7684\u6267\u884c\u3002 \u4e0b\u5217\u6240\u6709\u5b58\u50a8\u8def\u5f84\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5747\u91c7\u7528\u4ece\u5de6\u5230\u53f3\u7684\u4f18\u5148\u987a\u5e8f \u3002 LD_LIBRARY_PATH \uff1a\u7528\u4e8e\u6307\u5b9a\u52a8\u6001\u94fe\u63a5\u5e93( .so \u6587\u4ef6)\u7684\u8def\u5f84\uff0c\u5176\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 C_INCLUDE_PATH \uff1a C\u8bed\u8a00 \u7684\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 CPLUS_INCLUDE_PATH \uff1a CPP \u7684\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 PYTHONPATH \uff1a Python \u5bfc\u5165\u5305\u7684\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002 JAVA_HOME \uff1a jdk \u7684\u5b89\u88c5\u76ee\u5f55\u3002 CLASSPATH \uff1a\u5b58\u653e Java \u5bfc\u5165\u7c7b\u7684\u8def\u5f84\uff0c\u5185\u5bb9\u662f\u4ee5\u5192\u53f7\u5206\u9694\u7684\u8def\u5f84\u5217\u8868\u3002","title":"\u5e38\u89c1\u73af\u5883\u53d8\u91cf"},{"location":"linux/first_work/","text":"\u4ecb\u7ecd WSL WSL \u662f Windows Subsystem for Linux \u7684\u7f29\u5199\uff0c\u8bd1\u4e3a\u9002\u7528\u4e8e Linux \u7684 windows \u5b50\u7cfb\u7edf\u3002 WSL \u529f\u80fd\u63a8\u51fa\u4e4b\u524d\uff0c\u5728 Windows \u4e0a\u8fd0\u884c Linux \u9700\u8981\u5c06 Linux \u53d1\u884c\u7248\u5b89\u88c5\u5728\u865a\u62df\u673a\uff08\u6bd4\u5982 VMware\u3001VirtualBox\uff09\uff0c\u4f7f\u7528\u6b64\u65b9\u6cd5\u8fc7\u7a0b\u6bd4\u8f83\u7e41\u7410\uff0c\u5bb9\u6613\u51fa\u9519\uff0c\u800c\u4e14\u4f7f\u7528\u865a\u62df\u673a\u8fd0\u884c Linux \u4e2a\u4eba\u89c9\u5f97\u6bd4\u8f83\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u73b0\u5728\u4f7f\u7528 WSL \uff0c\u53ea\u9700\u8981\u5728\u5fae\u8f6f\u5546\u5e97\u5b89\u88c5\u76f8\u5e94\u7684 Linux \u53d1\u884c\u7248\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u73af\u5883\u4e2d\u4f53\u9a8c\u5230 Linux \u7684\u6240\u6709\u529f\u80fd\u3002 \u5f53\u7136\u5982\u679c\u4f60\u60f3\u4f53\u9a8c Linux \u53d1\u884c\u7248\u7684\u56fe\u5f62\u754c\u9762\uff0cWSL \u662f\u4e0d\u652f\u6301\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd8\u53ea\u6709\u4f7f\u7528\u865a\u62df\u673a\u6216\u8005\u5b89\u88c5 Linux \u5728\u672c\u5730\u78c1\u76d8\u4e24\u79cd\u65b9\u6cd5\u4e86\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5f00\u59cb\u914d\u7f6e Windows \u7ec8\u7aef & WSL \u5f00\u53d1\u73af\u5883\u3002 \u8bbe\u7f6e WSL \u5f00\u542f WSL \u6253\u5f00\u300c\u63a7\u5236\u9762\u677f\u300d>\u300c\u7a0b\u5e8f\u300d>\u300c\u542f\u7528\u6216\u5173\u95ed Windows \u529f\u80fd \u300d\uff0c\u7136\u540e\u5728\u300c\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf\u300d\u9009\u9879\u524d\u9762\u6253\u52fe\u3002 \u5c0f\u6280\u5de7\uff1a\u4f7f\u7528\u5feb\u6377\u952e Win+s \u6253\u5f00\u641c\u7d22\u529f\u80fd\uff0c\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u5173\u952e\u5b57 Windows \u529f\u80fd \uff0c\u53ef\u4ee5\u5feb\u901f\u6253\u5f00\u300c\u542f\u7528\u6216\u5173\u95ed Windows \u529f\u80fd\u300d\u3002 \u5b89\u88c5 Ubuntu \u5728 \u5fae\u8f6f\u5546\u5e97 \u53ef\u4ee5\u641c\u7d22\u5230\u5f88\u591a Linux \u53d1\u884c\u7248\uff0c\u6211\u63a8\u8350 Ubuntu \uff0c\u56e0\u4e3a\u5b83\u5bf9\u65b0\u624b\u4f1a\u6bd4\u8f83\u53cb\u597d\u4e00\u70b9\u3002\u5f53\u7136\u4f60\u53ef\u4ee5\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9 Debian\uff0ckail Linux \u6216\u8005 SUSE Linux \u7b49\u7b49 Linux \u53d1\u884c\u7248\u3002 \u521b\u5efa\u7528\u6237 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u7b2c\u4e00\u6b21\u542f\u52a8 Ubuntu \u4f1a\u8981\u6c42\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u548c\u767b\u5f55\u5bc6\u7801\uff0c\u5168\u90e8\u8bbe\u7f6e\u5b8c\u6210\u540e\u5373\u53ef\u8fd0\u884c\u3002 Windows Terminal Windows Terminal \u4ecb\u7ecd Windows \u7ec8\u7aef\u662f\u4e00\u4e2a\u9762\u5411\u547d\u4ee4\u884c\u5de5\u5177\u548c shell\uff08\u5982\u547d\u4ee4\u63d0\u793a\u7b26\u3001PowerShell \u548c\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf (WSL)\uff09\u7528\u6237\u7684\u65b0\u5f0f\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u3002 \u5b83\u7684\u4e3b\u8981\u529f\u80fd\u5305\u62ec\u591a\u4e2a\u9009\u9879\u5361\u3001\u7a97\u683c\u3001Unicode \u548c UTF-8 \u5b57\u7b26\u652f\u6301\u3001GPU \u52a0\u901f\u6587\u672c\u5448\u73b0\u5f15\u64ce\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u4e3b\u9898\u5e76\u81ea\u5b9a\u4e49\u6587\u672c\u3001\u989c\u8272\u3001\u80cc\u666f\u548c\u5feb\u6377\u952e\u7ed1\u5b9a\u3002 \u5b89\u88c5 Windows Terminal Windows Terminal \u8bbe\u7f6e Windows Terminal \u6253\u5f00Windows terminal\uff0c\u6253\u5f00\u8bbe\u7f6e\u83dc\u5355 \u9009\u62e9 Ubuntu 20.04 \u81f3\u6b64\uff0cWSL2\u5b89\u88c5\u57fa\u672c\u5b8c\u6210\u3002 \u5199\u5728\u7ed3\u5c3e Linux\u7684\u5b66\u4e60\u662f\u67af\u71e5\u4e14\u4e4f\u5473\u7684\u3002\u5e0c\u671b\u8bfb\u8005\u5728\u63a5\u4e0b\u53bb\u7684\u5b66\u4e60\u4e2d\u4fdd\u6301\u70ed\u60c5\uff0c\u591a\u591a\u5b9e\u8df5\u3002 Linux\u7684\u547d\u4ee4\u6709\u5f88\u591a\uff0c\u672c\u6559\u7a0b\u53ea\u662f\u5217\u51fa\u4e86\u5176\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u4e00\u70b9\u70b9\u3002\u5728\u4ee5\u540e\u7684\u5de5\u4f5c\u5b66\u4e60\u4e2d\uff0c\u5e0c\u671b\u8bfb\u8005\u80fd\u591f\u8fb9\u7528\u8fb9\u67e5\u3002 \u6700\u540e\uff0c\u7ec8\u751f\u5b66\u4e60\uff0c\u5171\u52c9\u3002","title":"WSL2\u7684\u5b89\u88c5\u548c\u4f7f\u7528"},{"location":"linux/first_work/#wsl","text":"WSL \u662f Windows Subsystem for Linux \u7684\u7f29\u5199\uff0c\u8bd1\u4e3a\u9002\u7528\u4e8e Linux \u7684 windows \u5b50\u7cfb\u7edf\u3002 WSL \u529f\u80fd\u63a8\u51fa\u4e4b\u524d\uff0c\u5728 Windows \u4e0a\u8fd0\u884c Linux \u9700\u8981\u5c06 Linux \u53d1\u884c\u7248\u5b89\u88c5\u5728\u865a\u62df\u673a\uff08\u6bd4\u5982 VMware\u3001VirtualBox\uff09\uff0c\u4f7f\u7528\u6b64\u65b9\u6cd5\u8fc7\u7a0b\u6bd4\u8f83\u7e41\u7410\uff0c\u5bb9\u6613\u51fa\u9519\uff0c\u800c\u4e14\u4f7f\u7528\u865a\u62df\u673a\u8fd0\u884c Linux \u4e2a\u4eba\u89c9\u5f97\u6bd4\u8f83\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u73b0\u5728\u4f7f\u7528 WSL \uff0c\u53ea\u9700\u8981\u5728\u5fae\u8f6f\u5546\u5e97\u5b89\u88c5\u76f8\u5e94\u7684 Linux \u53d1\u884c\u7248\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u73af\u5883\u4e2d\u4f53\u9a8c\u5230 Linux \u7684\u6240\u6709\u529f\u80fd\u3002 \u5f53\u7136\u5982\u679c\u4f60\u60f3\u4f53\u9a8c Linux \u53d1\u884c\u7248\u7684\u56fe\u5f62\u754c\u9762\uff0cWSL \u662f\u4e0d\u652f\u6301\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd8\u53ea\u6709\u4f7f\u7528\u865a\u62df\u673a\u6216\u8005\u5b89\u88c5 Linux \u5728\u672c\u5730\u78c1\u76d8\u4e24\u79cd\u65b9\u6cd5\u4e86\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5f00\u59cb\u914d\u7f6e Windows \u7ec8\u7aef & WSL \u5f00\u53d1\u73af\u5883\u3002","title":"\u4ecb\u7ecd WSL"},{"location":"linux/first_work/#wsl_1","text":"","title":"\u8bbe\u7f6e WSL"},{"location":"linux/first_work/#wsl_2","text":"\u6253\u5f00\u300c\u63a7\u5236\u9762\u677f\u300d>\u300c\u7a0b\u5e8f\u300d>\u300c\u542f\u7528\u6216\u5173\u95ed Windows \u529f\u80fd \u300d\uff0c\u7136\u540e\u5728\u300c\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf\u300d\u9009\u9879\u524d\u9762\u6253\u52fe\u3002 \u5c0f\u6280\u5de7\uff1a\u4f7f\u7528\u5feb\u6377\u952e Win+s \u6253\u5f00\u641c\u7d22\u529f\u80fd\uff0c\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u5173\u952e\u5b57 Windows \u529f\u80fd \uff0c\u53ef\u4ee5\u5feb\u901f\u6253\u5f00\u300c\u542f\u7528\u6216\u5173\u95ed Windows \u529f\u80fd\u300d\u3002","title":"\u5f00\u542f WSL"},{"location":"linux/first_work/#ubuntu","text":"\u5728 \u5fae\u8f6f\u5546\u5e97 \u53ef\u4ee5\u641c\u7d22\u5230\u5f88\u591a Linux \u53d1\u884c\u7248\uff0c\u6211\u63a8\u8350 Ubuntu \uff0c\u56e0\u4e3a\u5b83\u5bf9\u65b0\u624b\u4f1a\u6bd4\u8f83\u53cb\u597d\u4e00\u70b9\u3002\u5f53\u7136\u4f60\u53ef\u4ee5\u6839\u636e\u4e2a\u4eba\u559c\u597d\u9009\u62e9 Debian\uff0ckail Linux \u6216\u8005 SUSE Linux \u7b49\u7b49 Linux \u53d1\u884c\u7248\u3002","title":"\u5b89\u88c5 Ubuntu"},{"location":"linux/first_work/#_1","text":"\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u7b2c\u4e00\u6b21\u542f\u52a8 Ubuntu \u4f1a\u8981\u6c42\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u548c\u767b\u5f55\u5bc6\u7801\uff0c\u5168\u90e8\u8bbe\u7f6e\u5b8c\u6210\u540e\u5373\u53ef\u8fd0\u884c\u3002","title":"\u521b\u5efa\u7528\u6237"},{"location":"linux/first_work/#windows-terminal","text":"","title":"Windows Terminal"},{"location":"linux/first_work/#windows-terminal_1","text":"Windows \u7ec8\u7aef\u662f\u4e00\u4e2a\u9762\u5411\u547d\u4ee4\u884c\u5de5\u5177\u548c shell\uff08\u5982\u547d\u4ee4\u63d0\u793a\u7b26\u3001PowerShell \u548c\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf (WSL)\uff09\u7528\u6237\u7684\u65b0\u5f0f\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f\u3002 \u5b83\u7684\u4e3b\u8981\u529f\u80fd\u5305\u62ec\u591a\u4e2a\u9009\u9879\u5361\u3001\u7a97\u683c\u3001Unicode \u548c UTF-8 \u5b57\u7b26\u652f\u6301\u3001GPU \u52a0\u901f\u6587\u672c\u5448\u73b0\u5f15\u64ce\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u4e3b\u9898\u5e76\u81ea\u5b9a\u4e49\u6587\u672c\u3001\u989c\u8272\u3001\u80cc\u666f\u548c\u5feb\u6377\u952e\u7ed1\u5b9a\u3002","title":"Windows Terminal \u4ecb\u7ecd"},{"location":"linux/first_work/#windows-terminal_2","text":"Windows Terminal","title":"\u5b89\u88c5 Windows Terminal"},{"location":"linux/first_work/#windows-terminal_3","text":"\u6253\u5f00Windows terminal\uff0c\u6253\u5f00\u8bbe\u7f6e\u83dc\u5355 \u9009\u62e9 Ubuntu 20.04 \u81f3\u6b64\uff0cWSL2\u5b89\u88c5\u57fa\u672c\u5b8c\u6210\u3002","title":"\u8bbe\u7f6e Windows Terminal"},{"location":"linux/first_work/#_2","text":"Linux\u7684\u5b66\u4e60\u662f\u67af\u71e5\u4e14\u4e4f\u5473\u7684\u3002\u5e0c\u671b\u8bfb\u8005\u5728\u63a5\u4e0b\u53bb\u7684\u5b66\u4e60\u4e2d\u4fdd\u6301\u70ed\u60c5\uff0c\u591a\u591a\u5b9e\u8df5\u3002 Linux\u7684\u547d\u4ee4\u6709\u5f88\u591a\uff0c\u672c\u6559\u7a0b\u53ea\u662f\u5217\u51fa\u4e86\u5176\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u4e00\u70b9\u70b9\u3002\u5728\u4ee5\u540e\u7684\u5de5\u4f5c\u5b66\u4e60\u4e2d\uff0c\u5e0c\u671b\u8bfb\u8005\u80fd\u591f\u8fb9\u7528\u8fb9\u67e5\u3002 \u6700\u540e\uff0c\u7ec8\u751f\u5b66\u4e60\uff0c\u5171\u52c9\u3002","title":"\u5199\u5728\u7ed3\u5c3e"},{"location":"linux/git/","text":"git\u6559\u7a0b \u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff1a GitHub 1. git\u57fa\u672c\u6982\u5ff5 \u5de5\u4f5c\u533a\uff1a\u4ed3\u5e93\u7684\u76ee\u5f55\u3002\u5de5\u4f5c\u533a\u662f\u72ec\u7acb\u4e8e\u5404\u4e2a\u5206\u652f\u7684\u3002 \u6682\u5b58\u533a\uff1a\u6570\u636e\u6682\u65f6\u5b58\u653e\u7684\u533a\u57df\uff0c\u7c7b\u4f3c\u4e8e\u5de5\u4f5c\u533a\u5199\u5165\u7248\u672c\u5e93\u524d\u7684\u7f13\u5b58\u533a\u3002\u6682\u5b58\u533a\u662f\u72ec\u7acb\u4e8e\u5404\u4e2a\u5206\u652f\u7684\u3002 \u7248\u672c\u5e93\uff1a\u5b58\u653e\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\u7684\u4ee3\u7801\u7248\u672c \u7248\u672c\u7ed3\u6784\uff1a\u6811\u7ed3\u6784\uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u4ee3\u7801\u7248\u672c\u3002 2. git\u6700\u91cd\u8981\u6700\u5e38\u7528\u7684\u56db\u5927\u547d\u4ee4 git status : \u67e5\u770b\u4ed3\u5e93\u72b6\u6001 git add . : \u5c06\u6240\u6709\u5f85\u52a0\u5165\u6682\u5b58\u533a\u7684\u6587\u4ef6\u52a0\u5165\u6682\u5b58\u533a git commit -m \"\u8f93\u5165\u63d0\u793a\u81ea\u5df1\u7684\u4fe1\u606f\" : \u5c06\u6682\u5b58\u533a\u7684\u5185\u5bb9\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f git push : \u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 3. git\u547d\u4ee4\u53c2\u8003 git config --global user.name xxx \uff1a\u8bbe\u7f6e\u5168\u5c40\u7528\u6237\u540d\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728 ~/.gitconfig \u6587\u4ef6\u4e2d git config --global user.email xxx@xxx.com \uff1a\u8bbe\u7f6e\u5168\u5c40\u90ae\u7bb1\u5730\u5740\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728 ~/.gitconfig \u6587\u4ef6\u4e2d git init \uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u914d\u7f6e\u6210 git \u4ed3\u5e93\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728\u9690\u85cf\u7684 .git \u6587\u4ef6\u5939\u4e2d git add XX \uff1a\u5c06 XX \u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a git add . \uff1a\u5c06\u6240\u6709\u5f85\u52a0\u5165\u6682\u5b58\u533a\u7684\u6587\u4ef6\u52a0\u5165\u6682\u5b58\u533a git rm --cached XX \uff1a\u5c06\u6587\u4ef6\u4ece\u4ed3\u5e93\u7d22\u5f15\u76ee\u5f55\u4e2d\u5220\u6389 git commit -m \"\u7ed9\u81ea\u5df1\u770b\u7684\u5907\u6ce8\u4fe1\u606f\" \uff1a\u5c06\u6682\u5b58\u533a\u7684\u5185\u5bb9\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f git status \uff1a\u67e5\u770b\u4ed3\u5e93\u72b6\u6001 git diff XX \uff1a\u67e5\u770b XX \u6587\u4ef6\u76f8\u5bf9\u4e8e\u6682\u5b58\u533a\u4fee\u6539\u4e86\u54ea\u4e9b\u5185\u5bb9 git log \uff1a\u67e5\u770b\u5f53\u524d\u5206\u652f\u7684\u6240\u6709\u7248\u672c git reflog \uff1a\u67e5\u770b HEAD \u6307\u9488\u7684\u79fb\u52a8\u5386\u53f2\uff08\u5305\u62ec\u88ab\u56de\u6eda\u7684\u7248\u672c\uff09 git reset --hard HEAD^ \u6216 git reset --hard HEAD~ \uff1a\u5c06\u4ee3\u7801\u5e93\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u7248\u672c git reset --hard HEAD^^ \uff1a\u5f80\u4e0a\u56de\u6eda\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8 git reset --hard HEAD~100 \uff1a\u5f80\u4e0a\u56de\u6eda100\u4e2a\u7248\u672c git reset --hard \u7248\u672c\u53f7 \uff1a\u56de\u6eda\u5230\u67d0\u4e00\u7279\u5b9a\u7248\u672c git checkout \u2014 XX \u6216 git restore XX \uff1a\u5c06 XX \u6587\u4ef6\u5c1a\u672a\u52a0\u5165\u6682\u5b58\u533a\u7684\u4fee\u6539\u5168\u90e8\u64a4\u9500 git remote add origin git@github.com:xxx/XXX.git \uff1a\u5c06\u672c\u5730\u4ed3\u5e93\u5173\u8054\u5230\u8fdc\u7a0b\u4ed3\u5e93 git push -u (\u7b2c\u4e00\u6b21\u9700\u8981-u\u4ee5\u540e\u4e0d\u9700\u8981) \uff1a\u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 git push origin branch_name \uff1a\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 git clone git@github.com:xxx/XXX.git \uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93 XXX \u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\u4e0b git checkout -b branch_name \uff1a\u521b\u5efa\u5e76\u5207\u6362\u5230 branch_name \u8fd9\u4e2a\u5206\u652f git branch \uff1a\u67e5\u770b\u6240\u6709\u5206\u652f\u548c\u5f53\u524d\u6240\u5904\u5206\u652f git checkout branch_name \uff1a\u5207\u6362\u5230 branch_name \u8fd9\u4e2a\u5206\u652f git merge branch_name \uff1a\u5c06\u5206\u652f branch_name \u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u4e0a git branch -d branch_name \uff1a\u5220\u9664\u672c\u5730\u4ed3\u5e93\u7684 branch_name \u5206\u652f git branch branch_name \uff1a\u521b\u5efa\u65b0\u5206\u652f git push --set-upstream origin branch_name \uff1a\u8bbe\u7f6e\u672c\u5730\u7684 branch_name \u5206\u652f\u5bf9\u5e94\u8fdc\u7a0b\u4ed3\u5e93\u7684 branch_name \u5206\u652f git push -d origin branch_name \uff1a\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u7684 branch_name \u5206\u652f git pull \uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u4e0e\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u5408\u5e76 git pull origin branch_name \uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 branch_name \u5206\u652f\u4e0e\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u5408\u5e76 git branch --set-upstream-to=origin/branch_name1 branch_name2 \uff1a\u5c06\u8fdc\u7a0b\u7684 branch_name1 \u5206\u652f\u4e0e\u672c\u5730\u7684 branch_name2 \u5206\u652f\u5bf9\u5e94 git checkout -t origin/branch_name \uff1a\u5c06\u8fdc\u7a0b\u7684 branch_name \u5206\u652f\u62c9\u53d6\u5230\u672c\u5730 git stash \uff1a\u5c06\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e2d\u5c1a\u672a\u63d0\u4ea4\u7684\u4fee\u6539\u5b58\u5165\u6808\u4e2d git stash apply \uff1a\u5c06\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\u6062\u590d\u5230\u5f53\u524d\u5206\u652f\uff0c\u4f46\u4e0d\u5220\u9664\u6808\u9876\u5143\u7d20 git stash drop \uff1a\u5220\u9664\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539 git stash pop \uff1a\u5c06\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\u6062\u590d\u5230\u5f53\u524d\u5206\u652f\uff0c\u540c\u65f6\u5220\u9664\u6808\u9876\u5143\u7d20 git stash list \uff1a\u67e5\u770b\u6808\u4e2d\u6240\u6709\u5143\u7d20","title":"git"},{"location":"linux/git/#git","text":"\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff1a GitHub","title":"git\u6559\u7a0b"},{"location":"linux/git/#1-git","text":"\u5de5\u4f5c\u533a\uff1a\u4ed3\u5e93\u7684\u76ee\u5f55\u3002\u5de5\u4f5c\u533a\u662f\u72ec\u7acb\u4e8e\u5404\u4e2a\u5206\u652f\u7684\u3002 \u6682\u5b58\u533a\uff1a\u6570\u636e\u6682\u65f6\u5b58\u653e\u7684\u533a\u57df\uff0c\u7c7b\u4f3c\u4e8e\u5de5\u4f5c\u533a\u5199\u5165\u7248\u672c\u5e93\u524d\u7684\u7f13\u5b58\u533a\u3002\u6682\u5b58\u533a\u662f\u72ec\u7acb\u4e8e\u5404\u4e2a\u5206\u652f\u7684\u3002 \u7248\u672c\u5e93\uff1a\u5b58\u653e\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\u7684\u4ee3\u7801\u7248\u672c \u7248\u672c\u7ed3\u6784\uff1a\u6811\u7ed3\u6784\uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u4ee3\u7801\u7248\u672c\u3002","title":"1. git\u57fa\u672c\u6982\u5ff5"},{"location":"linux/git/#2-git","text":"git status : \u67e5\u770b\u4ed3\u5e93\u72b6\u6001 git add . : \u5c06\u6240\u6709\u5f85\u52a0\u5165\u6682\u5b58\u533a\u7684\u6587\u4ef6\u52a0\u5165\u6682\u5b58\u533a git commit -m \"\u8f93\u5165\u63d0\u793a\u81ea\u5df1\u7684\u4fe1\u606f\" : \u5c06\u6682\u5b58\u533a\u7684\u5185\u5bb9\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f git push : \u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93","title":"2. git\u6700\u91cd\u8981\u6700\u5e38\u7528\u7684\u56db\u5927\u547d\u4ee4"},{"location":"linux/git/#3-git","text":"git config --global user.name xxx \uff1a\u8bbe\u7f6e\u5168\u5c40\u7528\u6237\u540d\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728 ~/.gitconfig \u6587\u4ef6\u4e2d git config --global user.email xxx@xxx.com \uff1a\u8bbe\u7f6e\u5168\u5c40\u90ae\u7bb1\u5730\u5740\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728 ~/.gitconfig \u6587\u4ef6\u4e2d git init \uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u914d\u7f6e\u6210 git \u4ed3\u5e93\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728\u9690\u85cf\u7684 .git \u6587\u4ef6\u5939\u4e2d git add XX \uff1a\u5c06 XX \u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a git add . \uff1a\u5c06\u6240\u6709\u5f85\u52a0\u5165\u6682\u5b58\u533a\u7684\u6587\u4ef6\u52a0\u5165\u6682\u5b58\u533a git rm --cached XX \uff1a\u5c06\u6587\u4ef6\u4ece\u4ed3\u5e93\u7d22\u5f15\u76ee\u5f55\u4e2d\u5220\u6389 git commit -m \"\u7ed9\u81ea\u5df1\u770b\u7684\u5907\u6ce8\u4fe1\u606f\" \uff1a\u5c06\u6682\u5b58\u533a\u7684\u5185\u5bb9\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f git status \uff1a\u67e5\u770b\u4ed3\u5e93\u72b6\u6001 git diff XX \uff1a\u67e5\u770b XX \u6587\u4ef6\u76f8\u5bf9\u4e8e\u6682\u5b58\u533a\u4fee\u6539\u4e86\u54ea\u4e9b\u5185\u5bb9 git log \uff1a\u67e5\u770b\u5f53\u524d\u5206\u652f\u7684\u6240\u6709\u7248\u672c git reflog \uff1a\u67e5\u770b HEAD \u6307\u9488\u7684\u79fb\u52a8\u5386\u53f2\uff08\u5305\u62ec\u88ab\u56de\u6eda\u7684\u7248\u672c\uff09 git reset --hard HEAD^ \u6216 git reset --hard HEAD~ \uff1a\u5c06\u4ee3\u7801\u5e93\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u7248\u672c git reset --hard HEAD^^ \uff1a\u5f80\u4e0a\u56de\u6eda\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8 git reset --hard HEAD~100 \uff1a\u5f80\u4e0a\u56de\u6eda100\u4e2a\u7248\u672c git reset --hard \u7248\u672c\u53f7 \uff1a\u56de\u6eda\u5230\u67d0\u4e00\u7279\u5b9a\u7248\u672c git checkout \u2014 XX \u6216 git restore XX \uff1a\u5c06 XX \u6587\u4ef6\u5c1a\u672a\u52a0\u5165\u6682\u5b58\u533a\u7684\u4fee\u6539\u5168\u90e8\u64a4\u9500 git remote add origin git@github.com:xxx/XXX.git \uff1a\u5c06\u672c\u5730\u4ed3\u5e93\u5173\u8054\u5230\u8fdc\u7a0b\u4ed3\u5e93 git push -u (\u7b2c\u4e00\u6b21\u9700\u8981-u\u4ee5\u540e\u4e0d\u9700\u8981) \uff1a\u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 git push origin branch_name \uff1a\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 git clone git@github.com:xxx/XXX.git \uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93 XXX \u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\u4e0b git checkout -b branch_name \uff1a\u521b\u5efa\u5e76\u5207\u6362\u5230 branch_name \u8fd9\u4e2a\u5206\u652f git branch \uff1a\u67e5\u770b\u6240\u6709\u5206\u652f\u548c\u5f53\u524d\u6240\u5904\u5206\u652f git checkout branch_name \uff1a\u5207\u6362\u5230 branch_name \u8fd9\u4e2a\u5206\u652f git merge branch_name \uff1a\u5c06\u5206\u652f branch_name \u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u4e0a git branch -d branch_name \uff1a\u5220\u9664\u672c\u5730\u4ed3\u5e93\u7684 branch_name \u5206\u652f git branch branch_name \uff1a\u521b\u5efa\u65b0\u5206\u652f git push --set-upstream origin branch_name \uff1a\u8bbe\u7f6e\u672c\u5730\u7684 branch_name \u5206\u652f\u5bf9\u5e94\u8fdc\u7a0b\u4ed3\u5e93\u7684 branch_name \u5206\u652f git push -d origin branch_name \uff1a\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u7684 branch_name \u5206\u652f git pull \uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u4e0e\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u5408\u5e76 git pull origin branch_name \uff1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 branch_name \u5206\u652f\u4e0e\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u5408\u5e76 git branch --set-upstream-to=origin/branch_name1 branch_name2 \uff1a\u5c06\u8fdc\u7a0b\u7684 branch_name1 \u5206\u652f\u4e0e\u672c\u5730\u7684 branch_name2 \u5206\u652f\u5bf9\u5e94 git checkout -t origin/branch_name \uff1a\u5c06\u8fdc\u7a0b\u7684 branch_name \u5206\u652f\u62c9\u53d6\u5230\u672c\u5730 git stash \uff1a\u5c06\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e2d\u5c1a\u672a\u63d0\u4ea4\u7684\u4fee\u6539\u5b58\u5165\u6808\u4e2d git stash apply \uff1a\u5c06\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\u6062\u590d\u5230\u5f53\u524d\u5206\u652f\uff0c\u4f46\u4e0d\u5220\u9664\u6808\u9876\u5143\u7d20 git stash drop \uff1a\u5220\u9664\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539 git stash pop \uff1a\u5c06\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\u6062\u590d\u5230\u5f53\u524d\u5206\u652f\uff0c\u540c\u65f6\u5220\u9664\u6808\u9876\u5143\u7d20 git stash list \uff1a\u67e5\u770b\u6808\u4e2d\u6240\u6709\u5143\u7d20","title":"3. git\u547d\u4ee4\u53c2\u8003"},{"location":"linux/tmux_and_vim/","text":"0.\u5199\u5728\u524d\u9762 \u914d\u7f6e tmux \u548c vim \uff1a \u4f7f\u7528\u5de5\u5177\u4e4b\u524d\uff0c\u6211\u4eec\u5f80\u5f80\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\uff0c\u4e3a\u7684\u662f\u66f4\u597d\u7684\u4f7f\u7528\u5de5\u5177\u3002 \u5355\u51fb \u4e0b\u8f7d\u914d\u7f6e\u6587\u4ef6 \u540e\uff0c\u5c06\u538b\u7f29\u5305\u5185\u6240\u6709\u6587\u4ef6\u89e3\u538b\u540e\uff0c\u653e\u5165Linux\u4e2d\u7684\u5bb6\u76ee\u5f55\u5185\uff0c\u5373 ~/ \u76ee\u5f55\u3002 1.tmux \u5b89\u88c5\uff1a \u82e5\u672a\u5b89\u88c5 tmux \uff0c\u5728Terminal\u5185\u8f93\u5165 sudo apt-get tmux \uff0c\u6839\u636e\u63d0\u793a\u64cd\u4f5c\uff0c\u5b89\u88c5\u5373\u53ef\u3002 \u529f\u80fd\u548c\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 (1) \u5206\u5c4f\u3002 (2) \u5141\u8bb8\u65ad\u5f00Terminal\u8fde\u63a5\u540e\uff0c\u7ee7\u7eed\u8fd0\u884c\u8fdb\u7a0b\u3002 \u4e00\u4e2atmux\u53ef\u4ee5\u5305\u542b\u591a\u4e2asession\uff0c\u4e00\u4e2asession\u53ef\u4ee5\u5305\u542b\u591a\u4e2awindow\uff0c\u4e00\u4e2awindow\u53ef\u4ee5\u5305\u542b\u591a\u4e2apane\u3002 \u5b9e\u4f8b\uff1a tmux: session 0: window 0: pane 0 pane 1 pane 2 ... window 1 window 2 ... session 1 session 2 ... \u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 (1) tmux\uff1a\u65b0\u5efa\u4e00\u4e2asession\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2awindow\uff0cwindow\u4e2d\u5305\u542b\u4e00\u4e2apane\uff0cpane\u91cc\u6253\u5f00\u4e86\u4e00\u4e2ashell\u5bf9\u8bdd\u6846\u3002 (2) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309%\uff1a\u5c06\u5f53\u524dpane\u5de6\u53f3\u5e73\u5206\u6210\u4e24\u4e2apane\u3002 (3) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309\"\uff08\u6ce8\u610f\u662f\u53cc\u5f15\u53f7\"\uff09\uff1a\u5c06\u5f53\u524dpane\u4e0a\u4e0b\u5e73\u5206\u6210\u4e24\u4e2apane\u3002 (4) Ctrl + d\uff1a\u5173\u95ed\u5f53\u524dpane\uff1b\u5982\u679c\u5f53\u524dwindow\u7684\u6240\u6709pane\u5747\u5df2\u5173\u95ed\uff0c\u5219\u81ea\u52a8\u5173\u95edwindow\uff1b\u5982\u679c\u5f53\u524dsession\u7684\u6240\u6709window\u5747\u5df2\u5173\u95ed\uff0c\u5219\u81ea\u52a8\u5173\u95edsession\u3002 (5) \u9f20\u6807\u70b9\u51fb\u53ef\u4ee5\u9009pane\u3002 (6) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309\u65b9\u5411\u952e\uff1a\u9009\u62e9\u76f8\u90bb\u7684pane\u3002 (7) \u9f20\u6807\u62d6\u52a8pane\u4e4b\u95f4\u7684\u5206\u5272\u7ebf\uff0c\u53ef\u4ee5\u8c03\u6574\u5206\u5272\u7ebf\u7684\u4f4d\u7f6e\u3002 (8) \u6309\u4f4fctrl + a\u7684\u540c\u65f6\u6309\u65b9\u5411\u952e\uff0c\u53ef\u4ee5\u8c03\u6574pane\u4e4b\u95f4\u5206\u5272\u7ebf\u7684\u4f4d\u7f6e\u3002 (9) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309z\uff1a\u5c06\u5f53\u524dpane\u5168\u5c4f/\u53d6\u6d88\u5168\u5c4f\u3002 (10) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309d\uff1a\u6302\u8d77\u5f53\u524dsession\u3002 (11) tmux a\uff1a\u6253\u5f00\u4e4b\u524d\u6302\u8d77\u7684session\u3002 (12) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309s\uff1a\u9009\u62e9\u5176\u5b83session\u3002 \u65b9\u5411\u952e \u2014\u2014 \u4e0a\uff1a\u9009\u62e9\u4e0a\u4e00\u9879 session/window/pane \u65b9\u5411\u952e \u2014\u2014 \u4e0b\uff1a\u9009\u62e9\u4e0b\u4e00\u9879 session/window/pane \u65b9\u5411\u952e \u2014\u2014 \u53f3\uff1a\u5c55\u5f00\u5f53\u524d\u9879 session/window \u65b9\u5411\u952e \u2014\u2014 \u5de6\uff1a\u95ed\u5408\u5f53\u524d\u9879 session/window (13) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309c\uff1a\u5728\u5f53\u524dsession\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684window\u3002 (14) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309w\uff1a\u9009\u62e9\u5176\u4ed6window\uff0c\u64cd\u4f5c\u65b9\u6cd5\u4e0e(12)\u5b8c\u5168\u76f8\u540c\u3002 (15) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309PageUp\uff1a\u7ffb\u9605\u5f53\u524dpane\u5185\u7684\u5185\u5bb9\u3002 (16) \u9f20\u6807\u6eda\u8f6e\uff1a\u7ffb\u9605\u5f53\u524dpane\u5185\u7684\u5185\u5bb9\u3002 (17) \u5728tmux\u4e2d\u9009\u4e2d\u6587\u672c\u65f6\uff0c\u9700\u8981\u6309\u4f4fshift\u952e\u3002\uff08\u4ec5\u652f\u6301Windows\u548cLinux\uff0c\u4e0d\u652f\u6301Mac\uff0c\u4e0d\u8fc7\u8be5\u64cd\u4f5c\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u6b64\u5f71\u54cd\u4e0d\u5927\uff09 (18) tmux\u4e2d\u590d\u5236/\u7c98\u8d34\u6587\u672c\u7684\u901a\u7528\u65b9\u5f0f\uff1a (1) \u6309\u4e0bCtrl + a\u540e\u677e\u5f00\u624b\u6307\uff0c\u7136\u540e\u6309[ (2) \u7528\u9f20\u6807\u9009\u4e2d\u6587\u672c\uff0c\u88ab\u9009\u4e2d\u7684\u6587\u672c\u4f1a\u88ab\u81ea\u52a8\u590d\u5236\u5230tmux\u7684\u526a\u8d34\u677f (3) \u6309\u4e0bCtrl + a\u540e\u677e\u5f00\u624b\u6307\uff0c\u7136\u540e\u6309]\uff0c\u4f1a\u5c06\u526a\u8d34\u677f\u4e2d\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5149\u6807\u5904 2.vim \u529f\u80fd\uff1a 1 2 3 4 5 (1) \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002 (2) \u6839\u636e\u6587\u4ef6\u6269\u5c55\u540d\u81ea\u52a8\u5224\u522b\u7f16\u7a0b\u8bed\u8a00\u3002\u652f\u6301\u4ee3\u7801\u7f29\u8fdb\u3001\u4ee3\u7801\u9ad8\u4eae\u7b49\u529f\u80fd\u3002 (3) \u4f7f\u7528\u65b9\u5f0f\uff1avim filename \u5982\u679c\u5df2\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u6253\u5f00\u5b83\u3002 \u5982\u679c\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u6253\u5f00\u4e2a\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff0c\u5e76\u547d\u540d\u4e3afilename \u6a21\u5f0f\uff1a 1 2 3 4 5 6 7 8 (1) \u4e00\u822c\u547d\u4ee4\u6a21\u5f0f \u9ed8\u8ba4\u6a21\u5f0f\u3002\u547d\u4ee4\u8f93\u5165\u65b9\u5f0f\uff1a\u7c7b\u4f3c\u4e8e\u6253\u6e38\u620f\u653e\u6280\u80fd\uff0c\u6309\u4e0d\u540c\u5b57\u7b26\uff0c\u5373\u53ef\u8fdb\u884c\u4e0d\u540c\u64cd\u4f5c\u3002\u53ef\u4ee5\u590d\u5236\u3001\u7c98\u8d34\u3001\u5220\u9664\u6587\u672c\u7b49\u3002 (2) \u7f16\u8f91\u6a21\u5f0f \u5728\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f\u91cc\u6309\u4e0bi\uff0c\u4f1a\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\u3002 \u6309\u4e0bESC\u4f1a\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u8fd4\u56de\u5230\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f\u3002 (3) \u547d\u4ee4\u884c\u6a21\u5f0f \u5728\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f\u91cc\u6309\u4e0b:/?\u4e09\u4e2a\u5b57\u6bcd\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u4f1a\u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\u3002\u547d\u4ee4\u884c\u5728\u6700\u4e0b\u9762\u3002 \u53ef\u4ee5\u67e5\u627e\u3001\u66ff\u6362\u3001\u4fdd\u5b58\u3001\u9000\u51fa\u3001\u914d\u7f6e\u7f16\u8f91\u5668\u7b49\u3002 \u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 (1) i\uff1a\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f (2) ESC\uff1a\u8fdb\u5165\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f (3) h \u6216 \u5de6\u7bad\u5934\u952e\uff1a\u5149\u6807\u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (4) j \u6216 \u5411\u4e0b\u7bad\u5934\uff1a\u5149\u6807\u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (5) k \u6216 \u5411\u4e0a\u7bad\u5934\uff1a\u5149\u6807\u5411\u4e0a\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (6) l \u6216 \u5411\u53f3\u7bad\u5934\uff1a\u5149\u6807\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (7) n<Space>\uff1an\u8868\u793a\u6570\u5b57\uff0c\u6309\u4e0b\u6570\u5b57\u540e\u518d\u6309\u7a7a\u683c\uff0c\u5149\u6807\u4f1a\u5411\u53f3\u79fb\u52a8\u8fd9\u4e00\u884c\u7684n\u4e2a\u5b57\u7b26 (8) 0 \u6216 \u529f\u80fd\u952e[Home]\uff1a\u5149\u6807\u79fb\u52a8\u5230\u672c\u884c\u5f00\u5934 (9) $ \u6216 \u529f\u80fd\u952e[End]\uff1a\u5149\u6807\u79fb\u52a8\u5230\u672c\u884c\u672b\u5c3e (10) G\uff1a\u5149\u6807\u79fb\u52a8\u5230\u6700\u540e\u4e00\u884c (11) :n \u6216 nG\uff1an\u4e3a\u6570\u5b57\uff0c\u5149\u6807\u79fb\u52a8\u5230\u7b2cn\u884c (12) gg\uff1a\u5149\u6807\u79fb\u52a8\u5230\u7b2c\u4e00\u884c\uff0c\u76f8\u5f53\u4e8e1G (13) n<Enter>\uff1an\u4e3a\u6570\u5b57\uff0c\u5149\u6807\u5411\u4e0b\u79fb\u52a8n\u884c (14) /word\uff1a\u5411\u5149\u6807\u4e4b\u4e0b\u5bfb\u627e\u7b2c\u4e00\u4e2a\u503c\u4e3aword\u7684\u5b57\u7b26\u4e32\u3002 (15) ?word\uff1a\u5411\u5149\u6807\u4e4b\u4e0a\u5bfb\u627e\u7b2c\u4e00\u4e2a\u503c\u4e3aword\u7684\u5b57\u7b26\u4e32\u3002 (16) n\uff1a\u91cd\u590d\u524d\u4e00\u4e2a\u67e5\u627e\u64cd\u4f5c (17) N\uff1a\u53cd\u5411\u91cd\u590d\u524d\u4e00\u4e2a\u67e5\u627e\u64cd\u4f5c (18) :n1,n2s/word1/word2/g\uff1an1\u4e0en2\u4e3a\u6570\u5b57\uff0c\u5728\u7b2cn1\u884c\u4e0en2\u884c\u4e4b\u95f4\u5bfb\u627eword1\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u4e32\u66ff\u6362\u4e3aword2 (19) :1,$s/word1/word2/g\uff1a\u5c06\u5168\u6587\u7684word1\u66ff\u6362\u4e3aword2 (20) :1,$s/word1/word2/gc\uff1a\u5c06\u5168\u6587\u7684word1\u66ff\u6362\u4e3aword2\uff0c\u4e14\u5728\u66ff\u6362\u524d\u8981\u6c42\u7528\u6237\u786e\u8ba4\u3002 (21) v\uff1a\u9009\u4e2d\u6587\u672c (22) d\uff1a\u5220\u9664\u9009\u4e2d\u7684\u6587\u672c (23) dd: \u5220\u9664\u5f53\u524d\u884c (24) y\uff1a\u590d\u5236\u9009\u4e2d\u7684\u6587\u672c (25) yy: \u590d\u5236\u5f53\u524d\u884c (26) p: \u5c06\u590d\u5236\u7684\u6570\u636e\u5728\u5149\u6807\u7684\u4e0b\u4e00\u884c/\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7c98\u8d34 (27) u\uff1a\u64a4\u9500 (28) Ctrl + r\uff1a\u53d6\u6d88\u64a4\u9500 (29) \u5927\u4e8e\u53f7 >\uff1a\u5c06\u9009\u4e2d\u7684\u6587\u672c\u6574\u4f53\u5411\u53f3\u7f29\u8fdb\u4e00\u6b21 (30) \u5c0f\u4e8e\u53f7 <\uff1a\u5c06\u9009\u4e2d\u7684\u6587\u672c\u6574\u4f53\u5411\u5de6\u7f29\u8fdb\u4e00\u6b21 (31) :w \u4fdd\u5b58 (32) :w! \u5f3a\u5236\u4fdd\u5b58 (33) :q \u9000\u51fa (34) :q! \u5f3a\u5236\u9000\u51fa (35) :wq \u4fdd\u5b58\u5e76\u9000\u51fa (36) :set paste \u8bbe\u7f6e\u6210\u7c98\u8d34\u6a21\u5f0f\uff0c\u53d6\u6d88\u4ee3\u7801\u81ea\u52a8\u7f29\u8fdb (37) :set nopaste \u53d6\u6d88\u7c98\u8d34\u6a21\u5f0f\uff0c\u5f00\u542f\u4ee3\u7801\u81ea\u52a8\u7f29\u8fdb (38) :set nu \u663e\u793a\u884c\u53f7 (39) :set nonu \u9690\u85cf\u884c\u53f7 (40) gg=G\uff1a\u5c06\u5168\u6587\u4ee3\u7801\u683c\u5f0f\u5316 (41) :noh \u5173\u95ed\u67e5\u627e\u5173\u952e\u8bcd\u9ad8\u4eae (42) Ctrl + q\uff1a\u5f53vim\u5361\u6b7b\u65f6\uff0c\u53ef\u4ee5\u53d6\u6d88\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u547d\u4ee4 \u5f02\u5e38\u5904\u7406\uff1a \u6bcf\u6b21\u7528vim\u7f16\u8f91\u6587\u4ef6\u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a.filename.swp\u7684\u4e34\u65f6\u6587\u4ef6\u3002 \u5982\u679c\u6253\u5f00\u67d0\u4e2a\u6587\u4ef6\u65f6\uff0c\u8be5\u6587\u4ef6\u7684swp\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u4f1a\u62a5\u9519\u3002\u6b64\u65f6\u89e3\u51b3\u529e\u6cd5\u6709\u4e24\u79cd\uff1a (1) \u627e\u5230\u6b63\u5728\u6253\u5f00\u8be5\u6587\u4ef6\u7684\u7a0b\u5e8f\uff0c\u5e76\u9000\u51fa (2) \u76f4\u63a5\u5220\u6389\u8be5swp\u6587\u4ef6\u5373\u53ef","title":"tmux\u548cvim"},{"location":"linux/tmux_and_vim/#0","text":"","title":"0.\u5199\u5728\u524d\u9762"},{"location":"linux/tmux_and_vim/#tmuxvim","text":"\u4f7f\u7528\u5de5\u5177\u4e4b\u524d\uff0c\u6211\u4eec\u5f80\u5f80\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\uff0c\u4e3a\u7684\u662f\u66f4\u597d\u7684\u4f7f\u7528\u5de5\u5177\u3002 \u5355\u51fb \u4e0b\u8f7d\u914d\u7f6e\u6587\u4ef6 \u540e\uff0c\u5c06\u538b\u7f29\u5305\u5185\u6240\u6709\u6587\u4ef6\u89e3\u538b\u540e\uff0c\u653e\u5165Linux\u4e2d\u7684\u5bb6\u76ee\u5f55\u5185\uff0c\u5373 ~/ \u76ee\u5f55\u3002","title":"\u914d\u7f6etmux\u548cvim\uff1a"},{"location":"linux/tmux_and_vim/#1tmux","text":"","title":"1.tmux"},{"location":"linux/tmux_and_vim/#_1","text":"\u82e5\u672a\u5b89\u88c5 tmux \uff0c\u5728Terminal\u5185\u8f93\u5165 sudo apt-get tmux \uff0c\u6839\u636e\u63d0\u793a\u64cd\u4f5c\uff0c\u5b89\u88c5\u5373\u53ef\u3002","title":"\u5b89\u88c5\uff1a"},{"location":"linux/tmux_and_vim/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 (1) \u5206\u5c4f\u3002 (2) \u5141\u8bb8\u65ad\u5f00Terminal\u8fde\u63a5\u540e\uff0c\u7ee7\u7eed\u8fd0\u884c\u8fdb\u7a0b\u3002 \u4e00\u4e2atmux\u53ef\u4ee5\u5305\u542b\u591a\u4e2asession\uff0c\u4e00\u4e2asession\u53ef\u4ee5\u5305\u542b\u591a\u4e2awindow\uff0c\u4e00\u4e2awindow\u53ef\u4ee5\u5305\u542b\u591a\u4e2apane\u3002 \u5b9e\u4f8b\uff1a tmux: session 0: window 0: pane 0 pane 1 pane 2 ... window 1 window 2 ... session 1 session 2 ...","title":"\u529f\u80fd\u548c\u7ed3\u6784\uff1a"},{"location":"linux/tmux_and_vim/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 (1) tmux\uff1a\u65b0\u5efa\u4e00\u4e2asession\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2awindow\uff0cwindow\u4e2d\u5305\u542b\u4e00\u4e2apane\uff0cpane\u91cc\u6253\u5f00\u4e86\u4e00\u4e2ashell\u5bf9\u8bdd\u6846\u3002 (2) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309%\uff1a\u5c06\u5f53\u524dpane\u5de6\u53f3\u5e73\u5206\u6210\u4e24\u4e2apane\u3002 (3) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309\"\uff08\u6ce8\u610f\u662f\u53cc\u5f15\u53f7\"\uff09\uff1a\u5c06\u5f53\u524dpane\u4e0a\u4e0b\u5e73\u5206\u6210\u4e24\u4e2apane\u3002 (4) Ctrl + d\uff1a\u5173\u95ed\u5f53\u524dpane\uff1b\u5982\u679c\u5f53\u524dwindow\u7684\u6240\u6709pane\u5747\u5df2\u5173\u95ed\uff0c\u5219\u81ea\u52a8\u5173\u95edwindow\uff1b\u5982\u679c\u5f53\u524dsession\u7684\u6240\u6709window\u5747\u5df2\u5173\u95ed\uff0c\u5219\u81ea\u52a8\u5173\u95edsession\u3002 (5) \u9f20\u6807\u70b9\u51fb\u53ef\u4ee5\u9009pane\u3002 (6) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309\u65b9\u5411\u952e\uff1a\u9009\u62e9\u76f8\u90bb\u7684pane\u3002 (7) \u9f20\u6807\u62d6\u52a8pane\u4e4b\u95f4\u7684\u5206\u5272\u7ebf\uff0c\u53ef\u4ee5\u8c03\u6574\u5206\u5272\u7ebf\u7684\u4f4d\u7f6e\u3002 (8) \u6309\u4f4fctrl + a\u7684\u540c\u65f6\u6309\u65b9\u5411\u952e\uff0c\u53ef\u4ee5\u8c03\u6574pane\u4e4b\u95f4\u5206\u5272\u7ebf\u7684\u4f4d\u7f6e\u3002 (9) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309z\uff1a\u5c06\u5f53\u524dpane\u5168\u5c4f/\u53d6\u6d88\u5168\u5c4f\u3002 (10) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309d\uff1a\u6302\u8d77\u5f53\u524dsession\u3002 (11) tmux a\uff1a\u6253\u5f00\u4e4b\u524d\u6302\u8d77\u7684session\u3002 (12) \u6309\u4e0bctrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309s\uff1a\u9009\u62e9\u5176\u5b83session\u3002 \u65b9\u5411\u952e \u2014\u2014 \u4e0a\uff1a\u9009\u62e9\u4e0a\u4e00\u9879 session/window/pane \u65b9\u5411\u952e \u2014\u2014 \u4e0b\uff1a\u9009\u62e9\u4e0b\u4e00\u9879 session/window/pane \u65b9\u5411\u952e \u2014\u2014 \u53f3\uff1a\u5c55\u5f00\u5f53\u524d\u9879 session/window \u65b9\u5411\u952e \u2014\u2014 \u5de6\uff1a\u95ed\u5408\u5f53\u524d\u9879 session/window (13) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309c\uff1a\u5728\u5f53\u524dsession\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684window\u3002 (14) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309w\uff1a\u9009\u62e9\u5176\u4ed6window\uff0c\u64cd\u4f5c\u65b9\u6cd5\u4e0e(12)\u5b8c\u5168\u76f8\u540c\u3002 (15) \u6309\u4e0bCtrl + a\u540e\u624b\u6307\u677e\u5f00\uff0c\u7136\u540e\u6309PageUp\uff1a\u7ffb\u9605\u5f53\u524dpane\u5185\u7684\u5185\u5bb9\u3002 (16) \u9f20\u6807\u6eda\u8f6e\uff1a\u7ffb\u9605\u5f53\u524dpane\u5185\u7684\u5185\u5bb9\u3002 (17) \u5728tmux\u4e2d\u9009\u4e2d\u6587\u672c\u65f6\uff0c\u9700\u8981\u6309\u4f4fshift\u952e\u3002\uff08\u4ec5\u652f\u6301Windows\u548cLinux\uff0c\u4e0d\u652f\u6301Mac\uff0c\u4e0d\u8fc7\u8be5\u64cd\u4f5c\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u6b64\u5f71\u54cd\u4e0d\u5927\uff09 (18) tmux\u4e2d\u590d\u5236/\u7c98\u8d34\u6587\u672c\u7684\u901a\u7528\u65b9\u5f0f\uff1a (1) \u6309\u4e0bCtrl + a\u540e\u677e\u5f00\u624b\u6307\uff0c\u7136\u540e\u6309[ (2) \u7528\u9f20\u6807\u9009\u4e2d\u6587\u672c\uff0c\u88ab\u9009\u4e2d\u7684\u6587\u672c\u4f1a\u88ab\u81ea\u52a8\u590d\u5236\u5230tmux\u7684\u526a\u8d34\u677f (3) \u6309\u4e0bCtrl + a\u540e\u677e\u5f00\u624b\u6307\uff0c\u7136\u540e\u6309]\uff0c\u4f1a\u5c06\u526a\u8d34\u677f\u4e2d\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5149\u6807\u5904","title":"\u64cd\u4f5c\uff1a"},{"location":"linux/tmux_and_vim/#2vim","text":"","title":"2.vim"},{"location":"linux/tmux_and_vim/#_4","text":"1 2 3 4 5 (1) \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002 (2) \u6839\u636e\u6587\u4ef6\u6269\u5c55\u540d\u81ea\u52a8\u5224\u522b\u7f16\u7a0b\u8bed\u8a00\u3002\u652f\u6301\u4ee3\u7801\u7f29\u8fdb\u3001\u4ee3\u7801\u9ad8\u4eae\u7b49\u529f\u80fd\u3002 (3) \u4f7f\u7528\u65b9\u5f0f\uff1avim filename \u5982\u679c\u5df2\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u6253\u5f00\u5b83\u3002 \u5982\u679c\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u6253\u5f00\u4e2a\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff0c\u5e76\u547d\u540d\u4e3afilename","title":"\u529f\u80fd\uff1a"},{"location":"linux/tmux_and_vim/#_5","text":"1 2 3 4 5 6 7 8 (1) \u4e00\u822c\u547d\u4ee4\u6a21\u5f0f \u9ed8\u8ba4\u6a21\u5f0f\u3002\u547d\u4ee4\u8f93\u5165\u65b9\u5f0f\uff1a\u7c7b\u4f3c\u4e8e\u6253\u6e38\u620f\u653e\u6280\u80fd\uff0c\u6309\u4e0d\u540c\u5b57\u7b26\uff0c\u5373\u53ef\u8fdb\u884c\u4e0d\u540c\u64cd\u4f5c\u3002\u53ef\u4ee5\u590d\u5236\u3001\u7c98\u8d34\u3001\u5220\u9664\u6587\u672c\u7b49\u3002 (2) \u7f16\u8f91\u6a21\u5f0f \u5728\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f\u91cc\u6309\u4e0bi\uff0c\u4f1a\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\u3002 \u6309\u4e0bESC\u4f1a\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u8fd4\u56de\u5230\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f\u3002 (3) \u547d\u4ee4\u884c\u6a21\u5f0f \u5728\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f\u91cc\u6309\u4e0b:/?\u4e09\u4e2a\u5b57\u6bcd\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u4f1a\u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\u3002\u547d\u4ee4\u884c\u5728\u6700\u4e0b\u9762\u3002 \u53ef\u4ee5\u67e5\u627e\u3001\u66ff\u6362\u3001\u4fdd\u5b58\u3001\u9000\u51fa\u3001\u914d\u7f6e\u7f16\u8f91\u5668\u7b49\u3002","title":"\u6a21\u5f0f\uff1a"},{"location":"linux/tmux_and_vim/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 (1) i\uff1a\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f (2) ESC\uff1a\u8fdb\u5165\u4e00\u822c\u547d\u4ee4\u6a21\u5f0f (3) h \u6216 \u5de6\u7bad\u5934\u952e\uff1a\u5149\u6807\u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (4) j \u6216 \u5411\u4e0b\u7bad\u5934\uff1a\u5149\u6807\u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (5) k \u6216 \u5411\u4e0a\u7bad\u5934\uff1a\u5149\u6807\u5411\u4e0a\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (6) l \u6216 \u5411\u53f3\u7bad\u5934\uff1a\u5149\u6807\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 (7) n<Space>\uff1an\u8868\u793a\u6570\u5b57\uff0c\u6309\u4e0b\u6570\u5b57\u540e\u518d\u6309\u7a7a\u683c\uff0c\u5149\u6807\u4f1a\u5411\u53f3\u79fb\u52a8\u8fd9\u4e00\u884c\u7684n\u4e2a\u5b57\u7b26 (8) 0 \u6216 \u529f\u80fd\u952e[Home]\uff1a\u5149\u6807\u79fb\u52a8\u5230\u672c\u884c\u5f00\u5934 (9) $ \u6216 \u529f\u80fd\u952e[End]\uff1a\u5149\u6807\u79fb\u52a8\u5230\u672c\u884c\u672b\u5c3e (10) G\uff1a\u5149\u6807\u79fb\u52a8\u5230\u6700\u540e\u4e00\u884c (11) :n \u6216 nG\uff1an\u4e3a\u6570\u5b57\uff0c\u5149\u6807\u79fb\u52a8\u5230\u7b2cn\u884c (12) gg\uff1a\u5149\u6807\u79fb\u52a8\u5230\u7b2c\u4e00\u884c\uff0c\u76f8\u5f53\u4e8e1G (13) n<Enter>\uff1an\u4e3a\u6570\u5b57\uff0c\u5149\u6807\u5411\u4e0b\u79fb\u52a8n\u884c (14) /word\uff1a\u5411\u5149\u6807\u4e4b\u4e0b\u5bfb\u627e\u7b2c\u4e00\u4e2a\u503c\u4e3aword\u7684\u5b57\u7b26\u4e32\u3002 (15) ?word\uff1a\u5411\u5149\u6807\u4e4b\u4e0a\u5bfb\u627e\u7b2c\u4e00\u4e2a\u503c\u4e3aword\u7684\u5b57\u7b26\u4e32\u3002 (16) n\uff1a\u91cd\u590d\u524d\u4e00\u4e2a\u67e5\u627e\u64cd\u4f5c (17) N\uff1a\u53cd\u5411\u91cd\u590d\u524d\u4e00\u4e2a\u67e5\u627e\u64cd\u4f5c (18) :n1,n2s/word1/word2/g\uff1an1\u4e0en2\u4e3a\u6570\u5b57\uff0c\u5728\u7b2cn1\u884c\u4e0en2\u884c\u4e4b\u95f4\u5bfb\u627eword1\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u4e32\u66ff\u6362\u4e3aword2 (19) :1,$s/word1/word2/g\uff1a\u5c06\u5168\u6587\u7684word1\u66ff\u6362\u4e3aword2 (20) :1,$s/word1/word2/gc\uff1a\u5c06\u5168\u6587\u7684word1\u66ff\u6362\u4e3aword2\uff0c\u4e14\u5728\u66ff\u6362\u524d\u8981\u6c42\u7528\u6237\u786e\u8ba4\u3002 (21) v\uff1a\u9009\u4e2d\u6587\u672c (22) d\uff1a\u5220\u9664\u9009\u4e2d\u7684\u6587\u672c (23) dd: \u5220\u9664\u5f53\u524d\u884c (24) y\uff1a\u590d\u5236\u9009\u4e2d\u7684\u6587\u672c (25) yy: \u590d\u5236\u5f53\u524d\u884c (26) p: \u5c06\u590d\u5236\u7684\u6570\u636e\u5728\u5149\u6807\u7684\u4e0b\u4e00\u884c/\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7c98\u8d34 (27) u\uff1a\u64a4\u9500 (28) Ctrl + r\uff1a\u53d6\u6d88\u64a4\u9500 (29) \u5927\u4e8e\u53f7 >\uff1a\u5c06\u9009\u4e2d\u7684\u6587\u672c\u6574\u4f53\u5411\u53f3\u7f29\u8fdb\u4e00\u6b21 (30) \u5c0f\u4e8e\u53f7 <\uff1a\u5c06\u9009\u4e2d\u7684\u6587\u672c\u6574\u4f53\u5411\u5de6\u7f29\u8fdb\u4e00\u6b21 (31) :w \u4fdd\u5b58 (32) :w! \u5f3a\u5236\u4fdd\u5b58 (33) :q \u9000\u51fa (34) :q! \u5f3a\u5236\u9000\u51fa (35) :wq \u4fdd\u5b58\u5e76\u9000\u51fa (36) :set paste \u8bbe\u7f6e\u6210\u7c98\u8d34\u6a21\u5f0f\uff0c\u53d6\u6d88\u4ee3\u7801\u81ea\u52a8\u7f29\u8fdb (37) :set nopaste \u53d6\u6d88\u7c98\u8d34\u6a21\u5f0f\uff0c\u5f00\u542f\u4ee3\u7801\u81ea\u52a8\u7f29\u8fdb (38) :set nu \u663e\u793a\u884c\u53f7 (39) :set nonu \u9690\u85cf\u884c\u53f7 (40) gg=G\uff1a\u5c06\u5168\u6587\u4ee3\u7801\u683c\u5f0f\u5316 (41) :noh \u5173\u95ed\u67e5\u627e\u5173\u952e\u8bcd\u9ad8\u4eae (42) Ctrl + q\uff1a\u5f53vim\u5361\u6b7b\u65f6\uff0c\u53ef\u4ee5\u53d6\u6d88\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u547d\u4ee4 \u5f02\u5e38\u5904\u7406\uff1a \u6bcf\u6b21\u7528vim\u7f16\u8f91\u6587\u4ef6\u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a.filename.swp\u7684\u4e34\u65f6\u6587\u4ef6\u3002 \u5982\u679c\u6253\u5f00\u67d0\u4e2a\u6587\u4ef6\u65f6\uff0c\u8be5\u6587\u4ef6\u7684swp\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u4f1a\u62a5\u9519\u3002\u6b64\u65f6\u89e3\u51b3\u529e\u6cd5\u6709\u4e24\u79cd\uff1a (1) \u627e\u5230\u6b63\u5728\u6253\u5f00\u8be5\u6587\u4ef6\u7684\u7a0b\u5e8f\uff0c\u5e76\u9000\u51fa (2) \u76f4\u63a5\u5220\u6389\u8be5swp\u6587\u4ef6\u5373\u53ef","title":"\u64cd\u4f5c\uff1a"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/","text":"echo \u7528\u4e8e\u8f93\u51fa\u5b57\u7b26\u4e32\u3002\u547d\u4ee4\u683c\u5f0f\uff1a 1 echo STRING \u663e\u793a\u666e\u901a\u5b57\u7b26\u4e32 1 2 echo \"Hello PJM Wiki\" echo Hello PJM Wiki # \u5f15\u53f7\u53ef\u4ee5\u7701\u7565 \u663e\u793a\u8f6c\u4e49\u5b57\u7b26 1 2 echo \"\\\"Hello PJM Wiki\\\"\" # \u6ce8\u610f\u53ea\u80fd\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5982\u679c\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u5219\u4e0d\u8f6c\u4e49 echo \\\" Hello PJM Wiki \\\" # \u4e5f\u53ef\u4ee5\u7701\u7565\u53cc\u5f15\u53f7 \u663e\u793a\u53d8\u91cf 1 2 name = pjm echo \"My name is $name \" # \u8f93\u51fa My name is pjm \u663e\u793a\u6362\u884c 1 2 echo -e \"Hi\\n\" # -e \u5f00\u542f\u8f6c\u4e49 echo \"PJM Wiki\" \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 Hi PJM Wiki \u663e\u793a\u4e0d\u6362\u884c 1 2 echo -e \"Hi \\c\" # -e \u5f00\u542f\u8f6c\u4e49 \\c \u4e0d\u6362\u884c echo \"PJM Wiki\" \u8f93\u51fa\u7ed3\u679c\uff1a 1 Hi PJM Wiki \u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6 1 echo \"Hello World\" > output.txt # \u5c06\u5185\u5bb9\u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\u8f93\u51fa\u5230output.txt\u4e2d \u539f\u6837\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u4e0d\u8fdb\u884c\u8f6c\u4e49\u6216\u53d6\u53d8\u91cf(\u7528\u5355\u5f15\u53f7) 1 2 name = PJM Wiki echo '$name\\\"' \u8f93\u51fa\u7ed3\u679c 1 $name\\\" \u663e\u793a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c 1 echo ` date ` \u8f93\u51fa\u7ed3\u679c\uff1a 1 Wed Mar 23 13:24:22 CST 2022","title":"echo\u547d\u4ee4"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_1","text":"1 2 echo \"Hello PJM Wiki\" echo Hello PJM Wiki # \u5f15\u53f7\u53ef\u4ee5\u7701\u7565","title":"\u663e\u793a\u666e\u901a\u5b57\u7b26\u4e32"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_2","text":"1 2 echo \"\\\"Hello PJM Wiki\\\"\" # \u6ce8\u610f\u53ea\u80fd\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5982\u679c\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u5219\u4e0d\u8f6c\u4e49 echo \\\" Hello PJM Wiki \\\" # \u4e5f\u53ef\u4ee5\u7701\u7565\u53cc\u5f15\u53f7","title":"\u663e\u793a\u8f6c\u4e49\u5b57\u7b26"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_3","text":"1 2 name = pjm echo \"My name is $name \" # \u8f93\u51fa My name is pjm","title":"\u663e\u793a\u53d8\u91cf"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_4","text":"1 2 echo -e \"Hi\\n\" # -e \u5f00\u542f\u8f6c\u4e49 echo \"PJM Wiki\" \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 Hi PJM Wiki","title":"\u663e\u793a\u6362\u884c"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_5","text":"1 2 echo -e \"Hi \\c\" # -e \u5f00\u542f\u8f6c\u4e49 \\c \u4e0d\u6362\u884c echo \"PJM Wiki\" \u8f93\u51fa\u7ed3\u679c\uff1a 1 Hi PJM Wiki","title":"\u663e\u793a\u4e0d\u6362\u884c"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_6","text":"1 echo \"Hello World\" > output.txt # \u5c06\u5185\u5bb9\u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\u8f93\u51fa\u5230output.txt\u4e2d","title":"\u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_7","text":"1 2 name = PJM Wiki echo '$name\\\"' \u8f93\u51fa\u7ed3\u679c 1 $name\\\"","title":"\u539f\u6837\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u4e0d\u8fdb\u884c\u8f6c\u4e49\u6216\u53d6\u53d8\u91cf(\u7528\u5355\u5f15\u53f7)"},{"location":"linux/shell/echo%E5%91%BD%E4%BB%A4/#_8","text":"1 echo ` date ` \u8f93\u51fa\u7ed3\u679c\uff1a 1 Wed Mar 23 13:24:22 CST 2022","title":"\u663e\u793a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c"},{"location":"linux/shell/exit%E5%91%BD%E4%BB%A4/","text":"exit \u547d\u4ee4\u7528\u6765\u9000\u51fa\u5f53\u524d shell \u8fdb\u7a0b\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u9000\u51fa\u72b6\u6001\uff1b\u4f7f\u7528 $? \u53ef\u4ee5\u63a5\u6536\u8fd9\u4e2a\u9000\u51fa\u72b6\u6001\u3002 exit \u547d\u4ee4\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u6574\u6570\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee3\u8868\u9000\u51fa\u72b6\u6001\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u72b6\u6001\u503c\u662f 0\u3002 exit \u9000\u51fa\u72b6\u6001\u53ea\u80fd\u662f\u4e00\u4e2a\u4ecb\u4e8e 0~255 \u4e4b\u95f4\u7684\u6574\u6570\uff0c\u5176\u4e2d\u53ea\u6709 0 \u8868\u793a\u6210\u529f\uff0c\u5176\u5b83\u503c\u90fd\u8868\u793a\u5931\u8d25\u3002 \u793a\u4f8b\uff1a \u521b\u5efa\u811a\u672c test.sh \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 #! /bin/bash if [ $# -ne 1 ] # \u5982\u679c\u4f20\u5165\u53c2\u6570\u4e2a\u6570\u7b49\u4e8e1\uff0c\u5219\u6b63\u5e38\u9000\u51fa\uff1b\u5426\u5219\u975e\u6b63\u5e38\u9000\u51fa\u3002 then echo \"arguments not valid\" exit 1 else echo \"arguments valid\" exit 0 fi \u6267\u884c\u8be5\u811a\u672c\uff1a 1 2 3 4 5 6 7 8 9 root@ubuntu:~$ chmod +x test.sh root@ubuntu:~$ ./test.sh abc arguments valid root@ubuntu:~$ echo $? # \u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u6b63\u5e38\u9000\u51fa\uff0cexit code\u4e3a0 0 root@ubuntu:~$ ./test.sh arguments not valid root@ubuntu:~$ echo $? # \u4f20\u5165\u53c2\u6570\u4e2a\u6570\u4e0d\u662f1\uff0c\u5219\u975e\u6b63\u5e38\u9000\u51fa\uff0cexit code\u4e3a1 1","title":"exit\u547d\u4ee4"},{"location":"linux/shell/expr%E5%91%BD%E4%BB%A4/","text":"expr \u547d\u4ee4\u7528\u4e8e\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u683c\u5f0f\u4e3a\uff1a 1 expr \u8868\u8fbe\u5f0f \u8868\u8fbe\u5f0f\u8bf4\u660e\uff1a \u7528\u7a7a\u683c\u9694\u5f00\u6bcf\u4e00\u9879 \u7528\u53cd\u659c\u6760\u653e\u5728shell\u7279\u5b9a\u7684\u5b57\u7b26\u524d\u9762\uff08\u53d1\u73b0\u8868\u8fbe\u5f0f\u8fd0\u884c\u9519\u8bef\u65f6\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u8f6c\u4e49\uff09 \u5bf9\u5305\u542b\u7a7a\u683c\u548c\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u8981\u7528\u5f15\u53f7\u62ec\u8d77\u6765 expr\u4f1a\u5728 stdout \u4e2d\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u4e3a\u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u5219\u7ed3\u679c\u4e3a\u771f\uff0c stdout \u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 expr\u7684 exit code \uff1a\u5982\u679c\u4e3a\u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u5219\u7ed3\u679c\u4e3a\u771f\uff0c exit code \u4e3a0\uff0c\u5426\u5219\u4e3a1\u3002 \u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f length STRING \u8fd4\u56de STRING \u7684\u957f\u5ea6 index STRING CHARSET CHARSET \u4e2d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\u5728 STRING \u4e2d\u6700\u524d\u9762\u7684\u5b57\u7b26\u4f4d\u7f6e\uff0c \u4e0b\u6807\u4ece1\u5f00\u59cb \u3002\u5982\u679c\u5728 STRING \u4e2d\u5b8c\u5168\u4e0d\u5b58\u5728 CHARSET \u4e2d\u7684\u5b57\u7b26\uff0c\u5219\u8fd4\u56de0\u3002 substr STRING POSITION LENGTH \u8fd4\u56de STRING \u5b57\u7b26\u4e32\u4e2d\u4ecePOSITION\u5f00\u59cb\uff0c\u957f\u5ea6\u6700\u5927\u4e3aLENGTH\u7684\u5b50\u4e32\u3002\u5982\u679cPOSITION\u6216LENGTH\u4e3a\u8d1f\u6570\uff0c0\u6216\u975e\u6570\u503c\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a 1 2 3 4 5 str = \"Hello World!\" echo ` expr length \" $str \" ` # ``\u4e0d\u662f\u5355\u5f15\u53f7\uff0c\u8868\u793a\u6267\u884c\u8be5\u547d\u4ee4\uff0c\u8f93\u51fa12 echo ` expr index \" $str \" aWd ` # \u8f93\u51fa7\uff0c\u4e0b\u6807\u4ece1\u5f00\u59cb echo ` expr substr \" $str \" 2 3 ` # \u8f93\u51fa ell \u6574\u6570\u8868\u8fbe\u5f0f expr \u652f\u6301\u666e\u901a\u7684\u7b97\u672f\u64cd\u4f5c\uff0c\u7b97\u672f\u8868\u8fbe\u5f0f\u4f18\u5148\u7ea7\u4f4e\u4e8e\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\uff0c\u9ad8\u4e8e\u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f\u3002 + - \u52a0\u51cf\u8fd0\u7b97\u3002\u4e24\u7aef\u53c2\u6570\u4f1a\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\u5219\u62a5\u9519\u3002 * / % \u4e58\uff0c\u9664\uff0c\u53d6\u6a21\u8fd0\u7b97\u3002\u4e24\u7aef\u53c2\u6570\u4f1a\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\u5219\u62a5\u9519\u3002 () \u53ef\u4ee5\u8be5\u8868\u4f18\u5148\u7ea7\uff0c\u4f46\u9700\u8981\u7528\u53cd\u659c\u6760\u8f6c\u4e49 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 a = 3 b = 4 echo ` expr $a + $b ` # \u8f93\u51fa7 echo ` expr $a - $b ` # \u8f93\u51fa-1 echo ` expr $a \\* $b ` # \u8f93\u51fa12\uff0c*\u9700\u8981\u8f6c\u4e49 echo ` expr $a / $b ` # \u8f93\u51fa0\uff0c\u6574\u9664 echo ` expr $a % $b ` # \u8f93\u51fa3 echo ` expr \\( $a + 1 \\) \\* \\( $b + 1 \\) ` # \u8f93\u51fa20\uff0c\u503c\u4e3a(a + 1) * (b + 1) \u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f | \u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u975e\u7a7a\u4e14\u975e0\uff0c\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u4f46\u8981\u6c42\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\u4e5f\u662f\u975e\u7a7a\u6216\u975e0\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u975e\u7a7a\u6216\u975e0\u65f6\uff0c\u4e0d\u4f1a\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 & \u5982\u679c\u4e24\u4e2a\u53c2\u6570\u90fd\u975e\u7a7a\u4e14\u975e0\uff0c\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u4e3a0\u6216\u4e3a\u7a7a\uff0c\u5219\u4e0d\u4f1a\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 < <= = == != >= > \u6bd4\u8f83\u4e24\u7aef\u7684\u53c2\u6570\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u201d==\u201d\u662f\u201d=\u201d\u7684\u540c\u4e49\u8bcd\u3002\u201dexpr\u201d\u9996\u5148\u5c1d\u8bd5\u5c06\u4e24\u7aef\u53c2\u6570\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5e76\u505a\u7b97\u672f\u6bd4\u8f83\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\uff0c\u5219\u6309\u5b57\u7b26\u96c6\u6392\u5e8f\u89c4\u5219\u505a\u5b57\u7b26\u6bd4\u8f83\u3002 () \u53ef\u4ee5\u8be5\u8868\u4f18\u5148\u7ea7\uff0c\u4f46\u9700\u8981\u7528\u53cd\u659c\u6760\u8f6c\u4e49 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 a = 3 b = 4 echo ` expr $a \\> $b ` # \u8f93\u51fa0\uff0c>\u9700\u8981\u8f6c\u4e49 echo ` expr $a '<' $b ` # \u8f93\u51fa1\uff0c\u4e5f\u53ef\u4ee5\u5c06\u7279\u6b8a\u5b57\u7b26\u7528\u5f15\u53f7\u5f15\u8d77\u6765 echo ` expr $a '>=' $b ` # \u8f93\u51fa0 echo ` expr $a \\<\\= $b ` # \u8f93\u51fa1 c = 0 d = 5 echo ` expr $c \\& $d ` # \u8f93\u51fa0 echo ` expr $a \\& $b ` # \u8f93\u51fa3 echo ` expr $c \\| $d ` # \u8f93\u51fa5 echo ` expr $a \\| $b ` # \u8f93\u51fa3","title":"expr\u547d\u4ee4"},{"location":"linux/shell/expr%E5%91%BD%E4%BB%A4/#_1","text":"length STRING \u8fd4\u56de STRING \u7684\u957f\u5ea6 index STRING CHARSET CHARSET \u4e2d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\u5728 STRING \u4e2d\u6700\u524d\u9762\u7684\u5b57\u7b26\u4f4d\u7f6e\uff0c \u4e0b\u6807\u4ece1\u5f00\u59cb \u3002\u5982\u679c\u5728 STRING \u4e2d\u5b8c\u5168\u4e0d\u5b58\u5728 CHARSET \u4e2d\u7684\u5b57\u7b26\uff0c\u5219\u8fd4\u56de0\u3002 substr STRING POSITION LENGTH \u8fd4\u56de STRING \u5b57\u7b26\u4e32\u4e2d\u4ecePOSITION\u5f00\u59cb\uff0c\u957f\u5ea6\u6700\u5927\u4e3aLENGTH\u7684\u5b50\u4e32\u3002\u5982\u679cPOSITION\u6216LENGTH\u4e3a\u8d1f\u6570\uff0c0\u6216\u975e\u6570\u503c\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a 1 2 3 4 5 str = \"Hello World!\" echo ` expr length \" $str \" ` # ``\u4e0d\u662f\u5355\u5f15\u53f7\uff0c\u8868\u793a\u6267\u884c\u8be5\u547d\u4ee4\uff0c\u8f93\u51fa12 echo ` expr index \" $str \" aWd ` # \u8f93\u51fa7\uff0c\u4e0b\u6807\u4ece1\u5f00\u59cb echo ` expr substr \" $str \" 2 3 ` # \u8f93\u51fa ell","title":"\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f"},{"location":"linux/shell/expr%E5%91%BD%E4%BB%A4/#_2","text":"expr \u652f\u6301\u666e\u901a\u7684\u7b97\u672f\u64cd\u4f5c\uff0c\u7b97\u672f\u8868\u8fbe\u5f0f\u4f18\u5148\u7ea7\u4f4e\u4e8e\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\uff0c\u9ad8\u4e8e\u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f\u3002 + - \u52a0\u51cf\u8fd0\u7b97\u3002\u4e24\u7aef\u53c2\u6570\u4f1a\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\u5219\u62a5\u9519\u3002 * / % \u4e58\uff0c\u9664\uff0c\u53d6\u6a21\u8fd0\u7b97\u3002\u4e24\u7aef\u53c2\u6570\u4f1a\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\u5219\u62a5\u9519\u3002 () \u53ef\u4ee5\u8be5\u8868\u4f18\u5148\u7ea7\uff0c\u4f46\u9700\u8981\u7528\u53cd\u659c\u6760\u8f6c\u4e49 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 a = 3 b = 4 echo ` expr $a + $b ` # \u8f93\u51fa7 echo ` expr $a - $b ` # \u8f93\u51fa-1 echo ` expr $a \\* $b ` # \u8f93\u51fa12\uff0c*\u9700\u8981\u8f6c\u4e49 echo ` expr $a / $b ` # \u8f93\u51fa0\uff0c\u6574\u9664 echo ` expr $a % $b ` # \u8f93\u51fa3 echo ` expr \\( $a + 1 \\) \\* \\( $b + 1 \\) ` # \u8f93\u51fa20\uff0c\u503c\u4e3a(a + 1) * (b + 1)","title":"\u6574\u6570\u8868\u8fbe\u5f0f"},{"location":"linux/shell/expr%E5%91%BD%E4%BB%A4/#_3","text":"| \u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u975e\u7a7a\u4e14\u975e0\uff0c\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u4f46\u8981\u6c42\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\u4e5f\u662f\u975e\u7a7a\u6216\u975e0\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u975e\u7a7a\u6216\u975e0\u65f6\uff0c\u4e0d\u4f1a\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 & \u5982\u679c\u4e24\u4e2a\u53c2\u6570\u90fd\u975e\u7a7a\u4e14\u975e0\uff0c\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u4e3a0\u6216\u4e3a\u7a7a\uff0c\u5219\u4e0d\u4f1a\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 < <= = == != >= > \u6bd4\u8f83\u4e24\u7aef\u7684\u53c2\u6570\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u201d==\u201d\u662f\u201d=\u201d\u7684\u540c\u4e49\u8bcd\u3002\u201dexpr\u201d\u9996\u5148\u5c1d\u8bd5\u5c06\u4e24\u7aef\u53c2\u6570\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u5e76\u505a\u7b97\u672f\u6bd4\u8f83\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\uff0c\u5219\u6309\u5b57\u7b26\u96c6\u6392\u5e8f\u89c4\u5219\u505a\u5b57\u7b26\u6bd4\u8f83\u3002 () \u53ef\u4ee5\u8be5\u8868\u4f18\u5148\u7ea7\uff0c\u4f46\u9700\u8981\u7528\u53cd\u659c\u6760\u8f6c\u4e49 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 a = 3 b = 4 echo ` expr $a \\> $b ` # \u8f93\u51fa0\uff0c>\u9700\u8981\u8f6c\u4e49 echo ` expr $a '<' $b ` # \u8f93\u51fa1\uff0c\u4e5f\u53ef\u4ee5\u5c06\u7279\u6b8a\u5b57\u7b26\u7528\u5f15\u53f7\u5f15\u8d77\u6765 echo ` expr $a '>=' $b ` # \u8f93\u51fa0 echo ` expr $a \\<\\= $b ` # \u8f93\u51fa1 c = 0 d = 5 echo ` expr $c \\& $d ` # \u8f93\u51fa0 echo ` expr $a \\& $b ` # \u8f93\u51fa3 echo ` expr $c \\| $d ` # \u8f93\u51fa5 echo ` expr $a \\| $b ` # \u8f93\u51fa3","title":"\u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f"},{"location":"linux/shell/printf%E5%91%BD%E4%BB%A4/","text":"printf \u547d\u4ee4\u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684 printf \u51fd\u6570\u3002 \u9ed8\u8ba4 \u4e0d\u4f1a\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26 \u3002 \u547d\u4ee4\u683c\u5f0f\uff1a 1 printf format-string [ arguments... ] \u7528\u6cd5\u793a\u4f8b \u811a\u672c\u5185\u5bb9\uff1a 1 2 3 4 printf \"%10d.\\n\" 123 # \u536010\u4f4d\uff0c\u53f3\u5bf9\u9f50 printf \"%-10.2f.\\n\" 123 .123321 # \u536010\u4f4d\uff0c\u4fdd\u75592\u4f4d\u5c0f\u6570\uff0c\u5de6\u5bf9\u9f50 printf \"My name is %s\\n\" \"pjm\" # \u683c\u5f0f\u5316\u8f93\u51fa\u5b57\u7b26\u4e32 printf \"%d * %d = %d\\n\" 2 3 ` expr 2 \\* 3 ` # \u8868\u8fbe\u5f0f\u7684\u503c\u4f5c\u4e3a\u53c2\u6570 \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 4 123. 123.12 . My name is pjm 2 * 3 = 6","title":"printf\u547d\u4ee4"},{"location":"linux/shell/printf%E5%91%BD%E4%BB%A4/#_1","text":"\u811a\u672c\u5185\u5bb9\uff1a 1 2 3 4 printf \"%10d.\\n\" 123 # \u536010\u4f4d\uff0c\u53f3\u5bf9\u9f50 printf \"%-10.2f.\\n\" 123 .123321 # \u536010\u4f4d\uff0c\u4fdd\u75592\u4f4d\u5c0f\u6570\uff0c\u5de6\u5bf9\u9f50 printf \"My name is %s\\n\" \"pjm\" # \u683c\u5f0f\u5316\u8f93\u51fa\u5b57\u7b26\u4e32 printf \"%d * %d = %d\\n\" 2 3 ` expr 2 \\* 3 ` # \u8868\u8fbe\u5f0f\u7684\u503c\u4f5c\u4e3a\u53c2\u6570 \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 4 123. 123.12 . My name is pjm 2 * 3 = 6","title":"\u7528\u6cd5\u793a\u4f8b"},{"location":"linux/shell/read%E5%91%BD%E4%BB%A4/","text":"read \u547d\u4ee4\u7528\u4e8e\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u5355\u884c\u6570\u636e\u3002\u5f53\u8bfb\u5230\u6587\u4ef6\u7ed3\u675f\u7b26\u65f6\uff0c exit code \u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u53c2\u6570\u8bf4\u660e -p : \u540e\u9762\u53ef\u4ee5\u63a5\u63d0\u793a\u4fe1\u606f -t \uff1a\u540e\u9762\u8ddf\u79d2\u6570\uff0c\u5b9a\u4e49\u8f93\u5165\u5b57\u7b26\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u8d85\u8fc7\u7b49\u5f85\u65f6\u95f4\u540e\u4f1a\u81ea\u52a8\u5ffd\u7565\u6b64\u547d\u4ee4 \u5b9e\u4f8b\uff1a 1 2 3 4 5 6 7 8 root@ubuntu:~$ read name # \u8bfb\u5165name\u7684\u503c PJM Wiki # \u6807\u51c6\u8f93\u5165 root@ubuntu:~$ echo $name # \u8f93\u51faname\u7684\u503c PJM Wiki #\u6807\u51c6\u8f93\u51fa root@ubuntu:~$ read -p \"Please input your name: \" -t 30 name # \u8bfb\u5165name\u7684\u503c\uff0c\u7b49\u5f85\u65f6\u95f430\u79d2 Please input your name: PJM Wiki # \u6807\u51c6\u8f93\u5165 root@ubuntu:~$ echo $name # \u8f93\u51faname\u7684\u503c PJM Wiki # \u6807\u51c6\u8f93\u51fa","title":"read\u547d\u4ee4"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/","text":"\u903b\u8f91\u8fd0\u7b97\u7b26&&\u548c|| && \u8868\u793a\u4e0e\uff0c || \u8868\u793a\u6216 \u4e8c\u8005\u5177\u6709\u77ed\u8def\u539f\u5219\uff1a expr1 && expr2 \uff1a\u5f53 expr1 \u4e3a\u5047\u65f6\uff0c\u76f4\u63a5\u5ffd\u7565 expr2 expr1 || expr2 \uff1a\u5f53 expr1 \u4e3a\u771f\u65f6\uff0c\u76f4\u63a5\u5ffd\u7565 expr2 \u8868\u8fbe\u5f0f\u7684 exit code \u4e3a0\uff0c\u8868\u793a\u771f\uff1b\u4e3a\u975e\u96f6\uff0c\u8868\u793a\u5047\u3002 \uff08\u4e0e C/C++ \u4e2d\u7684\u5b9a\u4e49\u76f8\u53cd\uff09 test\u547d\u4ee4 \u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 man test \uff0c\u53ef\u4ee5\u67e5\u770b test \u547d\u4ee4\u7684\u7528\u6cd5\u3002 test \u547d\u4ee4\u7528\u4e8e\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff0c\u4ee5\u53ca\u5bf9\u53d8\u91cf\u505a\u6bd4\u8f83\u3002 test \u547d\u4ee4\u7528 exit code \u8fd4\u56de\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 stdout \u30020\u8868\u793a\u771f\uff0c\u975e0\u8868\u793a\u5047\u3002 \u4f8b\u5982\uff1a 1 2 test 2 -lt 3 # \u4e3a\u771f\uff0c\u8fd4\u56de\u503c\u4e3a0 echo $? # \u8f93\u51fa\u4e0a\u4e2a\u547d\u4ee4\u7684\u8fd4\u56de\u503c\uff0c\u8f93\u51fa0 1 2 3 4 5 6 root@ubuntu:~$ ls # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6 test.sh root@ubuntu:~$ test -e test.sh && echo \"exist\" || echo \"Not exist\" exist # test.sh \u6587\u4ef6\u5b58\u5728 root@ubuntu:~$ test -e test2.sh && echo \"exist\" || echo \"Not exist\" Not exist # testh2.sh \u6587\u4ef6\u4e0d\u5b58\u5728 \u6587\u4ef6\u7c7b\u578b\u5224\u65ad \u547d\u4ee4\u683c\u5f0f\uff1a 1 test -e filename # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -e \u6587\u4ef6\u662f\u5426\u5b58\u5728 -f \u662f\u5426\u4e3a\u6587\u4ef6 -d \u662f\u5426\u4e3a\u76ee\u5f55 \u6587\u4ef6\u6743\u9650\u5224\u65ad \u547d\u4ee4\u683c\u5f0f\uff1a 1 test -r filename # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u8bfb \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -r \u6587\u4ef6\u662f\u5426\u53ef\u8bfb -w \u6587\u4ef6\u662f\u5426\u53ef\u5199 -x \u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c -s \u662f\u5426\u4e3a\u975e\u7a7a\u6587\u4ef6 \u6574\u6570\u95f4\u7684\u6bd4\u8f83 \u547d\u4ee4\u683c\u5f0f\uff1a 1 test $a -eq $b # a\u662f\u5426\u7b49\u4e8eb \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -eq a \u662f\u5426\u7b49\u4e8e b -ne a \u662f\u5426\u4e0d\u7b49\u4e8e b -gt a \u662f\u5426\u5927\u4e8e b -lt a \u662f\u5426\u5c0f\u4e8e b -ge a \u662f\u5426\u5927\u4e8e\u7b49\u4e8e b -le a \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e b \u5b57\u7b26\u4e32\u6bd4\u8f83 \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 test -z STRING \u5224\u65ad STRING \u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de true test -n STRING \u5224\u65ad STRING \u662f\u5426\u975e\u7a7a\uff0c\u5982\u679c\u975e\u7a7a\uff0c\u5219\u8fd4\u56de true \uff08 -n \u53ef\u4ee5\u7701\u7565\uff09 test str1 == str2 \u5224\u65ad str1 \u662f\u5426\u7b49\u4e8e str2 test str1 != str2 \u5224\u65ad str1 \u662f\u5426\u4e0d\u7b49\u4e8e str2 \u591a\u91cd\u6761\u4ef6\u5224\u5b9a \u547d\u4ee4\u683c\u5f0f\uff1a 1 test -r filename -a -x filename \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -a \u4e24\u6761\u4ef6\u662f\u5426\u540c\u65f6\u6210\u7acb -o \u4e24\u6761\u4ef6\u662f\u5426\u81f3\u5c11\u4e00\u4e2a\u6210\u7acb ! \u53d6\u53cd\u3002\u5982 test ! -x file \uff0c\u5f53 file \u4e0d\u53ef\u6267\u884c\u65f6\uff0c\u8fd4\u56de true \u5224\u65ad\u7b26\u53f7[] [] \u4e0e test \u7528\u6cd5\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u66f4\u5e38\u7528\u4e8e if \u8bed\u53e5\u4e2d\u3002\u53e6\u5916 [[]] \u662f [] \u7684\u52a0\u5f3a\u7248\uff0c\u652f\u6301\u7684\u7279\u6027\u66f4\u591a\u3002 \u4f8b\u5982\uff1a 1 2 [ 2 -lt 3 ] # \u4e3a\u771f\uff0c\u8fd4\u56de\u503c\u4e3a0 echo $? # \u8f93\u51fa\u4e0a\u4e2a\u547d\u4ee4\u7684\u8fd4\u56de\u503c\uff0c\u8f93\u51fa0 1 2 3 4 5 6 root@ubuntu:~$ ls # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6 test.sh root@ubuntu:~$ [ -e test.sh ] && echo \"exist\" || echo \"Not exist\" exist # test.sh \u6587\u4ef6\u5b58\u5728 root@ubuntu:~$ [ -e test2.sh ] && echo \"exist\" || echo \"Not exist\" Not exist # testh2.sh \u6587\u4ef6\u4e0d\u5b58\u5728 \u6ce8\u610f\uff1a [] \u5185\u7684\u6bcf\u4e00\u9879\u90fd\u8981\u7528\u7a7a\u683c\u9694\u5f00 \u4e2d\u62ec\u53f7\u5185\u7684\u53d8\u91cf\uff0c\u6700\u597d\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u4e2d\u62ec\u53f7\u5185\u7684\u5e38\u6570\uff0c\u6700\u597d\u7528\u5355\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u4f8b\u5982\uff1a 1 2 3 name = \"PJM Wiki\" [ $name == \"PJM Wiki\" ] # \u9519\u8bef\uff0c\u7b49\u4ef7\u4e8e [ PJM Wiki == \"PJM Wiki\" ]\uff0c\u53c2\u6570\u592a\u591a [ \" $name \" == \"PJM Wiki\" ] # \u6b63\u786e","title":"test\u547d\u4ee4\u4e0e\u5224\u65ad\u7b26\u53f7[]"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_1","text":"&& \u8868\u793a\u4e0e\uff0c || \u8868\u793a\u6216 \u4e8c\u8005\u5177\u6709\u77ed\u8def\u539f\u5219\uff1a expr1 && expr2 \uff1a\u5f53 expr1 \u4e3a\u5047\u65f6\uff0c\u76f4\u63a5\u5ffd\u7565 expr2 expr1 || expr2 \uff1a\u5f53 expr1 \u4e3a\u771f\u65f6\uff0c\u76f4\u63a5\u5ffd\u7565 expr2 \u8868\u8fbe\u5f0f\u7684 exit code \u4e3a0\uff0c\u8868\u793a\u771f\uff1b\u4e3a\u975e\u96f6\uff0c\u8868\u793a\u5047\u3002 \uff08\u4e0e C/C++ \u4e2d\u7684\u5b9a\u4e49\u76f8\u53cd\uff09","title":"\u903b\u8f91\u8fd0\u7b97\u7b26&amp;&amp;\u548c||"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#test","text":"\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 man test \uff0c\u53ef\u4ee5\u67e5\u770b test \u547d\u4ee4\u7684\u7528\u6cd5\u3002 test \u547d\u4ee4\u7528\u4e8e\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff0c\u4ee5\u53ca\u5bf9\u53d8\u91cf\u505a\u6bd4\u8f83\u3002 test \u547d\u4ee4\u7528 exit code \u8fd4\u56de\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 stdout \u30020\u8868\u793a\u771f\uff0c\u975e0\u8868\u793a\u5047\u3002 \u4f8b\u5982\uff1a 1 2 test 2 -lt 3 # \u4e3a\u771f\uff0c\u8fd4\u56de\u503c\u4e3a0 echo $? # \u8f93\u51fa\u4e0a\u4e2a\u547d\u4ee4\u7684\u8fd4\u56de\u503c\uff0c\u8f93\u51fa0 1 2 3 4 5 6 root@ubuntu:~$ ls # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6 test.sh root@ubuntu:~$ test -e test.sh && echo \"exist\" || echo \"Not exist\" exist # test.sh \u6587\u4ef6\u5b58\u5728 root@ubuntu:~$ test -e test2.sh && echo \"exist\" || echo \"Not exist\" Not exist # testh2.sh \u6587\u4ef6\u4e0d\u5b58\u5728","title":"test\u547d\u4ee4"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_2","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 test -e filename # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -e \u6587\u4ef6\u662f\u5426\u5b58\u5728 -f \u662f\u5426\u4e3a\u6587\u4ef6 -d \u662f\u5426\u4e3a\u76ee\u5f55","title":"\u6587\u4ef6\u7c7b\u578b\u5224\u65ad"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_3","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 test -r filename # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u8bfb \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -r \u6587\u4ef6\u662f\u5426\u53ef\u8bfb -w \u6587\u4ef6\u662f\u5426\u53ef\u5199 -x \u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c -s \u662f\u5426\u4e3a\u975e\u7a7a\u6587\u4ef6","title":"\u6587\u4ef6\u6743\u9650\u5224\u65ad"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_4","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 test $a -eq $b # a\u662f\u5426\u7b49\u4e8eb \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -eq a \u662f\u5426\u7b49\u4e8e b -ne a \u662f\u5426\u4e0d\u7b49\u4e8e b -gt a \u662f\u5426\u5927\u4e8e b -lt a \u662f\u5426\u5c0f\u4e8e b -ge a \u662f\u5426\u5927\u4e8e\u7b49\u4e8e b -le a \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e b","title":"\u6574\u6570\u95f4\u7684\u6bd4\u8f83"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_5","text":"\u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 test -z STRING \u5224\u65ad STRING \u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de true test -n STRING \u5224\u65ad STRING \u662f\u5426\u975e\u7a7a\uff0c\u5982\u679c\u975e\u7a7a\uff0c\u5219\u8fd4\u56de true \uff08 -n \u53ef\u4ee5\u7701\u7565\uff09 test str1 == str2 \u5224\u65ad str1 \u662f\u5426\u7b49\u4e8e str2 test str1 != str2 \u5224\u65ad str1 \u662f\u5426\u4e0d\u7b49\u4e8e str2","title":"\u5b57\u7b26\u4e32\u6bd4\u8f83"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_6","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 test -r filename -a -x filename \u6d4b\u8bd5\u53c2\u6570 \u4ee3\u8868\u610f\u4e49 -a \u4e24\u6761\u4ef6\u662f\u5426\u540c\u65f6\u6210\u7acb -o \u4e24\u6761\u4ef6\u662f\u5426\u81f3\u5c11\u4e00\u4e2a\u6210\u7acb ! \u53d6\u53cd\u3002\u5982 test ! -x file \uff0c\u5f53 file \u4e0d\u53ef\u6267\u884c\u65f6\uff0c\u8fd4\u56de true","title":"\u591a\u91cd\u6761\u4ef6\u5224\u5b9a"},{"location":"linux/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7%5B%5D/#_7","text":"[] \u4e0e test \u7528\u6cd5\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u66f4\u5e38\u7528\u4e8e if \u8bed\u53e5\u4e2d\u3002\u53e6\u5916 [[]] \u662f [] \u7684\u52a0\u5f3a\u7248\uff0c\u652f\u6301\u7684\u7279\u6027\u66f4\u591a\u3002 \u4f8b\u5982\uff1a 1 2 [ 2 -lt 3 ] # \u4e3a\u771f\uff0c\u8fd4\u56de\u503c\u4e3a0 echo $? # \u8f93\u51fa\u4e0a\u4e2a\u547d\u4ee4\u7684\u8fd4\u56de\u503c\uff0c\u8f93\u51fa0 1 2 3 4 5 6 root@ubuntu:~$ ls # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6 test.sh root@ubuntu:~$ [ -e test.sh ] && echo \"exist\" || echo \"Not exist\" exist # test.sh \u6587\u4ef6\u5b58\u5728 root@ubuntu:~$ [ -e test2.sh ] && echo \"exist\" || echo \"Not exist\" Not exist # testh2.sh \u6587\u4ef6\u4e0d\u5b58\u5728 \u6ce8\u610f\uff1a [] \u5185\u7684\u6bcf\u4e00\u9879\u90fd\u8981\u7528\u7a7a\u683c\u9694\u5f00 \u4e2d\u62ec\u53f7\u5185\u7684\u53d8\u91cf\uff0c\u6700\u597d\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u4e2d\u62ec\u53f7\u5185\u7684\u5e38\u6570\uff0c\u6700\u597d\u7528\u5355\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u4f8b\u5982\uff1a 1 2 3 name = \"PJM Wiki\" [ $name == \"PJM Wiki\" ] # \u9519\u8bef\uff0c\u7b49\u4ef7\u4e8e [ PJM Wiki == \"PJM Wiki\" ]\uff0c\u53c2\u6570\u592a\u591a [ \" $name \" == \"PJM Wiki\" ] # \u6b63\u786e","title":"\u5224\u65ad\u7b26\u53f7[]"},{"location":"linux/shell/%E5%87%BD%E6%95%B0/","text":"bash \u4e2d\u7684\u51fd\u6570\u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684\u51fd\u6570\uff0c\u4f46 return \u7684\u8fd4\u56de\u503c\u4e0e C/C++ \u4e0d\u540c\uff0c\u8fd4\u56de\u7684\u662f exit code \uff0c\u53d6\u503c\u4e3a0-255\uff0c0\u8868\u793a\u6b63\u5e38\u7ed3\u675f\u3002 \u5982\u679c\u60f3\u83b7\u53d6\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u53ef\u4ee5\u901a\u8fc7 echo \u8f93\u51fa\u5230 stdout \u4e2d\uff0c\u7136\u540e\u901a\u8fc7 $(function_name) \u6765\u83b7\u53d6 stdout \u4e2d\u7684\u7ed3\u679c\u3002 \u51fd\u6570\u7684 return \u503c\u53ef\u4ee5\u901a\u8fc7 $? \u6765\u83b7\u53d6\u3002 \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 [ function ] func_name () { # function\u5173\u952e\u5b57\u53ef\u4ee5\u7701\u7565 \u8bed\u53e51 \u8bed\u53e52 ... } \u4e0d\u83b7\u53d6 return \u503c\u548c stdout \u503c \u793a\u4f8b 1 2 3 4 5 6 func () { name = pjm echo \"Hello $name \" } func \u8f93\u51fa\u7ed3\u679c\uff1a 1 Hello pjm \u83b7\u53d6 return \u503c\u548c stdout \u503c \u4e0d\u5199 return \u65f6\uff0c\u9ed8\u8ba4 return 0 \u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 func () { name = pjm echo \"Hello $name \" return 123 } output = $( func ) ret = $? echo \"output = $output \" echo \"return = $ret \" \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 output = Hello pjm return = 123 \u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570 \u5728\u51fd\u6570\u5185\uff0c $1 \u8868\u793a\u7b2c\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c $2 \u8868\u793a\u7b2c\u4e8c\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u6ce8\u610f\uff1a\u51fd\u6570\u5185\u7684 $0 \u4ecd\u7136\u662f\u6587\u4ef6\u540d\uff0c\u800c\u4e0d\u662f\u51fd\u6570\u540d\u3002 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 func () { # \u9012\u5f52\u8ba1\u7b97 $1 + ($1 - 1) + ($1 - 2) + ... + 0 word = \"\" while [ \" ${ word } \" ! = 'y' ] && [ \" ${ word } \" ! = 'n' ] do read -p \"\u8981\u8fdb\u5165func( $1 )\u51fd\u6570\u5417\uff1f\u8bf7\u8f93\u5165y/n\uff1a\" word done if [ \" $word \" == 'n' ] then echo 0 return 0 fi if [ $1 -le 0 ] then echo 0 return 0 fi sum = $( func $( expr $1 - 1 )) echo $( expr $sum + $1 ) } echo $( func 10 ) \u8f93\u51fa\u7ed3\u679c\uff1a 1 55 \u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf \u53ef\u4ee5\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u8303\u56f4\u4ec5\u5728\u5f53\u524d\u51fd\u6570\u5185\u3002 \u53ef\u4ee5\u5728\u9012\u5f52\u51fd\u6570\u4e2d\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u3002 \u547d\u4ee4\u683c\u5f0f\uff1a 1 local \u53d8\u91cf\u540d = \u53d8\u91cf\u503c \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 #! /bin/bash func () { local name = pjm echo $name } func echo $name \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 pjm # \u6b64\u5904\u4e3a\u7a7a\u884c \u7b2c\u4e5d\u884c\u7684echo\u6ca1\u6709\u8f93\u51fa$name\u7684\u5185\u5bb9 \u7b2c\u4e00\u884c\u4e3a\u51fd\u6570\u5185\u7684 name \u53d8\u91cf\uff0c\u7b2c\u4e8c\u884c\u4e3a\u51fd\u6570\u5916\u8c03\u7528 name \u53d8\u91cf\uff0c\u4f1a\u53d1\u73b0\u6b64\u65f6\u8be5\u53d8\u91cf\u4e0d\u5b58\u5728\u3002","title":"\u51fd\u6570"},{"location":"linux/shell/%E5%87%BD%E6%95%B0/#returnstdout","text":"\u793a\u4f8b 1 2 3 4 5 6 func () { name = pjm echo \"Hello $name \" } func \u8f93\u51fa\u7ed3\u679c\uff1a 1 Hello pjm","title":"\u4e0d\u83b7\u53d6 return\u503c\u548cstdout\u503c"},{"location":"linux/shell/%E5%87%BD%E6%95%B0/#returnstdout_1","text":"\u4e0d\u5199 return \u65f6\uff0c\u9ed8\u8ba4 return 0 \u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 func () { name = pjm echo \"Hello $name \" return 123 } output = $( func ) ret = $? echo \"output = $output \" echo \"return = $ret \" \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 output = Hello pjm return = 123","title":"\u83b7\u53d6 return\u503c\u548cstdout\u503c"},{"location":"linux/shell/%E5%87%BD%E6%95%B0/#_1","text":"\u5728\u51fd\u6570\u5185\uff0c $1 \u8868\u793a\u7b2c\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c $2 \u8868\u793a\u7b2c\u4e8c\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u6ce8\u610f\uff1a\u51fd\u6570\u5185\u7684 $0 \u4ecd\u7136\u662f\u6587\u4ef6\u540d\uff0c\u800c\u4e0d\u662f\u51fd\u6570\u540d\u3002 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 func () { # \u9012\u5f52\u8ba1\u7b97 $1 + ($1 - 1) + ($1 - 2) + ... + 0 word = \"\" while [ \" ${ word } \" ! = 'y' ] && [ \" ${ word } \" ! = 'n' ] do read -p \"\u8981\u8fdb\u5165func( $1 )\u51fd\u6570\u5417\uff1f\u8bf7\u8f93\u5165y/n\uff1a\" word done if [ \" $word \" == 'n' ] then echo 0 return 0 fi if [ $1 -le 0 ] then echo 0 return 0 fi sum = $( func $( expr $1 - 1 )) echo $( expr $sum + $1 ) } echo $( func 10 ) \u8f93\u51fa\u7ed3\u679c\uff1a 1 55","title":"\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570"},{"location":"linux/shell/%E5%87%BD%E6%95%B0/#_2","text":"\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u8303\u56f4\u4ec5\u5728\u5f53\u524d\u51fd\u6570\u5185\u3002 \u53ef\u4ee5\u5728\u9012\u5f52\u51fd\u6570\u4e2d\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u3002 \u547d\u4ee4\u683c\u5f0f\uff1a 1 local \u53d8\u91cf\u540d = \u53d8\u91cf\u503c \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 #! /bin/bash func () { local name = pjm echo $name } func echo $name \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 pjm # \u6b64\u5904\u4e3a\u7a7a\u884c \u7b2c\u4e5d\u884c\u7684echo\u6ca1\u6709\u8f93\u51fa$name\u7684\u5185\u5bb9 \u7b2c\u4e00\u884c\u4e3a\u51fd\u6570\u5185\u7684 name \u53d8\u91cf\uff0c\u7b2c\u4e8c\u884c\u4e3a\u51fd\u6570\u5916\u8c03\u7528 name \u53d8\u91cf\uff0c\u4f1a\u53d1\u73b0\u6b64\u65f6\u8be5\u53d8\u91cf\u4e0d\u5b58\u5728\u3002","title":"\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf"},{"location":"linux/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/","text":"if\u2026then\u5f62\u5f0f \u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684 if-else \u8bed\u53e5\u3002 \u5355\u5c42if \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 if condition then \u8bed\u53e51 \u8bed\u53e52 ... fi \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 a = 3 b = 4 if [ \" $a \" -lt \" $b \" ] && [ \" $a \" -gt 2 ] then echo ${ a } \u5728\u8303\u56f4\u5185 fi \u8f93\u51fa\u7ed3\u679c\uff1a 1 3\u5728\u8303\u56f4\u5185 \u5355\u5c42if-else \u547d\u4ee4\u683c\u5f0f 1 2 3 4 5 6 7 8 9 10 if condition then \u8bed\u53e51 \u8bed\u53e52 ... else \u8bed\u53e51 \u8bed\u53e52 ... fi \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 a = 3 b = 4 if ! [ \" $a \" -lt \" $b \" ] then echo ${ a } \u4e0d\u5c0f\u4e8e ${ b } else echo ${ a } \u5c0f\u4e8e ${ b } fi \u8f93\u51fa\u7ed3\u679c\uff1a 1 3\u5c0f\u4e8e4 \u591a\u5c42if-elif-elif-else \u547d\u4ee4\u683c\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 if condition then \u8bed\u53e51 \u8bed\u53e52 ... elif condition then \u8bed\u53e51 \u8bed\u53e52 ... elif condition then \u8bed\u53e51 \u8bed\u53e52 else \u8bed\u53e51 \u8bed\u53e52 ... fi \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 a = 4 if [ $a -eq 1 ] then echo ${ a } \u7b49\u4e8e1 elif [ $a -eq 2 ] then echo ${ a } \u7b49\u4e8e2 elif [ $a -eq 3 ] then echo ${ a } \u7b49\u4e8e3 else echo \u5176\u4ed6 fi \u8f93\u51fa\u7ed3\u679c\uff1a 1 \u5176\u4ed6 case\u2026esac\u5f62\u5f0f \u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684 switch \u8bed\u53e5\u3002 \u547d\u4ee4\u683c\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 case $\u53d8\u91cf\u540d\u79f0 in \u503c1 ) \u8bed\u53e51 \u8bed\u53e52 ... ;; # \u7c7b\u4f3c\u4e8eC/C++\u4e2d\u7684break \u503c2 ) \u8bed\u53e51 \u8bed\u53e52 ... ;; * ) # \u7c7b\u4f3c\u4e8eC/C++\u4e2d\u7684default \u8bed\u53e51 \u8bed\u53e52 ... ;; esac \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 a = 4 case $a in 1 ) echo ${ a } \u7b49\u4e8e1 ;; 2 ) echo ${ a } \u7b49\u4e8e2 ;; 3 ) echo ${ a } \u7b49\u4e8e3 ;; * ) echo \u5176\u4ed6 ;; esac \u8f93\u51fa\u7ed3\u679c\uff1a 1 \u5176\u4ed6","title":"\u5224\u65ad\u8bed\u53e5"},{"location":"linux/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/#ifthen","text":"\u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684 if-else \u8bed\u53e5\u3002","title":"if\u2026then\u5f62\u5f0f"},{"location":"linux/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/#if","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 if condition then \u8bed\u53e51 \u8bed\u53e52 ... fi \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 a = 3 b = 4 if [ \" $a \" -lt \" $b \" ] && [ \" $a \" -gt 2 ] then echo ${ a } \u5728\u8303\u56f4\u5185 fi \u8f93\u51fa\u7ed3\u679c\uff1a 1 3\u5728\u8303\u56f4\u5185","title":"\u5355\u5c42if"},{"location":"linux/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/#if-else","text":"\u547d\u4ee4\u683c\u5f0f 1 2 3 4 5 6 7 8 9 10 if condition then \u8bed\u53e51 \u8bed\u53e52 ... else \u8bed\u53e51 \u8bed\u53e52 ... fi \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 a = 3 b = 4 if ! [ \" $a \" -lt \" $b \" ] then echo ${ a } \u4e0d\u5c0f\u4e8e ${ b } else echo ${ a } \u5c0f\u4e8e ${ b } fi \u8f93\u51fa\u7ed3\u679c\uff1a 1 3\u5c0f\u4e8e4","title":"\u5355\u5c42if-else"},{"location":"linux/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/#if-elif-elif-else","text":"\u547d\u4ee4\u683c\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 if condition then \u8bed\u53e51 \u8bed\u53e52 ... elif condition then \u8bed\u53e51 \u8bed\u53e52 ... elif condition then \u8bed\u53e51 \u8bed\u53e52 else \u8bed\u53e51 \u8bed\u53e52 ... fi \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 a = 4 if [ $a -eq 1 ] then echo ${ a } \u7b49\u4e8e1 elif [ $a -eq 2 ] then echo ${ a } \u7b49\u4e8e2 elif [ $a -eq 3 ] then echo ${ a } \u7b49\u4e8e3 else echo \u5176\u4ed6 fi \u8f93\u51fa\u7ed3\u679c\uff1a 1 \u5176\u4ed6","title":"\u591a\u5c42if-elif-elif-else"},{"location":"linux/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/#caseesac","text":"\u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684 switch \u8bed\u53e5\u3002 \u547d\u4ee4\u683c\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 case $\u53d8\u91cf\u540d\u79f0 in \u503c1 ) \u8bed\u53e51 \u8bed\u53e52 ... ;; # \u7c7b\u4f3c\u4e8eC/C++\u4e2d\u7684break \u503c2 ) \u8bed\u53e51 \u8bed\u53e52 ... ;; * ) # \u7c7b\u4f3c\u4e8eC/C++\u4e2d\u7684default \u8bed\u53e51 \u8bed\u53e52 ... ;; esac \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 a = 4 case $a in 1 ) echo ${ a } \u7b49\u4e8e1 ;; 2 ) echo ${ a } \u7b49\u4e8e2 ;; 3 ) echo ${ a } \u7b49\u4e8e3 ;; * ) echo \u5176\u4ed6 ;; esac \u8f93\u51fa\u7ed3\u679c\uff1a 1 \u5176\u4ed6","title":"case\u2026esac\u5f62\u5f0f"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/","text":"\u5b9a\u4e49\u53d8\u91cf \u5b9a\u4e49\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u52a0 $ \u7b26\u53f7\uff0c\u4f8b\u5982\uff1a 1 2 3 name1 = 'pjm' # \u5355\u5f15\u53f7\u5b9a\u4e49\u5b57\u7b26\u4e32 name2 = \"pjm\" # \u53cc\u5f15\u53f7\u5b9a\u4e49\u5b57\u7b26\u4e32 name3 = pjm # \u4e5f\u53ef\u4ee5\u4e0d\u52a0\u5f15\u53f7\uff0c\u540c\u6837\u8868\u793a\u5b57\u7b26\u4e32 \u4f7f\u7528\u53d8\u91cf \u4f7f\u7528\u53d8\u91cf\uff0c\u9700\u8981\u52a0\u4e0a $ \u7b26\u53f7\uff0c\u6216\u8005 ${} \u7b26\u53f7\u3002\u82b1\u62ec\u53f7\u662f\u53ef\u9009\u7684\uff0c\u4e3b\u8981\u4e3a\u4e86\u5e2e\u52a9\u89e3\u91ca\u5668\u8bc6\u522b\u53d8\u91cf\u8fb9\u754c\u3002 1 2 3 4 name = pjm echo $name # \u8f93\u51fapjm echo ${ name } # \u8f93\u51fapjm echo ${ name } 666 # \u8f93\u51fapjm666 \u53ea\u8bfb\u53d8\u91cf \u4f7f\u7528readonly\u6216\u8005declare\u53ef\u4ee5\u5c06\u53d8\u91cf\u53d8\u4e3a\u53ea\u8bfb\u3002 1 2 3 4 5 name = pjm readonly name declare -r name # \u4e24\u79cd\u5199\u6cd5\u5747\u53ef name = abc # \u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u6b64\u65f6name\u53ea\u8bfb \u5220\u9664\u53d8\u91cf unset\u53ef\u4ee5\u5220\u9664\u53d8\u91cf\u3002 1 2 3 name = pjm unset name echo $name # \u8f93\u51fa\u7a7a\u884c \u53d8\u91cf\u7c7b\u578b \u81ea\u5b9a\u4e49\u53d8\u91cf\uff08\u5c40\u90e8\u53d8\u91cf\uff09 \u5b50\u8fdb\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u7684\u53d8\u91cf \u73af\u5883\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\uff09 \u5b50\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u7684\u53d8\u91cf \u81ea\u5b9a\u4e49\u53d8\u91cf\u6539\u6210\u73af\u5883\u53d8\u91cf\uff1a 1 2 3 root@ubuntu:~$ name = pjm # \u5b9a\u4e49\u53d8\u91cf root@ubuntu:~$ export name # \u7b2c\u4e00\u79cd\u65b9\u6cd5 root@ubuntu:~$ declare -x name # \u7b2c\u4e8c\u79cd\u65b9\u6cd5 \u73af\u5883\u53d8\u91cf\u6539\u4e3a\u81ea\u5b9a\u4e49\u53d8\u91cf\uff1a 1 2 root@ubuntu:~$ export name = pjm # \u5b9a\u4e49\u73af\u5883\u53d8\u91cf root@ubuntu:~$ declare +x name # \u6539\u4e3a\u81ea\u5b9a\u4e49\u53d8\u91cf \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5f15\u53f7\u3002 \u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u7684\u533a\u522b\uff1a \u5355\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u4f1a\u539f\u6837\u8f93\u51fa\uff0c\u4e0d\u4f1a\u6267\u884c\u3001\u4e0d\u4f1a\u53d6\u53d8\u91cf\uff1b \u53cc\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u6267\u884c\u3001\u53ef\u4ee5\u53d6\u53d8\u91cf\uff1b 1 2 3 name = pjm # \u4e0d\u7528\u5f15\u53f7 echo 'hello, $name \\\"hh\\\"' # \u5355\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa hello, $name \\\"hh\\\" echo \"hello, $name \\\"hh\\\"\" # \u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa hello, pjm \"hh\" \u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6 1 2 name = \"pjm\" echo ${# name } # \u8f93\u51fa3 \u63d0\u53d6\u5b50\u4e32 1 2 name = \"hello, pjm\" echo ${ name : 0 : 5 } # \u63d0\u53d6\u4ece0\u5f00\u59cb\u76845\u4e2a\u5b57\u7b26","title":"\u53d8\u91cf"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/#_1","text":"\u5b9a\u4e49\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u52a0 $ \u7b26\u53f7\uff0c\u4f8b\u5982\uff1a 1 2 3 name1 = 'pjm' # \u5355\u5f15\u53f7\u5b9a\u4e49\u5b57\u7b26\u4e32 name2 = \"pjm\" # \u53cc\u5f15\u53f7\u5b9a\u4e49\u5b57\u7b26\u4e32 name3 = pjm # \u4e5f\u53ef\u4ee5\u4e0d\u52a0\u5f15\u53f7\uff0c\u540c\u6837\u8868\u793a\u5b57\u7b26\u4e32","title":"\u5b9a\u4e49\u53d8\u91cf"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/#_2","text":"\u4f7f\u7528\u53d8\u91cf\uff0c\u9700\u8981\u52a0\u4e0a $ \u7b26\u53f7\uff0c\u6216\u8005 ${} \u7b26\u53f7\u3002\u82b1\u62ec\u53f7\u662f\u53ef\u9009\u7684\uff0c\u4e3b\u8981\u4e3a\u4e86\u5e2e\u52a9\u89e3\u91ca\u5668\u8bc6\u522b\u53d8\u91cf\u8fb9\u754c\u3002 1 2 3 4 name = pjm echo $name # \u8f93\u51fapjm echo ${ name } # \u8f93\u51fapjm echo ${ name } 666 # \u8f93\u51fapjm666","title":"\u4f7f\u7528\u53d8\u91cf"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/#_3","text":"\u4f7f\u7528readonly\u6216\u8005declare\u53ef\u4ee5\u5c06\u53d8\u91cf\u53d8\u4e3a\u53ea\u8bfb\u3002 1 2 3 4 5 name = pjm readonly name declare -r name # \u4e24\u79cd\u5199\u6cd5\u5747\u53ef name = abc # \u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u6b64\u65f6name\u53ea\u8bfb","title":"\u53ea\u8bfb\u53d8\u91cf"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/#_4","text":"unset\u53ef\u4ee5\u5220\u9664\u53d8\u91cf\u3002 1 2 3 name = pjm unset name echo $name # \u8f93\u51fa\u7a7a\u884c","title":"\u5220\u9664\u53d8\u91cf"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/#_5","text":"\u81ea\u5b9a\u4e49\u53d8\u91cf\uff08\u5c40\u90e8\u53d8\u91cf\uff09 \u5b50\u8fdb\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u7684\u53d8\u91cf \u73af\u5883\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\uff09 \u5b50\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u7684\u53d8\u91cf \u81ea\u5b9a\u4e49\u53d8\u91cf\u6539\u6210\u73af\u5883\u53d8\u91cf\uff1a 1 2 3 root@ubuntu:~$ name = pjm # \u5b9a\u4e49\u53d8\u91cf root@ubuntu:~$ export name # \u7b2c\u4e00\u79cd\u65b9\u6cd5 root@ubuntu:~$ declare -x name # \u7b2c\u4e8c\u79cd\u65b9\u6cd5 \u73af\u5883\u53d8\u91cf\u6539\u4e3a\u81ea\u5b9a\u4e49\u53d8\u91cf\uff1a 1 2 root@ubuntu:~$ export name = pjm # \u5b9a\u4e49\u73af\u5883\u53d8\u91cf root@ubuntu:~$ declare +x name # \u6539\u4e3a\u81ea\u5b9a\u4e49\u53d8\u91cf","title":"\u53d8\u91cf\u7c7b\u578b"},{"location":"linux/shell/%E5%8F%98%E9%87%8F/#_6","text":"\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5f15\u53f7\u3002 \u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u7684\u533a\u522b\uff1a \u5355\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u4f1a\u539f\u6837\u8f93\u51fa\uff0c\u4e0d\u4f1a\u6267\u884c\u3001\u4e0d\u4f1a\u53d6\u53d8\u91cf\uff1b \u53cc\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u6267\u884c\u3001\u53ef\u4ee5\u53d6\u53d8\u91cf\uff1b 1 2 3 name = pjm # \u4e0d\u7528\u5f15\u53f7 echo 'hello, $name \\\"hh\\\"' # \u5355\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa hello, $name \\\"hh\\\" echo \"hello, $name \\\"hh\\\"\" # \u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa hello, pjm \"hh\" \u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6 1 2 name = \"pjm\" echo ${# name } # \u8f93\u51fa3 \u63d0\u53d6\u5b50\u4e32 1 2 name = \"hello, pjm\" echo ${ name : 0 : 5 } # \u63d0\u53d6\u4ece0\u5f00\u59cb\u76845\u4e2a\u5b57\u7b26","title":"\u5b57\u7b26\u4e32"},{"location":"linux/shell/%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8%E8%84%9A%E6%9C%AC/","text":"\u7c7b\u4f3c\u4e8e C/C++ \u4e2d\u7684 include \u64cd\u4f5c\uff0c bash \u4e5f\u53ef\u4ee5\u5f15\u5165\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u3002 \u8bed\u6cd5\u683c\u5f0f\uff1a 1 2 3 4 5 . filename # \u6ce8\u610f\u70b9\u548c\u6587\u4ef6\u540d\u4e4b\u95f4\u6709\u4e00\u4e2a\u7a7a\u683c \u6216 source filename \u793a\u4f8b \u521b\u5efa test1.sh \uff0c\u5185\u5bb9\u4e3a\uff1a 1 2 3 #! /bin/bash name = pjm # \u5b9a\u4e49\u53d8\u91cfname \u7136\u540e\u521b\u5efa test2.sh \uff0c\u5185\u5bb9\u4e3a\uff1a 1 2 3 4 5 #! /bin/bash source test1.sh # \u6216 . test1.sh echo My name is: $name # \u53ef\u4ee5\u4f7f\u7528test1.sh\u4e2d\u7684\u53d8\u91cf \u6267\u884c\u547d\u4ee4\uff1a 1 2 3 root@ubuntu:~$ chmod +x test2.sh root@ubuntu:~$ ./test2.sh My name is: pjm","title":"\u5f15\u5165\u5916\u90e8\u811a\u672c"},{"location":"linux/shell/%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8%E8%84%9A%E6%9C%AC/#_1","text":"\u521b\u5efa test1.sh \uff0c\u5185\u5bb9\u4e3a\uff1a 1 2 3 #! /bin/bash name = pjm # \u5b9a\u4e49\u53d8\u91cfname \u7136\u540e\u521b\u5efa test2.sh \uff0c\u5185\u5bb9\u4e3a\uff1a 1 2 3 4 5 #! /bin/bash source test1.sh # \u6216 . test1.sh echo My name is: $name # \u53ef\u4ee5\u4f7f\u7528test1.sh\u4e2d\u7684\u53d8\u91cf \u6267\u884c\u547d\u4ee4\uff1a 1 2 3 root@ubuntu:~$ chmod +x test2.sh root@ubuntu:~$ ./test2.sh My name is: pjm","title":"\u793a\u4f8b"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/","text":"for\u2026in\u2026do\u2026done \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 for var in val1 val2 val3 do \u8bed\u53e51 \u8bed\u53e52 ... done \u793a\u4f8b1\uff0c\u8f93\u51fa a 2 cc \uff0c\u6bcf\u4e2a\u5143\u7d20\u4e00\u884c\uff1a 1 2 3 4 for i in a 2 cc do echo $i done \u793a\u4f8b2\uff0c\u8f93\u51fa\u5f53\u524d\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\uff0c\u6bcf\u4e2a\u6587\u4ef6\u540d\u4e00\u884c\uff1a 1 2 3 4 for file in ` ls ` do echo $file done \u793a\u4f8b3\uff0c\u8f93\u51fa 1-10 1 2 3 4 for i in $( seq 1 10 ) do echo $i done \u793a\u4f8b4\uff0c\u4f7f\u7528 {1..10} \u6216\u8005 {a..z} 1 2 3 4 for i in { a..z } do echo $i done for ((\u2026;\u2026;\u2026)) do\u2026done \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 for (( expression ; condition ; expression )) do \u8bed\u53e51 \u8bed\u53e52 done \u793a\u4f8b\uff0c\u8f93\u51fa1-10\uff0c\u6bcf\u4e2a\u6570\u5360\u4e00\u884c\uff1a 1 2 3 4 for (( i = 1 ; i< = 10 ; i++ )) do echo $i done while\u2026do\u2026done\u5faa\u73af \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 while condition do \u8bed\u53e51 \u8bed\u53e52 ... done \u793a\u4f8b\uff0c\u6587\u4ef6\u7ed3\u675f\u7b26\u4e3aCtrl+d\uff0c\u8f93\u5165\u6587\u4ef6\u7ed3\u675f\u7b26\u540eread\u6307\u4ee4\u8fd4\u56defalse\u3002 1 2 3 4 while read name do echo $name done until\u2026do\u2026done\u5faa\u73af \u5f53\u6761\u4ef6\u4e3a\u771f\u65f6\u7ed3\u675f\u3002 \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 until condition do \u8bed\u53e51 \u8bed\u53e52 ... done \u793a\u4f8b\uff0c\u5f53\u7528\u6237\u8f93\u5165yes\u6216\u8005YES\u65f6\u7ed3\u675f\uff0c\u5426\u5219\u4e00\u76f4\u7b49\u5f85\u8bfb\u5165\u3002 1 2 3 4 until [ \" ${ word } \" == \"yes\" ] || [ \" ${ word } \" == \"YES\" ] do read -p \"Please input yes/YES to stop this program: \" word done break\u547d\u4ee4 \u8df3\u51fa\u5f53\u524d\u4e00\u5c42\u5faa\u73af\uff0c\u6ce8\u610f\u4e0e C/C++ \u4e0d\u540c\u7684\u662f\uff1a break \u4e0d\u80fd\u8df3\u51fa case \u8bed\u53e5\u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 while read name do for (( i = 1 ; i< = 10 ; i++ )) do case $i in 8 ) break ;; * ) echo $i ;; esac done done \u8be5\u793a\u4f8b\u6bcf\u8bfb\u5165\u975e EOF \u7684\u5b57\u7b26\u4e32\uff0c\u4f1a\u8f93\u51fa\u4e00\u904d 1-7 \u3002 \u8be5\u7a0b\u5e8f\u53ef\u4ee5\u8f93\u5165 Ctrl + D \u6587\u4ef6\u7ed3\u675f\u7b26\u6765\u7ed3\u675f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528 Ctrl + C \u6740\u6389\u8be5\u8fdb\u7a0b\u3002 continue\u547d\u4ee4 \u8df3\u51fa\u5f53\u524d\u5faa\u73af\u3002 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 for (( i = 1 ; i< = 10 ; i++ )) do if [ ` expr $i % 2 ` -eq 0 ] then continue fi echo $i done \u8be5\u7a0b\u5e8f\u8f93\u51fa1-10\u4e2d\u7684\u6240\u6709\u5947\u6570\u3002 \u6b7b\u5faa\u73af\u7684\u5904\u7406\u65b9\u5f0f \u5982\u679cTerminal\u53ef\u4ee5\u6253\u5f00\u8be5\u7a0b\u5e8f\uff0c\u5219\u8f93\u5165 Ctrl + C \u5373\u53ef\u3002 \u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u5173\u95ed\u8fdb\u7a0b\uff1a \u4f7f\u7528 top \u547d\u4ee4\u627e\u5230\u8fdb\u7a0b\u7684 PID \u8f93\u5165 kill -9 PID \u5373\u53ef\u5173\u6389\u6b64\u8fdb\u7a0b","title":"\u5faa\u73af\u8bed\u53e5"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#forindodone","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 for var in val1 val2 val3 do \u8bed\u53e51 \u8bed\u53e52 ... done \u793a\u4f8b1\uff0c\u8f93\u51fa a 2 cc \uff0c\u6bcf\u4e2a\u5143\u7d20\u4e00\u884c\uff1a 1 2 3 4 for i in a 2 cc do echo $i done \u793a\u4f8b2\uff0c\u8f93\u51fa\u5f53\u524d\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\uff0c\u6bcf\u4e2a\u6587\u4ef6\u540d\u4e00\u884c\uff1a 1 2 3 4 for file in ` ls ` do echo $file done \u793a\u4f8b3\uff0c\u8f93\u51fa 1-10 1 2 3 4 for i in $( seq 1 10 ) do echo $i done \u793a\u4f8b4\uff0c\u4f7f\u7528 {1..10} \u6216\u8005 {a..z} 1 2 3 4 for i in { a..z } do echo $i done","title":"for\u2026in\u2026do\u2026done"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#for-dodone","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 for (( expression ; condition ; expression )) do \u8bed\u53e51 \u8bed\u53e52 done \u793a\u4f8b\uff0c\u8f93\u51fa1-10\uff0c\u6bcf\u4e2a\u6570\u5360\u4e00\u884c\uff1a 1 2 3 4 for (( i = 1 ; i< = 10 ; i++ )) do echo $i done","title":"for ((\u2026;\u2026;\u2026)) do\u2026done"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#whiledodone","text":"\u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 while condition do \u8bed\u53e51 \u8bed\u53e52 ... done \u793a\u4f8b\uff0c\u6587\u4ef6\u7ed3\u675f\u7b26\u4e3aCtrl+d\uff0c\u8f93\u5165\u6587\u4ef6\u7ed3\u675f\u7b26\u540eread\u6307\u4ee4\u8fd4\u56defalse\u3002 1 2 3 4 while read name do echo $name done","title":"while\u2026do\u2026done\u5faa\u73af"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#untildodone","text":"\u5f53\u6761\u4ef6\u4e3a\u771f\u65f6\u7ed3\u675f\u3002 \u547d\u4ee4\u683c\u5f0f\uff1a 1 2 3 4 5 6 until condition do \u8bed\u53e51 \u8bed\u53e52 ... done \u793a\u4f8b\uff0c\u5f53\u7528\u6237\u8f93\u5165yes\u6216\u8005YES\u65f6\u7ed3\u675f\uff0c\u5426\u5219\u4e00\u76f4\u7b49\u5f85\u8bfb\u5165\u3002 1 2 3 4 until [ \" ${ word } \" == \"yes\" ] || [ \" ${ word } \" == \"YES\" ] do read -p \"Please input yes/YES to stop this program: \" word done","title":"until\u2026do\u2026done\u5faa\u73af"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#break","text":"\u8df3\u51fa\u5f53\u524d\u4e00\u5c42\u5faa\u73af\uff0c\u6ce8\u610f\u4e0e C/C++ \u4e0d\u540c\u7684\u662f\uff1a break \u4e0d\u80fd\u8df3\u51fa case \u8bed\u53e5\u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 while read name do for (( i = 1 ; i< = 10 ; i++ )) do case $i in 8 ) break ;; * ) echo $i ;; esac done done \u8be5\u793a\u4f8b\u6bcf\u8bfb\u5165\u975e EOF \u7684\u5b57\u7b26\u4e32\uff0c\u4f1a\u8f93\u51fa\u4e00\u904d 1-7 \u3002 \u8be5\u7a0b\u5e8f\u53ef\u4ee5\u8f93\u5165 Ctrl + D \u6587\u4ef6\u7ed3\u675f\u7b26\u6765\u7ed3\u675f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528 Ctrl + C \u6740\u6389\u8be5\u8fdb\u7a0b\u3002","title":"break\u547d\u4ee4"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#continue","text":"\u8df3\u51fa\u5f53\u524d\u5faa\u73af\u3002 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 for (( i = 1 ; i< = 10 ; i++ )) do if [ ` expr $i % 2 ` -eq 0 ] then continue fi echo $i done \u8be5\u7a0b\u5e8f\u8f93\u51fa1-10\u4e2d\u7684\u6240\u6709\u5947\u6570\u3002","title":"continue\u547d\u4ee4"},{"location":"linux/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#_1","text":"\u5982\u679cTerminal\u53ef\u4ee5\u6253\u5f00\u8be5\u7a0b\u5e8f\uff0c\u5219\u8f93\u5165 Ctrl + C \u5373\u53ef\u3002 \u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u5173\u95ed\u8fdb\u7a0b\uff1a \u4f7f\u7528 top \u547d\u4ee4\u627e\u5230\u8fdb\u7a0b\u7684 PID \u8f93\u5165 kill -9 PID \u5373\u53ef\u5173\u6389\u6b64\u8fdb\u7a0b","title":"\u6b7b\u5faa\u73af\u7684\u5904\u7406\u65b9\u5f0f"},{"location":"linux/shell/%E6%95%B0%E7%BB%84/","text":"\u6570\u7ec4\u4e2d\u53ef\u4ee5\u5b58\u653e\u591a\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u503c\uff0c\u53ea\u652f\u6301\u4e00\u7ef4\u6570\u7ec4\uff0c\u521d\u59cb\u5316\u65f6\u4e0d\u9700\u8981\u6307\u660e\u6570\u7ec4\u5927\u5c0f\u3002 \u6570\u7ec4 \u4e0b\u6807\u4ece0\u5f00\u59cb\u3002 \u5b9a\u4e49 \u6570\u7ec4\u7528\u5c0f\u62ec\u53f7\u8868\u793a\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u4f8b\u5982\uff1a 1 array =( 1 abc \"def\" pjm ) \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u6570\u7ec4\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c\uff1a 1 2 3 4 array [ 0 ]= 1 array [ 1 ]= abc array [ 2 ]= \"def\" array [ 3 ]= pjm \u8bfb\u53d6\u6570\u7ec4\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c \u683c\u5f0f\uff1a 1 ${ array [index] } \u4f8b\u5982\uff1a 1 2 3 4 5 array =( 1 abc \"def\" pjm ) echo ${ array [0] } echo ${ array [1] } echo ${ array [2] } echo ${ array [3] } \u8bfb\u53d6\u6574\u4e2a\u6570\u7ec4 \u683c\u5f0f\uff1a 1 2 ${ array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 ${ array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5 \u4f8b\u5982\uff1a 1 2 3 4 array =( 1 abc \"def\" pjm ) echo ${ array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 echo ${ array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5 \u6570\u7ec4\u957f\u5ea6 \u7c7b\u4f3c\u4e8e\u5b57\u7b26\u4e32 1 2 ${# array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 ${# array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5 \u4f8b\u5982\uff1a 1 2 3 4 array =( 1 abc \"def\" pjm ) echo ${# array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 echo ${# array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5","title":"\u6570\u7ec4"},{"location":"linux/shell/%E6%95%B0%E7%BB%84/#_1","text":"\u6570\u7ec4\u7528\u5c0f\u62ec\u53f7\u8868\u793a\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u4f8b\u5982\uff1a 1 array =( 1 abc \"def\" pjm ) \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u6570\u7ec4\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c\uff1a 1 2 3 4 array [ 0 ]= 1 array [ 1 ]= abc array [ 2 ]= \"def\" array [ 3 ]= pjm","title":"\u5b9a\u4e49"},{"location":"linux/shell/%E6%95%B0%E7%BB%84/#_2","text":"\u683c\u5f0f\uff1a 1 ${ array [index] } \u4f8b\u5982\uff1a 1 2 3 4 5 array =( 1 abc \"def\" pjm ) echo ${ array [0] } echo ${ array [1] } echo ${ array [2] } echo ${ array [3] }","title":"\u8bfb\u53d6\u6570\u7ec4\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c"},{"location":"linux/shell/%E6%95%B0%E7%BB%84/#_3","text":"\u683c\u5f0f\uff1a 1 2 ${ array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 ${ array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5 \u4f8b\u5982\uff1a 1 2 3 4 array =( 1 abc \"def\" pjm ) echo ${ array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 echo ${ array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5","title":"\u8bfb\u53d6\u6574\u4e2a\u6570\u7ec4"},{"location":"linux/shell/%E6%95%B0%E7%BB%84/#_4","text":"\u7c7b\u4f3c\u4e8e\u5b57\u7b26\u4e32 1 2 ${# array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 ${# array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5 \u4f8b\u5982\uff1a 1 2 3 4 array =( 1 abc \"def\" pjm ) echo ${# array [@] } # \u7b2c\u4e00\u79cd\u5199\u6cd5 echo ${# array [*] } # \u7b2c\u4e8c\u79cd\u5199\u6cd5","title":"\u6570\u7ec4\u957f\u5ea6"},{"location":"linux/shell/%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91/","text":"\u6bcf\u4e2a\u8fdb\u7a0b\u9ed8\u8ba4\u6253\u5f003\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1a stdin \u6807\u51c6\u8f93\u5165\uff0c\u4ece\u547d\u4ee4\u884c\u8bfb\u53d6\u6570\u636e\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a0 stdout \u6807\u51c6\u8f93\u51fa\uff0c\u5411\u547d\u4ee4\u884c\u8f93\u51fa\u6570\u636e\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a1 stderr \u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff0c\u5411\u547d\u4ee4\u884c\u8f93\u51fa\u6570\u636e\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a2 \u53ef\u4ee5\u7528\u6587\u4ef6\u91cd\u5b9a\u5411\u5c06\u8fd9\u4e09\u4e2a\u6587\u4ef6\u91cd\u5b9a\u5411\u5230\u5176\u4ed6\u6587\u4ef6\u4e2d\u3002 \u91cd\u5b9a\u5411\u547d\u4ee4\u5217\u8868 \u547d\u4ee4 \u8bf4\u660e command > file \u5c06 stdout \u91cd\u5b9a\u5411\u5230 file \u4e2d command < file \u5c06 stdin \u91cd\u5b9a\u5411\u5230 file \u4e2d command >> file \u5c06 stdout \u4ee5\u8ffd\u52a0\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file \u4e2d command n> file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u91cd\u5b9a\u5411\u5230 file \u4e2d command n>> file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u4ee5\u8ffd\u52a0\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file \u4e2d \u8f93\u5165\u548c\u8f93\u51fa\u91cd\u5b9a\u5411 1 2 3 4 5 6 echo -e \"Hello \\c\" > output.txt # \u5c06stdout\u91cd\u5b9a\u5411\u5230output.txt\u4e2d echo \"World\" >> output.txt # \u5c06\u5b57\u7b26\u4e32\u8ffd\u52a0\u5230output.txt\u4e2d read str < output.txt # \u4eceoutput.txt\u4e2d\u8bfb\u53d6\u5b57\u7b26\u4e32 echo $str # \u8f93\u51fa\u7ed3\u679c\uff1aHello World \u540c\u65f6\u91cd\u5b9a\u5411 stdin \u548c stdout \u521b\u5efa bash \u811a\u672c\uff1a 1 2 3 4 5 6 #! /bin/bash read a read b echo $( expr \" $a \" + \" $b \" ) \u521b\u5efa input.txt \uff0c\u91cc\u9762\u7684\u5185\u5bb9\u4e3a\uff1a 1 2 3 4 \u6267\u884c\u547d\u4ee4\uff1a 1 2 3 4 root@ubuntu:~$ chmod +x test.sh # \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650 root@ubuntu:~$ ./test.sh < input.txt > output.txt # \u4eceinput.txt\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u5c06\u8f93\u51fa\u5199\u5165output.txt\u4e2d root@ubuntu:~$ cat output.txt # \u67e5\u770boutput.txt\u4e2d\u7684\u5185\u5bb9 7","title":"\u6587\u4ef6\u91cd\u5b9a\u5411"},{"location":"linux/shell/%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91/#_1","text":"\u547d\u4ee4 \u8bf4\u660e command > file \u5c06 stdout \u91cd\u5b9a\u5411\u5230 file \u4e2d command < file \u5c06 stdin \u91cd\u5b9a\u5411\u5230 file \u4e2d command >> file \u5c06 stdout \u4ee5\u8ffd\u52a0\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file \u4e2d command n> file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u91cd\u5b9a\u5411\u5230 file \u4e2d command n>> file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u4ee5\u8ffd\u52a0\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file \u4e2d","title":"\u91cd\u5b9a\u5411\u547d\u4ee4\u5217\u8868"},{"location":"linux/shell/%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91/#_2","text":"1 2 3 4 5 6 echo -e \"Hello \\c\" > output.txt # \u5c06stdout\u91cd\u5b9a\u5411\u5230output.txt\u4e2d echo \"World\" >> output.txt # \u5c06\u5b57\u7b26\u4e32\u8ffd\u52a0\u5230output.txt\u4e2d read str < output.txt # \u4eceoutput.txt\u4e2d\u8bfb\u53d6\u5b57\u7b26\u4e32 echo $str # \u8f93\u51fa\u7ed3\u679c\uff1aHello World","title":"\u8f93\u5165\u548c\u8f93\u51fa\u91cd\u5b9a\u5411"},{"location":"linux/shell/%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91/#stdinstdout","text":"\u521b\u5efa bash \u811a\u672c\uff1a 1 2 3 4 5 6 #! /bin/bash read a read b echo $( expr \" $a \" + \" $b \" ) \u521b\u5efa input.txt \uff0c\u91cc\u9762\u7684\u5185\u5bb9\u4e3a\uff1a 1 2 3 4 \u6267\u884c\u547d\u4ee4\uff1a 1 2 3 4 root@ubuntu:~$ chmod +x test.sh # \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650 root@ubuntu:~$ ./test.sh < input.txt > output.txt # \u4eceinput.txt\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u5c06\u8f93\u51fa\u5199\u5165output.txt\u4e2d root@ubuntu:~$ cat output.txt # \u67e5\u770boutput.txt\u4e2d\u7684\u5185\u5bb9 7","title":"\u540c\u65f6\u91cd\u5b9a\u5411stdin\u548cstdout"},{"location":"linux/shell/%E6%A6%82%E8%AE%BA/","text":"\u6982\u8bba shell\u662f\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u884c\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6c9f\u901a\u7684\u8bed\u8a00\u3002 shell\u811a\u672c\u53ef\u4ee5\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u5957\u903b\u8f91\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6587\u4ef6\uff0c\u65b9\u4fbf\u590d\u7528\u3002 Terminal\u4e2d\u7684\u547d\u4ee4\u884c\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u201cshell\u811a\u672c\u5728\u9010\u884c\u6267\u884c\u201d\u3002 Linux\u4e2d\u5e38\u89c1\u7684shell\u811a\u672c\u6709\u5f88\u591a\u79cd\uff0c\u5e38\u89c1\u7684\u6709\uff1a Bourne Shell( /usr/bin/sh \u6216 /bin/sh ) Bourne Again Shell( /bin/bash ) C Shell( /usr/bin/csh ) K Shell( /usr/bin/ksh ) zsh \u2026 Linux\u7cfb\u7edf\u4e2d\u4e00\u822c\u9ed8\u8ba4\u4f7f\u7528bash\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8bb2\u89e3bash\u4e2d\u7684\u8bed\u6cd5\u3002 \u6587\u4ef6\u5f00\u5934\u9700\u8981\u5199 /bin/bash \uff0c\u6307\u660ebash\u4e3a\u811a\u672c\u89e3\u91ca\u5668\u3002 \u811a\u672c\u793a\u4f8b \u65b0\u5efa\u4e00\u4e2a test.sh \u6587\u4ef6\uff0c\u8f93\u5165\u4e00\u4e0b\u5185\u5bb9\uff1a 1 2 #! bin/bash echo \"Hello World!\" \u8fd0\u884c\u65b9\u5f0f \u5728Terminal\u5185\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 \u4f5c\u4e3a\u53ef\u6267\u884c\u6587\u4ef6 1 2 3 root@ubuntu:~$ chmod +x test.sh # \u4e3atest.sh\u6587\u4ef6\u589e\u52a0\u53ef\u6267\u884c\u6743\u9650 root@ubuntu:~$ ./test.sh # \u5728\u5f53\u524d\u6587\u4ef6\u5939\u6267\u884c HelloWorld! # \u811a\u672c\u8f93\u51fa \u89e3\u91ca\u5668\u6267\u884c 1 2 root@ubuntu:~$ bash test.sh HelloWorld! # \u811a\u672c\u8f93\u51fa","title":"\u6982\u8bba"},{"location":"linux/shell/%E6%A6%82%E8%AE%BA/#_1","text":"shell\u662f\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u884c\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6c9f\u901a\u7684\u8bed\u8a00\u3002 shell\u811a\u672c\u53ef\u4ee5\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u5957\u903b\u8f91\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6587\u4ef6\uff0c\u65b9\u4fbf\u590d\u7528\u3002 Terminal\u4e2d\u7684\u547d\u4ee4\u884c\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u201cshell\u811a\u672c\u5728\u9010\u884c\u6267\u884c\u201d\u3002 Linux\u4e2d\u5e38\u89c1\u7684shell\u811a\u672c\u6709\u5f88\u591a\u79cd\uff0c\u5e38\u89c1\u7684\u6709\uff1a Bourne Shell( /usr/bin/sh \u6216 /bin/sh ) Bourne Again Shell( /bin/bash ) C Shell( /usr/bin/csh ) K Shell( /usr/bin/ksh ) zsh \u2026 Linux\u7cfb\u7edf\u4e2d\u4e00\u822c\u9ed8\u8ba4\u4f7f\u7528bash\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8bb2\u89e3bash\u4e2d\u7684\u8bed\u6cd5\u3002 \u6587\u4ef6\u5f00\u5934\u9700\u8981\u5199 /bin/bash \uff0c\u6307\u660ebash\u4e3a\u811a\u672c\u89e3\u91ca\u5668\u3002","title":"\u6982\u8bba"},{"location":"linux/shell/%E6%A6%82%E8%AE%BA/#_2","text":"\u65b0\u5efa\u4e00\u4e2a test.sh \u6587\u4ef6\uff0c\u8f93\u5165\u4e00\u4e0b\u5185\u5bb9\uff1a 1 2 #! bin/bash echo \"Hello World!\"","title":"\u811a\u672c\u793a\u4f8b"},{"location":"linux/shell/%E6%A6%82%E8%AE%BA/#_3","text":"\u5728Terminal\u5185\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 \u4f5c\u4e3a\u53ef\u6267\u884c\u6587\u4ef6 1 2 3 root@ubuntu:~$ chmod +x test.sh # \u4e3atest.sh\u6587\u4ef6\u589e\u52a0\u53ef\u6267\u884c\u6743\u9650 root@ubuntu:~$ ./test.sh # \u5728\u5f53\u524d\u6587\u4ef6\u5939\u6267\u884c HelloWorld! # \u811a\u672c\u8f93\u51fa \u89e3\u91ca\u5668\u6267\u884c 1 2 root@ubuntu:~$ bash test.sh HelloWorld! # \u811a\u672c\u8f93\u51fa","title":"\u8fd0\u884c\u65b9\u5f0f"},{"location":"linux/shell/%E6%B3%A8%E9%87%8A/","text":"\u5355\u884c\u6ce8\u91ca \u6bcf\u884c\u4e2d # \u4e4b\u540e\u7684\u5185\u5bb9\u5747\u662f\u6ce8\u91ca\u3002 1 2 3 # \u8fd9\u662f\u4e00\u884c\u6ce8\u91ca echo 'Hello World' # \u8fd9\u4e5f\u662f\u6ce8\u91ca \u591a\u884c\u6ce8\u91ca \u683c\u5f0f\uff1a 1 2 3 4 5 : <<EOF \u7b2c\u4e00\u884c\u6ce8\u91ca \u7b2c\u4e8c\u884c\u6ce8\u91ca \u7b2c\u4e09\u884c\u6ce8\u91ca EOF \u5176\u4e2dEOF\u53ef\u4ee5\u6362\u6210\u5176\u5b83\u4efb\u610f\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 : <<abc \u7b2c\u4e00\u884c\u6ce8\u91ca \u7b2c\u4e8c\u884c\u6ce8\u91ca \u7b2c\u4e09\u884c\u6ce8\u91ca abc :<<! \u7b2c\u4e00\u884c\u6ce8\u91ca \u7b2c\u4e8c\u884c\u6ce8\u91ca \u7b2c\u4e09\u884c\u6ce8\u91ca !","title":"\u6ce8\u91ca"},{"location":"linux/shell/%E6%B3%A8%E9%87%8A/#_1","text":"\u6bcf\u884c\u4e2d # \u4e4b\u540e\u7684\u5185\u5bb9\u5747\u662f\u6ce8\u91ca\u3002 1 2 3 # \u8fd9\u662f\u4e00\u884c\u6ce8\u91ca echo 'Hello World' # \u8fd9\u4e5f\u662f\u6ce8\u91ca","title":"\u5355\u884c\u6ce8\u91ca"},{"location":"linux/shell/%E6%B3%A8%E9%87%8A/#_2","text":"\u683c\u5f0f\uff1a 1 2 3 4 5 : <<EOF \u7b2c\u4e00\u884c\u6ce8\u91ca \u7b2c\u4e8c\u884c\u6ce8\u91ca \u7b2c\u4e09\u884c\u6ce8\u91ca EOF \u5176\u4e2dEOF\u53ef\u4ee5\u6362\u6210\u5176\u5b83\u4efb\u610f\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 : <<abc \u7b2c\u4e00\u884c\u6ce8\u91ca \u7b2c\u4e8c\u884c\u6ce8\u91ca \u7b2c\u4e09\u884c\u6ce8\u91ca abc :<<! \u7b2c\u4e00\u884c\u6ce8\u91ca \u7b2c\u4e8c\u884c\u6ce8\u91ca \u7b2c\u4e09\u884c\u6ce8\u91ca !","title":"\u591a\u884c\u6ce8\u91ca"},{"location":"linux/shell/%E9%BB%98%E8%AE%A4%E5%8F%98%E9%87%8F/","text":"\u6587\u4ef6\u53c2\u6570\u53d8\u91cf \u5728\u6267\u884cshell\u811a\u672c\u65f6\uff0c\u53ef\u4ee5\u5411\u811a\u672c\u4f20\u9012\u53c2\u6570\u3002 $1 \u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c $2 \u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u7279\u6b8a\u7684\uff0c $0 \u662f\u6587\u4ef6\u540d\uff08\u5305\u542b\u8def\u5f84\uff09\u3002\u4f8b\u5982\uff1a \u521b\u5efa\u6587\u4ef6 test.sh \uff1a 1 2 3 4 5 6 7 #! /bin/bash echo \"\u6587\u4ef6\u540d\uff1a\" $0 echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\" $1 echo \"\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\" $2 echo \"\u7b2c\u4e09\u4e2a\u53c2\u6570\uff1a\" $3 echo \"\u7b2c\u56db\u4e2a\u53c2\u6570\uff1a\" $4 \u7136\u540e\u6267\u884c\u8be5\u811a\u672c\uff1a 1 2 3 4 5 6 7 root@ubuntu:~$ chmod +x test.sh root@ubuntu:~$ ./test.sh 1 2 3 4 \u6587\u4ef6\u540d\uff1a./test.sh \u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a1 \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a2 \u7b2c\u4e09\u4e2a\u53c2\u6570\uff1a3 \u7b2c\u56db\u4e2a\u53c2\u6570\uff1a4 \u5176\u5b83\u53c2\u6570\u76f8\u5173\u53d8\u91cf \u53c2\u6570 \u8bf4\u660e $# \u4ee3\u8868\u6587\u4ef6\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u5982\u4e0a\u4f8b\u4e2d\u503c\u4e3a4 $* \u7531\u6240\u6709\u53c2\u6570\u6784\u6210\u7684\u7528\u7a7a\u683c\u9694\u5f00\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u4e0a\u4f8b\u4e2d\u503c\u4e3a \"$1 $2 $3 $4\" $@ \u6bcf\u4e2a\u53c2\u6570\u5206\u522b\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u4e0a\u4f8b\u4e2d\u503c\u4e3a \"$1\" \"$2\" \"$3\" \"$4\" $$ \u811a\u672c\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0bID $? \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\uff08\u6ce8\u610f\u4e0d\u662fstdout\uff0c\u800c\u662fexit code\uff09\u30020\u8868\u793a\u6b63\u5e38\u9000\u51fa\uff0c\u5176\u4ed6\u503c\u8868\u793a\u9519\u8bef $(command) \u8fd4\u56de command \u8fd9\u6761\u547d\u4ee4\u7684stdout\uff08\u53ef\u5d4c\u5957\uff09 command \u8fd4\u56de command \u8fd9\u6761\u547d\u4ee4\u7684stdout\uff08\u4e0d\u53ef\u5d4c\u5957\uff09","title":"\u9ed8\u8ba4\u53d8\u91cf"},{"location":"linux/shell/%E9%BB%98%E8%AE%A4%E5%8F%98%E9%87%8F/#_1","text":"\u5728\u6267\u884cshell\u811a\u672c\u65f6\uff0c\u53ef\u4ee5\u5411\u811a\u672c\u4f20\u9012\u53c2\u6570\u3002 $1 \u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c $2 \u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u7279\u6b8a\u7684\uff0c $0 \u662f\u6587\u4ef6\u540d\uff08\u5305\u542b\u8def\u5f84\uff09\u3002\u4f8b\u5982\uff1a \u521b\u5efa\u6587\u4ef6 test.sh \uff1a 1 2 3 4 5 6 7 #! /bin/bash echo \"\u6587\u4ef6\u540d\uff1a\" $0 echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\" $1 echo \"\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\" $2 echo \"\u7b2c\u4e09\u4e2a\u53c2\u6570\uff1a\" $3 echo \"\u7b2c\u56db\u4e2a\u53c2\u6570\uff1a\" $4 \u7136\u540e\u6267\u884c\u8be5\u811a\u672c\uff1a 1 2 3 4 5 6 7 root@ubuntu:~$ chmod +x test.sh root@ubuntu:~$ ./test.sh 1 2 3 4 \u6587\u4ef6\u540d\uff1a./test.sh \u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a1 \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a2 \u7b2c\u4e09\u4e2a\u53c2\u6570\uff1a3 \u7b2c\u56db\u4e2a\u53c2\u6570\uff1a4","title":"\u6587\u4ef6\u53c2\u6570\u53d8\u91cf"},{"location":"linux/shell/%E9%BB%98%E8%AE%A4%E5%8F%98%E9%87%8F/#_2","text":"\u53c2\u6570 \u8bf4\u660e $# \u4ee3\u8868\u6587\u4ef6\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u5982\u4e0a\u4f8b\u4e2d\u503c\u4e3a4 $* \u7531\u6240\u6709\u53c2\u6570\u6784\u6210\u7684\u7528\u7a7a\u683c\u9694\u5f00\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u4e0a\u4f8b\u4e2d\u503c\u4e3a \"$1 $2 $3 $4\" $@ \u6bcf\u4e2a\u53c2\u6570\u5206\u522b\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u4e0a\u4f8b\u4e2d\u503c\u4e3a \"$1\" \"$2\" \"$3\" \"$4\" $$ \u811a\u672c\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0bID $? \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\uff08\u6ce8\u610f\u4e0d\u662fstdout\uff0c\u800c\u662fexit code\uff09\u30020\u8868\u793a\u6b63\u5e38\u9000\u51fa\uff0c\u5176\u4ed6\u503c\u8868\u793a\u9519\u8bef $(command) \u8fd4\u56de command \u8fd9\u6761\u547d\u4ee4\u7684stdout\uff08\u53ef\u5d4c\u5957\uff09 command \u8fd4\u56de command \u8fd9\u6761\u547d\u4ee4\u7684stdout\uff08\u4e0d\u53ef\u5d4c\u5957\uff09","title":"\u5176\u5b83\u53c2\u6570\u76f8\u5173\u53d8\u91cf"}]}